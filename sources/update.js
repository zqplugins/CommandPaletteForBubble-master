const update = function(instance, properties, context) {
    (() => {
        var __create = Object.create;
        var __defProp = Object.defineProperty;
        var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
        var __getOwnPropNames = Object.getOwnPropertyNames;
        var __getProtoOf = Object.getPrototypeOf;
        var __hasOwnProp = Object.prototype.hasOwnProperty;
        var __commonJS = (cb, mod) => function __require() {
            return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
        };
        var __copyProps = (to, from, except, desc) => {
            if (from && typeof from === "object" || typeof from === "function") {
                for (let key of __getOwnPropNames(from))
                    if (!__hasOwnProp.call(to, key) && key !== except)
                        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
            }
            return to;
        };
        var __toESM = (mod, isNodeMode, target2) => (target2 = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
            // If the importer is in node compatibility mode or this is not an ESM
            // file that has been converted to a CommonJS file using a Babel-
            // compatible transform (i.e. "__esModule" has not been set), then set
            // "default" to the CommonJS "module.exports" for node compatibility.
            isNodeMode || !mod || !mod.__esModule ? __defProp(target2, "default", { value: mod, enumerable: true }) : target2,
            mod
        ));

        // node_modules/react/cjs/react.development.js
        var require_react_development = __commonJS({
            "node_modules/react/cjs/react.development.js"(exports, module) {
                "use strict";
                if (true) {
                    (function() {
                        "use strict";
                        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") {
                            __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
                        }
                        var ReactVersion = "18.2.0";
                        var REACT_ELEMENT_TYPE = Symbol.for("react.element");
                        var REACT_PORTAL_TYPE = Symbol.for("react.portal");
                        var REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
                        var REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode");
                        var REACT_PROFILER_TYPE = Symbol.for("react.profiler");
                        var REACT_PROVIDER_TYPE = Symbol.for("react.provider");
                        var REACT_CONTEXT_TYPE = Symbol.for("react.context");
                        var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref");
                        var REACT_SUSPENSE_TYPE = Symbol.for("react.suspense");
                        var REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list");
                        var REACT_MEMO_TYPE = Symbol.for("react.memo");
                        var REACT_LAZY_TYPE = Symbol.for("react.lazy");
                        var REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen");
                        var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
                        var FAUX_ITERATOR_SYMBOL = "@@iterator";
                        function getIteratorFn(maybeIterable) {
                            if (maybeIterable === null || typeof maybeIterable !== "object") {
                                return null;
                            }
                            var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
                            if (typeof maybeIterator === "function") {
                                return maybeIterator;
                            }
                            return null;
                        }
                        var ReactCurrentDispatcher = {
                            /**
                             * @internal
                             * @type {ReactComponent}
                             */
                            current: null
                        };
                        var ReactCurrentBatchConfig = {
                            transition: null
                        };
                        var ReactCurrentActQueue = {
                            current: null,
                            // Used to reproduce behavior of `batchedUpdates` in legacy mode.
                            isBatchingLegacy: false,
                            didScheduleLegacyUpdate: false
                        };
                        var ReactCurrentOwner = {
                            /**
                             * @internal
                             * @type {ReactComponent}
                             */
                            current: null
                        };
                        var ReactDebugCurrentFrame = {};
                        var currentExtraStackFrame = null;
                        function setExtraStackFrame(stack) {
                            {
                                currentExtraStackFrame = stack;
                            }
                        }
                        {
                            ReactDebugCurrentFrame.setExtraStackFrame = function(stack) {
                                {
                                    currentExtraStackFrame = stack;
                                }
                            };
                            ReactDebugCurrentFrame.getCurrentStack = null;
                            ReactDebugCurrentFrame.getStackAddendum = function() {
                                var stack = "";
                                if (currentExtraStackFrame) {
                                    stack += currentExtraStackFrame;
                                }
                                var impl = ReactDebugCurrentFrame.getCurrentStack;
                                if (impl) {
                                    stack += impl() || "";
                                }
                                return stack;
                            };
                        }
                        var enableScopeAPI = false;
                        var enableCacheElement = false;
                        var enableTransitionTracing = false;
                        var enableLegacyHidden = false;
                        var enableDebugTracing = false;
                        var ReactSharedInternals = {
                            ReactCurrentDispatcher,
                            ReactCurrentBatchConfig,
                            ReactCurrentOwner
                        };
                        {
                            ReactSharedInternals.ReactDebugCurrentFrame = ReactDebugCurrentFrame;
                            ReactSharedInternals.ReactCurrentActQueue = ReactCurrentActQueue;
                        }
                        function warn(format) {
                            {
                                {
                                    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                                        args[_key - 1] = arguments[_key];
                                    }
                                    printWarning("warn", format, args);
                                }
                            }
                        }
                        function error(format) {
                            {
                                {
                                    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                                        args[_key2 - 1] = arguments[_key2];
                                    }
                                    printWarning("error", format, args);
                                }
                            }
                        }
                        function printWarning(level, format, args) {
                            {
                                var ReactDebugCurrentFrame2 = ReactSharedInternals.ReactDebugCurrentFrame;
                                var stack = ReactDebugCurrentFrame2.getStackAddendum();
                                if (stack !== "") {
                                    format += "%s";
                                    args = args.concat([stack]);
                                }
                                var argsWithFormat = args.map(function(item) {
                                    return String(item);
                                });
                                argsWithFormat.unshift("Warning: " + format);
                                Function.prototype.apply.call(console[level], console, argsWithFormat);
                            }
                        }
                        var didWarnStateUpdateForUnmountedComponent = {};
                        function warnNoop(publicInstance, callerName) {
                            {
                                var _constructor = publicInstance.constructor;
                                var componentName = _constructor && (_constructor.displayName || _constructor.name) || "ReactClass";
                                var warningKey = componentName + "." + callerName;
                                if (didWarnStateUpdateForUnmountedComponent[warningKey]) {
                                    return;
                                }
                                error("Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.", callerName, componentName);
                                didWarnStateUpdateForUnmountedComponent[warningKey] = true;
                            }
                        }
                        var ReactNoopUpdateQueue = {
                            /**
                             * Checks whether or not this composite component is mounted.
                             * @param {ReactClass} publicInstance The instance we want to test.
                             * @return {boolean} True if mounted, false otherwise.
                             * @protected
                             * @final
                             */
                            isMounted: function(publicInstance) {
                                return false;
                            },
                            /**
                             * Forces an update. This should only be invoked when it is known with
                             * certainty that we are **not** in a DOM transaction.
                             *
                             * You may want to call this when you know that some deeper aspect of the
                             * component's state has changed but `setState` was not called.
                             *
                             * This will not invoke `shouldComponentUpdate`, but it will invoke
                             * `componentWillUpdate` and `componentDidUpdate`.
                             *
                             * @param {ReactClass} publicInstance The instance that should rerender.
                             * @param {?function} callback Called after component is updated.
                             * @param {?string} callerName name of the calling function in the public API.
                             * @internal
                             */
                            enqueueForceUpdate: function(publicInstance, callback, callerName) {
                                warnNoop(publicInstance, "forceUpdate");
                            },
                            /**
                             * Replaces all of the state. Always use this or `setState` to mutate state.
                             * You should treat `this.state` as immutable.
                             *
                             * There is no guarantee that `this.state` will be immediately updated, so
                             * accessing `this.state` after calling this method may return the old value.
                             *
                             * @param {ReactClass} publicInstance The instance that should rerender.
                             * @param {object} completeState Next state.
                             * @param {?function} callback Called after component is updated.
                             * @param {?string} callerName name of the calling function in the public API.
                             * @internal
                             */
                            enqueueReplaceState: function(publicInstance, completeState, callback, callerName) {
                                warnNoop(publicInstance, "replaceState");
                            },
                            /**
                             * Sets a subset of the state. This only exists because _pendingState is
                             * internal. This provides a merging strategy that is not available to deep
                             * properties which is confusing. TODO: Expose pendingState or don't use it
                             * during the merge.
                             *
                             * @param {ReactClass} publicInstance The instance that should rerender.
                             * @param {object} partialState Next partial state to be merged with state.
                             * @param {?function} callback Called after component is updated.
                             * @param {?string} Name of the calling function in the public API.
                             * @internal
                             */
                            enqueueSetState: function(publicInstance, partialState, callback, callerName) {
                                warnNoop(publicInstance, "setState");
                            }
                        };
                        var assign = Object.assign;
                        var emptyObject = {};
                        {
                            Object.freeze(emptyObject);
                        }
                        function Component(props, context, updater) {
                            this.props = props;
                            this.context = context;
                            this.refs = emptyObject;
                            this.updater = updater || ReactNoopUpdateQueue;
                        }
                        Component.prototype.isReactComponent = {};
                        Component.prototype.setState = function(partialState, callback) {
                            if (typeof partialState !== "object" && typeof partialState !== "function" && partialState != null) {
                                throw new Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
                            }
                            this.updater.enqueueSetState(this, partialState, callback, "setState");
                        };
                        Component.prototype.forceUpdate = function(callback) {
                            this.updater.enqueueForceUpdate(this, callback, "forceUpdate");
                        };
                        {
                            var deprecatedAPIs = {
                                isMounted: ["isMounted", "Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks."],
                                replaceState: ["replaceState", "Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236)."]
                            };
                            var defineDeprecationWarning = function(methodName, info) {
                                Object.defineProperty(Component.prototype, methodName, {
                                    get: function() {
                                        warn("%s(...) is deprecated in plain JavaScript React classes. %s", info[0], info[1]);
                                        return void 0;
                                    }
                                });
                            };
                            for (var fnName in deprecatedAPIs) {
                                if (deprecatedAPIs.hasOwnProperty(fnName)) {
                                    defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
                                }
                            }
                        }
                        function ComponentDummy() {
                        }
                        ComponentDummy.prototype = Component.prototype;
                        function PureComponent(props, context, updater) {
                            this.props = props;
                            this.context = context;
                            this.refs = emptyObject;
                            this.updater = updater || ReactNoopUpdateQueue;
                        }
                        var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
                        pureComponentPrototype.constructor = PureComponent;
                        assign(pureComponentPrototype, Component.prototype);
                        pureComponentPrototype.isPureReactComponent = true;
                        function createRef() {
                            var refObject = {
                                current: null
                            };
                            {
                                Object.seal(refObject);
                            }
                            return refObject;
                        }
                        var isArrayImpl = Array.isArray;
                        function isArray(a) {
                            return isArrayImpl(a);
                        }
                        function typeName(value) {
                            {
                                var hasToStringTag = typeof Symbol === "function" && Symbol.toStringTag;
                                var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
                                return type;
                            }
                        }
                        function willCoercionThrow(value) {
                            {
                                try {
                                    testStringCoercion(value);
                                    return false;
                                } catch (e) {
                                    return true;
                                }
                            }
                        }
                        function testStringCoercion(value) {
                            return "" + value;
                        }
                        function checkKeyStringCoercion(value) {
                            {
                                if (willCoercionThrow(value)) {
                                    error("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value));
                                    return testStringCoercion(value);
                                }
                            }
                        }
                        function getWrappedName(outerType, innerType, wrapperName) {
                            var displayName = outerType.displayName;
                            if (displayName) {
                                return displayName;
                            }
                            var functionName = innerType.displayName || innerType.name || "";
                            return functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName;
                        }
                        function getContextName(type) {
                            return type.displayName || "Context";
                        }
                        function getComponentNameFromType(type) {
                            if (type == null) {
                                return null;
                            }
                            {
                                if (typeof type.tag === "number") {
                                    error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.");
                                }
                            }
                            if (typeof type === "function") {
                                return type.displayName || type.name || null;
                            }
                            if (typeof type === "string") {
                                return type;
                            }
                            switch (type) {
                                case REACT_FRAGMENT_TYPE:
                                    return "Fragment";
                                case REACT_PORTAL_TYPE:
                                    return "Portal";
                                case REACT_PROFILER_TYPE:
                                    return "Profiler";
                                case REACT_STRICT_MODE_TYPE:
                                    return "StrictMode";
                                case REACT_SUSPENSE_TYPE:
                                    return "Suspense";
                                case REACT_SUSPENSE_LIST_TYPE:
                                    return "SuspenseList";
                            }
                            if (typeof type === "object") {
                                switch (type.$$typeof) {
                                    case REACT_CONTEXT_TYPE:
                                        var context = type;
                                        return getContextName(context) + ".Consumer";
                                    case REACT_PROVIDER_TYPE:
                                        var provider = type;
                                        return getContextName(provider._context) + ".Provider";
                                    case REACT_FORWARD_REF_TYPE:
                                        return getWrappedName(type, type.render, "ForwardRef");
                                    case REACT_MEMO_TYPE:
                                        var outerName = type.displayName || null;
                                        if (outerName !== null) {
                                            return outerName;
                                        }
                                        return getComponentNameFromType(type.type) || "Memo";
                                    case REACT_LAZY_TYPE: {
                                        var lazyComponent = type;
                                        var payload = lazyComponent._payload;
                                        var init = lazyComponent._init;
                                        try {
                                            return getComponentNameFromType(init(payload));
                                        } catch (x) {
                                            return null;
                                        }
                                    }
                                }
                            }
                            return null;
                        }
                        var hasOwnProperty = Object.prototype.hasOwnProperty;
                        var RESERVED_PROPS = {
                            key: true,
                            ref: true,
                            __self: true,
                            __source: true
                        };
                        var specialPropKeyWarningShown, specialPropRefWarningShown, didWarnAboutStringRefs;
                        {
                            didWarnAboutStringRefs = {};
                        }
                        function hasValidRef(config) {
                            {
                                if (hasOwnProperty.call(config, "ref")) {
                                    var getter = Object.getOwnPropertyDescriptor(config, "ref").get;
                                    if (getter && getter.isReactWarning) {
                                        return false;
                                    }
                                }
                            }
                            return config.ref !== void 0;
                        }
                        function hasValidKey(config) {
                            {
                                if (hasOwnProperty.call(config, "key")) {
                                    var getter = Object.getOwnPropertyDescriptor(config, "key").get;
                                    if (getter && getter.isReactWarning) {
                                        return false;
                                    }
                                }
                            }
                            return config.key !== void 0;
                        }
                        function defineKeyPropWarningGetter(props, displayName) {
                            var warnAboutAccessingKey = function() {
                                {
                                    if (!specialPropKeyWarningShown) {
                                        specialPropKeyWarningShown = true;
                                        error("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
                                    }
                                }
                            };
                            warnAboutAccessingKey.isReactWarning = true;
                            Object.defineProperty(props, "key", {
                                get: warnAboutAccessingKey,
                                configurable: true
                            });
                        }
                        function defineRefPropWarningGetter(props, displayName) {
                            var warnAboutAccessingRef = function() {
                                {
                                    if (!specialPropRefWarningShown) {
                                        specialPropRefWarningShown = true;
                                        error("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)", displayName);
                                    }
                                }
                            };
                            warnAboutAccessingRef.isReactWarning = true;
                            Object.defineProperty(props, "ref", {
                                get: warnAboutAccessingRef,
                                configurable: true
                            });
                        }
                        function warnIfStringRefCannotBeAutoConverted(config) {
                            {
                                if (typeof config.ref === "string" && ReactCurrentOwner.current && config.__self && ReactCurrentOwner.current.stateNode !== config.__self) {
                                    var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);
                                    if (!didWarnAboutStringRefs[componentName]) {
                                        error('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', componentName, config.ref);
                                        didWarnAboutStringRefs[componentName] = true;
                                    }
                                }
                            }
                        }
                        var ReactElement = function(type, key, ref, self, source, owner, props) {
                            var element = {
                                // This tag allows us to uniquely identify this as a React Element
                                $$typeof: REACT_ELEMENT_TYPE,
                                // Built-in properties that belong on the element
                                type,
                                key,
                                ref,
                                props,
                                // Record the component responsible for creating this element.
                                _owner: owner
                            };
                            {
                                element._store = {};
                                Object.defineProperty(element._store, "validated", {
                                    configurable: false,
                                    enumerable: false,
                                    writable: true,
                                    value: false
                                });
                                Object.defineProperty(element, "_self", {
                                    configurable: false,
                                    enumerable: false,
                                    writable: false,
                                    value: self
                                });
                                Object.defineProperty(element, "_source", {
                                    configurable: false,
                                    enumerable: false,
                                    writable: false,
                                    value: source
                                });
                                if (Object.freeze) {
                                    Object.freeze(element.props);
                                    Object.freeze(element);
                                }
                            }
                            return element;
                        };
                        function createElement(type, config, children) {
                            var propName;
                            var props = {};
                            var key = null;
                            var ref = null;
                            var self = null;
                            var source = null;
                            if (config != null) {
                                if (hasValidRef(config)) {
                                    ref = config.ref;
                                    {
                                        warnIfStringRefCannotBeAutoConverted(config);
                                    }
                                }
                                if (hasValidKey(config)) {
                                    {
                                        checkKeyStringCoercion(config.key);
                                    }
                                    key = "" + config.key;
                                }
                                self = config.__self === void 0 ? null : config.__self;
                                source = config.__source === void 0 ? null : config.__source;
                                for (propName in config) {
                                    if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
                                        props[propName] = config[propName];
                                    }
                                }
                            }
                            var childrenLength = arguments.length - 2;
                            if (childrenLength === 1) {
                                props.children = children;
                            } else if (childrenLength > 1) {
                                var childArray = Array(childrenLength);
                                for (var i = 0; i < childrenLength; i++) {
                                    childArray[i] = arguments[i + 2];
                                }
                                {
                                    if (Object.freeze) {
                                        Object.freeze(childArray);
                                    }
                                }
                                props.children = childArray;
                            }
                            if (type && type.defaultProps) {
                                var defaultProps = type.defaultProps;
                                for (propName in defaultProps) {
                                    if (props[propName] === void 0) {
                                        props[propName] = defaultProps[propName];
                                    }
                                }
                            }
                            {
                                if (key || ref) {
                                    var displayName = typeof type === "function" ? type.displayName || type.name || "Unknown" : type;
                                    if (key) {
                                        defineKeyPropWarningGetter(props, displayName);
                                    }
                                    if (ref) {
                                        defineRefPropWarningGetter(props, displayName);
                                    }
                                }
                            }
                            return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
                        }
                        function cloneAndReplaceKey(oldElement, newKey) {
                            var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
                            return newElement;
                        }
                        function cloneElement(element, config, children) {
                            if (element === null || element === void 0) {
                                throw new Error("React.cloneElement(...): The argument must be a React element, but you passed " + element + ".");
                            }
                            var propName;
                            var props = assign({}, element.props);
                            var key = element.key;
                            var ref = element.ref;
                            var self = element._self;
                            var source = element._source;
                            var owner = element._owner;
                            if (config != null) {
                                if (hasValidRef(config)) {
                                    ref = config.ref;
                                    owner = ReactCurrentOwner.current;
                                }
                                if (hasValidKey(config)) {
                                    {
                                        checkKeyStringCoercion(config.key);
                                    }
                                    key = "" + config.key;
                                }
                                var defaultProps;
                                if (element.type && element.type.defaultProps) {
                                    defaultProps = element.type.defaultProps;
                                }
                                for (propName in config) {
                                    if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
                                        if (config[propName] === void 0 && defaultProps !== void 0) {
                                            props[propName] = defaultProps[propName];
                                        } else {
                                            props[propName] = config[propName];
                                        }
                                    }
                                }
                            }
                            var childrenLength = arguments.length - 2;
                            if (childrenLength === 1) {
                                props.children = children;
                            } else if (childrenLength > 1) {
                                var childArray = Array(childrenLength);
                                for (var i = 0; i < childrenLength; i++) {
                                    childArray[i] = arguments[i + 2];
                                }
                                props.children = childArray;
                            }
                            return ReactElement(element.type, key, ref, self, source, owner, props);
                        }
                        function isValidElement(object) {
                            return typeof object === "object" && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
                        }
                        var SEPARATOR = ".";
                        var SUBSEPARATOR = ":";
                        function escape(key) {
                            var escapeRegex = /[=:]/g;
                            var escaperLookup = {
                                "=": "=0",
                                ":": "=2"
                            };
                            var escapedString = key.replace(escapeRegex, function(match) {
                                return escaperLookup[match];
                            });
                            return "$" + escapedString;
                        }
                        var didWarnAboutMaps = false;
                        var userProvidedKeyEscapeRegex = /\/+/g;
                        function escapeUserProvidedKey(text) {
                            return text.replace(userProvidedKeyEscapeRegex, "$&/");
                        }
                        function getElementKey(element, index) {
                            if (typeof element === "object" && element !== null && element.key != null) {
                                {
                                    checkKeyStringCoercion(element.key);
                                }
                                return escape("" + element.key);
                            }
                            return index.toString(36);
                        }
                        function mapIntoArray(children, array, escapedPrefix, nameSoFar, callback) {
                            var type = typeof children;
                            if (type === "undefined" || type === "boolean") {
                                children = null;
                            }
                            var invokeCallback = false;
                            if (children === null) {
                                invokeCallback = true;
                            } else {
                                switch (type) {
                                    case "string":
                                    case "number":
                                        invokeCallback = true;
                                        break;
                                    case "object":
                                        switch (children.$$typeof) {
                                            case REACT_ELEMENT_TYPE:
                                            case REACT_PORTAL_TYPE:
                                                invokeCallback = true;
                                        }
                                }
                            }
                            if (invokeCallback) {
                                var _child = children;
                                var mappedChild = callback(_child);
                                var childKey = nameSoFar === "" ? SEPARATOR + getElementKey(_child, 0) : nameSoFar;
                                if (isArray(mappedChild)) {
                                    var escapedChildKey = "";
                                    if (childKey != null) {
                                        escapedChildKey = escapeUserProvidedKey(childKey) + "/";
                                    }
                                    mapIntoArray(mappedChild, array, escapedChildKey, "", function(c) {
                                        return c;
                                    });
                                } else if (mappedChild != null) {
                                    if (isValidElement(mappedChild)) {
                                        {
                                            if (mappedChild.key && (!_child || _child.key !== mappedChild.key)) {
                                                checkKeyStringCoercion(mappedChild.key);
                                            }
                                        }
                                        mappedChild = cloneAndReplaceKey(
                                            mappedChild,
                                            // Keep both the (mapped) and old keys if they differ, just as
                                            // traverseAllChildren used to do for objects as children
                                            escapedPrefix + // $FlowFixMe Flow incorrectly thinks React.Portal doesn't have a key
                                            (mappedChild.key && (!_child || _child.key !== mappedChild.key) ? (
                                                // $FlowFixMe Flow incorrectly thinks existing element's key can be a number
                                                // eslint-disable-next-line react-internal/safe-string-coercion
                                                escapeUserProvidedKey("" + mappedChild.key) + "/"
                                            ) : "") + childKey
                                        );
                                    }
                                    array.push(mappedChild);
                                }
                                return 1;
                            }
                            var child;
                            var nextName;
                            var subtreeCount = 0;
                            var nextNamePrefix = nameSoFar === "" ? SEPARATOR : nameSoFar + SUBSEPARATOR;
                            if (isArray(children)) {
                                for (var i = 0; i < children.length; i++) {
                                    child = children[i];
                                    nextName = nextNamePrefix + getElementKey(child, i);
                                    subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
                                }
                            } else {
                                var iteratorFn = getIteratorFn(children);
                                if (typeof iteratorFn === "function") {
                                    var iterableChildren = children;
                                    {
                                        if (iteratorFn === iterableChildren.entries) {
                                            if (!didWarnAboutMaps) {
                                                warn("Using Maps as children is not supported. Use an array of keyed ReactElements instead.");
                                            }
                                            didWarnAboutMaps = true;
                                        }
                                    }
                                    var iterator = iteratorFn.call(iterableChildren);
                                    var step;
                                    var ii = 0;
                                    while (!(step = iterator.next()).done) {
                                        child = step.value;
                                        nextName = nextNamePrefix + getElementKey(child, ii++);
                                        subtreeCount += mapIntoArray(child, array, escapedPrefix, nextName, callback);
                                    }
                                } else if (type === "object") {
                                    var childrenString = String(children);
                                    throw new Error("Objects are not valid as a React child (found: " + (childrenString === "[object Object]" ? "object with keys {" + Object.keys(children).join(", ") + "}" : childrenString) + "). If you meant to render a collection of children, use an array instead.");
                                }
                            }
                            return subtreeCount;
                        }
                        function mapChildren(children, func, context) {
                            if (children == null) {
                                return children;
                            }
                            var result = [];
                            var count = 0;
                            mapIntoArray(children, result, "", "", function(child) {
                                return func.call(context, child, count++);
                            });
                            return result;
                        }
                        function countChildren(children) {
                            var n = 0;
                            mapChildren(children, function() {
                                n++;
                            });
                            return n;
                        }
                        function forEachChildren(children, forEachFunc, forEachContext) {
                            mapChildren(children, function() {
                                forEachFunc.apply(this, arguments);
                            }, forEachContext);
                        }
                        function toArray(children) {
                            return mapChildren(children, function(child) {
                                return child;
                            }) || [];
                        }
                        function onlyChild(children) {
                            if (!isValidElement(children)) {
                                throw new Error("React.Children.only expected to receive a single React element child.");
                            }
                            return children;
                        }
                        function createContext(defaultValue) {
                            var context = {
                                $$typeof: REACT_CONTEXT_TYPE,
                                // As a workaround to support multiple concurrent renderers, we categorize
                                // some renderers as primary and others as secondary. We only expect
                                // there to be two concurrent renderers at most: React Native (primary) and
                                // Fabric (secondary); React DOM (primary) and React ART (secondary).
                                // Secondary renderers store their context values on separate fields.
                                _currentValue: defaultValue,
                                _currentValue2: defaultValue,
                                // Used to track how many concurrent renderers this context currently
                                // supports within in a single renderer. Such as parallel server rendering.
                                _threadCount: 0,
                                // These are circular
                                Provider: null,
                                Consumer: null,
                                // Add these to use same hidden class in VM as ServerContext
                                _defaultValue: null,
                                _globalName: null
                            };
                            context.Provider = {
                                $$typeof: REACT_PROVIDER_TYPE,
                                _context: context
                            };
                            var hasWarnedAboutUsingNestedContextConsumers = false;
                            var hasWarnedAboutUsingConsumerProvider = false;
                            var hasWarnedAboutDisplayNameOnConsumer = false;
                            {
                                var Consumer = {
                                    $$typeof: REACT_CONTEXT_TYPE,
                                    _context: context
                                };
                                Object.defineProperties(Consumer, {
                                    Provider: {
                                        get: function() {
                                            if (!hasWarnedAboutUsingConsumerProvider) {
                                                hasWarnedAboutUsingConsumerProvider = true;
                                                error("Rendering <Context.Consumer.Provider> is not supported and will be removed in a future major release. Did you mean to render <Context.Provider> instead?");
                                            }
                                            return context.Provider;
                                        },
                                        set: function(_Provider) {
                                            context.Provider = _Provider;
                                        }
                                    },
                                    _currentValue: {
                                        get: function() {
                                            return context._currentValue;
                                        },
                                        set: function(_currentValue) {
                                            context._currentValue = _currentValue;
                                        }
                                    },
                                    _currentValue2: {
                                        get: function() {
                                            return context._currentValue2;
                                        },
                                        set: function(_currentValue2) {
                                            context._currentValue2 = _currentValue2;
                                        }
                                    },
                                    _threadCount: {
                                        get: function() {
                                            return context._threadCount;
                                        },
                                        set: function(_threadCount) {
                                            context._threadCount = _threadCount;
                                        }
                                    },
                                    Consumer: {
                                        get: function() {
                                            if (!hasWarnedAboutUsingNestedContextConsumers) {
                                                hasWarnedAboutUsingNestedContextConsumers = true;
                                                error("Rendering <Context.Consumer.Consumer> is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?");
                                            }
                                            return context.Consumer;
                                        }
                                    },
                                    displayName: {
                                        get: function() {
                                            return context.displayName;
                                        },
                                        set: function(displayName) {
                                            if (!hasWarnedAboutDisplayNameOnConsumer) {
                                                warn("Setting `displayName` on Context.Consumer has no effect. You should set it directly on the context with Context.displayName = '%s'.", displayName);
                                                hasWarnedAboutDisplayNameOnConsumer = true;
                                            }
                                        }
                                    }
                                });
                                context.Consumer = Consumer;
                            }
                            {
                                context._currentRenderer = null;
                                context._currentRenderer2 = null;
                            }
                            return context;
                        }
                        var Uninitialized = -1;
                        var Pending = 0;
                        var Resolved = 1;
                        var Rejected = 2;
                        function lazyInitializer(payload) {
                            if (payload._status === Uninitialized) {
                                var ctor = payload._result;
                                var thenable = ctor();
                                thenable.then(function(moduleObject2) {
                                    if (payload._status === Pending || payload._status === Uninitialized) {
                                        var resolved = payload;
                                        resolved._status = Resolved;
                                        resolved._result = moduleObject2;
                                    }
                                }, function(error2) {
                                    if (payload._status === Pending || payload._status === Uninitialized) {
                                        var rejected = payload;
                                        rejected._status = Rejected;
                                        rejected._result = error2;
                                    }
                                });
                                if (payload._status === Uninitialized) {
                                    var pending = payload;
                                    pending._status = Pending;
                                    pending._result = thenable;
                                }
                            }
                            if (payload._status === Resolved) {
                                var moduleObject = payload._result;
                                {
                                    if (moduleObject === void 0) {
                                        error("lazy: Expected the result of a dynamic import() call. Instead received: %s\n\nYour code should look like: \n  const MyComponent = lazy(() => import('./MyComponent'))\n\nDid you accidentally put curly braces around the import?", moduleObject);
                                    }
                                }
                                {
                                    if (!("default" in moduleObject)) {
                                        error("lazy: Expected the result of a dynamic import() call. Instead received: %s\n\nYour code should look like: \n  const MyComponent = lazy(() => import('./MyComponent'))", moduleObject);
                                    }
                                }
                                return moduleObject.default;
                            } else {
                                throw payload._result;
                            }
                        }
                        function lazy(ctor) {
                            var payload = {
                                // We use these fields to store the result.
                                _status: Uninitialized,
                                _result: ctor
                            };
                            var lazyType = {
                                $$typeof: REACT_LAZY_TYPE,
                                _payload: payload,
                                _init: lazyInitializer
                            };
                            {
                                var defaultProps;
                                var propTypes;
                                Object.defineProperties(lazyType, {
                                    defaultProps: {
                                        configurable: true,
                                        get: function() {
                                            return defaultProps;
                                        },
                                        set: function(newDefaultProps) {
                                            error("React.lazy(...): It is not supported to assign `defaultProps` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it.");
                                            defaultProps = newDefaultProps;
                                            Object.defineProperty(lazyType, "defaultProps", {
                                                enumerable: true
                                            });
                                        }
                                    },
                                    propTypes: {
                                        configurable: true,
                                        get: function() {
                                            return propTypes;
                                        },
                                        set: function(newPropTypes) {
                                            error("React.lazy(...): It is not supported to assign `propTypes` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it.");
                                            propTypes = newPropTypes;
                                            Object.defineProperty(lazyType, "propTypes", {
                                                enumerable: true
                                            });
                                        }
                                    }
                                });
                            }
                            return lazyType;
                        }
                        function forwardRef(render) {
                            {
                                if (render != null && render.$$typeof === REACT_MEMO_TYPE) {
                                    error("forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...)).");
                                } else if (typeof render !== "function") {
                                    error("forwardRef requires a render function but was given %s.", render === null ? "null" : typeof render);
                                } else {
                                    if (render.length !== 0 && render.length !== 2) {
                                        error("forwardRef render functions accept exactly two parameters: props and ref. %s", render.length === 1 ? "Did you forget to use the ref parameter?" : "Any additional parameter will be undefined.");
                                    }
                                }
                                if (render != null) {
                                    if (render.defaultProps != null || render.propTypes != null) {
                                        error("forwardRef render functions do not support propTypes or defaultProps. Did you accidentally pass a React component?");
                                    }
                                }
                            }
                            var elementType = {
                                $$typeof: REACT_FORWARD_REF_TYPE,
                                render
                            };
                            {
                                var ownName;
                                Object.defineProperty(elementType, "displayName", {
                                    enumerable: false,
                                    configurable: true,
                                    get: function() {
                                        return ownName;
                                    },
                                    set: function(name) {
                                        ownName = name;
                                        if (!render.name && !render.displayName) {
                                            render.displayName = name;
                                        }
                                    }
                                });
                            }
                            return elementType;
                        }
                        var REACT_MODULE_REFERENCE;
                        {
                            REACT_MODULE_REFERENCE = Symbol.for("react.module.reference");
                        }
                        function isValidElementType(type) {
                            if (typeof type === "string" || typeof type === "function") {
                                return true;
                            }
                            if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden || type === REACT_OFFSCREEN_TYPE || enableScopeAPI || enableCacheElement || enableTransitionTracing) {
                                return true;
                            }
                            if (typeof type === "object" && type !== null) {
                                if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object
                                    // types supported by any Flight configuration anywhere since
                                    // we don't know which Flight build this will end up being used
                                    // with.
                                    type.$$typeof === REACT_MODULE_REFERENCE || type.getModuleId !== void 0) {
                                    return true;
                                }
                            }
                            return false;
                        }
                        function memo(type, compare) {
                            {
                                if (!isValidElementType(type)) {
                                    error("memo: The first argument must be a component. Instead received: %s", type === null ? "null" : typeof type);
                                }
                            }
                            var elementType = {
                                $$typeof: REACT_MEMO_TYPE,
                                type,
                                compare: compare === void 0 ? null : compare
                            };
                            {
                                var ownName;
                                Object.defineProperty(elementType, "displayName", {
                                    enumerable: false,
                                    configurable: true,
                                    get: function() {
                                        return ownName;
                                    },
                                    set: function(name) {
                                        ownName = name;
                                        if (!type.name && !type.displayName) {
                                            type.displayName = name;
                                        }
                                    }
                                });
                            }
                            return elementType;
                        }
                        function resolveDispatcher() {
                            var dispatcher = ReactCurrentDispatcher.current;
                            {
                                if (dispatcher === null) {
                                    error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.");
                                }
                            }
                            return dispatcher;
                        }
                        function useContext(Context) {
                            var dispatcher = resolveDispatcher();
                            {
                                if (Context._context !== void 0) {
                                    var realContext = Context._context;
                                    if (realContext.Consumer === Context) {
                                        error("Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be removed in a future major release. Did you mean to call useContext(Context) instead?");
                                    } else if (realContext.Provider === Context) {
                                        error("Calling useContext(Context.Provider) is not supported. Did you mean to call useContext(Context) instead?");
                                    }
                                }
                            }
                            return dispatcher.useContext(Context);
                        }
                        function useState2(initialState) {
                            var dispatcher = resolveDispatcher();
                            return dispatcher.useState(initialState);
                        }
                        function useReducer(reducer, initialArg, init) {
                            var dispatcher = resolveDispatcher();
                            return dispatcher.useReducer(reducer, initialArg, init);
                        }
                        function useRef(initialValue) {
                            var dispatcher = resolveDispatcher();
                            return dispatcher.useRef(initialValue);
                        }
                        function useEffect2(create, deps) {
                            var dispatcher = resolveDispatcher();
                            return dispatcher.useEffect(create, deps);
                        }
                        function useInsertionEffect(create, deps) {
                            var dispatcher = resolveDispatcher();
                            return dispatcher.useInsertionEffect(create, deps);
                        }
                        function useLayoutEffect(create, deps) {
                            var dispatcher = resolveDispatcher();
                            return dispatcher.useLayoutEffect(create, deps);
                        }
                        function useCallback(callback, deps) {
                            var dispatcher = resolveDispatcher();
                            return dispatcher.useCallback(callback, deps);
                        }
                        function useMemo(create, deps) {
                            var dispatcher = resolveDispatcher();
                            return dispatcher.useMemo(create, deps);
                        }
                        function useImperativeHandle(ref, create, deps) {
                            var dispatcher = resolveDispatcher();
                            return dispatcher.useImperativeHandle(ref, create, deps);
                        }
                        function useDebugValue(value, formatterFn) {
                            {
                                var dispatcher = resolveDispatcher();
                                return dispatcher.useDebugValue(value, formatterFn);
                            }
                        }
                        function useTransition() {
                            var dispatcher = resolveDispatcher();
                            return dispatcher.useTransition();
                        }
                        function useDeferredValue(value) {
                            var dispatcher = resolveDispatcher();
                            return dispatcher.useDeferredValue(value);
                        }
                        function useId() {
                            var dispatcher = resolveDispatcher();
                            return dispatcher.useId();
                        }
                        function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
                            var dispatcher = resolveDispatcher();
                            return dispatcher.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
                        }
                        var disabledDepth = 0;
                        var prevLog;
                        var prevInfo;
                        var prevWarn;
                        var prevError;
                        var prevGroup;
                        var prevGroupCollapsed;
                        var prevGroupEnd;
                        function disabledLog() {
                        }
                        disabledLog.__reactDisabledLog = true;
                        function disableLogs() {
                            {
                                if (disabledDepth === 0) {
                                    prevLog = console.log;
                                    prevInfo = console.info;
                                    prevWarn = console.warn;
                                    prevError = console.error;
                                    prevGroup = console.group;
                                    prevGroupCollapsed = console.groupCollapsed;
                                    prevGroupEnd = console.groupEnd;
                                    var props = {
                                        configurable: true,
                                        enumerable: true,
                                        value: disabledLog,
                                        writable: true
                                    };
                                    Object.defineProperties(console, {
                                        info: props,
                                        log: props,
                                        warn: props,
                                        error: props,
                                        group: props,
                                        groupCollapsed: props,
                                        groupEnd: props
                                    });
                                }
                                disabledDepth++;
                            }
                        }
                        function reenableLogs() {
                            {
                                disabledDepth--;
                                if (disabledDepth === 0) {
                                    var props = {
                                        configurable: true,
                                        enumerable: true,
                                        writable: true
                                    };
                                    Object.defineProperties(console, {
                                        log: assign({}, props, {
                                            value: prevLog
                                        }),
                                        info: assign({}, props, {
                                            value: prevInfo
                                        }),
                                        warn: assign({}, props, {
                                            value: prevWarn
                                        }),
                                        error: assign({}, props, {
                                            value: prevError
                                        }),
                                        group: assign({}, props, {
                                            value: prevGroup
                                        }),
                                        groupCollapsed: assign({}, props, {
                                            value: prevGroupCollapsed
                                        }),
                                        groupEnd: assign({}, props, {
                                            value: prevGroupEnd
                                        })
                                    });
                                }
                                if (disabledDepth < 0) {
                                    error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
                                }
                            }
                        }
                        var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;
                        var prefix;
                        function describeBuiltInComponentFrame(name, source, ownerFn) {
                            {
                                if (prefix === void 0) {
                                    try {
                                        throw Error();
                                    } catch (x) {
                                        var match = x.stack.trim().match(/\n( *(at )?)/);
                                        prefix = match && match[1] || "";
                                    }
                                }
                                return "\n" + prefix + name;
                            }
                        }
                        var reentry = false;
                        var componentFrameCache;
                        {
                            var PossiblyWeakMap = typeof WeakMap === "function" ? WeakMap : Map;
                            componentFrameCache = new PossiblyWeakMap();
                        }
                        function describeNativeComponentFrame(fn, construct) {
                            if (!fn || reentry) {
                                return "";
                            }
                            {
                                var frame = componentFrameCache.get(fn);
                                if (frame !== void 0) {
                                    return frame;
                                }
                            }
                            var control;
                            reentry = true;
                            var previousPrepareStackTrace = Error.prepareStackTrace;
                            Error.prepareStackTrace = void 0;
                            var previousDispatcher;
                            {
                                previousDispatcher = ReactCurrentDispatcher$1.current;
                                ReactCurrentDispatcher$1.current = null;
                                disableLogs();
                            }
                            try {
                                if (construct) {
                                    var Fake = function() {
                                        throw Error();
                                    };
                                    Object.defineProperty(Fake.prototype, "props", {
                                        set: function() {
                                            throw Error();
                                        }
                                    });
                                    if (typeof Reflect === "object" && Reflect.construct) {
                                        try {
                                            Reflect.construct(Fake, []);
                                        } catch (x) {
                                            control = x;
                                        }
                                        Reflect.construct(fn, [], Fake);
                                    } else {
                                        try {
                                            Fake.call();
                                        } catch (x) {
                                            control = x;
                                        }
                                        fn.call(Fake.prototype);
                                    }
                                } else {
                                    try {
                                        throw Error();
                                    } catch (x) {
                                        control = x;
                                    }
                                    fn();
                                }
                            } catch (sample) {
                                if (sample && control && typeof sample.stack === "string") {
                                    var sampleLines = sample.stack.split("\n");
                                    var controlLines = control.stack.split("\n");
                                    var s = sampleLines.length - 1;
                                    var c = controlLines.length - 1;
                                    while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {
                                        c--;
                                    }
                                    for (; s >= 1 && c >= 0; s--, c--) {
                                        if (sampleLines[s] !== controlLines[c]) {
                                            if (s !== 1 || c !== 1) {
                                                do {
                                                    s--;
                                                    c--;
                                                    if (c < 0 || sampleLines[s] !== controlLines[c]) {
                                                        var _frame = "\n" + sampleLines[s].replace(" at new ", " at ");
                                                        if (fn.displayName && _frame.includes("<anonymous>")) {
                                                            _frame = _frame.replace("<anonymous>", fn.displayName);
                                                        }
                                                        {
                                                            if (typeof fn === "function") {
                                                                componentFrameCache.set(fn, _frame);
                                                            }
                                                        }
                                                        return _frame;
                                                    }
                                                } while (s >= 1 && c >= 0);
                                            }
                                            break;
                                        }
                                    }
                                }
                            } finally {
                                reentry = false;
                                {
                                    ReactCurrentDispatcher$1.current = previousDispatcher;
                                    reenableLogs();
                                }
                                Error.prepareStackTrace = previousPrepareStackTrace;
                            }
                            var name = fn ? fn.displayName || fn.name : "";
                            var syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
                            {
                                if (typeof fn === "function") {
                                    componentFrameCache.set(fn, syntheticFrame);
                                }
                            }
                            return syntheticFrame;
                        }
                        function describeFunctionComponentFrame(fn, source, ownerFn) {
                            {
                                return describeNativeComponentFrame(fn, false);
                            }
                        }
                        function shouldConstruct(Component2) {
                            var prototype = Component2.prototype;
                            return !!(prototype && prototype.isReactComponent);
                        }
                        function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
                            if (type == null) {
                                return "";
                            }
                            if (typeof type === "function") {
                                {
                                    return describeNativeComponentFrame(type, shouldConstruct(type));
                                }
                            }
                            if (typeof type === "string") {
                                return describeBuiltInComponentFrame(type);
                            }
                            switch (type) {
                                case REACT_SUSPENSE_TYPE:
                                    return describeBuiltInComponentFrame("Suspense");
                                case REACT_SUSPENSE_LIST_TYPE:
                                    return describeBuiltInComponentFrame("SuspenseList");
                            }
                            if (typeof type === "object") {
                                switch (type.$$typeof) {
                                    case REACT_FORWARD_REF_TYPE:
                                        return describeFunctionComponentFrame(type.render);
                                    case REACT_MEMO_TYPE:
                                        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
                                    case REACT_LAZY_TYPE: {
                                        var lazyComponent = type;
                                        var payload = lazyComponent._payload;
                                        var init = lazyComponent._init;
                                        try {
                                            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
                                        } catch (x) {
                                        }
                                    }
                                }
                            }
                            return "";
                        }
                        var loggedTypeFailures = {};
                        var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
                        function setCurrentlyValidatingElement(element) {
                            {
                                if (element) {
                                    var owner = element._owner;
                                    var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
                                    ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
                                } else {
                                    ReactDebugCurrentFrame$1.setExtraStackFrame(null);
                                }
                            }
                        }
                        function checkPropTypes(typeSpecs, values, location, componentName, element) {
                            {
                                var has = Function.call.bind(hasOwnProperty);
                                for (var typeSpecName in typeSpecs) {
                                    if (has(typeSpecs, typeSpecName)) {
                                        var error$1 = void 0;
                                        try {
                                            if (typeof typeSpecs[typeSpecName] !== "function") {
                                                var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                                                err.name = "Invariant Violation";
                                                throw err;
                                            }
                                            error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
                                        } catch (ex) {
                                            error$1 = ex;
                                        }
                                        if (error$1 && !(error$1 instanceof Error)) {
                                            setCurrentlyValidatingElement(element);
                                            error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location, typeSpecName, typeof error$1);
                                            setCurrentlyValidatingElement(null);
                                        }
                                        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                                            loggedTypeFailures[error$1.message] = true;
                                            setCurrentlyValidatingElement(element);
                                            error("Failed %s type: %s", location, error$1.message);
                                            setCurrentlyValidatingElement(null);
                                        }
                                    }
                                }
                            }
                        }
                        function setCurrentlyValidatingElement$1(element) {
                            {
                                if (element) {
                                    var owner = element._owner;
                                    var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
                                    setExtraStackFrame(stack);
                                } else {
                                    setExtraStackFrame(null);
                                }
                            }
                        }
                        var propTypesMisspellWarningShown;
                        {
                            propTypesMisspellWarningShown = false;
                        }
                        function getDeclarationErrorAddendum() {
                            if (ReactCurrentOwner.current) {
                                var name = getComponentNameFromType(ReactCurrentOwner.current.type);
                                if (name) {
                                    return "\n\nCheck the render method of `" + name + "`.";
                                }
                            }
                            return "";
                        }
                        function getSourceInfoErrorAddendum(source) {
                            if (source !== void 0) {
                                var fileName = source.fileName.replace(/^.*[\\\/]/, "");
                                var lineNumber = source.lineNumber;
                                return "\n\nCheck your code at " + fileName + ":" + lineNumber + ".";
                            }
                            return "";
                        }
                        function getSourceInfoErrorAddendumForProps(elementProps) {
                            if (elementProps !== null && elementProps !== void 0) {
                                return getSourceInfoErrorAddendum(elementProps.__source);
                            }
                            return "";
                        }
                        var ownerHasKeyUseWarning = {};
                        function getCurrentComponentErrorInfo(parentType) {
                            var info = getDeclarationErrorAddendum();
                            if (!info) {
                                var parentName = typeof parentType === "string" ? parentType : parentType.displayName || parentType.name;
                                if (parentName) {
                                    info = "\n\nCheck the top-level render call using <" + parentName + ">.";
                                }
                            }
                            return info;
                        }
                        function validateExplicitKey(element, parentType) {
                            if (!element._store || element._store.validated || element.key != null) {
                                return;
                            }
                            element._store.validated = true;
                            var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);
                            if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
                                return;
                            }
                            ownerHasKeyUseWarning[currentComponentErrorInfo] = true;
                            var childOwner = "";
                            if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
                                childOwner = " It was passed a child from " + getComponentNameFromType(element._owner.type) + ".";
                            }
                            {
                                setCurrentlyValidatingElement$1(element);
                                error('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);
                                setCurrentlyValidatingElement$1(null);
                            }
                        }
                        function validateChildKeys(node, parentType) {
                            if (typeof node !== "object") {
                                return;
                            }
                            if (isArray(node)) {
                                for (var i = 0; i < node.length; i++) {
                                    var child = node[i];
                                    if (isValidElement(child)) {
                                        validateExplicitKey(child, parentType);
                                    }
                                }
                            } else if (isValidElement(node)) {
                                if (node._store) {
                                    node._store.validated = true;
                                }
                            } else if (node) {
                                var iteratorFn = getIteratorFn(node);
                                if (typeof iteratorFn === "function") {
                                    if (iteratorFn !== node.entries) {
                                        var iterator = iteratorFn.call(node);
                                        var step;
                                        while (!(step = iterator.next()).done) {
                                            if (isValidElement(step.value)) {
                                                validateExplicitKey(step.value, parentType);
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        function validatePropTypes(element) {
                            {
                                var type = element.type;
                                if (type === null || type === void 0 || typeof type === "string") {
                                    return;
                                }
                                var propTypes;
                                if (typeof type === "function") {
                                    propTypes = type.propTypes;
                                } else if (typeof type === "object" && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
                                    // Inner props are checked in the reconciler.
                                    type.$$typeof === REACT_MEMO_TYPE)) {
                                    propTypes = type.propTypes;
                                } else {
                                    return;
                                }
                                if (propTypes) {
                                    var name = getComponentNameFromType(type);
                                    checkPropTypes(propTypes, element.props, "prop", name, element);
                                } else if (type.PropTypes !== void 0 && !propTypesMisspellWarningShown) {
                                    propTypesMisspellWarningShown = true;
                                    var _name = getComponentNameFromType(type);
                                    error("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?", _name || "Unknown");
                                }
                                if (typeof type.getDefaultProps === "function" && !type.getDefaultProps.isReactClassApproved) {
                                    error("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.");
                                }
                            }
                        }
                        function validateFragmentProps(fragment) {
                            {
                                var keys = Object.keys(fragment.props);
                                for (var i = 0; i < keys.length; i++) {
                                    var key = keys[i];
                                    if (key !== "children" && key !== "key") {
                                        setCurrentlyValidatingElement$1(fragment);
                                        error("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.", key);
                                        setCurrentlyValidatingElement$1(null);
                                        break;
                                    }
                                }
                                if (fragment.ref !== null) {
                                    setCurrentlyValidatingElement$1(fragment);
                                    error("Invalid attribute `ref` supplied to `React.Fragment`.");
                                    setCurrentlyValidatingElement$1(null);
                                }
                            }
                        }
                        function createElementWithValidation(type, props, children) {
                            var validType = isValidElementType(type);
                            if (!validType) {
                                var info = "";
                                if (type === void 0 || typeof type === "object" && type !== null && Object.keys(type).length === 0) {
                                    info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
                                }
                                var sourceInfo = getSourceInfoErrorAddendumForProps(props);
                                if (sourceInfo) {
                                    info += sourceInfo;
                                } else {
                                    info += getDeclarationErrorAddendum();
                                }
                                var typeString;
                                if (type === null) {
                                    typeString = "null";
                                } else if (isArray(type)) {
                                    typeString = "array";
                                } else if (type !== void 0 && type.$$typeof === REACT_ELEMENT_TYPE) {
                                    typeString = "<" + (getComponentNameFromType(type.type) || "Unknown") + " />";
                                    info = " Did you accidentally export a JSX literal instead of a component?";
                                } else {
                                    typeString = typeof type;
                                }
                                {
                                    error("React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s", typeString, info);
                                }
                            }
                            var element = createElement.apply(this, arguments);
                            if (element == null) {
                                return element;
                            }
                            if (validType) {
                                for (var i = 2; i < arguments.length; i++) {
                                    validateChildKeys(arguments[i], type);
                                }
                            }
                            if (type === REACT_FRAGMENT_TYPE) {
                                validateFragmentProps(element);
                            } else {
                                validatePropTypes(element);
                            }
                            return element;
                        }
                        var didWarnAboutDeprecatedCreateFactory = false;
                        function createFactoryWithValidation(type) {
                            var validatedFactory = createElementWithValidation.bind(null, type);
                            validatedFactory.type = type;
                            {
                                if (!didWarnAboutDeprecatedCreateFactory) {
                                    didWarnAboutDeprecatedCreateFactory = true;
                                    warn("React.createFactory() is deprecated and will be removed in a future major release. Consider using JSX or use React.createElement() directly instead.");
                                }
                                Object.defineProperty(validatedFactory, "type", {
                                    enumerable: false,
                                    get: function() {
                                        warn("Factory.type is deprecated. Access the class directly before passing it to createFactory.");
                                        Object.defineProperty(this, "type", {
                                            value: type
                                        });
                                        return type;
                                    }
                                });
                            }
                            return validatedFactory;
                        }
                        function cloneElementWithValidation(element, props, children) {
                            var newElement = cloneElement.apply(this, arguments);
                            for (var i = 2; i < arguments.length; i++) {
                                validateChildKeys(arguments[i], newElement.type);
                            }
                            validatePropTypes(newElement);
                            return newElement;
                        }
                        function startTransition(scope, options) {
                            var prevTransition = ReactCurrentBatchConfig.transition;
                            ReactCurrentBatchConfig.transition = {};
                            var currentTransition = ReactCurrentBatchConfig.transition;
                            {
                                ReactCurrentBatchConfig.transition._updatedFibers = /* @__PURE__ */ new Set();
                            }
                            try {
                                scope();
                            } finally {
                                ReactCurrentBatchConfig.transition = prevTransition;
                                {
                                    if (prevTransition === null && currentTransition._updatedFibers) {
                                        var updatedFibersCount = currentTransition._updatedFibers.size;
                                        if (updatedFibersCount > 10) {
                                            warn("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table.");
                                        }
                                        currentTransition._updatedFibers.clear();
                                    }
                                }
                            }
                        }
                        var didWarnAboutMessageChannel = false;
                        var enqueueTaskImpl = null;
                        function enqueueTask(task) {
                            if (enqueueTaskImpl === null) {
                                try {
                                    var requireString = ("require" + Math.random()).slice(0, 7);
                                    var nodeRequire = module && module[requireString];
                                    enqueueTaskImpl = nodeRequire.call(module, "timers").setImmediate;
                                } catch (_err) {
                                    enqueueTaskImpl = function(callback) {
                                        {
                                            if (didWarnAboutMessageChannel === false) {
                                                didWarnAboutMessageChannel = true;
                                                if (typeof MessageChannel === "undefined") {
                                                    error("This browser does not have a MessageChannel implementation, so enqueuing tasks via await act(async () => ...) will fail. Please file an issue at https://github.com/facebook/react/issues if you encounter this warning.");
                                                }
                                            }
                                        }
                                        var channel = new MessageChannel();
                                        channel.port1.onmessage = callback;
                                        channel.port2.postMessage(void 0);
                                    };
                                }
                            }
                            return enqueueTaskImpl(task);
                        }
                        var actScopeDepth = 0;
                        var didWarnNoAwaitAct = false;
                        function act(callback) {
                            {
                                var prevActScopeDepth = actScopeDepth;
                                actScopeDepth++;
                                if (ReactCurrentActQueue.current === null) {
                                    ReactCurrentActQueue.current = [];
                                }
                                var prevIsBatchingLegacy = ReactCurrentActQueue.isBatchingLegacy;
                                var result;
                                try {
                                    ReactCurrentActQueue.isBatchingLegacy = true;
                                    result = callback();
                                    if (!prevIsBatchingLegacy && ReactCurrentActQueue.didScheduleLegacyUpdate) {
                                        var queue = ReactCurrentActQueue.current;
                                        if (queue !== null) {
                                            ReactCurrentActQueue.didScheduleLegacyUpdate = false;
                                            flushActQueue(queue);
                                        }
                                    }
                                } catch (error2) {
                                    popActScope(prevActScopeDepth);
                                    throw error2;
                                } finally {
                                    ReactCurrentActQueue.isBatchingLegacy = prevIsBatchingLegacy;
                                }
                                if (result !== null && typeof result === "object" && typeof result.then === "function") {
                                    var thenableResult = result;
                                    var wasAwaited = false;
                                    var thenable = {
                                        then: function(resolve, reject) {
                                            wasAwaited = true;
                                            thenableResult.then(function(returnValue2) {
                                                popActScope(prevActScopeDepth);
                                                if (actScopeDepth === 0) {
                                                    recursivelyFlushAsyncActWork(returnValue2, resolve, reject);
                                                } else {
                                                    resolve(returnValue2);
                                                }
                                            }, function(error2) {
                                                popActScope(prevActScopeDepth);
                                                reject(error2);
                                            });
                                        }
                                    };
                                    {
                                        if (!didWarnNoAwaitAct && typeof Promise !== "undefined") {
                                            Promise.resolve().then(function() {
                                            }).then(function() {
                                                if (!wasAwaited) {
                                                    didWarnNoAwaitAct = true;
                                                    error("You called act(async () => ...) without await. This could lead to unexpected testing behaviour, interleaving multiple act calls and mixing their scopes. You should - await act(async () => ...);");
                                                }
                                            });
                                        }
                                    }
                                    return thenable;
                                } else {
                                    var returnValue = result;
                                    popActScope(prevActScopeDepth);
                                    if (actScopeDepth === 0) {
                                        var _queue = ReactCurrentActQueue.current;
                                        if (_queue !== null) {
                                            flushActQueue(_queue);
                                            ReactCurrentActQueue.current = null;
                                        }
                                        var _thenable = {
                                            then: function(resolve, reject) {
                                                if (ReactCurrentActQueue.current === null) {
                                                    ReactCurrentActQueue.current = [];
                                                    recursivelyFlushAsyncActWork(returnValue, resolve, reject);
                                                } else {
                                                    resolve(returnValue);
                                                }
                                            }
                                        };
                                        return _thenable;
                                    } else {
                                        var _thenable2 = {
                                            then: function(resolve, reject) {
                                                resolve(returnValue);
                                            }
                                        };
                                        return _thenable2;
                                    }
                                }
                            }
                        }
                        function popActScope(prevActScopeDepth) {
                            {
                                if (prevActScopeDepth !== actScopeDepth - 1) {
                                    error("You seem to have overlapping act() calls, this is not supported. Be sure to await previous act() calls before making a new one. ");
                                }
                                actScopeDepth = prevActScopeDepth;
                            }
                        }
                        function recursivelyFlushAsyncActWork(returnValue, resolve, reject) {
                            {
                                var queue = ReactCurrentActQueue.current;
                                if (queue !== null) {
                                    try {
                                        flushActQueue(queue);
                                        enqueueTask(function() {
                                            if (queue.length === 0) {
                                                ReactCurrentActQueue.current = null;
                                                resolve(returnValue);
                                            } else {
                                                recursivelyFlushAsyncActWork(returnValue, resolve, reject);
                                            }
                                        });
                                    } catch (error2) {
                                        reject(error2);
                                    }
                                } else {
                                    resolve(returnValue);
                                }
                            }
                        }
                        var isFlushing = false;
                        function flushActQueue(queue) {
                            {
                                if (!isFlushing) {
                                    isFlushing = true;
                                    var i = 0;
                                    try {
                                        for (; i < queue.length; i++) {
                                            var callback = queue[i];
                                            do {
                                                callback = callback(true);
                                            } while (callback !== null);
                                        }
                                        queue.length = 0;
                                    } catch (error2) {
                                        queue = queue.slice(i + 1);
                                        throw error2;
                                    } finally {
                                        isFlushing = false;
                                    }
                                }
                            }
                        }
                        var createElement$1 = createElementWithValidation;
                        var cloneElement$1 = cloneElementWithValidation;
                        var createFactory = createFactoryWithValidation;
                        var Children = {
                            map: mapChildren,
                            forEach: forEachChildren,
                            count: countChildren,
                            toArray,
                            only: onlyChild
                        };
                        exports.Children = Children;
                        exports.Component = Component;
                        exports.Fragment = REACT_FRAGMENT_TYPE;
                        exports.Profiler = REACT_PROFILER_TYPE;
                        exports.PureComponent = PureComponent;
                        exports.StrictMode = REACT_STRICT_MODE_TYPE;
                        exports.Suspense = REACT_SUSPENSE_TYPE;
                        exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactSharedInternals;
                        exports.cloneElement = cloneElement$1;
                        exports.createContext = createContext;
                        exports.createElement = createElement$1;
                        exports.createFactory = createFactory;
                        exports.createRef = createRef;
                        exports.forwardRef = forwardRef;
                        exports.isValidElement = isValidElement;
                        exports.lazy = lazy;
                        exports.memo = memo;
                        exports.startTransition = startTransition;
                        exports.unstable_act = act;
                        exports.useCallback = useCallback;
                        exports.useContext = useContext;
                        exports.useDebugValue = useDebugValue;
                        exports.useDeferredValue = useDeferredValue;
                        exports.useEffect = useEffect2;
                        exports.useId = useId;
                        exports.useImperativeHandle = useImperativeHandle;
                        exports.useInsertionEffect = useInsertionEffect;
                        exports.useLayoutEffect = useLayoutEffect;
                        exports.useMemo = useMemo;
                        exports.useReducer = useReducer;
                        exports.useRef = useRef;
                        exports.useState = useState2;
                        exports.useSyncExternalStore = useSyncExternalStore;
                        exports.useTransition = useTransition;
                        exports.version = ReactVersion;
                        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") {
                            __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
                        }
                    })();
                }
            }
        });

        // node_modules/react/index.js
        var require_react = __commonJS({
            "node_modules/react/index.js"(exports, module) {
                "use strict";
                if (false) {
                    module.exports = null;
                } else {
                    module.exports = require_react_development();
                }
            }
        });

        // node_modules/scheduler/cjs/scheduler.development.js
        var require_scheduler_development = __commonJS({
            "node_modules/scheduler/cjs/scheduler.development.js"(exports) {
                "use strict";
                if (true) {
                    (function() {
                        "use strict";
                        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") {
                            __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
                        }
                        var enableSchedulerDebugging = false;
                        var enableProfiling = false;
                        var frameYieldMs = 5;
                        function push(heap, node) {
                            var index = heap.length;
                            heap.push(node);
                            siftUp(heap, node, index);
                        }
                        function peek(heap) {
                            return heap.length === 0 ? null : heap[0];
                        }
                        function pop(heap) {
                            if (heap.length === 0) {
                                return null;
                            }
                            var first = heap[0];
                            var last = heap.pop();
                            if (last !== first) {
                                heap[0] = last;
                                siftDown(heap, last, 0);
                            }
                            return first;
                        }
                        function siftUp(heap, node, i) {
                            var index = i;
                            while (index > 0) {
                                var parentIndex = index - 1 >>> 1;
                                var parent = heap[parentIndex];
                                if (compare(parent, node) > 0) {
                                    heap[parentIndex] = node;
                                    heap[index] = parent;
                                    index = parentIndex;
                                } else {
                                    return;
                                }
                            }
                        }
                        function siftDown(heap, node, i) {
                            var index = i;
                            var length = heap.length;
                            var halfLength = length >>> 1;
                            while (index < halfLength) {
                                var leftIndex = (index + 1) * 2 - 1;
                                var left = heap[leftIndex];
                                var rightIndex = leftIndex + 1;
                                var right = heap[rightIndex];
                                if (compare(left, node) < 0) {
                                    if (rightIndex < length && compare(right, left) < 0) {
                                        heap[index] = right;
                                        heap[rightIndex] = node;
                                        index = rightIndex;
                                    } else {
                                        heap[index] = left;
                                        heap[leftIndex] = node;
                                        index = leftIndex;
                                    }
                                } else if (rightIndex < length && compare(right, node) < 0) {
                                    heap[index] = right;
                                    heap[rightIndex] = node;
                                    index = rightIndex;
                                } else {
                                    return;
                                }
                            }
                        }
                        function compare(a, b) {
                            var diff = a.sortIndex - b.sortIndex;
                            return diff !== 0 ? diff : a.id - b.id;
                        }
                        var ImmediatePriority = 1;
                        var UserBlockingPriority = 2;
                        var NormalPriority = 3;
                        var LowPriority = 4;
                        var IdlePriority = 5;
                        function markTaskErrored(task, ms) {
                        }
                        var hasPerformanceNow = typeof performance === "object" && typeof performance.now === "function";
                        if (hasPerformanceNow) {
                            var localPerformance = performance;
                            exports.unstable_now = function() {
                                return localPerformance.now();
                            };
                        } else {
                            var localDate = Date;
                            var initialTime = localDate.now();
                            exports.unstable_now = function() {
                                return localDate.now() - initialTime;
                            };
                        }
                        var maxSigned31BitInt = 1073741823;
                        var IMMEDIATE_PRIORITY_TIMEOUT = -1;
                        var USER_BLOCKING_PRIORITY_TIMEOUT = 250;
                        var NORMAL_PRIORITY_TIMEOUT = 5e3;
                        var LOW_PRIORITY_TIMEOUT = 1e4;
                        var IDLE_PRIORITY_TIMEOUT = maxSigned31BitInt;
                        var taskQueue = [];
                        var timerQueue = [];
                        var taskIdCounter = 1;
                        var currentTask = null;
                        var currentPriorityLevel = NormalPriority;
                        var isPerformingWork = false;
                        var isHostCallbackScheduled = false;
                        var isHostTimeoutScheduled = false;
                        var localSetTimeout = typeof setTimeout === "function" ? setTimeout : null;
                        var localClearTimeout = typeof clearTimeout === "function" ? clearTimeout : null;
                        var localSetImmediate = typeof setImmediate !== "undefined" ? setImmediate : null;
                        var isInputPending = typeof navigator !== "undefined" && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0 ? navigator.scheduling.isInputPending.bind(navigator.scheduling) : null;
                        function advanceTimers(currentTime) {
                            var timer = peek(timerQueue);
                            while (timer !== null) {
                                if (timer.callback === null) {
                                    pop(timerQueue);
                                } else if (timer.startTime <= currentTime) {
                                    pop(timerQueue);
                                    timer.sortIndex = timer.expirationTime;
                                    push(taskQueue, timer);
                                } else {
                                    return;
                                }
                                timer = peek(timerQueue);
                            }
                        }
                        function handleTimeout(currentTime) {
                            isHostTimeoutScheduled = false;
                            advanceTimers(currentTime);
                            if (!isHostCallbackScheduled) {
                                if (peek(taskQueue) !== null) {
                                    isHostCallbackScheduled = true;
                                    requestHostCallback(flushWork);
                                } else {
                                    var firstTimer = peek(timerQueue);
                                    if (firstTimer !== null) {
                                        requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
                                    }
                                }
                            }
                        }
                        function flushWork(hasTimeRemaining, initialTime2) {
                            isHostCallbackScheduled = false;
                            if (isHostTimeoutScheduled) {
                                isHostTimeoutScheduled = false;
                                cancelHostTimeout();
                            }
                            isPerformingWork = true;
                            var previousPriorityLevel = currentPriorityLevel;
                            try {
                                if (enableProfiling) {
                                    try {
                                        return workLoop(hasTimeRemaining, initialTime2);
                                    } catch (error) {
                                        if (currentTask !== null) {
                                            var currentTime = exports.unstable_now();
                                            markTaskErrored(currentTask, currentTime);
                                            currentTask.isQueued = false;
                                        }
                                        throw error;
                                    }
                                } else {
                                    return workLoop(hasTimeRemaining, initialTime2);
                                }
                            } finally {
                                currentTask = null;
                                currentPriorityLevel = previousPriorityLevel;
                                isPerformingWork = false;
                            }
                        }
                        function workLoop(hasTimeRemaining, initialTime2) {
                            var currentTime = initialTime2;
                            advanceTimers(currentTime);
                            currentTask = peek(taskQueue);
                            while (currentTask !== null && !enableSchedulerDebugging) {
                                if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {
                                    break;
                                }
                                var callback = currentTask.callback;
                                if (typeof callback === "function") {
                                    currentTask.callback = null;
                                    currentPriorityLevel = currentTask.priorityLevel;
                                    var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;
                                    var continuationCallback = callback(didUserCallbackTimeout);
                                    currentTime = exports.unstable_now();
                                    if (typeof continuationCallback === "function") {
                                        currentTask.callback = continuationCallback;
                                    } else {
                                        if (currentTask === peek(taskQueue)) {
                                            pop(taskQueue);
                                        }
                                    }
                                    advanceTimers(currentTime);
                                } else {
                                    pop(taskQueue);
                                }
                                currentTask = peek(taskQueue);
                            }
                            if (currentTask !== null) {
                                return true;
                            } else {
                                var firstTimer = peek(timerQueue);
                                if (firstTimer !== null) {
                                    requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
                                }
                                return false;
                            }
                        }
                        function unstable_runWithPriority(priorityLevel, eventHandler) {
                            switch (priorityLevel) {
                                case ImmediatePriority:
                                case UserBlockingPriority:
                                case NormalPriority:
                                case LowPriority:
                                case IdlePriority:
                                    break;
                                default:
                                    priorityLevel = NormalPriority;
                            }
                            var previousPriorityLevel = currentPriorityLevel;
                            currentPriorityLevel = priorityLevel;
                            try {
                                return eventHandler();
                            } finally {
                                currentPriorityLevel = previousPriorityLevel;
                            }
                        }
                        function unstable_next(eventHandler) {
                            var priorityLevel;
                            switch (currentPriorityLevel) {
                                case ImmediatePriority:
                                case UserBlockingPriority:
                                case NormalPriority:
                                    priorityLevel = NormalPriority;
                                    break;
                                default:
                                    priorityLevel = currentPriorityLevel;
                                    break;
                            }
                            var previousPriorityLevel = currentPriorityLevel;
                            currentPriorityLevel = priorityLevel;
                            try {
                                return eventHandler();
                            } finally {
                                currentPriorityLevel = previousPriorityLevel;
                            }
                        }
                        function unstable_wrapCallback(callback) {
                            var parentPriorityLevel = currentPriorityLevel;
                            return function() {
                                var previousPriorityLevel = currentPriorityLevel;
                                currentPriorityLevel = parentPriorityLevel;
                                try {
                                    return callback.apply(this, arguments);
                                } finally {
                                    currentPriorityLevel = previousPriorityLevel;
                                }
                            };
                        }
                        function unstable_scheduleCallback(priorityLevel, callback, options) {
                            var currentTime = exports.unstable_now();
                            var startTime2;
                            if (typeof options === "object" && options !== null) {
                                var delay = options.delay;
                                if (typeof delay === "number" && delay > 0) {
                                    startTime2 = currentTime + delay;
                                } else {
                                    startTime2 = currentTime;
                                }
                            } else {
                                startTime2 = currentTime;
                            }
                            var timeout;
                            switch (priorityLevel) {
                                case ImmediatePriority:
                                    timeout = IMMEDIATE_PRIORITY_TIMEOUT;
                                    break;
                                case UserBlockingPriority:
                                    timeout = USER_BLOCKING_PRIORITY_TIMEOUT;
                                    break;
                                case IdlePriority:
                                    timeout = IDLE_PRIORITY_TIMEOUT;
                                    break;
                                case LowPriority:
                                    timeout = LOW_PRIORITY_TIMEOUT;
                                    break;
                                case NormalPriority:
                                default:
                                    timeout = NORMAL_PRIORITY_TIMEOUT;
                                    break;
                            }
                            var expirationTime = startTime2 + timeout;
                            var newTask = {
                                id: taskIdCounter++,
                                callback,
                                priorityLevel,
                                startTime: startTime2,
                                expirationTime,
                                sortIndex: -1
                            };
                            if (startTime2 > currentTime) {
                                newTask.sortIndex = startTime2;
                                push(timerQueue, newTask);
                                if (peek(taskQueue) === null && newTask === peek(timerQueue)) {
                                    if (isHostTimeoutScheduled) {
                                        cancelHostTimeout();
                                    } else {
                                        isHostTimeoutScheduled = true;
                                    }
                                    requestHostTimeout(handleTimeout, startTime2 - currentTime);
                                }
                            } else {
                                newTask.sortIndex = expirationTime;
                                push(taskQueue, newTask);
                                if (!isHostCallbackScheduled && !isPerformingWork) {
                                    isHostCallbackScheduled = true;
                                    requestHostCallback(flushWork);
                                }
                            }
                            return newTask;
                        }
                        function unstable_pauseExecution() {
                        }
                        function unstable_continueExecution() {
                            if (!isHostCallbackScheduled && !isPerformingWork) {
                                isHostCallbackScheduled = true;
                                requestHostCallback(flushWork);
                            }
                        }
                        function unstable_getFirstCallbackNode() {
                            return peek(taskQueue);
                        }
                        function unstable_cancelCallback(task) {
                            task.callback = null;
                        }
                        function unstable_getCurrentPriorityLevel() {
                            return currentPriorityLevel;
                        }
                        var isMessageLoopRunning = false;
                        var scheduledHostCallback = null;
                        var taskTimeoutID = -1;
                        var frameInterval = frameYieldMs;
                        var startTime = -1;
                        function shouldYieldToHost() {
                            var timeElapsed = exports.unstable_now() - startTime;
                            if (timeElapsed < frameInterval) {
                                return false;
                            }
                            return true;
                        }
                        function requestPaint() {
                        }
                        function forceFrameRate(fps) {
                            if (fps < 0 || fps > 125) {
                                console["error"]("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported");
                                return;
                            }
                            if (fps > 0) {
                                frameInterval = Math.floor(1e3 / fps);
                            } else {
                                frameInterval = frameYieldMs;
                            }
                        }
                        var performWorkUntilDeadline = function() {
                            if (scheduledHostCallback !== null) {
                                var currentTime = exports.unstable_now();
                                startTime = currentTime;
                                var hasTimeRemaining = true;
                                var hasMoreWork = true;
                                try {
                                    hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);
                                } finally {
                                    if (hasMoreWork) {
                                        schedulePerformWorkUntilDeadline();
                                    } else {
                                        isMessageLoopRunning = false;
                                        scheduledHostCallback = null;
                                    }
                                }
                            } else {
                                isMessageLoopRunning = false;
                            }
                        };
                        var schedulePerformWorkUntilDeadline;
                        if (typeof localSetImmediate === "function") {
                            schedulePerformWorkUntilDeadline = function() {
                                localSetImmediate(performWorkUntilDeadline);
                            };
                        } else if (typeof MessageChannel !== "undefined") {
                            var channel = new MessageChannel();
                            var port = channel.port2;
                            channel.port1.onmessage = performWorkUntilDeadline;
                            schedulePerformWorkUntilDeadline = function() {
                                port.postMessage(null);
                            };
                        } else {
                            schedulePerformWorkUntilDeadline = function() {
                                localSetTimeout(performWorkUntilDeadline, 0);
                            };
                        }
                        function requestHostCallback(callback) {
                            scheduledHostCallback = callback;
                            if (!isMessageLoopRunning) {
                                isMessageLoopRunning = true;
                                schedulePerformWorkUntilDeadline();
                            }
                        }
                        function requestHostTimeout(callback, ms) {
                            taskTimeoutID = localSetTimeout(function() {
                                callback(exports.unstable_now());
                            }, ms);
                        }
                        function cancelHostTimeout() {
                            localClearTimeout(taskTimeoutID);
                            taskTimeoutID = -1;
                        }
                        var unstable_requestPaint = requestPaint;
                        var unstable_Profiling = null;
                        exports.unstable_IdlePriority = IdlePriority;
                        exports.unstable_ImmediatePriority = ImmediatePriority;
                        exports.unstable_LowPriority = LowPriority;
                        exports.unstable_NormalPriority = NormalPriority;
                        exports.unstable_Profiling = unstable_Profiling;
                        exports.unstable_UserBlockingPriority = UserBlockingPriority;
                        exports.unstable_cancelCallback = unstable_cancelCallback;
                        exports.unstable_continueExecution = unstable_continueExecution;
                        exports.unstable_forceFrameRate = forceFrameRate;
                        exports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;
                        exports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;
                        exports.unstable_next = unstable_next;
                        exports.unstable_pauseExecution = unstable_pauseExecution;
                        exports.unstable_requestPaint = unstable_requestPaint;
                        exports.unstable_runWithPriority = unstable_runWithPriority;
                        exports.unstable_scheduleCallback = unstable_scheduleCallback;
                        exports.unstable_shouldYield = shouldYieldToHost;
                        exports.unstable_wrapCallback = unstable_wrapCallback;
                        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") {
                            __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
                        }
                    })();
                }
            }
        });

        // node_modules/scheduler/index.js
        var require_scheduler = __commonJS({
            "node_modules/scheduler/index.js"(exports, module) {
                "use strict";
                if (false) {
                    module.exports = null;
                } else {
                    module.exports = require_scheduler_development();
                }
            }
        });

        // node_modules/react-dom/cjs/react-dom.development.js
        var require_react_dom_development = __commonJS({
            "node_modules/react-dom/cjs/react-dom.development.js"(exports) {
                "use strict";
                if (true) {
                    (function() {
                        "use strict";
                        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart === "function") {
                            __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStart(new Error());
                        }
                        var React2 = require_react();
                        var Scheduler = require_scheduler();
                        var ReactSharedInternals = React2.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
                        var suppressWarning = false;
                        function setSuppressWarning(newSuppressWarning) {
                            {
                                suppressWarning = newSuppressWarning;
                            }
                        }
                        function warn(format) {
                            {
                                if (!suppressWarning) {
                                    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                                        args[_key - 1] = arguments[_key];
                                    }
                                    printWarning("warn", format, args);
                                }
                            }
                        }
                        function error(format) {
                            {
                                if (!suppressWarning) {
                                    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
                                        args[_key2 - 1] = arguments[_key2];
                                    }
                                    printWarning("error", format, args);
                                }
                            }
                        }
                        function printWarning(level, format, args) {
                            {
                                var ReactDebugCurrentFrame2 = ReactSharedInternals.ReactDebugCurrentFrame;
                                var stack = ReactDebugCurrentFrame2.getStackAddendum();
                                if (stack !== "") {
                                    format += "%s";
                                    args = args.concat([stack]);
                                }
                                var argsWithFormat = args.map(function(item) {
                                    return String(item);
                                });
                                argsWithFormat.unshift("Warning: " + format);
                                Function.prototype.apply.call(console[level], console, argsWithFormat);
                            }
                        }
                        var FunctionComponent = 0;
                        var ClassComponent = 1;
                        var IndeterminateComponent = 2;
                        var HostRoot = 3;
                        var HostPortal = 4;
                        var HostComponent = 5;
                        var HostText = 6;
                        var Fragment = 7;
                        var Mode = 8;
                        var ContextConsumer = 9;
                        var ContextProvider = 10;
                        var ForwardRef = 11;
                        var Profiler = 12;
                        var SuspenseComponent = 13;
                        var MemoComponent = 14;
                        var SimpleMemoComponent = 15;
                        var LazyComponent = 16;
                        var IncompleteClassComponent = 17;
                        var DehydratedFragment = 18;
                        var SuspenseListComponent = 19;
                        var ScopeComponent = 21;
                        var OffscreenComponent = 22;
                        var LegacyHiddenComponent = 23;
                        var CacheComponent = 24;
                        var TracingMarkerComponent = 25;
                        var enableClientRenderFallbackOnTextMismatch = true;
                        var enableNewReconciler = false;
                        var enableLazyContextPropagation = false;
                        var enableLegacyHidden = false;
                        var enableSuspenseAvoidThisFallback = false;
                        var disableCommentsAsDOMContainers = true;
                        var enableCustomElementPropertySupport = false;
                        var warnAboutStringRefs = false;
                        var enableSchedulingProfiler = true;
                        var enableProfilerTimer = true;
                        var enableProfilerCommitHooks = true;
                        var allNativeEvents = /* @__PURE__ */ new Set();
                        var registrationNameDependencies = {};
                        var possibleRegistrationNames = {};
                        function registerTwoPhaseEvent(registrationName, dependencies) {
                            registerDirectEvent(registrationName, dependencies);
                            registerDirectEvent(registrationName + "Capture", dependencies);
                        }
                        function registerDirectEvent(registrationName, dependencies) {
                            {
                                if (registrationNameDependencies[registrationName]) {
                                    error("EventRegistry: More than one plugin attempted to publish the same registration name, `%s`.", registrationName);
                                }
                            }
                            registrationNameDependencies[registrationName] = dependencies;
                            {
                                var lowerCasedName = registrationName.toLowerCase();
                                possibleRegistrationNames[lowerCasedName] = registrationName;
                                if (registrationName === "onDoubleClick") {
                                    possibleRegistrationNames.ondblclick = registrationName;
                                }
                            }
                            for (var i = 0; i < dependencies.length; i++) {
                                allNativeEvents.add(dependencies[i]);
                            }
                        }
                        var canUseDOM = !!(typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined");
                        var hasOwnProperty = Object.prototype.hasOwnProperty;
                        function typeName(value) {
                            {
                                var hasToStringTag = typeof Symbol === "function" && Symbol.toStringTag;
                                var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
                                return type;
                            }
                        }
                        function willCoercionThrow(value) {
                            {
                                try {
                                    testStringCoercion(value);
                                    return false;
                                } catch (e) {
                                    return true;
                                }
                            }
                        }
                        function testStringCoercion(value) {
                            return "" + value;
                        }
                        function checkAttributeStringCoercion(value, attributeName) {
                            {
                                if (willCoercionThrow(value)) {
                                    error("The provided `%s` attribute is an unsupported type %s. This value must be coerced to a string before before using it here.", attributeName, typeName(value));
                                    return testStringCoercion(value);
                                }
                            }
                        }
                        function checkKeyStringCoercion(value) {
                            {
                                if (willCoercionThrow(value)) {
                                    error("The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value));
                                    return testStringCoercion(value);
                                }
                            }
                        }
                        function checkPropStringCoercion(value, propName) {
                            {
                                if (willCoercionThrow(value)) {
                                    error("The provided `%s` prop is an unsupported type %s. This value must be coerced to a string before before using it here.", propName, typeName(value));
                                    return testStringCoercion(value);
                                }
                            }
                        }
                        function checkCSSPropertyStringCoercion(value, propName) {
                            {
                                if (willCoercionThrow(value)) {
                                    error("The provided `%s` CSS property is an unsupported type %s. This value must be coerced to a string before before using it here.", propName, typeName(value));
                                    return testStringCoercion(value);
                                }
                            }
                        }
                        function checkHtmlStringCoercion(value) {
                            {
                                if (willCoercionThrow(value)) {
                                    error("The provided HTML markup uses a value of unsupported type %s. This value must be coerced to a string before before using it here.", typeName(value));
                                    return testStringCoercion(value);
                                }
                            }
                        }
                        function checkFormFieldValueStringCoercion(value) {
                            {
                                if (willCoercionThrow(value)) {
                                    error("Form field values (value, checked, defaultValue, or defaultChecked props) must be strings, not %s. This value must be coerced to a string before before using it here.", typeName(value));
                                    return testStringCoercion(value);
                                }
                            }
                        }
                        var RESERVED = 0;
                        var STRING = 1;
                        var BOOLEANISH_STRING = 2;
                        var BOOLEAN = 3;
                        var OVERLOADED_BOOLEAN = 4;
                        var NUMERIC = 5;
                        var POSITIVE_NUMERIC = 6;
                        var ATTRIBUTE_NAME_START_CHAR = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
                        var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040";
                        var VALID_ATTRIBUTE_NAME_REGEX = new RegExp("^[" + ATTRIBUTE_NAME_START_CHAR + "][" + ATTRIBUTE_NAME_CHAR + "]*$");
                        var illegalAttributeNameCache = {};
                        var validatedAttributeNameCache = {};
                        function isAttributeNameSafe(attributeName) {
                            if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) {
                                return true;
                            }
                            if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) {
                                return false;
                            }
                            if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
                                validatedAttributeNameCache[attributeName] = true;
                                return true;
                            }
                            illegalAttributeNameCache[attributeName] = true;
                            {
                                error("Invalid attribute name: `%s`", attributeName);
                            }
                            return false;
                        }
                        function shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag) {
                            if (propertyInfo !== null) {
                                return propertyInfo.type === RESERVED;
                            }
                            if (isCustomComponentTag) {
                                return false;
                            }
                            if (name.length > 2 && (name[0] === "o" || name[0] === "O") && (name[1] === "n" || name[1] === "N")) {
                                return true;
                            }
                            return false;
                        }
                        function shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {
                            if (propertyInfo !== null && propertyInfo.type === RESERVED) {
                                return false;
                            }
                            switch (typeof value) {
                                case "function":
                                case "symbol":
                                    return true;
                                case "boolean": {
                                    if (isCustomComponentTag) {
                                        return false;
                                    }
                                    if (propertyInfo !== null) {
                                        return !propertyInfo.acceptsBooleans;
                                    } else {
                                        var prefix2 = name.toLowerCase().slice(0, 5);
                                        return prefix2 !== "data-" && prefix2 !== "aria-";
                                    }
                                }
                                default:
                                    return false;
                            }
                        }
                        function shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag) {
                            if (value === null || typeof value === "undefined") {
                                return true;
                            }
                            if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag)) {
                                return true;
                            }
                            if (isCustomComponentTag) {
                                return false;
                            }
                            if (propertyInfo !== null) {
                                switch (propertyInfo.type) {
                                    case BOOLEAN:
                                        return !value;
                                    case OVERLOADED_BOOLEAN:
                                        return value === false;
                                    case NUMERIC:
                                        return isNaN(value);
                                    case POSITIVE_NUMERIC:
                                        return isNaN(value) || value < 1;
                                }
                            }
                            return false;
                        }
                        function getPropertyInfo(name) {
                            return properties2.hasOwnProperty(name) ? properties2[name] : null;
                        }
                        function PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace, sanitizeURL2, removeEmptyString) {
                            this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;
                            this.attributeName = attributeName;
                            this.attributeNamespace = attributeNamespace;
                            this.mustUseProperty = mustUseProperty;
                            this.propertyName = name;
                            this.type = type;
                            this.sanitizeURL = sanitizeURL2;
                            this.removeEmptyString = removeEmptyString;
                        }
                        var properties2 = {};
                        var reservedProps = [
                            "children",
                            "dangerouslySetInnerHTML",
                            // TODO: This prevents the assignment of defaultValue to regular
                            // elements (not just inputs). Now that ReactDOMInput assigns to the
                            // defaultValue property -- do we need this?
                            "defaultValue",
                            "defaultChecked",
                            "innerHTML",
                            "suppressContentEditableWarning",
                            "suppressHydrationWarning",
                            "style"
                        ];
                        reservedProps.forEach(function(name) {
                            properties2[name] = new PropertyInfoRecord(
                                name,
                                RESERVED,
                                false,
                                // mustUseProperty
                                name,
                                // attributeName
                                null,
                                // attributeNamespace
                                false,
                                // sanitizeURL
                                false
                            );
                        });
                        [["acceptCharset", "accept-charset"], ["className", "class"], ["htmlFor", "for"], ["httpEquiv", "http-equiv"]].forEach(function(_ref) {
                            var name = _ref[0], attributeName = _ref[1];
                            properties2[name] = new PropertyInfoRecord(
                                name,
                                STRING,
                                false,
                                // mustUseProperty
                                attributeName,
                                // attributeName
                                null,
                                // attributeNamespace
                                false,
                                // sanitizeURL
                                false
                            );
                        });
                        ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(name) {
                            properties2[name] = new PropertyInfoRecord(
                                name,
                                BOOLEANISH_STRING,
                                false,
                                // mustUseProperty
                                name.toLowerCase(),
                                // attributeName
                                null,
                                // attributeNamespace
                                false,
                                // sanitizeURL
                                false
                            );
                        });
                        ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(name) {
                            properties2[name] = new PropertyInfoRecord(
                                name,
                                BOOLEANISH_STRING,
                                false,
                                // mustUseProperty
                                name,
                                // attributeName
                                null,
                                // attributeNamespace
                                false,
                                // sanitizeURL
                                false
                            );
                        });
                        [
                            "allowFullScreen",
                            "async",
                            // Note: there is a special case that prevents it from being written to the DOM
                            // on the client side because the browsers are inconsistent. Instead we call focus().
                            "autoFocus",
                            "autoPlay",
                            "controls",
                            "default",
                            "defer",
                            "disabled",
                            "disablePictureInPicture",
                            "disableRemotePlayback",
                            "formNoValidate",
                            "hidden",
                            "loop",
                            "noModule",
                            "noValidate",
                            "open",
                            "playsInline",
                            "readOnly",
                            "required",
                            "reversed",
                            "scoped",
                            "seamless",
                            // Microdata
                            "itemScope"
                        ].forEach(function(name) {
                            properties2[name] = new PropertyInfoRecord(
                                name,
                                BOOLEAN,
                                false,
                                // mustUseProperty
                                name.toLowerCase(),
                                // attributeName
                                null,
                                // attributeNamespace
                                false,
                                // sanitizeURL
                                false
                            );
                        });
                        [
                            "checked",
                            // Note: `option.selected` is not updated if `select.multiple` is
                            // disabled with `removeAttribute`. We have special logic for handling this.
                            "multiple",
                            "muted",
                            "selected"
                            // NOTE: if you add a camelCased prop to this list,
                            // you'll need to set attributeName to name.toLowerCase()
                            // instead in the assignment below.
                        ].forEach(function(name) {
                            properties2[name] = new PropertyInfoRecord(
                                name,
                                BOOLEAN,
                                true,
                                // mustUseProperty
                                name,
                                // attributeName
                                null,
                                // attributeNamespace
                                false,
                                // sanitizeURL
                                false
                            );
                        });
                        [
                            "capture",
                            "download"
                            // NOTE: if you add a camelCased prop to this list,
                            // you'll need to set attributeName to name.toLowerCase()
                            // instead in the assignment below.
                        ].forEach(function(name) {
                            properties2[name] = new PropertyInfoRecord(
                                name,
                                OVERLOADED_BOOLEAN,
                                false,
                                // mustUseProperty
                                name,
                                // attributeName
                                null,
                                // attributeNamespace
                                false,
                                // sanitizeURL
                                false
                            );
                        });
                        [
                            "cols",
                            "rows",
                            "size",
                            "span"
                            // NOTE: if you add a camelCased prop to this list,
                            // you'll need to set attributeName to name.toLowerCase()
                            // instead in the assignment below.
                        ].forEach(function(name) {
                            properties2[name] = new PropertyInfoRecord(
                                name,
                                POSITIVE_NUMERIC,
                                false,
                                // mustUseProperty
                                name,
                                // attributeName
                                null,
                                // attributeNamespace
                                false,
                                // sanitizeURL
                                false
                            );
                        });
                        ["rowSpan", "start"].forEach(function(name) {
                            properties2[name] = new PropertyInfoRecord(
                                name,
                                NUMERIC,
                                false,
                                // mustUseProperty
                                name.toLowerCase(),
                                // attributeName
                                null,
                                // attributeNamespace
                                false,
                                // sanitizeURL
                                false
                            );
                        });
                        var CAMELIZE = /[\-\:]([a-z])/g;
                        var capitalize = function(token) {
                            return token[1].toUpperCase();
                        };
                        [
                            "accent-height",
                            "alignment-baseline",
                            "arabic-form",
                            "baseline-shift",
                            "cap-height",
                            "clip-path",
                            "clip-rule",
                            "color-interpolation",
                            "color-interpolation-filters",
                            "color-profile",
                            "color-rendering",
                            "dominant-baseline",
                            "enable-background",
                            "fill-opacity",
                            "fill-rule",
                            "flood-color",
                            "flood-opacity",
                            "font-family",
                            "font-size",
                            "font-size-adjust",
                            "font-stretch",
                            "font-style",
                            "font-variant",
                            "font-weight",
                            "glyph-name",
                            "glyph-orientation-horizontal",
                            "glyph-orientation-vertical",
                            "horiz-adv-x",
                            "horiz-origin-x",
                            "image-rendering",
                            "letter-spacing",
                            "lighting-color",
                            "marker-end",
                            "marker-mid",
                            "marker-start",
                            "overline-position",
                            "overline-thickness",
                            "paint-order",
                            "panose-1",
                            "pointer-events",
                            "rendering-intent",
                            "shape-rendering",
                            "stop-color",
                            "stop-opacity",
                            "strikethrough-position",
                            "strikethrough-thickness",
                            "stroke-dasharray",
                            "stroke-dashoffset",
                            "stroke-linecap",
                            "stroke-linejoin",
                            "stroke-miterlimit",
                            "stroke-opacity",
                            "stroke-width",
                            "text-anchor",
                            "text-decoration",
                            "text-rendering",
                            "underline-position",
                            "underline-thickness",
                            "unicode-bidi",
                            "unicode-range",
                            "units-per-em",
                            "v-alphabetic",
                            "v-hanging",
                            "v-ideographic",
                            "v-mathematical",
                            "vector-effect",
                            "vert-adv-y",
                            "vert-origin-x",
                            "vert-origin-y",
                            "word-spacing",
                            "writing-mode",
                            "xmlns:xlink",
                            "x-height"
                            // NOTE: if you add a camelCased prop to this list,
                            // you'll need to set attributeName to name.toLowerCase()
                            // instead in the assignment below.
                        ].forEach(function(attributeName) {
                            var name = attributeName.replace(CAMELIZE, capitalize);
                            properties2[name] = new PropertyInfoRecord(
                                name,
                                STRING,
                                false,
                                // mustUseProperty
                                attributeName,
                                null,
                                // attributeNamespace
                                false,
                                // sanitizeURL
                                false
                            );
                        });
                        [
                            "xlink:actuate",
                            "xlink:arcrole",
                            "xlink:role",
                            "xlink:show",
                            "xlink:title",
                            "xlink:type"
                            // NOTE: if you add a camelCased prop to this list,
                            // you'll need to set attributeName to name.toLowerCase()
                            // instead in the assignment below.
                        ].forEach(function(attributeName) {
                            var name = attributeName.replace(CAMELIZE, capitalize);
                            properties2[name] = new PropertyInfoRecord(
                                name,
                                STRING,
                                false,
                                // mustUseProperty
                                attributeName,
                                "http://www.w3.org/1999/xlink",
                                false,
                                // sanitizeURL
                                false
                            );
                        });
                        [
                            "xml:base",
                            "xml:lang",
                            "xml:space"
                            // NOTE: if you add a camelCased prop to this list,
                            // you'll need to set attributeName to name.toLowerCase()
                            // instead in the assignment below.
                        ].forEach(function(attributeName) {
                            var name = attributeName.replace(CAMELIZE, capitalize);
                            properties2[name] = new PropertyInfoRecord(
                                name,
                                STRING,
                                false,
                                // mustUseProperty
                                attributeName,
                                "http://www.w3.org/XML/1998/namespace",
                                false,
                                // sanitizeURL
                                false
                            );
                        });
                        ["tabIndex", "crossOrigin"].forEach(function(attributeName) {
                            properties2[attributeName] = new PropertyInfoRecord(
                                attributeName,
                                STRING,
                                false,
                                // mustUseProperty
                                attributeName.toLowerCase(),
                                // attributeName
                                null,
                                // attributeNamespace
                                false,
                                // sanitizeURL
                                false
                            );
                        });
                        var xlinkHref = "xlinkHref";
                        properties2[xlinkHref] = new PropertyInfoRecord(
                            "xlinkHref",
                            STRING,
                            false,
                            // mustUseProperty
                            "xlink:href",
                            "http://www.w3.org/1999/xlink",
                            true,
                            // sanitizeURL
                            false
                        );
                        ["src", "href", "action", "formAction"].forEach(function(attributeName) {
                            properties2[attributeName] = new PropertyInfoRecord(
                                attributeName,
                                STRING,
                                false,
                                // mustUseProperty
                                attributeName.toLowerCase(),
                                // attributeName
                                null,
                                // attributeNamespace
                                true,
                                // sanitizeURL
                                true
                            );
                        });
                        var isJavaScriptProtocol = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i;
                        var didWarn = false;
                        function sanitizeURL(url) {
                            {
                                if (!didWarn && isJavaScriptProtocol.test(url)) {
                                    didWarn = true;
                                    error("A future version of React will block javascript: URLs as a security precaution. Use event handlers instead if you can. If you need to generate unsafe HTML try using dangerouslySetInnerHTML instead. React was passed %s.", JSON.stringify(url));
                                }
                            }
                        }
                        function getValueForProperty(node, name, expected, propertyInfo) {
                            {
                                if (propertyInfo.mustUseProperty) {
                                    var propertyName = propertyInfo.propertyName;
                                    return node[propertyName];
                                } else {
                                    {
                                        checkAttributeStringCoercion(expected, name);
                                    }
                                    if (propertyInfo.sanitizeURL) {
                                        sanitizeURL("" + expected);
                                    }
                                    var attributeName = propertyInfo.attributeName;
                                    var stringValue = null;
                                    if (propertyInfo.type === OVERLOADED_BOOLEAN) {
                                        if (node.hasAttribute(attributeName)) {
                                            var value = node.getAttribute(attributeName);
                                            if (value === "") {
                                                return true;
                                            }
                                            if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
                                                return value;
                                            }
                                            if (value === "" + expected) {
                                                return expected;
                                            }
                                            return value;
                                        }
                                    } else if (node.hasAttribute(attributeName)) {
                                        if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
                                            return node.getAttribute(attributeName);
                                        }
                                        if (propertyInfo.type === BOOLEAN) {
                                            return expected;
                                        }
                                        stringValue = node.getAttribute(attributeName);
                                    }
                                    if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
                                        return stringValue === null ? expected : stringValue;
                                    } else if (stringValue === "" + expected) {
                                        return expected;
                                    } else {
                                        return stringValue;
                                    }
                                }
                            }
                        }
                        function getValueForAttribute(node, name, expected, isCustomComponentTag) {
                            {
                                if (!isAttributeNameSafe(name)) {
                                    return;
                                }
                                if (!node.hasAttribute(name)) {
                                    return expected === void 0 ? void 0 : null;
                                }
                                var value = node.getAttribute(name);
                                {
                                    checkAttributeStringCoercion(expected, name);
                                }
                                if (value === "" + expected) {
                                    return expected;
                                }
                                return value;
                            }
                        }
                        function setValueForProperty(node, name, value, isCustomComponentTag) {
                            var propertyInfo = getPropertyInfo(name);
                            if (shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag)) {
                                return;
                            }
                            if (shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag)) {
                                value = null;
                            }
                            if (isCustomComponentTag || propertyInfo === null) {
                                if (isAttributeNameSafe(name)) {
                                    var _attributeName = name;
                                    if (value === null) {
                                        node.removeAttribute(_attributeName);
                                    } else {
                                        {
                                            checkAttributeStringCoercion(value, name);
                                        }
                                        node.setAttribute(_attributeName, "" + value);
                                    }
                                }
                                return;
                            }
                            var mustUseProperty = propertyInfo.mustUseProperty;
                            if (mustUseProperty) {
                                var propertyName = propertyInfo.propertyName;
                                if (value === null) {
                                    var type = propertyInfo.type;
                                    node[propertyName] = type === BOOLEAN ? false : "";
                                } else {
                                    node[propertyName] = value;
                                }
                                return;
                            }
                            var attributeName = propertyInfo.attributeName, attributeNamespace = propertyInfo.attributeNamespace;
                            if (value === null) {
                                node.removeAttribute(attributeName);
                            } else {
                                var _type = propertyInfo.type;
                                var attributeValue;
                                if (_type === BOOLEAN || _type === OVERLOADED_BOOLEAN && value === true) {
                                    attributeValue = "";
                                } else {
                                    {
                                        {
                                            checkAttributeStringCoercion(value, attributeName);
                                        }
                                        attributeValue = "" + value;
                                    }
                                    if (propertyInfo.sanitizeURL) {
                                        sanitizeURL(attributeValue.toString());
                                    }
                                }
                                if (attributeNamespace) {
                                    node.setAttributeNS(attributeNamespace, attributeName, attributeValue);
                                } else {
                                    node.setAttribute(attributeName, attributeValue);
                                }
                            }
                        }
                        var REACT_ELEMENT_TYPE = Symbol.for("react.element");
                        var REACT_PORTAL_TYPE = Symbol.for("react.portal");
                        var REACT_FRAGMENT_TYPE = Symbol.for("react.fragment");
                        var REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode");
                        var REACT_PROFILER_TYPE = Symbol.for("react.profiler");
                        var REACT_PROVIDER_TYPE = Symbol.for("react.provider");
                        var REACT_CONTEXT_TYPE = Symbol.for("react.context");
                        var REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref");
                        var REACT_SUSPENSE_TYPE = Symbol.for("react.suspense");
                        var REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list");
                        var REACT_MEMO_TYPE = Symbol.for("react.memo");
                        var REACT_LAZY_TYPE = Symbol.for("react.lazy");
                        var REACT_SCOPE_TYPE = Symbol.for("react.scope");
                        var REACT_DEBUG_TRACING_MODE_TYPE = Symbol.for("react.debug_trace_mode");
                        var REACT_OFFSCREEN_TYPE = Symbol.for("react.offscreen");
                        var REACT_LEGACY_HIDDEN_TYPE = Symbol.for("react.legacy_hidden");
                        var REACT_CACHE_TYPE = Symbol.for("react.cache");
                        var REACT_TRACING_MARKER_TYPE = Symbol.for("react.tracing_marker");
                        var MAYBE_ITERATOR_SYMBOL = Symbol.iterator;
                        var FAUX_ITERATOR_SYMBOL = "@@iterator";
                        function getIteratorFn(maybeIterable) {
                            if (maybeIterable === null || typeof maybeIterable !== "object") {
                                return null;
                            }
                            var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];
                            if (typeof maybeIterator === "function") {
                                return maybeIterator;
                            }
                            return null;
                        }
                        var assign = Object.assign;
                        var disabledDepth = 0;
                        var prevLog;
                        var prevInfo;
                        var prevWarn;
                        var prevError;
                        var prevGroup;
                        var prevGroupCollapsed;
                        var prevGroupEnd;
                        function disabledLog() {
                        }
                        disabledLog.__reactDisabledLog = true;
                        function disableLogs() {
                            {
                                if (disabledDepth === 0) {
                                    prevLog = console.log;
                                    prevInfo = console.info;
                                    prevWarn = console.warn;
                                    prevError = console.error;
                                    prevGroup = console.group;
                                    prevGroupCollapsed = console.groupCollapsed;
                                    prevGroupEnd = console.groupEnd;
                                    var props = {
                                        configurable: true,
                                        enumerable: true,
                                        value: disabledLog,
                                        writable: true
                                    };
                                    Object.defineProperties(console, {
                                        info: props,
                                        log: props,
                                        warn: props,
                                        error: props,
                                        group: props,
                                        groupCollapsed: props,
                                        groupEnd: props
                                    });
                                }
                                disabledDepth++;
                            }
                        }
                        function reenableLogs() {
                            {
                                disabledDepth--;
                                if (disabledDepth === 0) {
                                    var props = {
                                        configurable: true,
                                        enumerable: true,
                                        writable: true
                                    };
                                    Object.defineProperties(console, {
                                        log: assign({}, props, {
                                            value: prevLog
                                        }),
                                        info: assign({}, props, {
                                            value: prevInfo
                                        }),
                                        warn: assign({}, props, {
                                            value: prevWarn
                                        }),
                                        error: assign({}, props, {
                                            value: prevError
                                        }),
                                        group: assign({}, props, {
                                            value: prevGroup
                                        }),
                                        groupCollapsed: assign({}, props, {
                                            value: prevGroupCollapsed
                                        }),
                                        groupEnd: assign({}, props, {
                                            value: prevGroupEnd
                                        })
                                    });
                                }
                                if (disabledDepth < 0) {
                                    error("disabledDepth fell below zero. This is a bug in React. Please file an issue.");
                                }
                            }
                        }
                        var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
                        var prefix;
                        function describeBuiltInComponentFrame(name, source, ownerFn) {
                            {
                                if (prefix === void 0) {
                                    try {
                                        throw Error();
                                    } catch (x) {
                                        var match = x.stack.trim().match(/\n( *(at )?)/);
                                        prefix = match && match[1] || "";
                                    }
                                }
                                return "\n" + prefix + name;
                            }
                        }
                        var reentry = false;
                        var componentFrameCache;
                        {
                            var PossiblyWeakMap = typeof WeakMap === "function" ? WeakMap : Map;
                            componentFrameCache = new PossiblyWeakMap();
                        }
                        function describeNativeComponentFrame(fn, construct) {
                            if (!fn || reentry) {
                                return "";
                            }
                            {
                                var frame = componentFrameCache.get(fn);
                                if (frame !== void 0) {
                                    return frame;
                                }
                            }
                            var control;
                            reentry = true;
                            var previousPrepareStackTrace = Error.prepareStackTrace;
                            Error.prepareStackTrace = void 0;
                            var previousDispatcher;
                            {
                                previousDispatcher = ReactCurrentDispatcher.current;
                                ReactCurrentDispatcher.current = null;
                                disableLogs();
                            }
                            try {
                                if (construct) {
                                    var Fake = function() {
                                        throw Error();
                                    };
                                    Object.defineProperty(Fake.prototype, "props", {
                                        set: function() {
                                            throw Error();
                                        }
                                    });
                                    if (typeof Reflect === "object" && Reflect.construct) {
                                        try {
                                            Reflect.construct(Fake, []);
                                        } catch (x) {
                                            control = x;
                                        }
                                        Reflect.construct(fn, [], Fake);
                                    } else {
                                        try {
                                            Fake.call();
                                        } catch (x) {
                                            control = x;
                                        }
                                        fn.call(Fake.prototype);
                                    }
                                } else {
                                    try {
                                        throw Error();
                                    } catch (x) {
                                        control = x;
                                    }
                                    fn();
                                }
                            } catch (sample) {
                                if (sample && control && typeof sample.stack === "string") {
                                    var sampleLines = sample.stack.split("\n");
                                    var controlLines = control.stack.split("\n");
                                    var s = sampleLines.length - 1;
                                    var c = controlLines.length - 1;
                                    while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {
                                        c--;
                                    }
                                    for (; s >= 1 && c >= 0; s--, c--) {
                                        if (sampleLines[s] !== controlLines[c]) {
                                            if (s !== 1 || c !== 1) {
                                                do {
                                                    s--;
                                                    c--;
                                                    if (c < 0 || sampleLines[s] !== controlLines[c]) {
                                                        var _frame = "\n" + sampleLines[s].replace(" at new ", " at ");
                                                        if (fn.displayName && _frame.includes("<anonymous>")) {
                                                            _frame = _frame.replace("<anonymous>", fn.displayName);
                                                        }
                                                        {
                                                            if (typeof fn === "function") {
                                                                componentFrameCache.set(fn, _frame);
                                                            }
                                                        }
                                                        return _frame;
                                                    }
                                                } while (s >= 1 && c >= 0);
                                            }
                                            break;
                                        }
                                    }
                                }
                            } finally {
                                reentry = false;
                                {
                                    ReactCurrentDispatcher.current = previousDispatcher;
                                    reenableLogs();
                                }
                                Error.prepareStackTrace = previousPrepareStackTrace;
                            }
                            var name = fn ? fn.displayName || fn.name : "";
                            var syntheticFrame = name ? describeBuiltInComponentFrame(name) : "";
                            {
                                if (typeof fn === "function") {
                                    componentFrameCache.set(fn, syntheticFrame);
                                }
                            }
                            return syntheticFrame;
                        }
                        function describeClassComponentFrame(ctor, source, ownerFn) {
                            {
                                return describeNativeComponentFrame(ctor, true);
                            }
                        }
                        function describeFunctionComponentFrame(fn, source, ownerFn) {
                            {
                                return describeNativeComponentFrame(fn, false);
                            }
                        }
                        function shouldConstruct(Component) {
                            var prototype = Component.prototype;
                            return !!(prototype && prototype.isReactComponent);
                        }
                        function describeUnknownElementTypeFrameInDEV(type, source, ownerFn) {
                            if (type == null) {
                                return "";
                            }
                            if (typeof type === "function") {
                                {
                                    return describeNativeComponentFrame(type, shouldConstruct(type));
                                }
                            }
                            if (typeof type === "string") {
                                return describeBuiltInComponentFrame(type);
                            }
                            switch (type) {
                                case REACT_SUSPENSE_TYPE:
                                    return describeBuiltInComponentFrame("Suspense");
                                case REACT_SUSPENSE_LIST_TYPE:
                                    return describeBuiltInComponentFrame("SuspenseList");
                            }
                            if (typeof type === "object") {
                                switch (type.$$typeof) {
                                    case REACT_FORWARD_REF_TYPE:
                                        return describeFunctionComponentFrame(type.render);
                                    case REACT_MEMO_TYPE:
                                        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);
                                    case REACT_LAZY_TYPE: {
                                        var lazyComponent = type;
                                        var payload = lazyComponent._payload;
                                        var init = lazyComponent._init;
                                        try {
                                            return describeUnknownElementTypeFrameInDEV(init(payload), source, ownerFn);
                                        } catch (x) {
                                        }
                                    }
                                }
                            }
                            return "";
                        }
                        function describeFiber(fiber) {
                            var owner = fiber._debugOwner ? fiber._debugOwner.type : null;
                            var source = fiber._debugSource;
                            switch (fiber.tag) {
                                case HostComponent:
                                    return describeBuiltInComponentFrame(fiber.type);
                                case LazyComponent:
                                    return describeBuiltInComponentFrame("Lazy");
                                case SuspenseComponent:
                                    return describeBuiltInComponentFrame("Suspense");
                                case SuspenseListComponent:
                                    return describeBuiltInComponentFrame("SuspenseList");
                                case FunctionComponent:
                                case IndeterminateComponent:
                                case SimpleMemoComponent:
                                    return describeFunctionComponentFrame(fiber.type);
                                case ForwardRef:
                                    return describeFunctionComponentFrame(fiber.type.render);
                                case ClassComponent:
                                    return describeClassComponentFrame(fiber.type);
                                default:
                                    return "";
                            }
                        }
                        function getStackByFiberInDevAndProd(workInProgress2) {
                            try {
                                var info = "";
                                var node = workInProgress2;
                                do {
                                    info += describeFiber(node);
                                    node = node.return;
                                } while (node);
                                return info;
                            } catch (x) {
                                return "\nError generating stack: " + x.message + "\n" + x.stack;
                            }
                        }
                        function getWrappedName(outerType, innerType, wrapperName) {
                            var displayName = outerType.displayName;
                            if (displayName) {
                                return displayName;
                            }
                            var functionName = innerType.displayName || innerType.name || "";
                            return functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName;
                        }
                        function getContextName(type) {
                            return type.displayName || "Context";
                        }
                        function getComponentNameFromType(type) {
                            if (type == null) {
                                return null;
                            }
                            {
                                if (typeof type.tag === "number") {
                                    error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.");
                                }
                            }
                            if (typeof type === "function") {
                                return type.displayName || type.name || null;
                            }
                            if (typeof type === "string") {
                                return type;
                            }
                            switch (type) {
                                case REACT_FRAGMENT_TYPE:
                                    return "Fragment";
                                case REACT_PORTAL_TYPE:
                                    return "Portal";
                                case REACT_PROFILER_TYPE:
                                    return "Profiler";
                                case REACT_STRICT_MODE_TYPE:
                                    return "StrictMode";
                                case REACT_SUSPENSE_TYPE:
                                    return "Suspense";
                                case REACT_SUSPENSE_LIST_TYPE:
                                    return "SuspenseList";
                            }
                            if (typeof type === "object") {
                                switch (type.$$typeof) {
                                    case REACT_CONTEXT_TYPE:
                                        var context = type;
                                        return getContextName(context) + ".Consumer";
                                    case REACT_PROVIDER_TYPE:
                                        var provider = type;
                                        return getContextName(provider._context) + ".Provider";
                                    case REACT_FORWARD_REF_TYPE:
                                        return getWrappedName(type, type.render, "ForwardRef");
                                    case REACT_MEMO_TYPE:
                                        var outerName = type.displayName || null;
                                        if (outerName !== null) {
                                            return outerName;
                                        }
                                        return getComponentNameFromType(type.type) || "Memo";
                                    case REACT_LAZY_TYPE: {
                                        var lazyComponent = type;
                                        var payload = lazyComponent._payload;
                                        var init = lazyComponent._init;
                                        try {
                                            return getComponentNameFromType(init(payload));
                                        } catch (x) {
                                            return null;
                                        }
                                    }
                                }
                            }
                            return null;
                        }
                        function getWrappedName$1(outerType, innerType, wrapperName) {
                            var functionName = innerType.displayName || innerType.name || "";
                            return outerType.displayName || (functionName !== "" ? wrapperName + "(" + functionName + ")" : wrapperName);
                        }
                        function getContextName$1(type) {
                            return type.displayName || "Context";
                        }
                        function getComponentNameFromFiber(fiber) {
                            var tag = fiber.tag, type = fiber.type;
                            switch (tag) {
                                case CacheComponent:
                                    return "Cache";
                                case ContextConsumer:
                                    var context = type;
                                    return getContextName$1(context) + ".Consumer";
                                case ContextProvider:
                                    var provider = type;
                                    return getContextName$1(provider._context) + ".Provider";
                                case DehydratedFragment:
                                    return "DehydratedFragment";
                                case ForwardRef:
                                    return getWrappedName$1(type, type.render, "ForwardRef");
                                case Fragment:
                                    return "Fragment";
                                case HostComponent:
                                    return type;
                                case HostPortal:
                                    return "Portal";
                                case HostRoot:
                                    return "Root";
                                case HostText:
                                    return "Text";
                                case LazyComponent:
                                    return getComponentNameFromType(type);
                                case Mode:
                                    if (type === REACT_STRICT_MODE_TYPE) {
                                        return "StrictMode";
                                    }
                                    return "Mode";
                                case OffscreenComponent:
                                    return "Offscreen";
                                case Profiler:
                                    return "Profiler";
                                case ScopeComponent:
                                    return "Scope";
                                case SuspenseComponent:
                                    return "Suspense";
                                case SuspenseListComponent:
                                    return "SuspenseList";
                                case TracingMarkerComponent:
                                    return "TracingMarker";
                                case ClassComponent:
                                case FunctionComponent:
                                case IncompleteClassComponent:
                                case IndeterminateComponent:
                                case MemoComponent:
                                case SimpleMemoComponent:
                                    if (typeof type === "function") {
                                        return type.displayName || type.name || null;
                                    }
                                    if (typeof type === "string") {
                                        return type;
                                    }
                                    break;
                            }
                            return null;
                        }
                        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
                        var current = null;
                        var isRendering = false;
                        function getCurrentFiberOwnerNameInDevOrNull() {
                            {
                                if (current === null) {
                                    return null;
                                }
                                var owner = current._debugOwner;
                                if (owner !== null && typeof owner !== "undefined") {
                                    return getComponentNameFromFiber(owner);
                                }
                            }
                            return null;
                        }
                        function getCurrentFiberStackInDev() {
                            {
                                if (current === null) {
                                    return "";
                                }
                                return getStackByFiberInDevAndProd(current);
                            }
                        }
                        function resetCurrentFiber() {
                            {
                                ReactDebugCurrentFrame.getCurrentStack = null;
                                current = null;
                                isRendering = false;
                            }
                        }
                        function setCurrentFiber(fiber) {
                            {
                                ReactDebugCurrentFrame.getCurrentStack = fiber === null ? null : getCurrentFiberStackInDev;
                                current = fiber;
                                isRendering = false;
                            }
                        }
                        function getCurrentFiber() {
                            {
                                return current;
                            }
                        }
                        function setIsRendering(rendering) {
                            {
                                isRendering = rendering;
                            }
                        }
                        function toString(value) {
                            return "" + value;
                        }
                        function getToStringValue(value) {
                            switch (typeof value) {
                                case "boolean":
                                case "number":
                                case "string":
                                case "undefined":
                                    return value;
                                case "object":
                                {
                                    checkFormFieldValueStringCoercion(value);
                                }
                                    return value;
                                default:
                                    return "";
                            }
                        }
                        var hasReadOnlyValue = {
                            button: true,
                            checkbox: true,
                            image: true,
                            hidden: true,
                            radio: true,
                            reset: true,
                            submit: true
                        };
                        function checkControlledValueProps(tagName, props) {
                            {
                                if (!(hasReadOnlyValue[props.type] || props.onChange || props.onInput || props.readOnly || props.disabled || props.value == null)) {
                                    error("You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.");
                                }
                                if (!(props.onChange || props.readOnly || props.disabled || props.checked == null)) {
                                    error("You provided a `checked` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultChecked`. Otherwise, set either `onChange` or `readOnly`.");
                                }
                            }
                        }
                        function isCheckable(elem) {
                            var type = elem.type;
                            var nodeName = elem.nodeName;
                            return nodeName && nodeName.toLowerCase() === "input" && (type === "checkbox" || type === "radio");
                        }
                        function getTracker(node) {
                            return node._valueTracker;
                        }
                        function detachTracker(node) {
                            node._valueTracker = null;
                        }
                        function getValueFromNode(node) {
                            var value = "";
                            if (!node) {
                                return value;
                            }
                            if (isCheckable(node)) {
                                value = node.checked ? "true" : "false";
                            } else {
                                value = node.value;
                            }
                            return value;
                        }
                        function trackValueOnNode(node) {
                            var valueField = isCheckable(node) ? "checked" : "value";
                            var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);
                            {
                                checkFormFieldValueStringCoercion(node[valueField]);
                            }
                            var currentValue = "" + node[valueField];
                            if (node.hasOwnProperty(valueField) || typeof descriptor === "undefined" || typeof descriptor.get !== "function" || typeof descriptor.set !== "function") {
                                return;
                            }
                            var get2 = descriptor.get, set2 = descriptor.set;
                            Object.defineProperty(node, valueField, {
                                configurable: true,
                                get: function() {
                                    return get2.call(this);
                                },
                                set: function(value) {
                                    {
                                        checkFormFieldValueStringCoercion(value);
                                    }
                                    currentValue = "" + value;
                                    set2.call(this, value);
                                }
                            });
                            Object.defineProperty(node, valueField, {
                                enumerable: descriptor.enumerable
                            });
                            var tracker = {
                                getValue: function() {
                                    return currentValue;
                                },
                                setValue: function(value) {
                                    {
                                        checkFormFieldValueStringCoercion(value);
                                    }
                                    currentValue = "" + value;
                                },
                                stopTracking: function() {
                                    detachTracker(node);
                                    delete node[valueField];
                                }
                            };
                            return tracker;
                        }
                        function track(node) {
                            if (getTracker(node)) {
                                return;
                            }
                            node._valueTracker = trackValueOnNode(node);
                        }
                        function updateValueIfChanged(node) {
                            if (!node) {
                                return false;
                            }
                            var tracker = getTracker(node);
                            if (!tracker) {
                                return true;
                            }
                            var lastValue = tracker.getValue();
                            var nextValue = getValueFromNode(node);
                            if (nextValue !== lastValue) {
                                tracker.setValue(nextValue);
                                return true;
                            }
                            return false;
                        }
                        function getActiveElement(doc) {
                            doc = doc || (typeof document !== "undefined" ? document : void 0);
                            if (typeof doc === "undefined") {
                                return null;
                            }
                            try {
                                return doc.activeElement || doc.body;
                            } catch (e) {
                                return doc.body;
                            }
                        }
                        var didWarnValueDefaultValue = false;
                        var didWarnCheckedDefaultChecked = false;
                        var didWarnControlledToUncontrolled = false;
                        var didWarnUncontrolledToControlled = false;
                        function isControlled(props) {
                            var usesChecked = props.type === "checkbox" || props.type === "radio";
                            return usesChecked ? props.checked != null : props.value != null;
                        }
                        function getHostProps(element, props) {
                            var node = element;
                            var checked = props.checked;
                            var hostProps = assign({}, props, {
                                defaultChecked: void 0,
                                defaultValue: void 0,
                                value: void 0,
                                checked: checked != null ? checked : node._wrapperState.initialChecked
                            });
                            return hostProps;
                        }
                        function initWrapperState(element, props) {
                            {
                                checkControlledValueProps("input", props);
                                if (props.checked !== void 0 && props.defaultChecked !== void 0 && !didWarnCheckedDefaultChecked) {
                                    error("%s contains an input of type %s with both checked and defaultChecked props. Input elements must be either controlled or uncontrolled (specify either the checked prop, or the defaultChecked prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || "A component", props.type);
                                    didWarnCheckedDefaultChecked = true;
                                }
                                if (props.value !== void 0 && props.defaultValue !== void 0 && !didWarnValueDefaultValue) {
                                    error("%s contains an input of type %s with both value and defaultValue props. Input elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled input element and remove one of these props. More info: https://reactjs.org/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || "A component", props.type);
                                    didWarnValueDefaultValue = true;
                                }
                            }
                            var node = element;
                            var defaultValue = props.defaultValue == null ? "" : props.defaultValue;
                            node._wrapperState = {
                                initialChecked: props.checked != null ? props.checked : props.defaultChecked,
                                initialValue: getToStringValue(props.value != null ? props.value : defaultValue),
                                controlled: isControlled(props)
                            };
                        }
                        function updateChecked(element, props) {
                            var node = element;
                            var checked = props.checked;
                            if (checked != null) {
                                setValueForProperty(node, "checked", checked, false);
                            }
                        }
                        function updateWrapper(element, props) {
                            var node = element;
                            {
                                var controlled = isControlled(props);
                                if (!node._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
                                    error("A component is changing an uncontrolled input to be controlled. This is likely caused by the value changing from undefined to a defined value, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components");
                                    didWarnUncontrolledToControlled = true;
                                }
                                if (node._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
                                    error("A component is changing a controlled input to be uncontrolled. This is likely caused by the value changing from a defined to undefined, which should not happen. Decide between using a controlled or uncontrolled input element for the lifetime of the component. More info: https://reactjs.org/link/controlled-components");
                                    didWarnControlledToUncontrolled = true;
                                }
                            }
                            updateChecked(element, props);
                            var value = getToStringValue(props.value);
                            var type = props.type;
                            if (value != null) {
                                if (type === "number") {
                                    if (value === 0 && node.value === "" || // We explicitly want to coerce to number here if possible.
                                        // eslint-disable-next-line
                                        node.value != value) {
                                        node.value = toString(value);
                                    }
                                } else if (node.value !== toString(value)) {
                                    node.value = toString(value);
                                }
                            } else if (type === "submit" || type === "reset") {
                                node.removeAttribute("value");
                                return;
                            }
                            {
                                if (props.hasOwnProperty("value")) {
                                    setDefaultValue(node, props.type, value);
                                } else if (props.hasOwnProperty("defaultValue")) {
                                    setDefaultValue(node, props.type, getToStringValue(props.defaultValue));
                                }
                            }
                            {
                                if (props.checked == null && props.defaultChecked != null) {
                                    node.defaultChecked = !!props.defaultChecked;
                                }
                            }
                        }
                        function postMountWrapper(element, props, isHydrating2) {
                            var node = element;
                            if (props.hasOwnProperty("value") || props.hasOwnProperty("defaultValue")) {
                                var type = props.type;
                                var isButton = type === "submit" || type === "reset";
                                if (isButton && (props.value === void 0 || props.value === null)) {
                                    return;
                                }
                                var initialValue = toString(node._wrapperState.initialValue);
                                if (!isHydrating2) {
                                    {
                                        if (initialValue !== node.value) {
                                            node.value = initialValue;
                                        }
                                    }
                                }
                                {
                                    node.defaultValue = initialValue;
                                }
                            }
                            var name = node.name;
                            if (name !== "") {
                                node.name = "";
                            }
                            {
                                node.defaultChecked = !node.defaultChecked;
                                node.defaultChecked = !!node._wrapperState.initialChecked;
                            }
                            if (name !== "") {
                                node.name = name;
                            }
                        }
                        function restoreControlledState(element, props) {
                            var node = element;
                            updateWrapper(node, props);
                            updateNamedCousins(node, props);
                        }
                        function updateNamedCousins(rootNode, props) {
                            var name = props.name;
                            if (props.type === "radio" && name != null) {
                                var queryRoot = rootNode;
                                while (queryRoot.parentNode) {
                                    queryRoot = queryRoot.parentNode;
                                }
                                {
                                    checkAttributeStringCoercion(name, "name");
                                }
                                var group = queryRoot.querySelectorAll("input[name=" + JSON.stringify("" + name) + '][type="radio"]');
                                for (var i = 0; i < group.length; i++) {
                                    var otherNode = group[i];
                                    if (otherNode === rootNode || otherNode.form !== rootNode.form) {
                                        continue;
                                    }
                                    var otherProps = getFiberCurrentPropsFromNode(otherNode);
                                    if (!otherProps) {
                                        throw new Error("ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.");
                                    }
                                    updateValueIfChanged(otherNode);
                                    updateWrapper(otherNode, otherProps);
                                }
                            }
                        }
                        function setDefaultValue(node, type, value) {
                            if (
                                // Focused number inputs synchronize on blur. See ChangeEventPlugin.js
                                type !== "number" || getActiveElement(node.ownerDocument) !== node
                            ) {
                                if (value == null) {
                                    node.defaultValue = toString(node._wrapperState.initialValue);
                                } else if (node.defaultValue !== toString(value)) {
                                    node.defaultValue = toString(value);
                                }
                            }
                        }
                        var didWarnSelectedSetOnOption = false;
                        var didWarnInvalidChild = false;
                        var didWarnInvalidInnerHTML = false;
                        function validateProps(element, props) {
                            {
                                if (props.value == null) {
                                    if (typeof props.children === "object" && props.children !== null) {
                                        React2.Children.forEach(props.children, function(child) {
                                            if (child == null) {
                                                return;
                                            }
                                            if (typeof child === "string" || typeof child === "number") {
                                                return;
                                            }
                                            if (!didWarnInvalidChild) {
                                                didWarnInvalidChild = true;
                                                error("Cannot infer the option value of complex children. Pass a `value` prop or use a plain string as children to <option>.");
                                            }
                                        });
                                    } else if (props.dangerouslySetInnerHTML != null) {
                                        if (!didWarnInvalidInnerHTML) {
                                            didWarnInvalidInnerHTML = true;
                                            error("Pass a `value` prop if you set dangerouslyInnerHTML so React knows which value should be selected.");
                                        }
                                    }
                                }
                                if (props.selected != null && !didWarnSelectedSetOnOption) {
                                    error("Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>.");
                                    didWarnSelectedSetOnOption = true;
                                }
                            }
                        }
                        function postMountWrapper$1(element, props) {
                            if (props.value != null) {
                                element.setAttribute("value", toString(getToStringValue(props.value)));
                            }
                        }
                        var isArrayImpl = Array.isArray;
                        function isArray(a) {
                            return isArrayImpl(a);
                        }
                        var didWarnValueDefaultValue$1;
                        {
                            didWarnValueDefaultValue$1 = false;
                        }
                        function getDeclarationErrorAddendum() {
                            var ownerName = getCurrentFiberOwnerNameInDevOrNull();
                            if (ownerName) {
                                return "\n\nCheck the render method of `" + ownerName + "`.";
                            }
                            return "";
                        }
                        var valuePropNames = ["value", "defaultValue"];
                        function checkSelectPropTypes(props) {
                            {
                                checkControlledValueProps("select", props);
                                for (var i = 0; i < valuePropNames.length; i++) {
                                    var propName = valuePropNames[i];
                                    if (props[propName] == null) {
                                        continue;
                                    }
                                    var propNameIsArray = isArray(props[propName]);
                                    if (props.multiple && !propNameIsArray) {
                                        error("The `%s` prop supplied to <select> must be an array if `multiple` is true.%s", propName, getDeclarationErrorAddendum());
                                    } else if (!props.multiple && propNameIsArray) {
                                        error("The `%s` prop supplied to <select> must be a scalar value if `multiple` is false.%s", propName, getDeclarationErrorAddendum());
                                    }
                                }
                            }
                        }
                        function updateOptions(node, multiple, propValue, setDefaultSelected) {
                            var options2 = node.options;
                            if (multiple) {
                                var selectedValues = propValue;
                                var selectedValue = {};
                                for (var i = 0; i < selectedValues.length; i++) {
                                    selectedValue["$" + selectedValues[i]] = true;
                                }
                                for (var _i = 0; _i < options2.length; _i++) {
                                    var selected = selectedValue.hasOwnProperty("$" + options2[_i].value);
                                    if (options2[_i].selected !== selected) {
                                        options2[_i].selected = selected;
                                    }
                                    if (selected && setDefaultSelected) {
                                        options2[_i].defaultSelected = true;
                                    }
                                }
                            } else {
                                var _selectedValue = toString(getToStringValue(propValue));
                                var defaultSelected = null;
                                for (var _i2 = 0; _i2 < options2.length; _i2++) {
                                    if (options2[_i2].value === _selectedValue) {
                                        options2[_i2].selected = true;
                                        if (setDefaultSelected) {
                                            options2[_i2].defaultSelected = true;
                                        }
                                        return;
                                    }
                                    if (defaultSelected === null && !options2[_i2].disabled) {
                                        defaultSelected = options2[_i2];
                                    }
                                }
                                if (defaultSelected !== null) {
                                    defaultSelected.selected = true;
                                }
                            }
                        }
                        function getHostProps$1(element, props) {
                            return assign({}, props, {
                                value: void 0
                            });
                        }
                        function initWrapperState$1(element, props) {
                            var node = element;
                            {
                                checkSelectPropTypes(props);
                            }
                            node._wrapperState = {
                                wasMultiple: !!props.multiple
                            };
                            {
                                if (props.value !== void 0 && props.defaultValue !== void 0 && !didWarnValueDefaultValue$1) {
                                    error("Select elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled select element and remove one of these props. More info: https://reactjs.org/link/controlled-components");
                                    didWarnValueDefaultValue$1 = true;
                                }
                            }
                        }
                        function postMountWrapper$2(element, props) {
                            var node = element;
                            node.multiple = !!props.multiple;
                            var value = props.value;
                            if (value != null) {
                                updateOptions(node, !!props.multiple, value, false);
                            } else if (props.defaultValue != null) {
                                updateOptions(node, !!props.multiple, props.defaultValue, true);
                            }
                        }
                        function postUpdateWrapper(element, props) {
                            var node = element;
                            var wasMultiple = node._wrapperState.wasMultiple;
                            node._wrapperState.wasMultiple = !!props.multiple;
                            var value = props.value;
                            if (value != null) {
                                updateOptions(node, !!props.multiple, value, false);
                            } else if (wasMultiple !== !!props.multiple) {
                                if (props.defaultValue != null) {
                                    updateOptions(node, !!props.multiple, props.defaultValue, true);
                                } else {
                                    updateOptions(node, !!props.multiple, props.multiple ? [] : "", false);
                                }
                            }
                        }
                        function restoreControlledState$1(element, props) {
                            var node = element;
                            var value = props.value;
                            if (value != null) {
                                updateOptions(node, !!props.multiple, value, false);
                            }
                        }
                        var didWarnValDefaultVal = false;
                        function getHostProps$2(element, props) {
                            var node = element;
                            if (props.dangerouslySetInnerHTML != null) {
                                throw new Error("`dangerouslySetInnerHTML` does not make sense on <textarea>.");
                            }
                            var hostProps = assign({}, props, {
                                value: void 0,
                                defaultValue: void 0,
                                children: toString(node._wrapperState.initialValue)
                            });
                            return hostProps;
                        }
                        function initWrapperState$2(element, props) {
                            var node = element;
                            {
                                checkControlledValueProps("textarea", props);
                                if (props.value !== void 0 && props.defaultValue !== void 0 && !didWarnValDefaultVal) {
                                    error("%s contains a textarea with both value and defaultValue props. Textarea elements must be either controlled or uncontrolled (specify either the value prop, or the defaultValue prop, but not both). Decide between using a controlled or uncontrolled textarea and remove one of these props. More info: https://reactjs.org/link/controlled-components", getCurrentFiberOwnerNameInDevOrNull() || "A component");
                                    didWarnValDefaultVal = true;
                                }
                            }
                            var initialValue = props.value;
                            if (initialValue == null) {
                                var children = props.children, defaultValue = props.defaultValue;
                                if (children != null) {
                                    {
                                        error("Use the `defaultValue` or `value` props instead of setting children on <textarea>.");
                                    }
                                    {
                                        if (defaultValue != null) {
                                            throw new Error("If you supply `defaultValue` on a <textarea>, do not pass children.");
                                        }
                                        if (isArray(children)) {
                                            if (children.length > 1) {
                                                throw new Error("<textarea> can only have at most one child.");
                                            }
                                            children = children[0];
                                        }
                                        defaultValue = children;
                                    }
                                }
                                if (defaultValue == null) {
                                    defaultValue = "";
                                }
                                initialValue = defaultValue;
                            }
                            node._wrapperState = {
                                initialValue: getToStringValue(initialValue)
                            };
                        }
                        function updateWrapper$1(element, props) {
                            var node = element;
                            var value = getToStringValue(props.value);
                            var defaultValue = getToStringValue(props.defaultValue);
                            if (value != null) {
                                var newValue = toString(value);
                                if (newValue !== node.value) {
                                    node.value = newValue;
                                }
                                if (props.defaultValue == null && node.defaultValue !== newValue) {
                                    node.defaultValue = newValue;
                                }
                            }
                            if (defaultValue != null) {
                                node.defaultValue = toString(defaultValue);
                            }
                        }
                        function postMountWrapper$3(element, props) {
                            var node = element;
                            var textContent = node.textContent;
                            if (textContent === node._wrapperState.initialValue) {
                                if (textContent !== "" && textContent !== null) {
                                    node.value = textContent;
                                }
                            }
                        }
                        function restoreControlledState$2(element, props) {
                            updateWrapper$1(element, props);
                        }
                        var HTML_NAMESPACE = "http://www.w3.org/1999/xhtml";
                        var MATH_NAMESPACE = "http://www.w3.org/1998/Math/MathML";
                        var SVG_NAMESPACE = "http://www.w3.org/2000/svg";
                        function getIntrinsicNamespace(type) {
                            switch (type) {
                                case "svg":
                                    return SVG_NAMESPACE;
                                case "math":
                                    return MATH_NAMESPACE;
                                default:
                                    return HTML_NAMESPACE;
                            }
                        }
                        function getChildNamespace(parentNamespace, type) {
                            if (parentNamespace == null || parentNamespace === HTML_NAMESPACE) {
                                return getIntrinsicNamespace(type);
                            }
                            if (parentNamespace === SVG_NAMESPACE && type === "foreignObject") {
                                return HTML_NAMESPACE;
                            }
                            return parentNamespace;
                        }
                        var createMicrosoftUnsafeLocalFunction = function(func) {
                            if (typeof MSApp !== "undefined" && MSApp.execUnsafeLocalFunction) {
                                return function(arg0, arg1, arg2, arg3) {
                                    MSApp.execUnsafeLocalFunction(function() {
                                        return func(arg0, arg1, arg2, arg3);
                                    });
                                };
                            } else {
                                return func;
                            }
                        };
                        var reusableSVGContainer;
                        var setInnerHTML = createMicrosoftUnsafeLocalFunction(function(node, html) {
                            if (node.namespaceURI === SVG_NAMESPACE) {
                                if (!("innerHTML" in node)) {
                                    reusableSVGContainer = reusableSVGContainer || document.createElement("div");
                                    reusableSVGContainer.innerHTML = "<svg>" + html.valueOf().toString() + "</svg>";
                                    var svgNode = reusableSVGContainer.firstChild;
                                    while (node.firstChild) {
                                        node.removeChild(node.firstChild);
                                    }
                                    while (svgNode.firstChild) {
                                        node.appendChild(svgNode.firstChild);
                                    }
                                    return;
                                }
                            }
                            node.innerHTML = html;
                        });
                        var ELEMENT_NODE = 1;
                        var TEXT_NODE = 3;
                        var COMMENT_NODE = 8;
                        var DOCUMENT_NODE = 9;
                        var DOCUMENT_FRAGMENT_NODE = 11;
                        var setTextContent = function(node, text) {
                            if (text) {
                                var firstChild = node.firstChild;
                                if (firstChild && firstChild === node.lastChild && firstChild.nodeType === TEXT_NODE) {
                                    firstChild.nodeValue = text;
                                    return;
                                }
                            }
                            node.textContent = text;
                        };
                        var shorthandToLonghand = {
                            animation: ["animationDelay", "animationDirection", "animationDuration", "animationFillMode", "animationIterationCount", "animationName", "animationPlayState", "animationTimingFunction"],
                            background: ["backgroundAttachment", "backgroundClip", "backgroundColor", "backgroundImage", "backgroundOrigin", "backgroundPositionX", "backgroundPositionY", "backgroundRepeat", "backgroundSize"],
                            backgroundPosition: ["backgroundPositionX", "backgroundPositionY"],
                            border: ["borderBottomColor", "borderBottomStyle", "borderBottomWidth", "borderImageOutset", "borderImageRepeat", "borderImageSlice", "borderImageSource", "borderImageWidth", "borderLeftColor", "borderLeftStyle", "borderLeftWidth", "borderRightColor", "borderRightStyle", "borderRightWidth", "borderTopColor", "borderTopStyle", "borderTopWidth"],
                            borderBlockEnd: ["borderBlockEndColor", "borderBlockEndStyle", "borderBlockEndWidth"],
                            borderBlockStart: ["borderBlockStartColor", "borderBlockStartStyle", "borderBlockStartWidth"],
                            borderBottom: ["borderBottomColor", "borderBottomStyle", "borderBottomWidth"],
                            borderColor: ["borderBottomColor", "borderLeftColor", "borderRightColor", "borderTopColor"],
                            borderImage: ["borderImageOutset", "borderImageRepeat", "borderImageSlice", "borderImageSource", "borderImageWidth"],
                            borderInlineEnd: ["borderInlineEndColor", "borderInlineEndStyle", "borderInlineEndWidth"],
                            borderInlineStart: ["borderInlineStartColor", "borderInlineStartStyle", "borderInlineStartWidth"],
                            borderLeft: ["borderLeftColor", "borderLeftStyle", "borderLeftWidth"],
                            borderRadius: ["borderBottomLeftRadius", "borderBottomRightRadius", "borderTopLeftRadius", "borderTopRightRadius"],
                            borderRight: ["borderRightColor", "borderRightStyle", "borderRightWidth"],
                            borderStyle: ["borderBottomStyle", "borderLeftStyle", "borderRightStyle", "borderTopStyle"],
                            borderTop: ["borderTopColor", "borderTopStyle", "borderTopWidth"],
                            borderWidth: ["borderBottomWidth", "borderLeftWidth", "borderRightWidth", "borderTopWidth"],
                            columnRule: ["columnRuleColor", "columnRuleStyle", "columnRuleWidth"],
                            columns: ["columnCount", "columnWidth"],
                            flex: ["flexBasis", "flexGrow", "flexShrink"],
                            flexFlow: ["flexDirection", "flexWrap"],
                            font: ["fontFamily", "fontFeatureSettings", "fontKerning", "fontLanguageOverride", "fontSize", "fontSizeAdjust", "fontStretch", "fontStyle", "fontVariant", "fontVariantAlternates", "fontVariantCaps", "fontVariantEastAsian", "fontVariantLigatures", "fontVariantNumeric", "fontVariantPosition", "fontWeight", "lineHeight"],
                            fontVariant: ["fontVariantAlternates", "fontVariantCaps", "fontVariantEastAsian", "fontVariantLigatures", "fontVariantNumeric", "fontVariantPosition"],
                            gap: ["columnGap", "rowGap"],
                            grid: ["gridAutoColumns", "gridAutoFlow", "gridAutoRows", "gridTemplateAreas", "gridTemplateColumns", "gridTemplateRows"],
                            gridArea: ["gridColumnEnd", "gridColumnStart", "gridRowEnd", "gridRowStart"],
                            gridColumn: ["gridColumnEnd", "gridColumnStart"],
                            gridColumnGap: ["columnGap"],
                            gridGap: ["columnGap", "rowGap"],
                            gridRow: ["gridRowEnd", "gridRowStart"],
                            gridRowGap: ["rowGap"],
                            gridTemplate: ["gridTemplateAreas", "gridTemplateColumns", "gridTemplateRows"],
                            listStyle: ["listStyleImage", "listStylePosition", "listStyleType"],
                            margin: ["marginBottom", "marginLeft", "marginRight", "marginTop"],
                            marker: ["markerEnd", "markerMid", "markerStart"],
                            mask: ["maskClip", "maskComposite", "maskImage", "maskMode", "maskOrigin", "maskPositionX", "maskPositionY", "maskRepeat", "maskSize"],
                            maskPosition: ["maskPositionX", "maskPositionY"],
                            outline: ["outlineColor", "outlineStyle", "outlineWidth"],
                            overflow: ["overflowX", "overflowY"],
                            padding: ["paddingBottom", "paddingLeft", "paddingRight", "paddingTop"],
                            placeContent: ["alignContent", "justifyContent"],
                            placeItems: ["alignItems", "justifyItems"],
                            placeSelf: ["alignSelf", "justifySelf"],
                            textDecoration: ["textDecorationColor", "textDecorationLine", "textDecorationStyle"],
                            textEmphasis: ["textEmphasisColor", "textEmphasisStyle"],
                            transition: ["transitionDelay", "transitionDuration", "transitionProperty", "transitionTimingFunction"],
                            wordWrap: ["overflowWrap"]
                        };
                        var isUnitlessNumber = {
                            animationIterationCount: true,
                            aspectRatio: true,
                            borderImageOutset: true,
                            borderImageSlice: true,
                            borderImageWidth: true,
                            boxFlex: true,
                            boxFlexGroup: true,
                            boxOrdinalGroup: true,
                            columnCount: true,
                            columns: true,
                            flex: true,
                            flexGrow: true,
                            flexPositive: true,
                            flexShrink: true,
                            flexNegative: true,
                            flexOrder: true,
                            gridArea: true,
                            gridRow: true,
                            gridRowEnd: true,
                            gridRowSpan: true,
                            gridRowStart: true,
                            gridColumn: true,
                            gridColumnEnd: true,
                            gridColumnSpan: true,
                            gridColumnStart: true,
                            fontWeight: true,
                            lineClamp: true,
                            lineHeight: true,
                            opacity: true,
                            order: true,
                            orphans: true,
                            tabSize: true,
                            widows: true,
                            zIndex: true,
                            zoom: true,
                            // SVG-related properties
                            fillOpacity: true,
                            floodOpacity: true,
                            stopOpacity: true,
                            strokeDasharray: true,
                            strokeDashoffset: true,
                            strokeMiterlimit: true,
                            strokeOpacity: true,
                            strokeWidth: true
                        };
                        function prefixKey(prefix2, key) {
                            return prefix2 + key.charAt(0).toUpperCase() + key.substring(1);
                        }
                        var prefixes = ["Webkit", "ms", "Moz", "O"];
                        Object.keys(isUnitlessNumber).forEach(function(prop) {
                            prefixes.forEach(function(prefix2) {
                                isUnitlessNumber[prefixKey(prefix2, prop)] = isUnitlessNumber[prop];
                            });
                        });
                        function dangerousStyleValue(name, value, isCustomProperty) {
                            var isEmpty = value == null || typeof value === "boolean" || value === "";
                            if (isEmpty) {
                                return "";
                            }
                            if (!isCustomProperty && typeof value === "number" && value !== 0 && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) {
                                return value + "px";
                            }
                            {
                                checkCSSPropertyStringCoercion(value, name);
                            }
                            return ("" + value).trim();
                        }
                        var uppercasePattern = /([A-Z])/g;
                        var msPattern = /^ms-/;
                        function hyphenateStyleName(name) {
                            return name.replace(uppercasePattern, "-$1").toLowerCase().replace(msPattern, "-ms-");
                        }
                        var warnValidStyle = function() {
                        };
                        {
                            var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
                            var msPattern$1 = /^-ms-/;
                            var hyphenPattern = /-(.)/g;
                            var badStyleValueWithSemicolonPattern = /;\s*$/;
                            var warnedStyleNames = {};
                            var warnedStyleValues = {};
                            var warnedForNaNValue = false;
                            var warnedForInfinityValue = false;
                            var camelize = function(string) {
                                return string.replace(hyphenPattern, function(_, character) {
                                    return character.toUpperCase();
                                });
                            };
                            var warnHyphenatedStyleName = function(name) {
                                if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
                                    return;
                                }
                                warnedStyleNames[name] = true;
                                error(
                                    "Unsupported style property %s. Did you mean %s?",
                                    name,
                                    // As Andi Smith suggests
                                    // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
                                    // is converted to lowercase `ms`.
                                    camelize(name.replace(msPattern$1, "ms-"))
                                );
                            };
                            var warnBadVendoredStyleName = function(name) {
                                if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
                                    return;
                                }
                                warnedStyleNames[name] = true;
                                error("Unsupported vendor-prefixed style property %s. Did you mean %s?", name, name.charAt(0).toUpperCase() + name.slice(1));
                            };
                            var warnStyleValueWithSemicolon = function(name, value) {
                                if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
                                    return;
                                }
                                warnedStyleValues[value] = true;
                                error(`Style property values shouldn't contain a semicolon. Try "%s: %s" instead.`, name, value.replace(badStyleValueWithSemicolonPattern, ""));
                            };
                            var warnStyleValueIsNaN = function(name, value) {
                                if (warnedForNaNValue) {
                                    return;
                                }
                                warnedForNaNValue = true;
                                error("`NaN` is an invalid value for the `%s` css style property.", name);
                            };
                            var warnStyleValueIsInfinity = function(name, value) {
                                if (warnedForInfinityValue) {
                                    return;
                                }
                                warnedForInfinityValue = true;
                                error("`Infinity` is an invalid value for the `%s` css style property.", name);
                            };
                            warnValidStyle = function(name, value) {
                                if (name.indexOf("-") > -1) {
                                    warnHyphenatedStyleName(name);
                                } else if (badVendoredStyleNamePattern.test(name)) {
                                    warnBadVendoredStyleName(name);
                                } else if (badStyleValueWithSemicolonPattern.test(value)) {
                                    warnStyleValueWithSemicolon(name, value);
                                }
                                if (typeof value === "number") {
                                    if (isNaN(value)) {
                                        warnStyleValueIsNaN(name, value);
                                    } else if (!isFinite(value)) {
                                        warnStyleValueIsInfinity(name, value);
                                    }
                                }
                            };
                        }
                        var warnValidStyle$1 = warnValidStyle;
                        function createDangerousStringForStyles(styles) {
                            {
                                var serialized = "";
                                var delimiter = "";
                                for (var styleName in styles) {
                                    if (!styles.hasOwnProperty(styleName)) {
                                        continue;
                                    }
                                    var styleValue = styles[styleName];
                                    if (styleValue != null) {
                                        var isCustomProperty = styleName.indexOf("--") === 0;
                                        serialized += delimiter + (isCustomProperty ? styleName : hyphenateStyleName(styleName)) + ":";
                                        serialized += dangerousStyleValue(styleName, styleValue, isCustomProperty);
                                        delimiter = ";";
                                    }
                                }
                                return serialized || null;
                            }
                        }
                        function setValueForStyles(node, styles) {
                            var style2 = node.style;
                            for (var styleName in styles) {
                                if (!styles.hasOwnProperty(styleName)) {
                                    continue;
                                }
                                var isCustomProperty = styleName.indexOf("--") === 0;
                                {
                                    if (!isCustomProperty) {
                                        warnValidStyle$1(styleName, styles[styleName]);
                                    }
                                }
                                var styleValue = dangerousStyleValue(styleName, styles[styleName], isCustomProperty);
                                if (styleName === "float") {
                                    styleName = "cssFloat";
                                }
                                if (isCustomProperty) {
                                    style2.setProperty(styleName, styleValue);
                                } else {
                                    style2[styleName] = styleValue;
                                }
                            }
                        }
                        function isValueEmpty(value) {
                            return value == null || typeof value === "boolean" || value === "";
                        }
                        function expandShorthandMap(styles) {
                            var expanded = {};
                            for (var key in styles) {
                                var longhands = shorthandToLonghand[key] || [key];
                                for (var i = 0; i < longhands.length; i++) {
                                    expanded[longhands[i]] = key;
                                }
                            }
                            return expanded;
                        }
                        function validateShorthandPropertyCollisionInDev(styleUpdates, nextStyles) {
                            {
                                if (!nextStyles) {
                                    return;
                                }
                                var expandedUpdates = expandShorthandMap(styleUpdates);
                                var expandedStyles = expandShorthandMap(nextStyles);
                                var warnedAbout = {};
                                for (var key in expandedUpdates) {
                                    var originalKey = expandedUpdates[key];
                                    var correctOriginalKey = expandedStyles[key];
                                    if (correctOriginalKey && originalKey !== correctOriginalKey) {
                                        var warningKey = originalKey + "," + correctOriginalKey;
                                        if (warnedAbout[warningKey]) {
                                            continue;
                                        }
                                        warnedAbout[warningKey] = true;
                                        error("%s a style property during rerender (%s) when a conflicting property is set (%s) can lead to styling bugs. To avoid this, don't mix shorthand and non-shorthand properties for the same value; instead, replace the shorthand with separate values.", isValueEmpty(styleUpdates[originalKey]) ? "Removing" : "Updating", originalKey, correctOriginalKey);
                                    }
                                }
                            }
                        }
                        var omittedCloseTags = {
                            area: true,
                            base: true,
                            br: true,
                            col: true,
                            embed: true,
                            hr: true,
                            img: true,
                            input: true,
                            keygen: true,
                            link: true,
                            meta: true,
                            param: true,
                            source: true,
                            track: true,
                            wbr: true
                            // NOTE: menuitem's close tag should be omitted, but that causes problems.
                        };
                        var voidElementTags = assign({
                            menuitem: true
                        }, omittedCloseTags);
                        var HTML = "__html";
                        function assertValidProps(tag, props) {
                            if (!props) {
                                return;
                            }
                            if (voidElementTags[tag]) {
                                if (props.children != null || props.dangerouslySetInnerHTML != null) {
                                    throw new Error(tag + " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`.");
                                }
                            }
                            if (props.dangerouslySetInnerHTML != null) {
                                if (props.children != null) {
                                    throw new Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
                                }
                                if (typeof props.dangerouslySetInnerHTML !== "object" || !(HTML in props.dangerouslySetInnerHTML)) {
                                    throw new Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://reactjs.org/link/dangerously-set-inner-html for more information.");
                                }
                            }
                            {
                                if (!props.suppressContentEditableWarning && props.contentEditable && props.children != null) {
                                    error("A component is `contentEditable` and contains `children` managed by React. It is now your responsibility to guarantee that none of those nodes are unexpectedly modified or duplicated. This is probably not intentional.");
                                }
                            }
                            if (props.style != null && typeof props.style !== "object") {
                                throw new Error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.");
                            }
                        }
                        function isCustomComponent(tagName, props) {
                            if (tagName.indexOf("-") === -1) {
                                return typeof props.is === "string";
                            }
                            switch (tagName) {
                                case "annotation-xml":
                                case "color-profile":
                                case "font-face":
                                case "font-face-src":
                                case "font-face-uri":
                                case "font-face-format":
                                case "font-face-name":
                                case "missing-glyph":
                                    return false;
                                default:
                                    return true;
                            }
                        }
                        var possibleStandardNames = {
                            // HTML
                            accept: "accept",
                            acceptcharset: "acceptCharset",
                            "accept-charset": "acceptCharset",
                            accesskey: "accessKey",
                            action: "action",
                            allowfullscreen: "allowFullScreen",
                            alt: "alt",
                            as: "as",
                            async: "async",
                            autocapitalize: "autoCapitalize",
                            autocomplete: "autoComplete",
                            autocorrect: "autoCorrect",
                            autofocus: "autoFocus",
                            autoplay: "autoPlay",
                            autosave: "autoSave",
                            capture: "capture",
                            cellpadding: "cellPadding",
                            cellspacing: "cellSpacing",
                            challenge: "challenge",
                            charset: "charSet",
                            checked: "checked",
                            children: "children",
                            cite: "cite",
                            class: "className",
                            classid: "classID",
                            classname: "className",
                            cols: "cols",
                            colspan: "colSpan",
                            content: "content",
                            contenteditable: "contentEditable",
                            contextmenu: "contextMenu",
                            controls: "controls",
                            controlslist: "controlsList",
                            coords: "coords",
                            crossorigin: "crossOrigin",
                            dangerouslysetinnerhtml: "dangerouslySetInnerHTML",
                            data: "data",
                            datetime: "dateTime",
                            default: "default",
                            defaultchecked: "defaultChecked",
                            defaultvalue: "defaultValue",
                            defer: "defer",
                            dir: "dir",
                            disabled: "disabled",
                            disablepictureinpicture: "disablePictureInPicture",
                            disableremoteplayback: "disableRemotePlayback",
                            download: "download",
                            draggable: "draggable",
                            enctype: "encType",
                            enterkeyhint: "enterKeyHint",
                            for: "htmlFor",
                            form: "form",
                            formmethod: "formMethod",
                            formaction: "formAction",
                            formenctype: "formEncType",
                            formnovalidate: "formNoValidate",
                            formtarget: "formTarget",
                            frameborder: "frameBorder",
                            headers: "headers",
                            height: "height",
                            hidden: "hidden",
                            high: "high",
                            href: "href",
                            hreflang: "hrefLang",
                            htmlfor: "htmlFor",
                            httpequiv: "httpEquiv",
                            "http-equiv": "httpEquiv",
                            icon: "icon",
                            id: "id",
                            imagesizes: "imageSizes",
                            imagesrcset: "imageSrcSet",
                            innerhtml: "innerHTML",
                            inputmode: "inputMode",
                            integrity: "integrity",
                            is: "is",
                            itemid: "itemID",
                            itemprop: "itemProp",
                            itemref: "itemRef",
                            itemscope: "itemScope",
                            itemtype: "itemType",
                            keyparams: "keyParams",
                            keytype: "keyType",
                            kind: "kind",
                            label: "label",
                            lang: "lang",
                            list: "list",
                            loop: "loop",
                            low: "low",
                            manifest: "manifest",
                            marginwidth: "marginWidth",
                            marginheight: "marginHeight",
                            max: "max",
                            maxlength: "maxLength",
                            media: "media",
                            mediagroup: "mediaGroup",
                            method: "method",
                            min: "min",
                            minlength: "minLength",
                            multiple: "multiple",
                            muted: "muted",
                            name: "name",
                            nomodule: "noModule",
                            nonce: "nonce",
                            novalidate: "noValidate",
                            open: "open",
                            optimum: "optimum",
                            pattern: "pattern",
                            placeholder: "placeholder",
                            playsinline: "playsInline",
                            poster: "poster",
                            preload: "preload",
                            profile: "profile",
                            radiogroup: "radioGroup",
                            readonly: "readOnly",
                            referrerpolicy: "referrerPolicy",
                            rel: "rel",
                            required: "required",
                            reversed: "reversed",
                            role: "role",
                            rows: "rows",
                            rowspan: "rowSpan",
                            sandbox: "sandbox",
                            scope: "scope",
                            scoped: "scoped",
                            scrolling: "scrolling",
                            seamless: "seamless",
                            selected: "selected",
                            shape: "shape",
                            size: "size",
                            sizes: "sizes",
                            span: "span",
                            spellcheck: "spellCheck",
                            src: "src",
                            srcdoc: "srcDoc",
                            srclang: "srcLang",
                            srcset: "srcSet",
                            start: "start",
                            step: "step",
                            style: "style",
                            summary: "summary",
                            tabindex: "tabIndex",
                            target: "target",
                            title: "title",
                            type: "type",
                            usemap: "useMap",
                            value: "value",
                            width: "width",
                            wmode: "wmode",
                            wrap: "wrap",
                            // SVG
                            about: "about",
                            accentheight: "accentHeight",
                            "accent-height": "accentHeight",
                            accumulate: "accumulate",
                            additive: "additive",
                            alignmentbaseline: "alignmentBaseline",
                            "alignment-baseline": "alignmentBaseline",
                            allowreorder: "allowReorder",
                            alphabetic: "alphabetic",
                            amplitude: "amplitude",
                            arabicform: "arabicForm",
                            "arabic-form": "arabicForm",
                            ascent: "ascent",
                            attributename: "attributeName",
                            attributetype: "attributeType",
                            autoreverse: "autoReverse",
                            azimuth: "azimuth",
                            basefrequency: "baseFrequency",
                            baselineshift: "baselineShift",
                            "baseline-shift": "baselineShift",
                            baseprofile: "baseProfile",
                            bbox: "bbox",
                            begin: "begin",
                            bias: "bias",
                            by: "by",
                            calcmode: "calcMode",
                            capheight: "capHeight",
                            "cap-height": "capHeight",
                            clip: "clip",
                            clippath: "clipPath",
                            "clip-path": "clipPath",
                            clippathunits: "clipPathUnits",
                            cliprule: "clipRule",
                            "clip-rule": "clipRule",
                            color: "color",
                            colorinterpolation: "colorInterpolation",
                            "color-interpolation": "colorInterpolation",
                            colorinterpolationfilters: "colorInterpolationFilters",
                            "color-interpolation-filters": "colorInterpolationFilters",
                            colorprofile: "colorProfile",
                            "color-profile": "colorProfile",
                            colorrendering: "colorRendering",
                            "color-rendering": "colorRendering",
                            contentscripttype: "contentScriptType",
                            contentstyletype: "contentStyleType",
                            cursor: "cursor",
                            cx: "cx",
                            cy: "cy",
                            d: "d",
                            datatype: "datatype",
                            decelerate: "decelerate",
                            descent: "descent",
                            diffuseconstant: "diffuseConstant",
                            direction: "direction",
                            display: "display",
                            divisor: "divisor",
                            dominantbaseline: "dominantBaseline",
                            "dominant-baseline": "dominantBaseline",
                            dur: "dur",
                            dx: "dx",
                            dy: "dy",
                            edgemode: "edgeMode",
                            elevation: "elevation",
                            enablebackground: "enableBackground",
                            "enable-background": "enableBackground",
                            end: "end",
                            exponent: "exponent",
                            externalresourcesrequired: "externalResourcesRequired",
                            fill: "fill",
                            fillopacity: "fillOpacity",
                            "fill-opacity": "fillOpacity",
                            fillrule: "fillRule",
                            "fill-rule": "fillRule",
                            filter: "filter",
                            filterres: "filterRes",
                            filterunits: "filterUnits",
                            floodopacity: "floodOpacity",
                            "flood-opacity": "floodOpacity",
                            floodcolor: "floodColor",
                            "flood-color": "floodColor",
                            focusable: "focusable",
                            fontfamily: "fontFamily",
                            "font-family": "fontFamily",
                            fontsize: "fontSize",
                            "font-size": "fontSize",
                            fontsizeadjust: "fontSizeAdjust",
                            "font-size-adjust": "fontSizeAdjust",
                            fontstretch: "fontStretch",
                            "font-stretch": "fontStretch",
                            fontstyle: "fontStyle",
                            "font-style": "fontStyle",
                            fontvariant: "fontVariant",
                            "font-variant": "fontVariant",
                            fontweight: "fontWeight",
                            "font-weight": "fontWeight",
                            format: "format",
                            from: "from",
                            fx: "fx",
                            fy: "fy",
                            g1: "g1",
                            g2: "g2",
                            glyphname: "glyphName",
                            "glyph-name": "glyphName",
                            glyphorientationhorizontal: "glyphOrientationHorizontal",
                            "glyph-orientation-horizontal": "glyphOrientationHorizontal",
                            glyphorientationvertical: "glyphOrientationVertical",
                            "glyph-orientation-vertical": "glyphOrientationVertical",
                            glyphref: "glyphRef",
                            gradienttransform: "gradientTransform",
                            gradientunits: "gradientUnits",
                            hanging: "hanging",
                            horizadvx: "horizAdvX",
                            "horiz-adv-x": "horizAdvX",
                            horizoriginx: "horizOriginX",
                            "horiz-origin-x": "horizOriginX",
                            ideographic: "ideographic",
                            imagerendering: "imageRendering",
                            "image-rendering": "imageRendering",
                            in2: "in2",
                            in: "in",
                            inlist: "inlist",
                            intercept: "intercept",
                            k1: "k1",
                            k2: "k2",
                            k3: "k3",
                            k4: "k4",
                            k: "k",
                            kernelmatrix: "kernelMatrix",
                            kernelunitlength: "kernelUnitLength",
                            kerning: "kerning",
                            keypoints: "keyPoints",
                            keysplines: "keySplines",
                            keytimes: "keyTimes",
                            lengthadjust: "lengthAdjust",
                            letterspacing: "letterSpacing",
                            "letter-spacing": "letterSpacing",
                            lightingcolor: "lightingColor",
                            "lighting-color": "lightingColor",
                            limitingconeangle: "limitingConeAngle",
                            local: "local",
                            markerend: "markerEnd",
                            "marker-end": "markerEnd",
                            markerheight: "markerHeight",
                            markermid: "markerMid",
                            "marker-mid": "markerMid",
                            markerstart: "markerStart",
                            "marker-start": "markerStart",
                            markerunits: "markerUnits",
                            markerwidth: "markerWidth",
                            mask: "mask",
                            maskcontentunits: "maskContentUnits",
                            maskunits: "maskUnits",
                            mathematical: "mathematical",
                            mode: "mode",
                            numoctaves: "numOctaves",
                            offset: "offset",
                            opacity: "opacity",
                            operator: "operator",
                            order: "order",
                            orient: "orient",
                            orientation: "orientation",
                            origin: "origin",
                            overflow: "overflow",
                            overlineposition: "overlinePosition",
                            "overline-position": "overlinePosition",
                            overlinethickness: "overlineThickness",
                            "overline-thickness": "overlineThickness",
                            paintorder: "paintOrder",
                            "paint-order": "paintOrder",
                            panose1: "panose1",
                            "panose-1": "panose1",
                            pathlength: "pathLength",
                            patterncontentunits: "patternContentUnits",
                            patterntransform: "patternTransform",
                            patternunits: "patternUnits",
                            pointerevents: "pointerEvents",
                            "pointer-events": "pointerEvents",
                            points: "points",
                            pointsatx: "pointsAtX",
                            pointsaty: "pointsAtY",
                            pointsatz: "pointsAtZ",
                            prefix: "prefix",
                            preservealpha: "preserveAlpha",
                            preserveaspectratio: "preserveAspectRatio",
                            primitiveunits: "primitiveUnits",
                            property: "property",
                            r: "r",
                            radius: "radius",
                            refx: "refX",
                            refy: "refY",
                            renderingintent: "renderingIntent",
                            "rendering-intent": "renderingIntent",
                            repeatcount: "repeatCount",
                            repeatdur: "repeatDur",
                            requiredextensions: "requiredExtensions",
                            requiredfeatures: "requiredFeatures",
                            resource: "resource",
                            restart: "restart",
                            result: "result",
                            results: "results",
                            rotate: "rotate",
                            rx: "rx",
                            ry: "ry",
                            scale: "scale",
                            security: "security",
                            seed: "seed",
                            shaperendering: "shapeRendering",
                            "shape-rendering": "shapeRendering",
                            slope: "slope",
                            spacing: "spacing",
                            specularconstant: "specularConstant",
                            specularexponent: "specularExponent",
                            speed: "speed",
                            spreadmethod: "spreadMethod",
                            startoffset: "startOffset",
                            stddeviation: "stdDeviation",
                            stemh: "stemh",
                            stemv: "stemv",
                            stitchtiles: "stitchTiles",
                            stopcolor: "stopColor",
                            "stop-color": "stopColor",
                            stopopacity: "stopOpacity",
                            "stop-opacity": "stopOpacity",
                            strikethroughposition: "strikethroughPosition",
                            "strikethrough-position": "strikethroughPosition",
                            strikethroughthickness: "strikethroughThickness",
                            "strikethrough-thickness": "strikethroughThickness",
                            string: "string",
                            stroke: "stroke",
                            strokedasharray: "strokeDasharray",
                            "stroke-dasharray": "strokeDasharray",
                            strokedashoffset: "strokeDashoffset",
                            "stroke-dashoffset": "strokeDashoffset",
                            strokelinecap: "strokeLinecap",
                            "stroke-linecap": "strokeLinecap",
                            strokelinejoin: "strokeLinejoin",
                            "stroke-linejoin": "strokeLinejoin",
                            strokemiterlimit: "strokeMiterlimit",
                            "stroke-miterlimit": "strokeMiterlimit",
                            strokewidth: "strokeWidth",
                            "stroke-width": "strokeWidth",
                            strokeopacity: "strokeOpacity",
                            "stroke-opacity": "strokeOpacity",
                            suppresscontenteditablewarning: "suppressContentEditableWarning",
                            suppresshydrationwarning: "suppressHydrationWarning",
                            surfacescale: "surfaceScale",
                            systemlanguage: "systemLanguage",
                            tablevalues: "tableValues",
                            targetx: "targetX",
                            targety: "targetY",
                            textanchor: "textAnchor",
                            "text-anchor": "textAnchor",
                            textdecoration: "textDecoration",
                            "text-decoration": "textDecoration",
                            textlength: "textLength",
                            textrendering: "textRendering",
                            "text-rendering": "textRendering",
                            to: "to",
                            transform: "transform",
                            typeof: "typeof",
                            u1: "u1",
                            u2: "u2",
                            underlineposition: "underlinePosition",
                            "underline-position": "underlinePosition",
                            underlinethickness: "underlineThickness",
                            "underline-thickness": "underlineThickness",
                            unicode: "unicode",
                            unicodebidi: "unicodeBidi",
                            "unicode-bidi": "unicodeBidi",
                            unicoderange: "unicodeRange",
                            "unicode-range": "unicodeRange",
                            unitsperem: "unitsPerEm",
                            "units-per-em": "unitsPerEm",
                            unselectable: "unselectable",
                            valphabetic: "vAlphabetic",
                            "v-alphabetic": "vAlphabetic",
                            values: "values",
                            vectoreffect: "vectorEffect",
                            "vector-effect": "vectorEffect",
                            version: "version",
                            vertadvy: "vertAdvY",
                            "vert-adv-y": "vertAdvY",
                            vertoriginx: "vertOriginX",
                            "vert-origin-x": "vertOriginX",
                            vertoriginy: "vertOriginY",
                            "vert-origin-y": "vertOriginY",
                            vhanging: "vHanging",
                            "v-hanging": "vHanging",
                            videographic: "vIdeographic",
                            "v-ideographic": "vIdeographic",
                            viewbox: "viewBox",
                            viewtarget: "viewTarget",
                            visibility: "visibility",
                            vmathematical: "vMathematical",
                            "v-mathematical": "vMathematical",
                            vocab: "vocab",
                            widths: "widths",
                            wordspacing: "wordSpacing",
                            "word-spacing": "wordSpacing",
                            writingmode: "writingMode",
                            "writing-mode": "writingMode",
                            x1: "x1",
                            x2: "x2",
                            x: "x",
                            xchannelselector: "xChannelSelector",
                            xheight: "xHeight",
                            "x-height": "xHeight",
                            xlinkactuate: "xlinkActuate",
                            "xlink:actuate": "xlinkActuate",
                            xlinkarcrole: "xlinkArcrole",
                            "xlink:arcrole": "xlinkArcrole",
                            xlinkhref: "xlinkHref",
                            "xlink:href": "xlinkHref",
                            xlinkrole: "xlinkRole",
                            "xlink:role": "xlinkRole",
                            xlinkshow: "xlinkShow",
                            "xlink:show": "xlinkShow",
                            xlinktitle: "xlinkTitle",
                            "xlink:title": "xlinkTitle",
                            xlinktype: "xlinkType",
                            "xlink:type": "xlinkType",
                            xmlbase: "xmlBase",
                            "xml:base": "xmlBase",
                            xmllang: "xmlLang",
                            "xml:lang": "xmlLang",
                            xmlns: "xmlns",
                            "xml:space": "xmlSpace",
                            xmlnsxlink: "xmlnsXlink",
                            "xmlns:xlink": "xmlnsXlink",
                            xmlspace: "xmlSpace",
                            y1: "y1",
                            y2: "y2",
                            y: "y",
                            ychannelselector: "yChannelSelector",
                            z: "z",
                            zoomandpan: "zoomAndPan"
                        };
                        var ariaProperties = {
                            "aria-current": 0,
                            // state
                            "aria-description": 0,
                            "aria-details": 0,
                            "aria-disabled": 0,
                            // state
                            "aria-hidden": 0,
                            // state
                            "aria-invalid": 0,
                            // state
                            "aria-keyshortcuts": 0,
                            "aria-label": 0,
                            "aria-roledescription": 0,
                            // Widget Attributes
                            "aria-autocomplete": 0,
                            "aria-checked": 0,
                            "aria-expanded": 0,
                            "aria-haspopup": 0,
                            "aria-level": 0,
                            "aria-modal": 0,
                            "aria-multiline": 0,
                            "aria-multiselectable": 0,
                            "aria-orientation": 0,
                            "aria-placeholder": 0,
                            "aria-pressed": 0,
                            "aria-readonly": 0,
                            "aria-required": 0,
                            "aria-selected": 0,
                            "aria-sort": 0,
                            "aria-valuemax": 0,
                            "aria-valuemin": 0,
                            "aria-valuenow": 0,
                            "aria-valuetext": 0,
                            // Live Region Attributes
                            "aria-atomic": 0,
                            "aria-busy": 0,
                            "aria-live": 0,
                            "aria-relevant": 0,
                            // Drag-and-Drop Attributes
                            "aria-dropeffect": 0,
                            "aria-grabbed": 0,
                            // Relationship Attributes
                            "aria-activedescendant": 0,
                            "aria-colcount": 0,
                            "aria-colindex": 0,
                            "aria-colspan": 0,
                            "aria-controls": 0,
                            "aria-describedby": 0,
                            "aria-errormessage": 0,
                            "aria-flowto": 0,
                            "aria-labelledby": 0,
                            "aria-owns": 0,
                            "aria-posinset": 0,
                            "aria-rowcount": 0,
                            "aria-rowindex": 0,
                            "aria-rowspan": 0,
                            "aria-setsize": 0
                        };
                        var warnedProperties = {};
                        var rARIA = new RegExp("^(aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$");
                        var rARIACamel = new RegExp("^(aria)[A-Z][" + ATTRIBUTE_NAME_CHAR + "]*$");
                        function validateProperty(tagName, name) {
                            {
                                if (hasOwnProperty.call(warnedProperties, name) && warnedProperties[name]) {
                                    return true;
                                }
                                if (rARIACamel.test(name)) {
                                    var ariaName = "aria-" + name.slice(4).toLowerCase();
                                    var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null;
                                    if (correctName == null) {
                                        error("Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.", name);
                                        warnedProperties[name] = true;
                                        return true;
                                    }
                                    if (name !== correctName) {
                                        error("Invalid ARIA attribute `%s`. Did you mean `%s`?", name, correctName);
                                        warnedProperties[name] = true;
                                        return true;
                                    }
                                }
                                if (rARIA.test(name)) {
                                    var lowerCasedName = name.toLowerCase();
                                    var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null;
                                    if (standardName == null) {
                                        warnedProperties[name] = true;
                                        return false;
                                    }
                                    if (name !== standardName) {
                                        error("Unknown ARIA attribute `%s`. Did you mean `%s`?", name, standardName);
                                        warnedProperties[name] = true;
                                        return true;
                                    }
                                }
                            }
                            return true;
                        }
                        function warnInvalidARIAProps(type, props) {
                            {
                                var invalidProps = [];
                                for (var key in props) {
                                    var isValid = validateProperty(type, key);
                                    if (!isValid) {
                                        invalidProps.push(key);
                                    }
                                }
                                var unknownPropString = invalidProps.map(function(prop) {
                                    return "`" + prop + "`";
                                }).join(", ");
                                if (invalidProps.length === 1) {
                                    error("Invalid aria prop %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type);
                                } else if (invalidProps.length > 1) {
                                    error("Invalid aria props %s on <%s> tag. For details, see https://reactjs.org/link/invalid-aria-props", unknownPropString, type);
                                }
                            }
                        }
                        function validateProperties(type, props) {
                            if (isCustomComponent(type, props)) {
                                return;
                            }
                            warnInvalidARIAProps(type, props);
                        }
                        var didWarnValueNull = false;
                        function validateProperties$1(type, props) {
                            {
                                if (type !== "input" && type !== "textarea" && type !== "select") {
                                    return;
                                }
                                if (props != null && props.value === null && !didWarnValueNull) {
                                    didWarnValueNull = true;
                                    if (type === "select" && props.multiple) {
                                        error("`value` prop on `%s` should not be null. Consider using an empty array when `multiple` is set to `true` to clear the component or `undefined` for uncontrolled components.", type);
                                    } else {
                                        error("`value` prop on `%s` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.", type);
                                    }
                                }
                            }
                        }
                        var validateProperty$1 = function() {
                        };
                        {
                            var warnedProperties$1 = {};
                            var EVENT_NAME_REGEX = /^on./;
                            var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;
                            var rARIA$1 = new RegExp("^(aria)-[" + ATTRIBUTE_NAME_CHAR + "]*$");
                            var rARIACamel$1 = new RegExp("^(aria)[A-Z][" + ATTRIBUTE_NAME_CHAR + "]*$");
                            validateProperty$1 = function(tagName, name, value, eventRegistry) {
                                if (hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) {
                                    return true;
                                }
                                var lowerCasedName = name.toLowerCase();
                                if (lowerCasedName === "onfocusin" || lowerCasedName === "onfocusout") {
                                    error("React uses onFocus and onBlur instead of onFocusIn and onFocusOut. All React events are normalized to bubble, so onFocusIn and onFocusOut are not needed/supported by React.");
                                    warnedProperties$1[name] = true;
                                    return true;
                                }
                                if (eventRegistry != null) {
                                    var registrationNameDependencies2 = eventRegistry.registrationNameDependencies, possibleRegistrationNames2 = eventRegistry.possibleRegistrationNames;
                                    if (registrationNameDependencies2.hasOwnProperty(name)) {
                                        return true;
                                    }
                                    var registrationName = possibleRegistrationNames2.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames2[lowerCasedName] : null;
                                    if (registrationName != null) {
                                        error("Invalid event handler property `%s`. Did you mean `%s`?", name, registrationName);
                                        warnedProperties$1[name] = true;
                                        return true;
                                    }
                                    if (EVENT_NAME_REGEX.test(name)) {
                                        error("Unknown event handler property `%s`. It will be ignored.", name);
                                        warnedProperties$1[name] = true;
                                        return true;
                                    }
                                } else if (EVENT_NAME_REGEX.test(name)) {
                                    if (INVALID_EVENT_NAME_REGEX.test(name)) {
                                        error("Invalid event handler property `%s`. React events use the camelCase naming convention, for example `onClick`.", name);
                                    }
                                    warnedProperties$1[name] = true;
                                    return true;
                                }
                                if (rARIA$1.test(name) || rARIACamel$1.test(name)) {
                                    return true;
                                }
                                if (lowerCasedName === "innerhtml") {
                                    error("Directly setting property `innerHTML` is not permitted. For more information, lookup documentation on `dangerouslySetInnerHTML`.");
                                    warnedProperties$1[name] = true;
                                    return true;
                                }
                                if (lowerCasedName === "aria") {
                                    error("The `aria` attribute is reserved for future use in React. Pass individual `aria-` attributes instead.");
                                    warnedProperties$1[name] = true;
                                    return true;
                                }
                                if (lowerCasedName === "is" && value !== null && value !== void 0 && typeof value !== "string") {
                                    error("Received a `%s` for a string attribute `is`. If this is expected, cast the value to a string.", typeof value);
                                    warnedProperties$1[name] = true;
                                    return true;
                                }
                                if (typeof value === "number" && isNaN(value)) {
                                    error("Received NaN for the `%s` attribute. If this is expected, cast the value to a string.", name);
                                    warnedProperties$1[name] = true;
                                    return true;
                                }
                                var propertyInfo = getPropertyInfo(name);
                                var isReserved = propertyInfo !== null && propertyInfo.type === RESERVED;
                                if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
                                    var standardName = possibleStandardNames[lowerCasedName];
                                    if (standardName !== name) {
                                        error("Invalid DOM property `%s`. Did you mean `%s`?", name, standardName);
                                        warnedProperties$1[name] = true;
                                        return true;
                                    }
                                } else if (!isReserved && name !== lowerCasedName) {
                                    error("React does not recognize the `%s` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `%s` instead. If you accidentally passed it from a parent component, remove it from the DOM element.", name, lowerCasedName);
                                    warnedProperties$1[name] = true;
                                    return true;
                                }
                                if (typeof value === "boolean" && shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
                                    if (value) {
                                        error('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.', value, name, name, value, name);
                                    } else {
                                        error('Received `%s` for a non-boolean attribute `%s`.\n\nIf you want to write it to the DOM, pass a string instead: %s="%s" or %s={value.toString()}.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.', value, name, name, value, name, name, name);
                                    }
                                    warnedProperties$1[name] = true;
                                    return true;
                                }
                                if (isReserved) {
                                    return true;
                                }
                                if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
                                    warnedProperties$1[name] = true;
                                    return false;
                                }
                                if ((value === "false" || value === "true") && propertyInfo !== null && propertyInfo.type === BOOLEAN) {
                                    error("Received the string `%s` for the boolean attribute `%s`. %s Did you mean %s={%s}?", value, name, value === "false" ? "The browser will interpret it as a truthy value." : 'Although this works, it will not work as expected if you pass the string "false".', name, value);
                                    warnedProperties$1[name] = true;
                                    return true;
                                }
                                return true;
                            };
                        }
                        var warnUnknownProperties = function(type, props, eventRegistry) {
                            {
                                var unknownProps = [];
                                for (var key in props) {
                                    var isValid = validateProperty$1(type, key, props[key], eventRegistry);
                                    if (!isValid) {
                                        unknownProps.push(key);
                                    }
                                }
                                var unknownPropString = unknownProps.map(function(prop) {
                                    return "`" + prop + "`";
                                }).join(", ");
                                if (unknownProps.length === 1) {
                                    error("Invalid value for prop %s on <%s> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type);
                                } else if (unknownProps.length > 1) {
                                    error("Invalid values for props %s on <%s> tag. Either remove them from the element, or pass a string or number value to keep them in the DOM. For details, see https://reactjs.org/link/attribute-behavior ", unknownPropString, type);
                                }
                            }
                        };
                        function validateProperties$2(type, props, eventRegistry) {
                            if (isCustomComponent(type, props)) {
                                return;
                            }
                            warnUnknownProperties(type, props, eventRegistry);
                        }
                        var IS_EVENT_HANDLE_NON_MANAGED_NODE = 1;
                        var IS_NON_DELEGATED = 1 << 1;
                        var IS_CAPTURE_PHASE = 1 << 2;
                        var SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS = IS_EVENT_HANDLE_NON_MANAGED_NODE | IS_NON_DELEGATED | IS_CAPTURE_PHASE;
                        var currentReplayingEvent = null;
                        function setReplayingEvent(event) {
                            {
                                if (currentReplayingEvent !== null) {
                                    error("Expected currently replaying event to be null. This error is likely caused by a bug in React. Please file an issue.");
                                }
                            }
                            currentReplayingEvent = event;
                        }
                        function resetReplayingEvent() {
                            {
                                if (currentReplayingEvent === null) {
                                    error("Expected currently replaying event to not be null. This error is likely caused by a bug in React. Please file an issue.");
                                }
                            }
                            currentReplayingEvent = null;
                        }
                        function isReplayingEvent(event) {
                            return event === currentReplayingEvent;
                        }
                        function getEventTarget(nativeEvent) {
                            var target2 = nativeEvent.target || nativeEvent.srcElement || window;
                            if (target2.correspondingUseElement) {
                                target2 = target2.correspondingUseElement;
                            }
                            return target2.nodeType === TEXT_NODE ? target2.parentNode : target2;
                        }
                        var restoreImpl = null;
                        var restoreTarget = null;
                        var restoreQueue = null;
                        function restoreStateOfTarget(target2) {
                            var internalInstance = getInstanceFromNode(target2);
                            if (!internalInstance) {
                                return;
                            }
                            if (typeof restoreImpl !== "function") {
                                throw new Error("setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue.");
                            }
                            var stateNode = internalInstance.stateNode;
                            if (stateNode) {
                                var _props = getFiberCurrentPropsFromNode(stateNode);
                                restoreImpl(internalInstance.stateNode, internalInstance.type, _props);
                            }
                        }
                        function setRestoreImplementation(impl) {
                            restoreImpl = impl;
                        }
                        function enqueueStateRestore(target2) {
                            if (restoreTarget) {
                                if (restoreQueue) {
                                    restoreQueue.push(target2);
                                } else {
                                    restoreQueue = [target2];
                                }
                            } else {
                                restoreTarget = target2;
                            }
                        }
                        function needsStateRestore() {
                            return restoreTarget !== null || restoreQueue !== null;
                        }
                        function restoreStateIfNeeded() {
                            if (!restoreTarget) {
                                return;
                            }
                            var target2 = restoreTarget;
                            var queuedTargets = restoreQueue;
                            restoreTarget = null;
                            restoreQueue = null;
                            restoreStateOfTarget(target2);
                            if (queuedTargets) {
                                for (var i = 0; i < queuedTargets.length; i++) {
                                    restoreStateOfTarget(queuedTargets[i]);
                                }
                            }
                        }
                        var batchedUpdatesImpl = function(fn, bookkeeping) {
                            return fn(bookkeeping);
                        };
                        var flushSyncImpl = function() {
                        };
                        var isInsideEventHandler = false;
                        function finishEventHandler() {
                            var controlledComponentsHavePendingUpdates = needsStateRestore();
                            if (controlledComponentsHavePendingUpdates) {
                                flushSyncImpl();
                                restoreStateIfNeeded();
                            }
                        }
                        function batchedUpdates(fn, a, b) {
                            if (isInsideEventHandler) {
                                return fn(a, b);
                            }
                            isInsideEventHandler = true;
                            try {
                                return batchedUpdatesImpl(fn, a, b);
                            } finally {
                                isInsideEventHandler = false;
                                finishEventHandler();
                            }
                        }
                        function setBatchingImplementation(_batchedUpdatesImpl, _discreteUpdatesImpl, _flushSyncImpl) {
                            batchedUpdatesImpl = _batchedUpdatesImpl;
                            flushSyncImpl = _flushSyncImpl;
                        }
                        function isInteractive(tag) {
                            return tag === "button" || tag === "input" || tag === "select" || tag === "textarea";
                        }
                        function shouldPreventMouseEvent(name, type, props) {
                            switch (name) {
                                case "onClick":
                                case "onClickCapture":
                                case "onDoubleClick":
                                case "onDoubleClickCapture":
                                case "onMouseDown":
                                case "onMouseDownCapture":
                                case "onMouseMove":
                                case "onMouseMoveCapture":
                                case "onMouseUp":
                                case "onMouseUpCapture":
                                case "onMouseEnter":
                                    return !!(props.disabled && isInteractive(type));
                                default:
                                    return false;
                            }
                        }
                        function getListener(inst, registrationName) {
                            var stateNode = inst.stateNode;
                            if (stateNode === null) {
                                return null;
                            }
                            var props = getFiberCurrentPropsFromNode(stateNode);
                            if (props === null) {
                                return null;
                            }
                            var listener = props[registrationName];
                            if (shouldPreventMouseEvent(registrationName, inst.type, props)) {
                                return null;
                            }
                            if (listener && typeof listener !== "function") {
                                throw new Error("Expected `" + registrationName + "` listener to be a function, instead got a value of `" + typeof listener + "` type.");
                            }
                            return listener;
                        }
                        var passiveBrowserEventsSupported = false;
                        if (canUseDOM) {
                            try {
                                var options = {};
                                Object.defineProperty(options, "passive", {
                                    get: function() {
                                        passiveBrowserEventsSupported = true;
                                    }
                                });
                                window.addEventListener("test", options, options);
                                window.removeEventListener("test", options, options);
                            } catch (e) {
                                passiveBrowserEventsSupported = false;
                            }
                        }
                        function invokeGuardedCallbackProd(name, func, context, a, b, c, d, e, f) {
                            var funcArgs = Array.prototype.slice.call(arguments, 3);
                            try {
                                func.apply(context, funcArgs);
                            } catch (error2) {
                                this.onError(error2);
                            }
                        }
                        var invokeGuardedCallbackImpl = invokeGuardedCallbackProd;
                        {
                            if (typeof window !== "undefined" && typeof window.dispatchEvent === "function" && typeof document !== "undefined" && typeof document.createEvent === "function") {
                                var fakeNode = document.createElement("react");
                                invokeGuardedCallbackImpl = function invokeGuardedCallbackDev(name, func, context, a, b, c, d, e, f) {
                                    if (typeof document === "undefined" || document === null) {
                                        throw new Error("The `document` global was defined when React was initialized, but is not defined anymore. This can happen in a test environment if a component schedules an update from an asynchronous callback, but the test has already finished running. To solve this, you can either unmount the component at the end of your test (and ensure that any asynchronous operations get canceled in `componentWillUnmount`), or you can change the test itself to be asynchronous.");
                                    }
                                    var evt = document.createEvent("Event");
                                    var didCall = false;
                                    var didError = true;
                                    var windowEvent = window.event;
                                    var windowEventDescriptor = Object.getOwnPropertyDescriptor(window, "event");
                                    function restoreAfterDispatch() {
                                        fakeNode.removeEventListener(evtType, callCallback2, false);
                                        if (typeof window.event !== "undefined" && window.hasOwnProperty("event")) {
                                            window.event = windowEvent;
                                        }
                                    }
                                    var funcArgs = Array.prototype.slice.call(arguments, 3);
                                    function callCallback2() {
                                        didCall = true;
                                        restoreAfterDispatch();
                                        func.apply(context, funcArgs);
                                        didError = false;
                                    }
                                    var error2;
                                    var didSetError = false;
                                    var isCrossOriginError = false;
                                    function handleWindowError(event) {
                                        error2 = event.error;
                                        didSetError = true;
                                        if (error2 === null && event.colno === 0 && event.lineno === 0) {
                                            isCrossOriginError = true;
                                        }
                                        if (event.defaultPrevented) {
                                            if (error2 != null && typeof error2 === "object") {
                                                try {
                                                    error2._suppressLogging = true;
                                                } catch (inner) {
                                                }
                                            }
                                        }
                                    }
                                    var evtType = "react-" + (name ? name : "invokeguardedcallback");
                                    window.addEventListener("error", handleWindowError);
                                    fakeNode.addEventListener(evtType, callCallback2, false);
                                    evt.initEvent(evtType, false, false);
                                    fakeNode.dispatchEvent(evt);
                                    if (windowEventDescriptor) {
                                        Object.defineProperty(window, "event", windowEventDescriptor);
                                    }
                                    if (didCall && didError) {
                                        if (!didSetError) {
                                            error2 = new Error(`An error was thrown inside one of your components, but React doesn't know what it was. This is likely due to browser flakiness. React does its best to preserve the "Pause on exceptions" behavior of the DevTools, which requires some DEV-mode only tricks. It's possible that these don't work in your browser. Try triggering the error in production mode, or switching to a modern browser. If you suspect that this is actually an issue with React, please file an issue.`);
                                        } else if (isCrossOriginError) {
                                            error2 = new Error("A cross-origin error was thrown. React doesn't have access to the actual error object in development. See https://reactjs.org/link/crossorigin-error for more information.");
                                        }
                                        this.onError(error2);
                                    }
                                    window.removeEventListener("error", handleWindowError);
                                    if (!didCall) {
                                        restoreAfterDispatch();
                                        return invokeGuardedCallbackProd.apply(this, arguments);
                                    }
                                };
                            }
                        }
                        var invokeGuardedCallbackImpl$1 = invokeGuardedCallbackImpl;
                        var hasError = false;
                        var caughtError = null;
                        var hasRethrowError = false;
                        var rethrowError = null;
                        var reporter = {
                            onError: function(error2) {
                                hasError = true;
                                caughtError = error2;
                            }
                        };
                        function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
                            hasError = false;
                            caughtError = null;
                            invokeGuardedCallbackImpl$1.apply(reporter, arguments);
                        }
                        function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {
                            invokeGuardedCallback.apply(this, arguments);
                            if (hasError) {
                                var error2 = clearCaughtError();
                                if (!hasRethrowError) {
                                    hasRethrowError = true;
                                    rethrowError = error2;
                                }
                            }
                        }
                        function rethrowCaughtError() {
                            if (hasRethrowError) {
                                var error2 = rethrowError;
                                hasRethrowError = false;
                                rethrowError = null;
                                throw error2;
                            }
                        }
                        function hasCaughtError() {
                            return hasError;
                        }
                        function clearCaughtError() {
                            if (hasError) {
                                var error2 = caughtError;
                                hasError = false;
                                caughtError = null;
                                return error2;
                            } else {
                                throw new Error("clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue.");
                            }
                        }
                        function get(key) {
                            return key._reactInternals;
                        }
                        function has(key) {
                            return key._reactInternals !== void 0;
                        }
                        function set(key, value) {
                            key._reactInternals = value;
                        }
                        var NoFlags = (
                            /*                      */
                            0
                        );
                        var PerformedWork = (
                            /*                */
                            1
                        );
                        var Placement = (
                            /*                    */
                            2
                        );
                        var Update = (
                            /*                       */
                            4
                        );
                        var ChildDeletion = (
                            /*                */
                            16
                        );
                        var ContentReset = (
                            /*                 */
                            32
                        );
                        var Callback = (
                            /*                     */
                            64
                        );
                        var DidCapture = (
                            /*                   */
                            128
                        );
                        var ForceClientRender = (
                            /*            */
                            256
                        );
                        var Ref = (
                            /*                          */
                            512
                        );
                        var Snapshot = (
                            /*                     */
                            1024
                        );
                        var Passive = (
                            /*                      */
                            2048
                        );
                        var Hydrating = (
                            /*                    */
                            4096
                        );
                        var Visibility = (
                            /*                   */
                            8192
                        );
                        var StoreConsistency = (
                            /*             */
                            16384
                        );
                        var LifecycleEffectMask = Passive | Update | Callback | Ref | Snapshot | StoreConsistency;
                        var HostEffectMask = (
                            /*               */
                            32767
                        );
                        var Incomplete = (
                            /*                   */
                            32768
                        );
                        var ShouldCapture = (
                            /*                */
                            65536
                        );
                        var ForceUpdateForLegacySuspense = (
                            /* */
                            131072
                        );
                        var Forked = (
                            /*                       */
                            1048576
                        );
                        var RefStatic = (
                            /*                    */
                            2097152
                        );
                        var LayoutStatic = (
                            /*                 */
                            4194304
                        );
                        var PassiveStatic = (
                            /*                */
                            8388608
                        );
                        var MountLayoutDev = (
                            /*               */
                            16777216
                        );
                        var MountPassiveDev = (
                            /*              */
                            33554432
                        );
                        var BeforeMutationMask = (
                            // TODO: Remove Update flag from before mutation phase by re-landing Visibility
                            // flag logic (see #20043)
                            Update | Snapshot | 0
                        );
                        var MutationMask = Placement | Update | ChildDeletion | ContentReset | Ref | Hydrating | Visibility;
                        var LayoutMask = Update | Callback | Ref | Visibility;
                        var PassiveMask = Passive | ChildDeletion;
                        var StaticMask = LayoutStatic | PassiveStatic | RefStatic;
                        var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;
                        function getNearestMountedFiber(fiber) {
                            var node = fiber;
                            var nearestMounted = fiber;
                            if (!fiber.alternate) {
                                var nextNode = node;
                                do {
                                    node = nextNode;
                                    if ((node.flags & (Placement | Hydrating)) !== NoFlags) {
                                        nearestMounted = node.return;
                                    }
                                    nextNode = node.return;
                                } while (nextNode);
                            } else {
                                while (node.return) {
                                    node = node.return;
                                }
                            }
                            if (node.tag === HostRoot) {
                                return nearestMounted;
                            }
                            return null;
                        }
                        function getSuspenseInstanceFromFiber(fiber) {
                            if (fiber.tag === SuspenseComponent) {
                                var suspenseState = fiber.memoizedState;
                                if (suspenseState === null) {
                                    var current2 = fiber.alternate;
                                    if (current2 !== null) {
                                        suspenseState = current2.memoizedState;
                                    }
                                }
                                if (suspenseState !== null) {
                                    return suspenseState.dehydrated;
                                }
                            }
                            return null;
                        }
                        function getContainerFromFiber(fiber) {
                            return fiber.tag === HostRoot ? fiber.stateNode.containerInfo : null;
                        }
                        function isFiberMounted(fiber) {
                            return getNearestMountedFiber(fiber) === fiber;
                        }
                        function isMounted(component) {
                            {
                                var owner = ReactCurrentOwner.current;
                                if (owner !== null && owner.tag === ClassComponent) {
                                    var ownerFiber = owner;
                                    var instance2 = ownerFiber.stateNode;
                                    if (!instance2._warnedAboutRefsInRender) {
                                        error("%s is accessing isMounted inside its render() function. render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", getComponentNameFromFiber(ownerFiber) || "A component");
                                    }
                                    instance2._warnedAboutRefsInRender = true;
                                }
                            }
                            var fiber = get(component);
                            if (!fiber) {
                                return false;
                            }
                            return getNearestMountedFiber(fiber) === fiber;
                        }
                        function assertIsMounted(fiber) {
                            if (getNearestMountedFiber(fiber) !== fiber) {
                                throw new Error("Unable to find node on an unmounted component.");
                            }
                        }
                        function findCurrentFiberUsingSlowPath(fiber) {
                            var alternate = fiber.alternate;
                            if (!alternate) {
                                var nearestMounted = getNearestMountedFiber(fiber);
                                if (nearestMounted === null) {
                                    throw new Error("Unable to find node on an unmounted component.");
                                }
                                if (nearestMounted !== fiber) {
                                    return null;
                                }
                                return fiber;
                            }
                            var a = fiber;
                            var b = alternate;
                            while (true) {
                                var parentA = a.return;
                                if (parentA === null) {
                                    break;
                                }
                                var parentB = parentA.alternate;
                                if (parentB === null) {
                                    var nextParent = parentA.return;
                                    if (nextParent !== null) {
                                        a = b = nextParent;
                                        continue;
                                    }
                                    break;
                                }
                                if (parentA.child === parentB.child) {
                                    var child = parentA.child;
                                    while (child) {
                                        if (child === a) {
                                            assertIsMounted(parentA);
                                            return fiber;
                                        }
                                        if (child === b) {
                                            assertIsMounted(parentA);
                                            return alternate;
                                        }
                                        child = child.sibling;
                                    }
                                    throw new Error("Unable to find node on an unmounted component.");
                                }
                                if (a.return !== b.return) {
                                    a = parentA;
                                    b = parentB;
                                } else {
                                    var didFindChild = false;
                                    var _child = parentA.child;
                                    while (_child) {
                                        if (_child === a) {
                                            didFindChild = true;
                                            a = parentA;
                                            b = parentB;
                                            break;
                                        }
                                        if (_child === b) {
                                            didFindChild = true;
                                            b = parentA;
                                            a = parentB;
                                            break;
                                        }
                                        _child = _child.sibling;
                                    }
                                    if (!didFindChild) {
                                        _child = parentB.child;
                                        while (_child) {
                                            if (_child === a) {
                                                didFindChild = true;
                                                a = parentB;
                                                b = parentA;
                                                break;
                                            }
                                            if (_child === b) {
                                                didFindChild = true;
                                                b = parentB;
                                                a = parentA;
                                                break;
                                            }
                                            _child = _child.sibling;
                                        }
                                        if (!didFindChild) {
                                            throw new Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.");
                                        }
                                    }
                                }
                                if (a.alternate !== b) {
                                    throw new Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue.");
                                }
                            }
                            if (a.tag !== HostRoot) {
                                throw new Error("Unable to find node on an unmounted component.");
                            }
                            if (a.stateNode.current === a) {
                                return fiber;
                            }
                            return alternate;
                        }
                        function findCurrentHostFiber(parent) {
                            var currentParent = findCurrentFiberUsingSlowPath(parent);
                            return currentParent !== null ? findCurrentHostFiberImpl(currentParent) : null;
                        }
                        function findCurrentHostFiberImpl(node) {
                            if (node.tag === HostComponent || node.tag === HostText) {
                                return node;
                            }
                            var child = node.child;
                            while (child !== null) {
                                var match = findCurrentHostFiberImpl(child);
                                if (match !== null) {
                                    return match;
                                }
                                child = child.sibling;
                            }
                            return null;
                        }
                        function findCurrentHostFiberWithNoPortals(parent) {
                            var currentParent = findCurrentFiberUsingSlowPath(parent);
                            return currentParent !== null ? findCurrentHostFiberWithNoPortalsImpl(currentParent) : null;
                        }
                        function findCurrentHostFiberWithNoPortalsImpl(node) {
                            if (node.tag === HostComponent || node.tag === HostText) {
                                return node;
                            }
                            var child = node.child;
                            while (child !== null) {
                                if (child.tag !== HostPortal) {
                                    var match = findCurrentHostFiberWithNoPortalsImpl(child);
                                    if (match !== null) {
                                        return match;
                                    }
                                }
                                child = child.sibling;
                            }
                            return null;
                        }
                        var scheduleCallback = Scheduler.unstable_scheduleCallback;
                        var cancelCallback = Scheduler.unstable_cancelCallback;
                        var shouldYield = Scheduler.unstable_shouldYield;
                        var requestPaint = Scheduler.unstable_requestPaint;
                        var now = Scheduler.unstable_now;
                        var getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel;
                        var ImmediatePriority = Scheduler.unstable_ImmediatePriority;
                        var UserBlockingPriority = Scheduler.unstable_UserBlockingPriority;
                        var NormalPriority = Scheduler.unstable_NormalPriority;
                        var LowPriority = Scheduler.unstable_LowPriority;
                        var IdlePriority = Scheduler.unstable_IdlePriority;
                        var unstable_yieldValue = Scheduler.unstable_yieldValue;
                        var unstable_setDisableYieldValue = Scheduler.unstable_setDisableYieldValue;
                        var rendererID = null;
                        var injectedHook = null;
                        var injectedProfilingHooks = null;
                        var hasLoggedError = false;
                        var isDevToolsPresent = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined";
                        function injectInternals(internals) {
                            if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === "undefined") {
                                return false;
                            }
                            var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;
                            if (hook.isDisabled) {
                                return true;
                            }
                            if (!hook.supportsFiber) {
                                {
                                    error("The installed version of React DevTools is too old and will not work with the current version of React. Please update React DevTools. https://reactjs.org/link/react-devtools");
                                }
                                return true;
                            }
                            try {
                                if (enableSchedulingProfiler) {
                                    internals = assign({}, internals, {
                                        getLaneLabelMap,
                                        injectProfilingHooks
                                    });
                                }
                                rendererID = hook.inject(internals);
                                injectedHook = hook;
                            } catch (err) {
                                {
                                    error("React instrumentation encountered an error: %s.", err);
                                }
                            }
                            if (hook.checkDCE) {
                                return true;
                            } else {
                                return false;
                            }
                        }
                        function onScheduleRoot(root2, children) {
                            {
                                if (injectedHook && typeof injectedHook.onScheduleFiberRoot === "function") {
                                    try {
                                        injectedHook.onScheduleFiberRoot(rendererID, root2, children);
                                    } catch (err) {
                                        if (!hasLoggedError) {
                                            hasLoggedError = true;
                                            error("React instrumentation encountered an error: %s", err);
                                        }
                                    }
                                }
                            }
                        }
                        function onCommitRoot(root2, eventPriority) {
                            if (injectedHook && typeof injectedHook.onCommitFiberRoot === "function") {
                                try {
                                    var didError = (root2.current.flags & DidCapture) === DidCapture;
                                    if (enableProfilerTimer) {
                                        var schedulerPriority;
                                        switch (eventPriority) {
                                            case DiscreteEventPriority:
                                                schedulerPriority = ImmediatePriority;
                                                break;
                                            case ContinuousEventPriority:
                                                schedulerPriority = UserBlockingPriority;
                                                break;
                                            case DefaultEventPriority:
                                                schedulerPriority = NormalPriority;
                                                break;
                                            case IdleEventPriority:
                                                schedulerPriority = IdlePriority;
                                                break;
                                            default:
                                                schedulerPriority = NormalPriority;
                                                break;
                                        }
                                        injectedHook.onCommitFiberRoot(rendererID, root2, schedulerPriority, didError);
                                    } else {
                                        injectedHook.onCommitFiberRoot(rendererID, root2, void 0, didError);
                                    }
                                } catch (err) {
                                    {
                                        if (!hasLoggedError) {
                                            hasLoggedError = true;
                                            error("React instrumentation encountered an error: %s", err);
                                        }
                                    }
                                }
                            }
                        }
                        function onPostCommitRoot(root2) {
                            if (injectedHook && typeof injectedHook.onPostCommitFiberRoot === "function") {
                                try {
                                    injectedHook.onPostCommitFiberRoot(rendererID, root2);
                                } catch (err) {
                                    {
                                        if (!hasLoggedError) {
                                            hasLoggedError = true;
                                            error("React instrumentation encountered an error: %s", err);
                                        }
                                    }
                                }
                            }
                        }
                        function onCommitUnmount(fiber) {
                            if (injectedHook && typeof injectedHook.onCommitFiberUnmount === "function") {
                                try {
                                    injectedHook.onCommitFiberUnmount(rendererID, fiber);
                                } catch (err) {
                                    {
                                        if (!hasLoggedError) {
                                            hasLoggedError = true;
                                            error("React instrumentation encountered an error: %s", err);
                                        }
                                    }
                                }
                            }
                        }
                        function setIsStrictModeForDevtools(newIsStrictMode) {
                            {
                                if (typeof unstable_yieldValue === "function") {
                                    unstable_setDisableYieldValue(newIsStrictMode);
                                    setSuppressWarning(newIsStrictMode);
                                }
                                if (injectedHook && typeof injectedHook.setStrictMode === "function") {
                                    try {
                                        injectedHook.setStrictMode(rendererID, newIsStrictMode);
                                    } catch (err) {
                                        {
                                            if (!hasLoggedError) {
                                                hasLoggedError = true;
                                                error("React instrumentation encountered an error: %s", err);
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        function injectProfilingHooks(profilingHooks) {
                            injectedProfilingHooks = profilingHooks;
                        }
                        function getLaneLabelMap() {
                            {
                                var map = /* @__PURE__ */ new Map();
                                var lane = 1;
                                for (var index2 = 0; index2 < TotalLanes; index2++) {
                                    var label = getLabelForLane(lane);
                                    map.set(lane, label);
                                    lane *= 2;
                                }
                                return map;
                            }
                        }
                        function markCommitStarted(lanes) {
                            {
                                if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markCommitStarted === "function") {
                                    injectedProfilingHooks.markCommitStarted(lanes);
                                }
                            }
                        }
                        function markCommitStopped() {
                            {
                                if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markCommitStopped === "function") {
                                    injectedProfilingHooks.markCommitStopped();
                                }
                            }
                        }
                        function markComponentRenderStarted(fiber) {
                            {
                                if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentRenderStarted === "function") {
                                    injectedProfilingHooks.markComponentRenderStarted(fiber);
                                }
                            }
                        }
                        function markComponentRenderStopped() {
                            {
                                if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentRenderStopped === "function") {
                                    injectedProfilingHooks.markComponentRenderStopped();
                                }
                            }
                        }
                        function markComponentPassiveEffectMountStarted(fiber) {
                            {
                                if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectMountStarted === "function") {
                                    injectedProfilingHooks.markComponentPassiveEffectMountStarted(fiber);
                                }
                            }
                        }
                        function markComponentPassiveEffectMountStopped() {
                            {
                                if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectMountStopped === "function") {
                                    injectedProfilingHooks.markComponentPassiveEffectMountStopped();
                                }
                            }
                        }
                        function markComponentPassiveEffectUnmountStarted(fiber) {
                            {
                                if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStarted === "function") {
                                    injectedProfilingHooks.markComponentPassiveEffectUnmountStarted(fiber);
                                }
                            }
                        }
                        function markComponentPassiveEffectUnmountStopped() {
                            {
                                if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentPassiveEffectUnmountStopped === "function") {
                                    injectedProfilingHooks.markComponentPassiveEffectUnmountStopped();
                                }
                            }
                        }
                        function markComponentLayoutEffectMountStarted(fiber) {
                            {
                                if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectMountStarted === "function") {
                                    injectedProfilingHooks.markComponentLayoutEffectMountStarted(fiber);
                                }
                            }
                        }
                        function markComponentLayoutEffectMountStopped() {
                            {
                                if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectMountStopped === "function") {
                                    injectedProfilingHooks.markComponentLayoutEffectMountStopped();
                                }
                            }
                        }
                        function markComponentLayoutEffectUnmountStarted(fiber) {
                            {
                                if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStarted === "function") {
                                    injectedProfilingHooks.markComponentLayoutEffectUnmountStarted(fiber);
                                }
                            }
                        }
                        function markComponentLayoutEffectUnmountStopped() {
                            {
                                if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentLayoutEffectUnmountStopped === "function") {
                                    injectedProfilingHooks.markComponentLayoutEffectUnmountStopped();
                                }
                            }
                        }
                        function markComponentErrored(fiber, thrownValue, lanes) {
                            {
                                if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentErrored === "function") {
                                    injectedProfilingHooks.markComponentErrored(fiber, thrownValue, lanes);
                                }
                            }
                        }
                        function markComponentSuspended(fiber, wakeable, lanes) {
                            {
                                if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markComponentSuspended === "function") {
                                    injectedProfilingHooks.markComponentSuspended(fiber, wakeable, lanes);
                                }
                            }
                        }
                        function markLayoutEffectsStarted(lanes) {
                            {
                                if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markLayoutEffectsStarted === "function") {
                                    injectedProfilingHooks.markLayoutEffectsStarted(lanes);
                                }
                            }
                        }
                        function markLayoutEffectsStopped() {
                            {
                                if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markLayoutEffectsStopped === "function") {
                                    injectedProfilingHooks.markLayoutEffectsStopped();
                                }
                            }
                        }
                        function markPassiveEffectsStarted(lanes) {
                            {
                                if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markPassiveEffectsStarted === "function") {
                                    injectedProfilingHooks.markPassiveEffectsStarted(lanes);
                                }
                            }
                        }
                        function markPassiveEffectsStopped() {
                            {
                                if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markPassiveEffectsStopped === "function") {
                                    injectedProfilingHooks.markPassiveEffectsStopped();
                                }
                            }
                        }
                        function markRenderStarted(lanes) {
                            {
                                if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderStarted === "function") {
                                    injectedProfilingHooks.markRenderStarted(lanes);
                                }
                            }
                        }
                        function markRenderYielded() {
                            {
                                if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderYielded === "function") {
                                    injectedProfilingHooks.markRenderYielded();
                                }
                            }
                        }
                        function markRenderStopped() {
                            {
                                if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderStopped === "function") {
                                    injectedProfilingHooks.markRenderStopped();
                                }
                            }
                        }
                        function markRenderScheduled(lane) {
                            {
                                if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markRenderScheduled === "function") {
                                    injectedProfilingHooks.markRenderScheduled(lane);
                                }
                            }
                        }
                        function markForceUpdateScheduled(fiber, lane) {
                            {
                                if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markForceUpdateScheduled === "function") {
                                    injectedProfilingHooks.markForceUpdateScheduled(fiber, lane);
                                }
                            }
                        }
                        function markStateUpdateScheduled(fiber, lane) {
                            {
                                if (injectedProfilingHooks !== null && typeof injectedProfilingHooks.markStateUpdateScheduled === "function") {
                                    injectedProfilingHooks.markStateUpdateScheduled(fiber, lane);
                                }
                            }
                        }
                        var NoMode = (
                            /*                         */
                            0
                        );
                        var ConcurrentMode = (
                            /*                 */
                            1
                        );
                        var ProfileMode = (
                            /*                    */
                            2
                        );
                        var StrictLegacyMode = (
                            /*               */
                            8
                        );
                        var StrictEffectsMode = (
                            /*              */
                            16
                        );
                        var clz32 = Math.clz32 ? Math.clz32 : clz32Fallback;
                        var log = Math.log;
                        var LN2 = Math.LN2;
                        function clz32Fallback(x) {
                            var asUint = x >>> 0;
                            if (asUint === 0) {
                                return 32;
                            }
                            return 31 - (log(asUint) / LN2 | 0) | 0;
                        }
                        var TotalLanes = 31;
                        var NoLanes = (
                            /*                        */
                            0
                        );
                        var NoLane = (
                            /*                          */
                            0
                        );
                        var SyncLane = (
                            /*                        */
                            1
                        );
                        var InputContinuousHydrationLane = (
                            /*    */
                            2
                        );
                        var InputContinuousLane = (
                            /*             */
                            4
                        );
                        var DefaultHydrationLane = (
                            /*            */
                            8
                        );
                        var DefaultLane = (
                            /*                     */
                            16
                        );
                        var TransitionHydrationLane = (
                            /*                */
                            32
                        );
                        var TransitionLanes = (
                            /*                       */
                            4194240
                        );
                        var TransitionLane1 = (
                            /*                        */
                            64
                        );
                        var TransitionLane2 = (
                            /*                        */
                            128
                        );
                        var TransitionLane3 = (
                            /*                        */
                            256
                        );
                        var TransitionLane4 = (
                            /*                        */
                            512
                        );
                        var TransitionLane5 = (
                            /*                        */
                            1024
                        );
                        var TransitionLane6 = (
                            /*                        */
                            2048
                        );
                        var TransitionLane7 = (
                            /*                        */
                            4096
                        );
                        var TransitionLane8 = (
                            /*                        */
                            8192
                        );
                        var TransitionLane9 = (
                            /*                        */
                            16384
                        );
                        var TransitionLane10 = (
                            /*                       */
                            32768
                        );
                        var TransitionLane11 = (
                            /*                       */
                            65536
                        );
                        var TransitionLane12 = (
                            /*                       */
                            131072
                        );
                        var TransitionLane13 = (
                            /*                       */
                            262144
                        );
                        var TransitionLane14 = (
                            /*                       */
                            524288
                        );
                        var TransitionLane15 = (
                            /*                       */
                            1048576
                        );
                        var TransitionLane16 = (
                            /*                       */
                            2097152
                        );
                        var RetryLanes = (
                            /*                            */
                            130023424
                        );
                        var RetryLane1 = (
                            /*                             */
                            4194304
                        );
                        var RetryLane2 = (
                            /*                             */
                            8388608
                        );
                        var RetryLane3 = (
                            /*                             */
                            16777216
                        );
                        var RetryLane4 = (
                            /*                             */
                            33554432
                        );
                        var RetryLane5 = (
                            /*                             */
                            67108864
                        );
                        var SomeRetryLane = RetryLane1;
                        var SelectiveHydrationLane = (
                            /*          */
                            134217728
                        );
                        var NonIdleLanes = (
                            /*                          */
                            268435455
                        );
                        var IdleHydrationLane = (
                            /*               */
                            268435456
                        );
                        var IdleLane = (
                            /*                        */
                            536870912
                        );
                        var OffscreenLane = (
                            /*                   */
                            1073741824
                        );
                        function getLabelForLane(lane) {
                            {
                                if (lane & SyncLane) {
                                    return "Sync";
                                }
                                if (lane & InputContinuousHydrationLane) {
                                    return "InputContinuousHydration";
                                }
                                if (lane & InputContinuousLane) {
                                    return "InputContinuous";
                                }
                                if (lane & DefaultHydrationLane) {
                                    return "DefaultHydration";
                                }
                                if (lane & DefaultLane) {
                                    return "Default";
                                }
                                if (lane & TransitionHydrationLane) {
                                    return "TransitionHydration";
                                }
                                if (lane & TransitionLanes) {
                                    return "Transition";
                                }
                                if (lane & RetryLanes) {
                                    return "Retry";
                                }
                                if (lane & SelectiveHydrationLane) {
                                    return "SelectiveHydration";
                                }
                                if (lane & IdleHydrationLane) {
                                    return "IdleHydration";
                                }
                                if (lane & IdleLane) {
                                    return "Idle";
                                }
                                if (lane & OffscreenLane) {
                                    return "Offscreen";
                                }
                            }
                        }
                        var NoTimestamp = -1;
                        var nextTransitionLane = TransitionLane1;
                        var nextRetryLane = RetryLane1;
                        function getHighestPriorityLanes(lanes) {
                            switch (getHighestPriorityLane(lanes)) {
                                case SyncLane:
                                    return SyncLane;
                                case InputContinuousHydrationLane:
                                    return InputContinuousHydrationLane;
                                case InputContinuousLane:
                                    return InputContinuousLane;
                                case DefaultHydrationLane:
                                    return DefaultHydrationLane;
                                case DefaultLane:
                                    return DefaultLane;
                                case TransitionHydrationLane:
                                    return TransitionHydrationLane;
                                case TransitionLane1:
                                case TransitionLane2:
                                case TransitionLane3:
                                case TransitionLane4:
                                case TransitionLane5:
                                case TransitionLane6:
                                case TransitionLane7:
                                case TransitionLane8:
                                case TransitionLane9:
                                case TransitionLane10:
                                case TransitionLane11:
                                case TransitionLane12:
                                case TransitionLane13:
                                case TransitionLane14:
                                case TransitionLane15:
                                case TransitionLane16:
                                    return lanes & TransitionLanes;
                                case RetryLane1:
                                case RetryLane2:
                                case RetryLane3:
                                case RetryLane4:
                                case RetryLane5:
                                    return lanes & RetryLanes;
                                case SelectiveHydrationLane:
                                    return SelectiveHydrationLane;
                                case IdleHydrationLane:
                                    return IdleHydrationLane;
                                case IdleLane:
                                    return IdleLane;
                                case OffscreenLane:
                                    return OffscreenLane;
                                default:
                                {
                                    error("Should have found matching lanes. This is a bug in React.");
                                }
                                    return lanes;
                            }
                        }
                        function getNextLanes(root2, wipLanes) {
                            var pendingLanes = root2.pendingLanes;
                            if (pendingLanes === NoLanes) {
                                return NoLanes;
                            }
                            var nextLanes = NoLanes;
                            var suspendedLanes = root2.suspendedLanes;
                            var pingedLanes = root2.pingedLanes;
                            var nonIdlePendingLanes = pendingLanes & NonIdleLanes;
                            if (nonIdlePendingLanes !== NoLanes) {
                                var nonIdleUnblockedLanes = nonIdlePendingLanes & ~suspendedLanes;
                                if (nonIdleUnblockedLanes !== NoLanes) {
                                    nextLanes = getHighestPriorityLanes(nonIdleUnblockedLanes);
                                } else {
                                    var nonIdlePingedLanes = nonIdlePendingLanes & pingedLanes;
                                    if (nonIdlePingedLanes !== NoLanes) {
                                        nextLanes = getHighestPriorityLanes(nonIdlePingedLanes);
                                    }
                                }
                            } else {
                                var unblockedLanes = pendingLanes & ~suspendedLanes;
                                if (unblockedLanes !== NoLanes) {
                                    nextLanes = getHighestPriorityLanes(unblockedLanes);
                                } else {
                                    if (pingedLanes !== NoLanes) {
                                        nextLanes = getHighestPriorityLanes(pingedLanes);
                                    }
                                }
                            }
                            if (nextLanes === NoLanes) {
                                return NoLanes;
                            }
                            if (wipLanes !== NoLanes && wipLanes !== nextLanes && // If we already suspended with a delay, then interrupting is fine. Don't
                                // bother waiting until the root is complete.
                                (wipLanes & suspendedLanes) === NoLanes) {
                                var nextLane = getHighestPriorityLane(nextLanes);
                                var wipLane = getHighestPriorityLane(wipLanes);
                                if (
                                    // Tests whether the next lane is equal or lower priority than the wip
                                    // one. This works because the bits decrease in priority as you go left.
                                    nextLane >= wipLane || // Default priority updates should not interrupt transition updates. The
                                    // only difference between default updates and transition updates is that
                                    // default updates do not support refresh transitions.
                                    nextLane === DefaultLane && (wipLane & TransitionLanes) !== NoLanes
                                ) {
                                    return wipLanes;
                                }
                            }
                            if ((nextLanes & InputContinuousLane) !== NoLanes) {
                                nextLanes |= pendingLanes & DefaultLane;
                            }
                            var entangledLanes = root2.entangledLanes;
                            if (entangledLanes !== NoLanes) {
                                var entanglements = root2.entanglements;
                                var lanes = nextLanes & entangledLanes;
                                while (lanes > 0) {
                                    var index2 = pickArbitraryLaneIndex(lanes);
                                    var lane = 1 << index2;
                                    nextLanes |= entanglements[index2];
                                    lanes &= ~lane;
                                }
                            }
                            return nextLanes;
                        }
                        function getMostRecentEventTime(root2, lanes) {
                            var eventTimes = root2.eventTimes;
                            var mostRecentEventTime = NoTimestamp;
                            while (lanes > 0) {
                                var index2 = pickArbitraryLaneIndex(lanes);
                                var lane = 1 << index2;
                                var eventTime = eventTimes[index2];
                                if (eventTime > mostRecentEventTime) {
                                    mostRecentEventTime = eventTime;
                                }
                                lanes &= ~lane;
                            }
                            return mostRecentEventTime;
                        }
                        function computeExpirationTime(lane, currentTime) {
                            switch (lane) {
                                case SyncLane:
                                case InputContinuousHydrationLane:
                                case InputContinuousLane:
                                    return currentTime + 250;
                                case DefaultHydrationLane:
                                case DefaultLane:
                                case TransitionHydrationLane:
                                case TransitionLane1:
                                case TransitionLane2:
                                case TransitionLane3:
                                case TransitionLane4:
                                case TransitionLane5:
                                case TransitionLane6:
                                case TransitionLane7:
                                case TransitionLane8:
                                case TransitionLane9:
                                case TransitionLane10:
                                case TransitionLane11:
                                case TransitionLane12:
                                case TransitionLane13:
                                case TransitionLane14:
                                case TransitionLane15:
                                case TransitionLane16:
                                    return currentTime + 5e3;
                                case RetryLane1:
                                case RetryLane2:
                                case RetryLane3:
                                case RetryLane4:
                                case RetryLane5:
                                    return NoTimestamp;
                                case SelectiveHydrationLane:
                                case IdleHydrationLane:
                                case IdleLane:
                                case OffscreenLane:
                                    return NoTimestamp;
                                default:
                                {
                                    error("Should have found matching lanes. This is a bug in React.");
                                }
                                    return NoTimestamp;
                            }
                        }
                        function markStarvedLanesAsExpired(root2, currentTime) {
                            var pendingLanes = root2.pendingLanes;
                            var suspendedLanes = root2.suspendedLanes;
                            var pingedLanes = root2.pingedLanes;
                            var expirationTimes = root2.expirationTimes;
                            var lanes = pendingLanes;
                            while (lanes > 0) {
                                var index2 = pickArbitraryLaneIndex(lanes);
                                var lane = 1 << index2;
                                var expirationTime = expirationTimes[index2];
                                if (expirationTime === NoTimestamp) {
                                    if ((lane & suspendedLanes) === NoLanes || (lane & pingedLanes) !== NoLanes) {
                                        expirationTimes[index2] = computeExpirationTime(lane, currentTime);
                                    }
                                } else if (expirationTime <= currentTime) {
                                    root2.expiredLanes |= lane;
                                }
                                lanes &= ~lane;
                            }
                        }
                        function getHighestPriorityPendingLanes(root2) {
                            return getHighestPriorityLanes(root2.pendingLanes);
                        }
                        function getLanesToRetrySynchronouslyOnError(root2) {
                            var everythingButOffscreen = root2.pendingLanes & ~OffscreenLane;
                            if (everythingButOffscreen !== NoLanes) {
                                return everythingButOffscreen;
                            }
                            if (everythingButOffscreen & OffscreenLane) {
                                return OffscreenLane;
                            }
                            return NoLanes;
                        }
                        function includesSyncLane(lanes) {
                            return (lanes & SyncLane) !== NoLanes;
                        }
                        function includesNonIdleWork(lanes) {
                            return (lanes & NonIdleLanes) !== NoLanes;
                        }
                        function includesOnlyRetries(lanes) {
                            return (lanes & RetryLanes) === lanes;
                        }
                        function includesOnlyNonUrgentLanes(lanes) {
                            var UrgentLanes = SyncLane | InputContinuousLane | DefaultLane;
                            return (lanes & UrgentLanes) === NoLanes;
                        }
                        function includesOnlyTransitions(lanes) {
                            return (lanes & TransitionLanes) === lanes;
                        }
                        function includesBlockingLane(root2, lanes) {
                            var SyncDefaultLanes = InputContinuousHydrationLane | InputContinuousLane | DefaultHydrationLane | DefaultLane;
                            return (lanes & SyncDefaultLanes) !== NoLanes;
                        }
                        function includesExpiredLane(root2, lanes) {
                            return (lanes & root2.expiredLanes) !== NoLanes;
                        }
                        function isTransitionLane(lane) {
                            return (lane & TransitionLanes) !== NoLanes;
                        }
                        function claimNextTransitionLane() {
                            var lane = nextTransitionLane;
                            nextTransitionLane <<= 1;
                            if ((nextTransitionLane & TransitionLanes) === NoLanes) {
                                nextTransitionLane = TransitionLane1;
                            }
                            return lane;
                        }
                        function claimNextRetryLane() {
                            var lane = nextRetryLane;
                            nextRetryLane <<= 1;
                            if ((nextRetryLane & RetryLanes) === NoLanes) {
                                nextRetryLane = RetryLane1;
                            }
                            return lane;
                        }
                        function getHighestPriorityLane(lanes) {
                            return lanes & -lanes;
                        }
                        function pickArbitraryLane(lanes) {
                            return getHighestPriorityLane(lanes);
                        }
                        function pickArbitraryLaneIndex(lanes) {
                            return 31 - clz32(lanes);
                        }
                        function laneToIndex(lane) {
                            return pickArbitraryLaneIndex(lane);
                        }
                        function includesSomeLane(a, b) {
                            return (a & b) !== NoLanes;
                        }
                        function isSubsetOfLanes(set2, subset) {
                            return (set2 & subset) === subset;
                        }
                        function mergeLanes(a, b) {
                            return a | b;
                        }
                        function removeLanes(set2, subset) {
                            return set2 & ~subset;
                        }
                        function intersectLanes(a, b) {
                            return a & b;
                        }
                        function laneToLanes(lane) {
                            return lane;
                        }
                        function higherPriorityLane(a, b) {
                            return a !== NoLane && a < b ? a : b;
                        }
                        function createLaneMap(initial) {
                            var laneMap = [];
                            for (var i = 0; i < TotalLanes; i++) {
                                laneMap.push(initial);
                            }
                            return laneMap;
                        }
                        function markRootUpdated(root2, updateLane, eventTime) {
                            root2.pendingLanes |= updateLane;
                            if (updateLane !== IdleLane) {
                                root2.suspendedLanes = NoLanes;
                                root2.pingedLanes = NoLanes;
                            }
                            var eventTimes = root2.eventTimes;
                            var index2 = laneToIndex(updateLane);
                            eventTimes[index2] = eventTime;
                        }
                        function markRootSuspended(root2, suspendedLanes) {
                            root2.suspendedLanes |= suspendedLanes;
                            root2.pingedLanes &= ~suspendedLanes;
                            var expirationTimes = root2.expirationTimes;
                            var lanes = suspendedLanes;
                            while (lanes > 0) {
                                var index2 = pickArbitraryLaneIndex(lanes);
                                var lane = 1 << index2;
                                expirationTimes[index2] = NoTimestamp;
                                lanes &= ~lane;
                            }
                        }
                        function markRootPinged(root2, pingedLanes, eventTime) {
                            root2.pingedLanes |= root2.suspendedLanes & pingedLanes;
                        }
                        function markRootFinished(root2, remainingLanes) {
                            var noLongerPendingLanes = root2.pendingLanes & ~remainingLanes;
                            root2.pendingLanes = remainingLanes;
                            root2.suspendedLanes = NoLanes;
                            root2.pingedLanes = NoLanes;
                            root2.expiredLanes &= remainingLanes;
                            root2.mutableReadLanes &= remainingLanes;
                            root2.entangledLanes &= remainingLanes;
                            var entanglements = root2.entanglements;
                            var eventTimes = root2.eventTimes;
                            var expirationTimes = root2.expirationTimes;
                            var lanes = noLongerPendingLanes;
                            while (lanes > 0) {
                                var index2 = pickArbitraryLaneIndex(lanes);
                                var lane = 1 << index2;
                                entanglements[index2] = NoLanes;
                                eventTimes[index2] = NoTimestamp;
                                expirationTimes[index2] = NoTimestamp;
                                lanes &= ~lane;
                            }
                        }
                        function markRootEntangled(root2, entangledLanes) {
                            var rootEntangledLanes = root2.entangledLanes |= entangledLanes;
                            var entanglements = root2.entanglements;
                            var lanes = rootEntangledLanes;
                            while (lanes) {
                                var index2 = pickArbitraryLaneIndex(lanes);
                                var lane = 1 << index2;
                                if (
                                    // Is this one of the newly entangled lanes?
                                    lane & entangledLanes | // Is this lane transitively entangled with the newly entangled lanes?
                                    entanglements[index2] & entangledLanes
                                ) {
                                    entanglements[index2] |= entangledLanes;
                                }
                                lanes &= ~lane;
                            }
                        }
                        function getBumpedLaneForHydration(root2, renderLanes2) {
                            var renderLane = getHighestPriorityLane(renderLanes2);
                            var lane;
                            switch (renderLane) {
                                case InputContinuousLane:
                                    lane = InputContinuousHydrationLane;
                                    break;
                                case DefaultLane:
                                    lane = DefaultHydrationLane;
                                    break;
                                case TransitionLane1:
                                case TransitionLane2:
                                case TransitionLane3:
                                case TransitionLane4:
                                case TransitionLane5:
                                case TransitionLane6:
                                case TransitionLane7:
                                case TransitionLane8:
                                case TransitionLane9:
                                case TransitionLane10:
                                case TransitionLane11:
                                case TransitionLane12:
                                case TransitionLane13:
                                case TransitionLane14:
                                case TransitionLane15:
                                case TransitionLane16:
                                case RetryLane1:
                                case RetryLane2:
                                case RetryLane3:
                                case RetryLane4:
                                case RetryLane5:
                                    lane = TransitionHydrationLane;
                                    break;
                                case IdleLane:
                                    lane = IdleHydrationLane;
                                    break;
                                default:
                                    lane = NoLane;
                                    break;
                            }
                            if ((lane & (root2.suspendedLanes | renderLanes2)) !== NoLane) {
                                return NoLane;
                            }
                            return lane;
                        }
                        function addFiberToLanesMap(root2, fiber, lanes) {
                            if (!isDevToolsPresent) {
                                return;
                            }
                            var pendingUpdatersLaneMap = root2.pendingUpdatersLaneMap;
                            while (lanes > 0) {
                                var index2 = laneToIndex(lanes);
                                var lane = 1 << index2;
                                var updaters = pendingUpdatersLaneMap[index2];
                                updaters.add(fiber);
                                lanes &= ~lane;
                            }
                        }
                        function movePendingFibersToMemoized(root2, lanes) {
                            if (!isDevToolsPresent) {
                                return;
                            }
                            var pendingUpdatersLaneMap = root2.pendingUpdatersLaneMap;
                            var memoizedUpdaters = root2.memoizedUpdaters;
                            while (lanes > 0) {
                                var index2 = laneToIndex(lanes);
                                var lane = 1 << index2;
                                var updaters = pendingUpdatersLaneMap[index2];
                                if (updaters.size > 0) {
                                    updaters.forEach(function(fiber) {
                                        var alternate = fiber.alternate;
                                        if (alternate === null || !memoizedUpdaters.has(alternate)) {
                                            memoizedUpdaters.add(fiber);
                                        }
                                    });
                                    updaters.clear();
                                }
                                lanes &= ~lane;
                            }
                        }
                        function getTransitionsForLanes(root2, lanes) {
                            {
                                return null;
                            }
                        }
                        var DiscreteEventPriority = SyncLane;
                        var ContinuousEventPriority = InputContinuousLane;
                        var DefaultEventPriority = DefaultLane;
                        var IdleEventPriority = IdleLane;
                        var currentUpdatePriority = NoLane;
                        function getCurrentUpdatePriority() {
                            return currentUpdatePriority;
                        }
                        function setCurrentUpdatePriority(newPriority) {
                            currentUpdatePriority = newPriority;
                        }
                        function runWithPriority(priority, fn) {
                            var previousPriority = currentUpdatePriority;
                            try {
                                currentUpdatePriority = priority;
                                return fn();
                            } finally {
                                currentUpdatePriority = previousPriority;
                            }
                        }
                        function higherEventPriority(a, b) {
                            return a !== 0 && a < b ? a : b;
                        }
                        function lowerEventPriority(a, b) {
                            return a === 0 || a > b ? a : b;
                        }
                        function isHigherEventPriority(a, b) {
                            return a !== 0 && a < b;
                        }
                        function lanesToEventPriority(lanes) {
                            var lane = getHighestPriorityLane(lanes);
                            if (!isHigherEventPriority(DiscreteEventPriority, lane)) {
                                return DiscreteEventPriority;
                            }
                            if (!isHigherEventPriority(ContinuousEventPriority, lane)) {
                                return ContinuousEventPriority;
                            }
                            if (includesNonIdleWork(lane)) {
                                return DefaultEventPriority;
                            }
                            return IdleEventPriority;
                        }
                        function isRootDehydrated(root2) {
                            var currentState = root2.current.memoizedState;
                            return currentState.isDehydrated;
                        }
                        var _attemptSynchronousHydration;
                        function setAttemptSynchronousHydration(fn) {
                            _attemptSynchronousHydration = fn;
                        }
                        function attemptSynchronousHydration(fiber) {
                            _attemptSynchronousHydration(fiber);
                        }
                        var attemptContinuousHydration;
                        function setAttemptContinuousHydration(fn) {
                            attemptContinuousHydration = fn;
                        }
                        var attemptHydrationAtCurrentPriority;
                        function setAttemptHydrationAtCurrentPriority(fn) {
                            attemptHydrationAtCurrentPriority = fn;
                        }
                        var getCurrentUpdatePriority$1;
                        function setGetCurrentUpdatePriority(fn) {
                            getCurrentUpdatePriority$1 = fn;
                        }
                        var attemptHydrationAtPriority;
                        function setAttemptHydrationAtPriority(fn) {
                            attemptHydrationAtPriority = fn;
                        }
                        var hasScheduledReplayAttempt = false;
                        var queuedDiscreteEvents = [];
                        var queuedFocus = null;
                        var queuedDrag = null;
                        var queuedMouse = null;
                        var queuedPointers = /* @__PURE__ */ new Map();
                        var queuedPointerCaptures = /* @__PURE__ */ new Map();
                        var queuedExplicitHydrationTargets = [];
                        var discreteReplayableEvents = [
                            "mousedown",
                            "mouseup",
                            "touchcancel",
                            "touchend",
                            "touchstart",
                            "auxclick",
                            "dblclick",
                            "pointercancel",
                            "pointerdown",
                            "pointerup",
                            "dragend",
                            "dragstart",
                            "drop",
                            "compositionend",
                            "compositionstart",
                            "keydown",
                            "keypress",
                            "keyup",
                            "input",
                            "textInput",
                            // Intentionally camelCase
                            "copy",
                            "cut",
                            "paste",
                            "click",
                            "change",
                            "contextmenu",
                            "reset",
                            "submit"
                        ];
                        function isDiscreteEventThatRequiresHydration(eventType) {
                            return discreteReplayableEvents.indexOf(eventType) > -1;
                        }
                        function createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
                            return {
                                blockedOn,
                                domEventName,
                                eventSystemFlags,
                                nativeEvent,
                                targetContainers: [targetContainer]
                            };
                        }
                        function clearIfContinuousEvent(domEventName, nativeEvent) {
                            switch (domEventName) {
                                case "focusin":
                                case "focusout":
                                    queuedFocus = null;
                                    break;
                                case "dragenter":
                                case "dragleave":
                                    queuedDrag = null;
                                    break;
                                case "mouseover":
                                case "mouseout":
                                    queuedMouse = null;
                                    break;
                                case "pointerover":
                                case "pointerout": {
                                    var pointerId = nativeEvent.pointerId;
                                    queuedPointers.delete(pointerId);
                                    break;
                                }
                                case "gotpointercapture":
                                case "lostpointercapture": {
                                    var _pointerId = nativeEvent.pointerId;
                                    queuedPointerCaptures.delete(_pointerId);
                                    break;
                                }
                            }
                        }
                        function accumulateOrCreateContinuousQueuedReplayableEvent(existingQueuedEvent, blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
                            if (existingQueuedEvent === null || existingQueuedEvent.nativeEvent !== nativeEvent) {
                                var queuedEvent = createQueuedReplayableEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent);
                                if (blockedOn !== null) {
                                    var _fiber2 = getInstanceFromNode(blockedOn);
                                    if (_fiber2 !== null) {
                                        attemptContinuousHydration(_fiber2);
                                    }
                                }
                                return queuedEvent;
                            }
                            existingQueuedEvent.eventSystemFlags |= eventSystemFlags;
                            var targetContainers = existingQueuedEvent.targetContainers;
                            if (targetContainer !== null && targetContainers.indexOf(targetContainer) === -1) {
                                targetContainers.push(targetContainer);
                            }
                            return existingQueuedEvent;
                        }
                        function queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent) {
                            switch (domEventName) {
                                case "focusin": {
                                    var focusEvent = nativeEvent;
                                    queuedFocus = accumulateOrCreateContinuousQueuedReplayableEvent(queuedFocus, blockedOn, domEventName, eventSystemFlags, targetContainer, focusEvent);
                                    return true;
                                }
                                case "dragenter": {
                                    var dragEvent = nativeEvent;
                                    queuedDrag = accumulateOrCreateContinuousQueuedReplayableEvent(queuedDrag, blockedOn, domEventName, eventSystemFlags, targetContainer, dragEvent);
                                    return true;
                                }
                                case "mouseover": {
                                    var mouseEvent = nativeEvent;
                                    queuedMouse = accumulateOrCreateContinuousQueuedReplayableEvent(queuedMouse, blockedOn, domEventName, eventSystemFlags, targetContainer, mouseEvent);
                                    return true;
                                }
                                case "pointerover": {
                                    var pointerEvent = nativeEvent;
                                    var pointerId = pointerEvent.pointerId;
                                    queuedPointers.set(pointerId, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointers.get(pointerId) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, pointerEvent));
                                    return true;
                                }
                                case "gotpointercapture": {
                                    var _pointerEvent = nativeEvent;
                                    var _pointerId2 = _pointerEvent.pointerId;
                                    queuedPointerCaptures.set(_pointerId2, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointerCaptures.get(_pointerId2) || null, blockedOn, domEventName, eventSystemFlags, targetContainer, _pointerEvent));
                                    return true;
                                }
                            }
                            return false;
                        }
                        function attemptExplicitHydrationTarget(queuedTarget) {
                            var targetInst = getClosestInstanceFromNode(queuedTarget.target);
                            if (targetInst !== null) {
                                var nearestMounted = getNearestMountedFiber(targetInst);
                                if (nearestMounted !== null) {
                                    var tag = nearestMounted.tag;
                                    if (tag === SuspenseComponent) {
                                        var instance2 = getSuspenseInstanceFromFiber(nearestMounted);
                                        if (instance2 !== null) {
                                            queuedTarget.blockedOn = instance2;
                                            attemptHydrationAtPriority(queuedTarget.priority, function() {
                                                attemptHydrationAtCurrentPriority(nearestMounted);
                                            });
                                            return;
                                        }
                                    } else if (tag === HostRoot) {
                                        var root2 = nearestMounted.stateNode;
                                        if (isRootDehydrated(root2)) {
                                            queuedTarget.blockedOn = getContainerFromFiber(nearestMounted);
                                            return;
                                        }
                                    }
                                }
                            }
                            queuedTarget.blockedOn = null;
                        }
                        function queueExplicitHydrationTarget(target2) {
                            var updatePriority = getCurrentUpdatePriority$1();
                            var queuedTarget = {
                                blockedOn: null,
                                target: target2,
                                priority: updatePriority
                            };
                            var i = 0;
                            for (; i < queuedExplicitHydrationTargets.length; i++) {
                                if (!isHigherEventPriority(updatePriority, queuedExplicitHydrationTargets[i].priority)) {
                                    break;
                                }
                            }
                            queuedExplicitHydrationTargets.splice(i, 0, queuedTarget);
                            if (i === 0) {
                                attemptExplicitHydrationTarget(queuedTarget);
                            }
                        }
                        function attemptReplayContinuousQueuedEvent(queuedEvent) {
                            if (queuedEvent.blockedOn !== null) {
                                return false;
                            }
                            var targetContainers = queuedEvent.targetContainers;
                            while (targetContainers.length > 0) {
                                var targetContainer = targetContainers[0];
                                var nextBlockedOn = findInstanceBlockingEvent(queuedEvent.domEventName, queuedEvent.eventSystemFlags, targetContainer, queuedEvent.nativeEvent);
                                if (nextBlockedOn === null) {
                                    {
                                        var nativeEvent = queuedEvent.nativeEvent;
                                        var nativeEventClone = new nativeEvent.constructor(nativeEvent.type, nativeEvent);
                                        setReplayingEvent(nativeEventClone);
                                        nativeEvent.target.dispatchEvent(nativeEventClone);
                                        resetReplayingEvent();
                                    }
                                } else {
                                    var _fiber3 = getInstanceFromNode(nextBlockedOn);
                                    if (_fiber3 !== null) {
                                        attemptContinuousHydration(_fiber3);
                                    }
                                    queuedEvent.blockedOn = nextBlockedOn;
                                    return false;
                                }
                                targetContainers.shift();
                            }
                            return true;
                        }
                        function attemptReplayContinuousQueuedEventInMap(queuedEvent, key, map) {
                            if (attemptReplayContinuousQueuedEvent(queuedEvent)) {
                                map.delete(key);
                            }
                        }
                        function replayUnblockedEvents() {
                            hasScheduledReplayAttempt = false;
                            if (queuedFocus !== null && attemptReplayContinuousQueuedEvent(queuedFocus)) {
                                queuedFocus = null;
                            }
                            if (queuedDrag !== null && attemptReplayContinuousQueuedEvent(queuedDrag)) {
                                queuedDrag = null;
                            }
                            if (queuedMouse !== null && attemptReplayContinuousQueuedEvent(queuedMouse)) {
                                queuedMouse = null;
                            }
                            queuedPointers.forEach(attemptReplayContinuousQueuedEventInMap);
                            queuedPointerCaptures.forEach(attemptReplayContinuousQueuedEventInMap);
                        }
                        function scheduleCallbackIfUnblocked(queuedEvent, unblocked) {
                            if (queuedEvent.blockedOn === unblocked) {
                                queuedEvent.blockedOn = null;
                                if (!hasScheduledReplayAttempt) {
                                    hasScheduledReplayAttempt = true;
                                    Scheduler.unstable_scheduleCallback(Scheduler.unstable_NormalPriority, replayUnblockedEvents);
                                }
                            }
                        }
                        function retryIfBlockedOn(unblocked) {
                            if (queuedDiscreteEvents.length > 0) {
                                scheduleCallbackIfUnblocked(queuedDiscreteEvents[0], unblocked);
                                for (var i = 1; i < queuedDiscreteEvents.length; i++) {
                                    var queuedEvent = queuedDiscreteEvents[i];
                                    if (queuedEvent.blockedOn === unblocked) {
                                        queuedEvent.blockedOn = null;
                                    }
                                }
                            }
                            if (queuedFocus !== null) {
                                scheduleCallbackIfUnblocked(queuedFocus, unblocked);
                            }
                            if (queuedDrag !== null) {
                                scheduleCallbackIfUnblocked(queuedDrag, unblocked);
                            }
                            if (queuedMouse !== null) {
                                scheduleCallbackIfUnblocked(queuedMouse, unblocked);
                            }
                            var unblock = function(queuedEvent2) {
                                return scheduleCallbackIfUnblocked(queuedEvent2, unblocked);
                            };
                            queuedPointers.forEach(unblock);
                            queuedPointerCaptures.forEach(unblock);
                            for (var _i = 0; _i < queuedExplicitHydrationTargets.length; _i++) {
                                var queuedTarget = queuedExplicitHydrationTargets[_i];
                                if (queuedTarget.blockedOn === unblocked) {
                                    queuedTarget.blockedOn = null;
                                }
                            }
                            while (queuedExplicitHydrationTargets.length > 0) {
                                var nextExplicitTarget = queuedExplicitHydrationTargets[0];
                                if (nextExplicitTarget.blockedOn !== null) {
                                    break;
                                } else {
                                    attemptExplicitHydrationTarget(nextExplicitTarget);
                                    if (nextExplicitTarget.blockedOn === null) {
                                        queuedExplicitHydrationTargets.shift();
                                    }
                                }
                            }
                        }
                        var ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig;
                        var _enabled = true;
                        function setEnabled(enabled) {
                            _enabled = !!enabled;
                        }
                        function isEnabled() {
                            return _enabled;
                        }
                        function createEventListenerWrapperWithPriority(targetContainer, domEventName, eventSystemFlags) {
                            var eventPriority = getEventPriority(domEventName);
                            var listenerWrapper;
                            switch (eventPriority) {
                                case DiscreteEventPriority:
                                    listenerWrapper = dispatchDiscreteEvent;
                                    break;
                                case ContinuousEventPriority:
                                    listenerWrapper = dispatchContinuousEvent;
                                    break;
                                case DefaultEventPriority:
                                default:
                                    listenerWrapper = dispatchEvent;
                                    break;
                            }
                            return listenerWrapper.bind(null, domEventName, eventSystemFlags, targetContainer);
                        }
                        function dispatchDiscreteEvent(domEventName, eventSystemFlags, container, nativeEvent) {
                            var previousPriority = getCurrentUpdatePriority();
                            var prevTransition = ReactCurrentBatchConfig.transition;
                            ReactCurrentBatchConfig.transition = null;
                            try {
                                setCurrentUpdatePriority(DiscreteEventPriority);
                                dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);
                            } finally {
                                setCurrentUpdatePriority(previousPriority);
                                ReactCurrentBatchConfig.transition = prevTransition;
                            }
                        }
                        function dispatchContinuousEvent(domEventName, eventSystemFlags, container, nativeEvent) {
                            var previousPriority = getCurrentUpdatePriority();
                            var prevTransition = ReactCurrentBatchConfig.transition;
                            ReactCurrentBatchConfig.transition = null;
                            try {
                                setCurrentUpdatePriority(ContinuousEventPriority);
                                dispatchEvent(domEventName, eventSystemFlags, container, nativeEvent);
                            } finally {
                                setCurrentUpdatePriority(previousPriority);
                                ReactCurrentBatchConfig.transition = prevTransition;
                            }
                        }
                        function dispatchEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
                            if (!_enabled) {
                                return;
                            }
                            {
                                dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent);
                            }
                        }
                        function dispatchEventWithEnableCapturePhaseSelectiveHydrationWithoutDiscreteEventReplay(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
                            var blockedOn = findInstanceBlockingEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent);
                            if (blockedOn === null) {
                                dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, return_targetInst, targetContainer);
                                clearIfContinuousEvent(domEventName, nativeEvent);
                                return;
                            }
                            if (queueIfContinuousEvent(blockedOn, domEventName, eventSystemFlags, targetContainer, nativeEvent)) {
                                nativeEvent.stopPropagation();
                                return;
                            }
                            clearIfContinuousEvent(domEventName, nativeEvent);
                            if (eventSystemFlags & IS_CAPTURE_PHASE && isDiscreteEventThatRequiresHydration(domEventName)) {
                                while (blockedOn !== null) {
                                    var fiber = getInstanceFromNode(blockedOn);
                                    if (fiber !== null) {
                                        attemptSynchronousHydration(fiber);
                                    }
                                    var nextBlockedOn = findInstanceBlockingEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent);
                                    if (nextBlockedOn === null) {
                                        dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, return_targetInst, targetContainer);
                                    }
                                    if (nextBlockedOn === blockedOn) {
                                        break;
                                    }
                                    blockedOn = nextBlockedOn;
                                }
                                if (blockedOn !== null) {
                                    nativeEvent.stopPropagation();
                                }
                                return;
                            }
                            dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, null, targetContainer);
                        }
                        var return_targetInst = null;
                        function findInstanceBlockingEvent(domEventName, eventSystemFlags, targetContainer, nativeEvent) {
                            return_targetInst = null;
                            var nativeEventTarget = getEventTarget(nativeEvent);
                            var targetInst = getClosestInstanceFromNode(nativeEventTarget);
                            if (targetInst !== null) {
                                var nearestMounted = getNearestMountedFiber(targetInst);
                                if (nearestMounted === null) {
                                    targetInst = null;
                                } else {
                                    var tag = nearestMounted.tag;
                                    if (tag === SuspenseComponent) {
                                        var instance2 = getSuspenseInstanceFromFiber(nearestMounted);
                                        if (instance2 !== null) {
                                            return instance2;
                                        }
                                        targetInst = null;
                                    } else if (tag === HostRoot) {
                                        var root2 = nearestMounted.stateNode;
                                        if (isRootDehydrated(root2)) {
                                            return getContainerFromFiber(nearestMounted);
                                        }
                                        targetInst = null;
                                    } else if (nearestMounted !== targetInst) {
                                        targetInst = null;
                                    }
                                }
                            }
                            return_targetInst = targetInst;
                            return null;
                        }
                        function getEventPriority(domEventName) {
                            switch (domEventName) {
                                case "cancel":
                                case "click":
                                case "close":
                                case "contextmenu":
                                case "copy":
                                case "cut":
                                case "auxclick":
                                case "dblclick":
                                case "dragend":
                                case "dragstart":
                                case "drop":
                                case "focusin":
                                case "focusout":
                                case "input":
                                case "invalid":
                                case "keydown":
                                case "keypress":
                                case "keyup":
                                case "mousedown":
                                case "mouseup":
                                case "paste":
                                case "pause":
                                case "play":
                                case "pointercancel":
                                case "pointerdown":
                                case "pointerup":
                                case "ratechange":
                                case "reset":
                                case "resize":
                                case "seeked":
                                case "submit":
                                case "touchcancel":
                                case "touchend":
                                case "touchstart":
                                case "volumechange":
                                case "change":
                                case "selectionchange":
                                case "textInput":
                                case "compositionstart":
                                case "compositionend":
                                case "compositionupdate":
                                case "beforeblur":
                                case "afterblur":
                                case "beforeinput":
                                case "blur":
                                case "fullscreenchange":
                                case "focus":
                                case "hashchange":
                                case "popstate":
                                case "select":
                                case "selectstart":
                                    return DiscreteEventPriority;
                                case "drag":
                                case "dragenter":
                                case "dragexit":
                                case "dragleave":
                                case "dragover":
                                case "mousemove":
                                case "mouseout":
                                case "mouseover":
                                case "pointermove":
                                case "pointerout":
                                case "pointerover":
                                case "scroll":
                                case "toggle":
                                case "touchmove":
                                case "wheel":
                                case "mouseenter":
                                case "mouseleave":
                                case "pointerenter":
                                case "pointerleave":
                                    return ContinuousEventPriority;
                                case "message": {
                                    var schedulerPriority = getCurrentPriorityLevel();
                                    switch (schedulerPriority) {
                                        case ImmediatePriority:
                                            return DiscreteEventPriority;
                                        case UserBlockingPriority:
                                            return ContinuousEventPriority;
                                        case NormalPriority:
                                        case LowPriority:
                                            return DefaultEventPriority;
                                        case IdlePriority:
                                            return IdleEventPriority;
                                        default:
                                            return DefaultEventPriority;
                                    }
                                }
                                default:
                                    return DefaultEventPriority;
                            }
                        }
                        function addEventBubbleListener(target2, eventType, listener) {
                            target2.addEventListener(eventType, listener, false);
                            return listener;
                        }
                        function addEventCaptureListener(target2, eventType, listener) {
                            target2.addEventListener(eventType, listener, true);
                            return listener;
                        }
                        function addEventCaptureListenerWithPassiveFlag(target2, eventType, listener, passive) {
                            target2.addEventListener(eventType, listener, {
                                capture: true,
                                passive
                            });
                            return listener;
                        }
                        function addEventBubbleListenerWithPassiveFlag(target2, eventType, listener, passive) {
                            target2.addEventListener(eventType, listener, {
                                passive
                            });
                            return listener;
                        }
                        var root = null;
                        var startText = null;
                        var fallbackText = null;
                        function initialize(nativeEventTarget) {
                            root = nativeEventTarget;
                            startText = getText();
                            return true;
                        }
                        function reset() {
                            root = null;
                            startText = null;
                            fallbackText = null;
                        }
                        function getData() {
                            if (fallbackText) {
                                return fallbackText;
                            }
                            var start;
                            var startValue = startText;
                            var startLength = startValue.length;
                            var end;
                            var endValue = getText();
                            var endLength = endValue.length;
                            for (start = 0; start < startLength; start++) {
                                if (startValue[start] !== endValue[start]) {
                                    break;
                                }
                            }
                            var minEnd = startLength - start;
                            for (end = 1; end <= minEnd; end++) {
                                if (startValue[startLength - end] !== endValue[endLength - end]) {
                                    break;
                                }
                            }
                            var sliceTail = end > 1 ? 1 - end : void 0;
                            fallbackText = endValue.slice(start, sliceTail);
                            return fallbackText;
                        }
                        function getText() {
                            if ("value" in root) {
                                return root.value;
                            }
                            return root.textContent;
                        }
                        function getEventCharCode(nativeEvent) {
                            var charCode;
                            var keyCode = nativeEvent.keyCode;
                            if ("charCode" in nativeEvent) {
                                charCode = nativeEvent.charCode;
                                if (charCode === 0 && keyCode === 13) {
                                    charCode = 13;
                                }
                            } else {
                                charCode = keyCode;
                            }
                            if (charCode === 10) {
                                charCode = 13;
                            }
                            if (charCode >= 32 || charCode === 13) {
                                return charCode;
                            }
                            return 0;
                        }
                        function functionThatReturnsTrue() {
                            return true;
                        }
                        function functionThatReturnsFalse() {
                            return false;
                        }
                        function createSyntheticEvent(Interface) {
                            function SyntheticBaseEvent(reactName, reactEventType, targetInst, nativeEvent, nativeEventTarget) {
                                this._reactName = reactName;
                                this._targetInst = targetInst;
                                this.type = reactEventType;
                                this.nativeEvent = nativeEvent;
                                this.target = nativeEventTarget;
                                this.currentTarget = null;
                                for (var _propName in Interface) {
                                    if (!Interface.hasOwnProperty(_propName)) {
                                        continue;
                                    }
                                    var normalize = Interface[_propName];
                                    if (normalize) {
                                        this[_propName] = normalize(nativeEvent);
                                    } else {
                                        this[_propName] = nativeEvent[_propName];
                                    }
                                }
                                var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;
                                if (defaultPrevented) {
                                    this.isDefaultPrevented = functionThatReturnsTrue;
                                } else {
                                    this.isDefaultPrevented = functionThatReturnsFalse;
                                }
                                this.isPropagationStopped = functionThatReturnsFalse;
                                return this;
                            }
                            assign(SyntheticBaseEvent.prototype, {
                                preventDefault: function() {
                                    this.defaultPrevented = true;
                                    var event = this.nativeEvent;
                                    if (!event) {
                                        return;
                                    }
                                    if (event.preventDefault) {
                                        event.preventDefault();
                                    } else if (typeof event.returnValue !== "unknown") {
                                        event.returnValue = false;
                                    }
                                    this.isDefaultPrevented = functionThatReturnsTrue;
                                },
                                stopPropagation: function() {
                                    var event = this.nativeEvent;
                                    if (!event) {
                                        return;
                                    }
                                    if (event.stopPropagation) {
                                        event.stopPropagation();
                                    } else if (typeof event.cancelBubble !== "unknown") {
                                        event.cancelBubble = true;
                                    }
                                    this.isPropagationStopped = functionThatReturnsTrue;
                                },
                                /**
                                 * We release all dispatched `SyntheticEvent`s after each event loop, adding
                                 * them back into the pool. This allows a way to hold onto a reference that
                                 * won't be added back into the pool.
                                 */
                                persist: function() {
                                },
                                /**
                                 * Checks if this event should be released back into the pool.
                                 *
                                 * @return {boolean} True if this should not be released, false otherwise.
                                 */
                                isPersistent: functionThatReturnsTrue
                            });
                            return SyntheticBaseEvent;
                        }
                        var EventInterface = {
                            eventPhase: 0,
                            bubbles: 0,
                            cancelable: 0,
                            timeStamp: function(event) {
                                return event.timeStamp || Date.now();
                            },
                            defaultPrevented: 0,
                            isTrusted: 0
                        };
                        var SyntheticEvent = createSyntheticEvent(EventInterface);
                        var UIEventInterface = assign({}, EventInterface, {
                            view: 0,
                            detail: 0
                        });
                        var SyntheticUIEvent = createSyntheticEvent(UIEventInterface);
                        var lastMovementX;
                        var lastMovementY;
                        var lastMouseEvent;
                        function updateMouseMovementPolyfillState(event) {
                            if (event !== lastMouseEvent) {
                                if (lastMouseEvent && event.type === "mousemove") {
                                    lastMovementX = event.screenX - lastMouseEvent.screenX;
                                    lastMovementY = event.screenY - lastMouseEvent.screenY;
                                } else {
                                    lastMovementX = 0;
                                    lastMovementY = 0;
                                }
                                lastMouseEvent = event;
                            }
                        }
                        var MouseEventInterface = assign({}, UIEventInterface, {
                            screenX: 0,
                            screenY: 0,
                            clientX: 0,
                            clientY: 0,
                            pageX: 0,
                            pageY: 0,
                            ctrlKey: 0,
                            shiftKey: 0,
                            altKey: 0,
                            metaKey: 0,
                            getModifierState: getEventModifierState,
                            button: 0,
                            buttons: 0,
                            relatedTarget: function(event) {
                                if (event.relatedTarget === void 0)
                                    return event.fromElement === event.srcElement ? event.toElement : event.fromElement;
                                return event.relatedTarget;
                            },
                            movementX: function(event) {
                                if ("movementX" in event) {
                                    return event.movementX;
                                }
                                updateMouseMovementPolyfillState(event);
                                return lastMovementX;
                            },
                            movementY: function(event) {
                                if ("movementY" in event) {
                                    return event.movementY;
                                }
                                return lastMovementY;
                            }
                        });
                        var SyntheticMouseEvent = createSyntheticEvent(MouseEventInterface);
                        var DragEventInterface = assign({}, MouseEventInterface, {
                            dataTransfer: 0
                        });
                        var SyntheticDragEvent = createSyntheticEvent(DragEventInterface);
                        var FocusEventInterface = assign({}, UIEventInterface, {
                            relatedTarget: 0
                        });
                        var SyntheticFocusEvent = createSyntheticEvent(FocusEventInterface);
                        var AnimationEventInterface = assign({}, EventInterface, {
                            animationName: 0,
                            elapsedTime: 0,
                            pseudoElement: 0
                        });
                        var SyntheticAnimationEvent = createSyntheticEvent(AnimationEventInterface);
                        var ClipboardEventInterface = assign({}, EventInterface, {
                            clipboardData: function(event) {
                                return "clipboardData" in event ? event.clipboardData : window.clipboardData;
                            }
                        });
                        var SyntheticClipboardEvent = createSyntheticEvent(ClipboardEventInterface);
                        var CompositionEventInterface = assign({}, EventInterface, {
                            data: 0
                        });
                        var SyntheticCompositionEvent = createSyntheticEvent(CompositionEventInterface);
                        var SyntheticInputEvent = SyntheticCompositionEvent;
                        var normalizeKey = {
                            Esc: "Escape",
                            Spacebar: " ",
                            Left: "ArrowLeft",
                            Up: "ArrowUp",
                            Right: "ArrowRight",
                            Down: "ArrowDown",
                            Del: "Delete",
                            Win: "OS",
                            Menu: "ContextMenu",
                            Apps: "ContextMenu",
                            Scroll: "ScrollLock",
                            MozPrintableKey: "Unidentified"
                        };
                        var translateToKey = {
                            "8": "Backspace",
                            "9": "Tab",
                            "12": "Clear",
                            "13": "Enter",
                            "16": "Shift",
                            "17": "Control",
                            "18": "Alt",
                            "19": "Pause",
                            "20": "CapsLock",
                            "27": "Escape",
                            "32": " ",
                            "33": "PageUp",
                            "34": "PageDown",
                            "35": "End",
                            "36": "Home",
                            "37": "ArrowLeft",
                            "38": "ArrowUp",
                            "39": "ArrowRight",
                            "40": "ArrowDown",
                            "45": "Insert",
                            "46": "Delete",
                            "112": "F1",
                            "113": "F2",
                            "114": "F3",
                            "115": "F4",
                            "116": "F5",
                            "117": "F6",
                            "118": "F7",
                            "119": "F8",
                            "120": "F9",
                            "121": "F10",
                            "122": "F11",
                            "123": "F12",
                            "144": "NumLock",
                            "145": "ScrollLock",
                            "224": "Meta"
                        };
                        function getEventKey(nativeEvent) {
                            if (nativeEvent.key) {
                                var key = normalizeKey[nativeEvent.key] || nativeEvent.key;
                                if (key !== "Unidentified") {
                                    return key;
                                }
                            }
                            if (nativeEvent.type === "keypress") {
                                var charCode = getEventCharCode(nativeEvent);
                                return charCode === 13 ? "Enter" : String.fromCharCode(charCode);
                            }
                            if (nativeEvent.type === "keydown" || nativeEvent.type === "keyup") {
                                return translateToKey[nativeEvent.keyCode] || "Unidentified";
                            }
                            return "";
                        }
                        var modifierKeyToProp = {
                            Alt: "altKey",
                            Control: "ctrlKey",
                            Meta: "metaKey",
                            Shift: "shiftKey"
                        };
                        function modifierStateGetter(keyArg) {
                            var syntheticEvent = this;
                            var nativeEvent = syntheticEvent.nativeEvent;
                            if (nativeEvent.getModifierState) {
                                return nativeEvent.getModifierState(keyArg);
                            }
                            var keyProp = modifierKeyToProp[keyArg];
                            return keyProp ? !!nativeEvent[keyProp] : false;
                        }
                        function getEventModifierState(nativeEvent) {
                            return modifierStateGetter;
                        }
                        var KeyboardEventInterface = assign({}, UIEventInterface, {
                            key: getEventKey,
                            code: 0,
                            location: 0,
                            ctrlKey: 0,
                            shiftKey: 0,
                            altKey: 0,
                            metaKey: 0,
                            repeat: 0,
                            locale: 0,
                            getModifierState: getEventModifierState,
                            // Legacy Interface
                            charCode: function(event) {
                                if (event.type === "keypress") {
                                    return getEventCharCode(event);
                                }
                                return 0;
                            },
                            keyCode: function(event) {
                                if (event.type === "keydown" || event.type === "keyup") {
                                    return event.keyCode;
                                }
                                return 0;
                            },
                            which: function(event) {
                                if (event.type === "keypress") {
                                    return getEventCharCode(event);
                                }
                                if (event.type === "keydown" || event.type === "keyup") {
                                    return event.keyCode;
                                }
                                return 0;
                            }
                        });
                        var SyntheticKeyboardEvent = createSyntheticEvent(KeyboardEventInterface);
                        var PointerEventInterface = assign({}, MouseEventInterface, {
                            pointerId: 0,
                            width: 0,
                            height: 0,
                            pressure: 0,
                            tangentialPressure: 0,
                            tiltX: 0,
                            tiltY: 0,
                            twist: 0,
                            pointerType: 0,
                            isPrimary: 0
                        });
                        var SyntheticPointerEvent = createSyntheticEvent(PointerEventInterface);
                        var TouchEventInterface = assign({}, UIEventInterface, {
                            touches: 0,
                            targetTouches: 0,
                            changedTouches: 0,
                            altKey: 0,
                            metaKey: 0,
                            ctrlKey: 0,
                            shiftKey: 0,
                            getModifierState: getEventModifierState
                        });
                        var SyntheticTouchEvent = createSyntheticEvent(TouchEventInterface);
                        var TransitionEventInterface = assign({}, EventInterface, {
                            propertyName: 0,
                            elapsedTime: 0,
                            pseudoElement: 0
                        });
                        var SyntheticTransitionEvent = createSyntheticEvent(TransitionEventInterface);
                        var WheelEventInterface = assign({}, MouseEventInterface, {
                            deltaX: function(event) {
                                return "deltaX" in event ? event.deltaX : (
                                    // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
                                    "wheelDeltaX" in event ? -event.wheelDeltaX : 0
                                );
                            },
                            deltaY: function(event) {
                                return "deltaY" in event ? event.deltaY : (
                                    // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
                                    "wheelDeltaY" in event ? -event.wheelDeltaY : (
                                        // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
                                        "wheelDelta" in event ? -event.wheelDelta : 0
                                    )
                                );
                            },
                            deltaZ: 0,
                            // Browsers without "deltaMode" is reporting in raw wheel delta where one
                            // notch on the scroll is always +/- 120, roughly equivalent to pixels.
                            // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
                            // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
                            deltaMode: 0
                        });
                        var SyntheticWheelEvent = createSyntheticEvent(WheelEventInterface);
                        var END_KEYCODES = [9, 13, 27, 32];
                        var START_KEYCODE = 229;
                        var canUseCompositionEvent = canUseDOM && "CompositionEvent" in window;
                        var documentMode = null;
                        if (canUseDOM && "documentMode" in document) {
                            documentMode = document.documentMode;
                        }
                        var canUseTextInputEvent = canUseDOM && "TextEvent" in window && !documentMode;
                        var useFallbackCompositionData = canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);
                        var SPACEBAR_CODE = 32;
                        var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE);
                        function registerEvents() {
                            registerTwoPhaseEvent("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]);
                            registerTwoPhaseEvent("onCompositionEnd", ["compositionend", "focusout", "keydown", "keypress", "keyup", "mousedown"]);
                            registerTwoPhaseEvent("onCompositionStart", ["compositionstart", "focusout", "keydown", "keypress", "keyup", "mousedown"]);
                            registerTwoPhaseEvent("onCompositionUpdate", ["compositionupdate", "focusout", "keydown", "keypress", "keyup", "mousedown"]);
                        }
                        var hasSpaceKeypress = false;
                        function isKeypressCommand(nativeEvent) {
                            return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) && // ctrlKey && altKey is equivalent to AltGr, and is not a command.
                                !(nativeEvent.ctrlKey && nativeEvent.altKey);
                        }
                        function getCompositionEventType(domEventName) {
                            switch (domEventName) {
                                case "compositionstart":
                                    return "onCompositionStart";
                                case "compositionend":
                                    return "onCompositionEnd";
                                case "compositionupdate":
                                    return "onCompositionUpdate";
                            }
                        }
                        function isFallbackCompositionStart(domEventName, nativeEvent) {
                            return domEventName === "keydown" && nativeEvent.keyCode === START_KEYCODE;
                        }
                        function isFallbackCompositionEnd(domEventName, nativeEvent) {
                            switch (domEventName) {
                                case "keyup":
                                    return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;
                                case "keydown":
                                    return nativeEvent.keyCode !== START_KEYCODE;
                                case "keypress":
                                case "mousedown":
                                case "focusout":
                                    return true;
                                default:
                                    return false;
                            }
                        }
                        function getDataFromCustomEvent(nativeEvent) {
                            var detail = nativeEvent.detail;
                            if (typeof detail === "object" && "data" in detail) {
                                return detail.data;
                            }
                            return null;
                        }
                        function isUsingKoreanIME(nativeEvent) {
                            return nativeEvent.locale === "ko";
                        }
                        var isComposing = false;
                        function extractCompositionEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget) {
                            var eventType;
                            var fallbackData;
                            if (canUseCompositionEvent) {
                                eventType = getCompositionEventType(domEventName);
                            } else if (!isComposing) {
                                if (isFallbackCompositionStart(domEventName, nativeEvent)) {
                                    eventType = "onCompositionStart";
                                }
                            } else if (isFallbackCompositionEnd(domEventName, nativeEvent)) {
                                eventType = "onCompositionEnd";
                            }
                            if (!eventType) {
                                return null;
                            }
                            if (useFallbackCompositionData && !isUsingKoreanIME(nativeEvent)) {
                                if (!isComposing && eventType === "onCompositionStart") {
                                    isComposing = initialize(nativeEventTarget);
                                } else if (eventType === "onCompositionEnd") {
                                    if (isComposing) {
                                        fallbackData = getData();
                                    }
                                }
                            }
                            var listeners = accumulateTwoPhaseListeners(targetInst, eventType);
                            if (listeners.length > 0) {
                                var event = new SyntheticCompositionEvent(eventType, domEventName, null, nativeEvent, nativeEventTarget);
                                dispatchQueue.push({
                                    event,
                                    listeners
                                });
                                if (fallbackData) {
                                    event.data = fallbackData;
                                } else {
                                    var customData = getDataFromCustomEvent(nativeEvent);
                                    if (customData !== null) {
                                        event.data = customData;
                                    }
                                }
                            }
                        }
                        function getNativeBeforeInputChars(domEventName, nativeEvent) {
                            switch (domEventName) {
                                case "compositionend":
                                    return getDataFromCustomEvent(nativeEvent);
                                case "keypress":
                                    var which = nativeEvent.which;
                                    if (which !== SPACEBAR_CODE) {
                                        return null;
                                    }
                                    hasSpaceKeypress = true;
                                    return SPACEBAR_CHAR;
                                case "textInput":
                                    var chars = nativeEvent.data;
                                    if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
                                        return null;
                                    }
                                    return chars;
                                default:
                                    return null;
                            }
                        }
                        function getFallbackBeforeInputChars(domEventName, nativeEvent) {
                            if (isComposing) {
                                if (domEventName === "compositionend" || !canUseCompositionEvent && isFallbackCompositionEnd(domEventName, nativeEvent)) {
                                    var chars = getData();
                                    reset();
                                    isComposing = false;
                                    return chars;
                                }
                                return null;
                            }
                            switch (domEventName) {
                                case "paste":
                                    return null;
                                case "keypress":
                                    if (!isKeypressCommand(nativeEvent)) {
                                        if (nativeEvent.char && nativeEvent.char.length > 1) {
                                            return nativeEvent.char;
                                        } else if (nativeEvent.which) {
                                            return String.fromCharCode(nativeEvent.which);
                                        }
                                    }
                                    return null;
                                case "compositionend":
                                    return useFallbackCompositionData && !isUsingKoreanIME(nativeEvent) ? null : nativeEvent.data;
                                default:
                                    return null;
                            }
                        }
                        function extractBeforeInputEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget) {
                            var chars;
                            if (canUseTextInputEvent) {
                                chars = getNativeBeforeInputChars(domEventName, nativeEvent);
                            } else {
                                chars = getFallbackBeforeInputChars(domEventName, nativeEvent);
                            }
                            if (!chars) {
                                return null;
                            }
                            var listeners = accumulateTwoPhaseListeners(targetInst, "onBeforeInput");
                            if (listeners.length > 0) {
                                var event = new SyntheticInputEvent("onBeforeInput", "beforeinput", null, nativeEvent, nativeEventTarget);
                                dispatchQueue.push({
                                    event,
                                    listeners
                                });
                                event.data = chars;
                            }
                        }
                        function extractEvents(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
                            extractCompositionEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
                            extractBeforeInputEvent(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
                        }
                        var supportedInputTypes = {
                            color: true,
                            date: true,
                            datetime: true,
                            "datetime-local": true,
                            email: true,
                            month: true,
                            number: true,
                            password: true,
                            range: true,
                            search: true,
                            tel: true,
                            text: true,
                            time: true,
                            url: true,
                            week: true
                        };
                        function isTextInputElement(elem) {
                            var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
                            if (nodeName === "input") {
                                return !!supportedInputTypes[elem.type];
                            }
                            if (nodeName === "textarea") {
                                return true;
                            }
                            return false;
                        }
                        function isEventSupported(eventNameSuffix) {
                            if (!canUseDOM) {
                                return false;
                            }
                            var eventName = "on" + eventNameSuffix;
                            var isSupported = eventName in document;
                            if (!isSupported) {
                                var element = document.createElement("div");
                                element.setAttribute(eventName, "return;");
                                isSupported = typeof element[eventName] === "function";
                            }
                            return isSupported;
                        }
                        function registerEvents$1() {
                            registerTwoPhaseEvent("onChange", ["change", "click", "focusin", "focusout", "input", "keydown", "keyup", "selectionchange"]);
                        }
                        function createAndAccumulateChangeEvent(dispatchQueue, inst, nativeEvent, target2) {
                            enqueueStateRestore(target2);
                            var listeners = accumulateTwoPhaseListeners(inst, "onChange");
                            if (listeners.length > 0) {
                                var event = new SyntheticEvent("onChange", "change", null, nativeEvent, target2);
                                dispatchQueue.push({
                                    event,
                                    listeners
                                });
                            }
                        }
                        var activeElement = null;
                        var activeElementInst = null;
                        function shouldUseChangeEvent(elem) {
                            var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
                            return nodeName === "select" || nodeName === "input" && elem.type === "file";
                        }
                        function manualDispatchChangeEvent(nativeEvent) {
                            var dispatchQueue = [];
                            createAndAccumulateChangeEvent(dispatchQueue, activeElementInst, nativeEvent, getEventTarget(nativeEvent));
                            batchedUpdates(runEventInBatch, dispatchQueue);
                        }
                        function runEventInBatch(dispatchQueue) {
                            processDispatchQueue(dispatchQueue, 0);
                        }
                        function getInstIfValueChanged(targetInst) {
                            var targetNode = getNodeFromInstance(targetInst);
                            if (updateValueIfChanged(targetNode)) {
                                return targetInst;
                            }
                        }
                        function getTargetInstForChangeEvent(domEventName, targetInst) {
                            if (domEventName === "change") {
                                return targetInst;
                            }
                        }
                        var isInputEventSupported = false;
                        if (canUseDOM) {
                            isInputEventSupported = isEventSupported("input") && (!document.documentMode || document.documentMode > 9);
                        }
                        function startWatchingForValueChange(target2, targetInst) {
                            activeElement = target2;
                            activeElementInst = targetInst;
                            activeElement.attachEvent("onpropertychange", handlePropertyChange);
                        }
                        function stopWatchingForValueChange() {
                            if (!activeElement) {
                                return;
                            }
                            activeElement.detachEvent("onpropertychange", handlePropertyChange);
                            activeElement = null;
                            activeElementInst = null;
                        }
                        function handlePropertyChange(nativeEvent) {
                            if (nativeEvent.propertyName !== "value") {
                                return;
                            }
                            if (getInstIfValueChanged(activeElementInst)) {
                                manualDispatchChangeEvent(nativeEvent);
                            }
                        }
                        function handleEventsForInputEventPolyfill(domEventName, target2, targetInst) {
                            if (domEventName === "focusin") {
                                stopWatchingForValueChange();
                                startWatchingForValueChange(target2, targetInst);
                            } else if (domEventName === "focusout") {
                                stopWatchingForValueChange();
                            }
                        }
                        function getTargetInstForInputEventPolyfill(domEventName, targetInst) {
                            if (domEventName === "selectionchange" || domEventName === "keyup" || domEventName === "keydown") {
                                return getInstIfValueChanged(activeElementInst);
                            }
                        }
                        function shouldUseClickEvent(elem) {
                            var nodeName = elem.nodeName;
                            return nodeName && nodeName.toLowerCase() === "input" && (elem.type === "checkbox" || elem.type === "radio");
                        }
                        function getTargetInstForClickEvent(domEventName, targetInst) {
                            if (domEventName === "click") {
                                return getInstIfValueChanged(targetInst);
                            }
                        }
                        function getTargetInstForInputOrChangeEvent(domEventName, targetInst) {
                            if (domEventName === "input" || domEventName === "change") {
                                return getInstIfValueChanged(targetInst);
                            }
                        }
                        function handleControlledInputBlur(node) {
                            var state = node._wrapperState;
                            if (!state || !state.controlled || node.type !== "number") {
                                return;
                            }
                            {
                                setDefaultValue(node, "number", node.value);
                            }
                        }
                        function extractEvents$1(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
                            var targetNode = targetInst ? getNodeFromInstance(targetInst) : window;
                            var getTargetInstFunc, handleEventFunc;
                            if (shouldUseChangeEvent(targetNode)) {
                                getTargetInstFunc = getTargetInstForChangeEvent;
                            } else if (isTextInputElement(targetNode)) {
                                if (isInputEventSupported) {
                                    getTargetInstFunc = getTargetInstForInputOrChangeEvent;
                                } else {
                                    getTargetInstFunc = getTargetInstForInputEventPolyfill;
                                    handleEventFunc = handleEventsForInputEventPolyfill;
                                }
                            } else if (shouldUseClickEvent(targetNode)) {
                                getTargetInstFunc = getTargetInstForClickEvent;
                            }
                            if (getTargetInstFunc) {
                                var inst = getTargetInstFunc(domEventName, targetInst);
                                if (inst) {
                                    createAndAccumulateChangeEvent(dispatchQueue, inst, nativeEvent, nativeEventTarget);
                                    return;
                                }
                            }
                            if (handleEventFunc) {
                                handleEventFunc(domEventName, targetNode, targetInst);
                            }
                            if (domEventName === "focusout") {
                                handleControlledInputBlur(targetNode);
                            }
                        }
                        function registerEvents$2() {
                            registerDirectEvent("onMouseEnter", ["mouseout", "mouseover"]);
                            registerDirectEvent("onMouseLeave", ["mouseout", "mouseover"]);
                            registerDirectEvent("onPointerEnter", ["pointerout", "pointerover"]);
                            registerDirectEvent("onPointerLeave", ["pointerout", "pointerover"]);
                        }
                        function extractEvents$2(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
                            var isOverEvent = domEventName === "mouseover" || domEventName === "pointerover";
                            var isOutEvent = domEventName === "mouseout" || domEventName === "pointerout";
                            if (isOverEvent && !isReplayingEvent(nativeEvent)) {
                                var related = nativeEvent.relatedTarget || nativeEvent.fromElement;
                                if (related) {
                                    if (getClosestInstanceFromNode(related) || isContainerMarkedAsRoot(related)) {
                                        return;
                                    }
                                }
                            }
                            if (!isOutEvent && !isOverEvent) {
                                return;
                            }
                            var win;
                            if (nativeEventTarget.window === nativeEventTarget) {
                                win = nativeEventTarget;
                            } else {
                                var doc = nativeEventTarget.ownerDocument;
                                if (doc) {
                                    win = doc.defaultView || doc.parentWindow;
                                } else {
                                    win = window;
                                }
                            }
                            var from;
                            var to;
                            if (isOutEvent) {
                                var _related = nativeEvent.relatedTarget || nativeEvent.toElement;
                                from = targetInst;
                                to = _related ? getClosestInstanceFromNode(_related) : null;
                                if (to !== null) {
                                    var nearestMounted = getNearestMountedFiber(to);
                                    if (to !== nearestMounted || to.tag !== HostComponent && to.tag !== HostText) {
                                        to = null;
                                    }
                                }
                            } else {
                                from = null;
                                to = targetInst;
                            }
                            if (from === to) {
                                return;
                            }
                            var SyntheticEventCtor = SyntheticMouseEvent;
                            var leaveEventType = "onMouseLeave";
                            var enterEventType = "onMouseEnter";
                            var eventTypePrefix = "mouse";
                            if (domEventName === "pointerout" || domEventName === "pointerover") {
                                SyntheticEventCtor = SyntheticPointerEvent;
                                leaveEventType = "onPointerLeave";
                                enterEventType = "onPointerEnter";
                                eventTypePrefix = "pointer";
                            }
                            var fromNode = from == null ? win : getNodeFromInstance(from);
                            var toNode = to == null ? win : getNodeFromInstance(to);
                            var leave = new SyntheticEventCtor(leaveEventType, eventTypePrefix + "leave", from, nativeEvent, nativeEventTarget);
                            leave.target = fromNode;
                            leave.relatedTarget = toNode;
                            var enter = null;
                            var nativeTargetInst = getClosestInstanceFromNode(nativeEventTarget);
                            if (nativeTargetInst === targetInst) {
                                var enterEvent = new SyntheticEventCtor(enterEventType, eventTypePrefix + "enter", to, nativeEvent, nativeEventTarget);
                                enterEvent.target = toNode;
                                enterEvent.relatedTarget = fromNode;
                                enter = enterEvent;
                            }
                            accumulateEnterLeaveTwoPhaseListeners(dispatchQueue, leave, enter, from, to);
                        }
                        function is(x, y) {
                            return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y;
                        }
                        var objectIs = typeof Object.is === "function" ? Object.is : is;
                        function shallowEqual(objA, objB) {
                            if (objectIs(objA, objB)) {
                                return true;
                            }
                            if (typeof objA !== "object" || objA === null || typeof objB !== "object" || objB === null) {
                                return false;
                            }
                            var keysA = Object.keys(objA);
                            var keysB = Object.keys(objB);
                            if (keysA.length !== keysB.length) {
                                return false;
                            }
                            for (var i = 0; i < keysA.length; i++) {
                                var currentKey = keysA[i];
                                if (!hasOwnProperty.call(objB, currentKey) || !objectIs(objA[currentKey], objB[currentKey])) {
                                    return false;
                                }
                            }
                            return true;
                        }
                        function getLeafNode(node) {
                            while (node && node.firstChild) {
                                node = node.firstChild;
                            }
                            return node;
                        }
                        function getSiblingNode(node) {
                            while (node) {
                                if (node.nextSibling) {
                                    return node.nextSibling;
                                }
                                node = node.parentNode;
                            }
                        }
                        function getNodeForCharacterOffset(root2, offset) {
                            var node = getLeafNode(root2);
                            var nodeStart = 0;
                            var nodeEnd = 0;
                            while (node) {
                                if (node.nodeType === TEXT_NODE) {
                                    nodeEnd = nodeStart + node.textContent.length;
                                    if (nodeStart <= offset && nodeEnd >= offset) {
                                        return {
                                            node,
                                            offset: offset - nodeStart
                                        };
                                    }
                                    nodeStart = nodeEnd;
                                }
                                node = getLeafNode(getSiblingNode(node));
                            }
                        }
                        function getOffsets(outerNode) {
                            var ownerDocument = outerNode.ownerDocument;
                            var win = ownerDocument && ownerDocument.defaultView || window;
                            var selection = win.getSelection && win.getSelection();
                            if (!selection || selection.rangeCount === 0) {
                                return null;
                            }
                            var anchorNode = selection.anchorNode, anchorOffset = selection.anchorOffset, focusNode = selection.focusNode, focusOffset = selection.focusOffset;
                            try {
                                anchorNode.nodeType;
                                focusNode.nodeType;
                            } catch (e) {
                                return null;
                            }
                            return getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset);
                        }
                        function getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset) {
                            var length = 0;
                            var start = -1;
                            var end = -1;
                            var indexWithinAnchor = 0;
                            var indexWithinFocus = 0;
                            var node = outerNode;
                            var parentNode = null;
                            outer:
                                while (true) {
                                    var next = null;
                                    while (true) {
                                        if (node === anchorNode && (anchorOffset === 0 || node.nodeType === TEXT_NODE)) {
                                            start = length + anchorOffset;
                                        }
                                        if (node === focusNode && (focusOffset === 0 || node.nodeType === TEXT_NODE)) {
                                            end = length + focusOffset;
                                        }
                                        if (node.nodeType === TEXT_NODE) {
                                            length += node.nodeValue.length;
                                        }
                                        if ((next = node.firstChild) === null) {
                                            break;
                                        }
                                        parentNode = node;
                                        node = next;
                                    }
                                    while (true) {
                                        if (node === outerNode) {
                                            break outer;
                                        }
                                        if (parentNode === anchorNode && ++indexWithinAnchor === anchorOffset) {
                                            start = length;
                                        }
                                        if (parentNode === focusNode && ++indexWithinFocus === focusOffset) {
                                            end = length;
                                        }
                                        if ((next = node.nextSibling) !== null) {
                                            break;
                                        }
                                        node = parentNode;
                                        parentNode = node.parentNode;
                                    }
                                    node = next;
                                }
                            if (start === -1 || end === -1) {
                                return null;
                            }
                            return {
                                start,
                                end
                            };
                        }
                        function setOffsets(node, offsets) {
                            var doc = node.ownerDocument || document;
                            var win = doc && doc.defaultView || window;
                            if (!win.getSelection) {
                                return;
                            }
                            var selection = win.getSelection();
                            var length = node.textContent.length;
                            var start = Math.min(offsets.start, length);
                            var end = offsets.end === void 0 ? start : Math.min(offsets.end, length);
                            if (!selection.extend && start > end) {
                                var temp = end;
                                end = start;
                                start = temp;
                            }
                            var startMarker = getNodeForCharacterOffset(node, start);
                            var endMarker = getNodeForCharacterOffset(node, end);
                            if (startMarker && endMarker) {
                                if (selection.rangeCount === 1 && selection.anchorNode === startMarker.node && selection.anchorOffset === startMarker.offset && selection.focusNode === endMarker.node && selection.focusOffset === endMarker.offset) {
                                    return;
                                }
                                var range = doc.createRange();
                                range.setStart(startMarker.node, startMarker.offset);
                                selection.removeAllRanges();
                                if (start > end) {
                                    selection.addRange(range);
                                    selection.extend(endMarker.node, endMarker.offset);
                                } else {
                                    range.setEnd(endMarker.node, endMarker.offset);
                                    selection.addRange(range);
                                }
                            }
                        }
                        function isTextNode(node) {
                            return node && node.nodeType === TEXT_NODE;
                        }
                        function containsNode(outerNode, innerNode) {
                            if (!outerNode || !innerNode) {
                                return false;
                            } else if (outerNode === innerNode) {
                                return true;
                            } else if (isTextNode(outerNode)) {
                                return false;
                            } else if (isTextNode(innerNode)) {
                                return containsNode(outerNode, innerNode.parentNode);
                            } else if ("contains" in outerNode) {
                                return outerNode.contains(innerNode);
                            } else if (outerNode.compareDocumentPosition) {
                                return !!(outerNode.compareDocumentPosition(innerNode) & 16);
                            } else {
                                return false;
                            }
                        }
                        function isInDocument(node) {
                            return node && node.ownerDocument && containsNode(node.ownerDocument.documentElement, node);
                        }
                        function isSameOriginFrame(iframe) {
                            try {
                                return typeof iframe.contentWindow.location.href === "string";
                            } catch (err) {
                                return false;
                            }
                        }
                        function getActiveElementDeep() {
                            var win = window;
                            var element = getActiveElement();
                            while (element instanceof win.HTMLIFrameElement) {
                                if (isSameOriginFrame(element)) {
                                    win = element.contentWindow;
                                } else {
                                    return element;
                                }
                                element = getActiveElement(win.document);
                            }
                            return element;
                        }
                        function hasSelectionCapabilities(elem) {
                            var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
                            return nodeName && (nodeName === "input" && (elem.type === "text" || elem.type === "search" || elem.type === "tel" || elem.type === "url" || elem.type === "password") || nodeName === "textarea" || elem.contentEditable === "true");
                        }
                        function getSelectionInformation() {
                            var focusedElem = getActiveElementDeep();
                            return {
                                focusedElem,
                                selectionRange: hasSelectionCapabilities(focusedElem) ? getSelection(focusedElem) : null
                            };
                        }
                        function restoreSelection(priorSelectionInformation) {
                            var curFocusedElem = getActiveElementDeep();
                            var priorFocusedElem = priorSelectionInformation.focusedElem;
                            var priorSelectionRange = priorSelectionInformation.selectionRange;
                            if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
                                if (priorSelectionRange !== null && hasSelectionCapabilities(priorFocusedElem)) {
                                    setSelection(priorFocusedElem, priorSelectionRange);
                                }
                                var ancestors = [];
                                var ancestor = priorFocusedElem;
                                while (ancestor = ancestor.parentNode) {
                                    if (ancestor.nodeType === ELEMENT_NODE) {
                                        ancestors.push({
                                            element: ancestor,
                                            left: ancestor.scrollLeft,
                                            top: ancestor.scrollTop
                                        });
                                    }
                                }
                                if (typeof priorFocusedElem.focus === "function") {
                                    priorFocusedElem.focus();
                                }
                                for (var i = 0; i < ancestors.length; i++) {
                                    var info = ancestors[i];
                                    info.element.scrollLeft = info.left;
                                    info.element.scrollTop = info.top;
                                }
                            }
                        }
                        function getSelection(input) {
                            var selection;
                            if ("selectionStart" in input) {
                                selection = {
                                    start: input.selectionStart,
                                    end: input.selectionEnd
                                };
                            } else {
                                selection = getOffsets(input);
                            }
                            return selection || {
                                start: 0,
                                end: 0
                            };
                        }
                        function setSelection(input, offsets) {
                            var start = offsets.start;
                            var end = offsets.end;
                            if (end === void 0) {
                                end = start;
                            }
                            if ("selectionStart" in input) {
                                input.selectionStart = start;
                                input.selectionEnd = Math.min(end, input.value.length);
                            } else {
                                setOffsets(input, offsets);
                            }
                        }
                        var skipSelectionChangeEvent = canUseDOM && "documentMode" in document && document.documentMode <= 11;
                        function registerEvents$3() {
                            registerTwoPhaseEvent("onSelect", ["focusout", "contextmenu", "dragend", "focusin", "keydown", "keyup", "mousedown", "mouseup", "selectionchange"]);
                        }
                        var activeElement$1 = null;
                        var activeElementInst$1 = null;
                        var lastSelection = null;
                        var mouseDown = false;
                        function getSelection$1(node) {
                            if ("selectionStart" in node && hasSelectionCapabilities(node)) {
                                return {
                                    start: node.selectionStart,
                                    end: node.selectionEnd
                                };
                            } else {
                                var win = node.ownerDocument && node.ownerDocument.defaultView || window;
                                var selection = win.getSelection();
                                return {
                                    anchorNode: selection.anchorNode,
                                    anchorOffset: selection.anchorOffset,
                                    focusNode: selection.focusNode,
                                    focusOffset: selection.focusOffset
                                };
                            }
                        }
                        function getEventTargetDocument(eventTarget) {
                            return eventTarget.window === eventTarget ? eventTarget.document : eventTarget.nodeType === DOCUMENT_NODE ? eventTarget : eventTarget.ownerDocument;
                        }
                        function constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget) {
                            var doc = getEventTargetDocument(nativeEventTarget);
                            if (mouseDown || activeElement$1 == null || activeElement$1 !== getActiveElement(doc)) {
                                return;
                            }
                            var currentSelection = getSelection$1(activeElement$1);
                            if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
                                lastSelection = currentSelection;
                                var listeners = accumulateTwoPhaseListeners(activeElementInst$1, "onSelect");
                                if (listeners.length > 0) {
                                    var event = new SyntheticEvent("onSelect", "select", null, nativeEvent, nativeEventTarget);
                                    dispatchQueue.push({
                                        event,
                                        listeners
                                    });
                                    event.target = activeElement$1;
                                }
                            }
                        }
                        function extractEvents$3(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
                            var targetNode = targetInst ? getNodeFromInstance(targetInst) : window;
                            switch (domEventName) {
                                case "focusin":
                                    if (isTextInputElement(targetNode) || targetNode.contentEditable === "true") {
                                        activeElement$1 = targetNode;
                                        activeElementInst$1 = targetInst;
                                        lastSelection = null;
                                    }
                                    break;
                                case "focusout":
                                    activeElement$1 = null;
                                    activeElementInst$1 = null;
                                    lastSelection = null;
                                    break;
                                case "mousedown":
                                    mouseDown = true;
                                    break;
                                case "contextmenu":
                                case "mouseup":
                                case "dragend":
                                    mouseDown = false;
                                    constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
                                    break;
                                case "selectionchange":
                                    if (skipSelectionChangeEvent) {
                                        break;
                                    }
                                case "keydown":
                                case "keyup":
                                    constructSelectEvent(dispatchQueue, nativeEvent, nativeEventTarget);
                            }
                        }
                        function makePrefixMap(styleProp, eventName) {
                            var prefixes2 = {};
                            prefixes2[styleProp.toLowerCase()] = eventName.toLowerCase();
                            prefixes2["Webkit" + styleProp] = "webkit" + eventName;
                            prefixes2["Moz" + styleProp] = "moz" + eventName;
                            return prefixes2;
                        }
                        var vendorPrefixes = {
                            animationend: makePrefixMap("Animation", "AnimationEnd"),
                            animationiteration: makePrefixMap("Animation", "AnimationIteration"),
                            animationstart: makePrefixMap("Animation", "AnimationStart"),
                            transitionend: makePrefixMap("Transition", "TransitionEnd")
                        };
                        var prefixedEventNames = {};
                        var style = {};
                        if (canUseDOM) {
                            style = document.createElement("div").style;
                            if (!("AnimationEvent" in window)) {
                                delete vendorPrefixes.animationend.animation;
                                delete vendorPrefixes.animationiteration.animation;
                                delete vendorPrefixes.animationstart.animation;
                            }
                            if (!("TransitionEvent" in window)) {
                                delete vendorPrefixes.transitionend.transition;
                            }
                        }
                        function getVendorPrefixedEventName(eventName) {
                            if (prefixedEventNames[eventName]) {
                                return prefixedEventNames[eventName];
                            } else if (!vendorPrefixes[eventName]) {
                                return eventName;
                            }
                            var prefixMap = vendorPrefixes[eventName];
                            for (var styleProp in prefixMap) {
                                if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
                                    return prefixedEventNames[eventName] = prefixMap[styleProp];
                                }
                            }
                            return eventName;
                        }
                        var ANIMATION_END = getVendorPrefixedEventName("animationend");
                        var ANIMATION_ITERATION = getVendorPrefixedEventName("animationiteration");
                        var ANIMATION_START = getVendorPrefixedEventName("animationstart");
                        var TRANSITION_END = getVendorPrefixedEventName("transitionend");
                        var topLevelEventsToReactNames = /* @__PURE__ */ new Map();
                        var simpleEventPluginEvents = ["abort", "auxClick", "cancel", "canPlay", "canPlayThrough", "click", "close", "contextMenu", "copy", "cut", "drag", "dragEnd", "dragEnter", "dragExit", "dragLeave", "dragOver", "dragStart", "drop", "durationChange", "emptied", "encrypted", "ended", "error", "gotPointerCapture", "input", "invalid", "keyDown", "keyPress", "keyUp", "load", "loadedData", "loadedMetadata", "loadStart", "lostPointerCapture", "mouseDown", "mouseMove", "mouseOut", "mouseOver", "mouseUp", "paste", "pause", "play", "playing", "pointerCancel", "pointerDown", "pointerMove", "pointerOut", "pointerOver", "pointerUp", "progress", "rateChange", "reset", "resize", "seeked", "seeking", "stalled", "submit", "suspend", "timeUpdate", "touchCancel", "touchEnd", "touchStart", "volumeChange", "scroll", "toggle", "touchMove", "waiting", "wheel"];
                        function registerSimpleEvent(domEventName, reactName) {
                            topLevelEventsToReactNames.set(domEventName, reactName);
                            registerTwoPhaseEvent(reactName, [domEventName]);
                        }
                        function registerSimpleEvents() {
                            for (var i = 0; i < simpleEventPluginEvents.length; i++) {
                                var eventName = simpleEventPluginEvents[i];
                                var domEventName = eventName.toLowerCase();
                                var capitalizedEvent = eventName[0].toUpperCase() + eventName.slice(1);
                                registerSimpleEvent(domEventName, "on" + capitalizedEvent);
                            }
                            registerSimpleEvent(ANIMATION_END, "onAnimationEnd");
                            registerSimpleEvent(ANIMATION_ITERATION, "onAnimationIteration");
                            registerSimpleEvent(ANIMATION_START, "onAnimationStart");
                            registerSimpleEvent("dblclick", "onDoubleClick");
                            registerSimpleEvent("focusin", "onFocus");
                            registerSimpleEvent("focusout", "onBlur");
                            registerSimpleEvent(TRANSITION_END, "onTransitionEnd");
                        }
                        function extractEvents$4(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
                            var reactName = topLevelEventsToReactNames.get(domEventName);
                            if (reactName === void 0) {
                                return;
                            }
                            var SyntheticEventCtor = SyntheticEvent;
                            var reactEventType = domEventName;
                            switch (domEventName) {
                                case "keypress":
                                    if (getEventCharCode(nativeEvent) === 0) {
                                        return;
                                    }
                                case "keydown":
                                case "keyup":
                                    SyntheticEventCtor = SyntheticKeyboardEvent;
                                    break;
                                case "focusin":
                                    reactEventType = "focus";
                                    SyntheticEventCtor = SyntheticFocusEvent;
                                    break;
                                case "focusout":
                                    reactEventType = "blur";
                                    SyntheticEventCtor = SyntheticFocusEvent;
                                    break;
                                case "beforeblur":
                                case "afterblur":
                                    SyntheticEventCtor = SyntheticFocusEvent;
                                    break;
                                case "click":
                                    if (nativeEvent.button === 2) {
                                        return;
                                    }
                                case "auxclick":
                                case "dblclick":
                                case "mousedown":
                                case "mousemove":
                                case "mouseup":
                                case "mouseout":
                                case "mouseover":
                                case "contextmenu":
                                    SyntheticEventCtor = SyntheticMouseEvent;
                                    break;
                                case "drag":
                                case "dragend":
                                case "dragenter":
                                case "dragexit":
                                case "dragleave":
                                case "dragover":
                                case "dragstart":
                                case "drop":
                                    SyntheticEventCtor = SyntheticDragEvent;
                                    break;
                                case "touchcancel":
                                case "touchend":
                                case "touchmove":
                                case "touchstart":
                                    SyntheticEventCtor = SyntheticTouchEvent;
                                    break;
                                case ANIMATION_END:
                                case ANIMATION_ITERATION:
                                case ANIMATION_START:
                                    SyntheticEventCtor = SyntheticAnimationEvent;
                                    break;
                                case TRANSITION_END:
                                    SyntheticEventCtor = SyntheticTransitionEvent;
                                    break;
                                case "scroll":
                                    SyntheticEventCtor = SyntheticUIEvent;
                                    break;
                                case "wheel":
                                    SyntheticEventCtor = SyntheticWheelEvent;
                                    break;
                                case "copy":
                                case "cut":
                                case "paste":
                                    SyntheticEventCtor = SyntheticClipboardEvent;
                                    break;
                                case "gotpointercapture":
                                case "lostpointercapture":
                                case "pointercancel":
                                case "pointerdown":
                                case "pointermove":
                                case "pointerout":
                                case "pointerover":
                                case "pointerup":
                                    SyntheticEventCtor = SyntheticPointerEvent;
                                    break;
                            }
                            var inCapturePhase = (eventSystemFlags & IS_CAPTURE_PHASE) !== 0;
                            {
                                var accumulateTargetOnly = !inCapturePhase && // TODO: ideally, we'd eventually add all events from
                                    // nonDelegatedEvents list in DOMPluginEventSystem.
                                    // Then we can remove this special list.
                                    // This is a breaking change that can wait until React 18.
                                    domEventName === "scroll";
                                var _listeners = accumulateSinglePhaseListeners(targetInst, reactName, nativeEvent.type, inCapturePhase, accumulateTargetOnly);
                                if (_listeners.length > 0) {
                                    var _event = new SyntheticEventCtor(reactName, reactEventType, null, nativeEvent, nativeEventTarget);
                                    dispatchQueue.push({
                                        event: _event,
                                        listeners: _listeners
                                    });
                                }
                            }
                        }
                        registerSimpleEvents();
                        registerEvents$2();
                        registerEvents$1();
                        registerEvents$3();
                        registerEvents();
                        function extractEvents$5(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags, targetContainer) {
                            extractEvents$4(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
                            var shouldProcessPolyfillPlugins = (eventSystemFlags & SHOULD_NOT_PROCESS_POLYFILL_EVENT_PLUGINS) === 0;
                            if (shouldProcessPolyfillPlugins) {
                                extractEvents$2(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
                                extractEvents$1(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
                                extractEvents$3(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
                                extractEvents(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget);
                            }
                        }
                        var mediaEventTypes = ["abort", "canplay", "canplaythrough", "durationchange", "emptied", "encrypted", "ended", "error", "loadeddata", "loadedmetadata", "loadstart", "pause", "play", "playing", "progress", "ratechange", "resize", "seeked", "seeking", "stalled", "suspend", "timeupdate", "volumechange", "waiting"];
                        var nonDelegatedEvents = new Set(["cancel", "close", "invalid", "load", "scroll", "toggle"].concat(mediaEventTypes));
                        function executeDispatch(event, listener, currentTarget) {
                            var type = event.type || "unknown-event";
                            event.currentTarget = currentTarget;
                            invokeGuardedCallbackAndCatchFirstError(type, listener, void 0, event);
                            event.currentTarget = null;
                        }
                        function processDispatchQueueItemsInOrder(event, dispatchListeners, inCapturePhase) {
                            var previousInstance;
                            if (inCapturePhase) {
                                for (var i = dispatchListeners.length - 1; i >= 0; i--) {
                                    var _dispatchListeners$i = dispatchListeners[i], instance2 = _dispatchListeners$i.instance, currentTarget = _dispatchListeners$i.currentTarget, listener = _dispatchListeners$i.listener;
                                    if (instance2 !== previousInstance && event.isPropagationStopped()) {
                                        return;
                                    }
                                    executeDispatch(event, listener, currentTarget);
                                    previousInstance = instance2;
                                }
                            } else {
                                for (var _i = 0; _i < dispatchListeners.length; _i++) {
                                    var _dispatchListeners$_i = dispatchListeners[_i], _instance = _dispatchListeners$_i.instance, _currentTarget = _dispatchListeners$_i.currentTarget, _listener = _dispatchListeners$_i.listener;
                                    if (_instance !== previousInstance && event.isPropagationStopped()) {
                                        return;
                                    }
                                    executeDispatch(event, _listener, _currentTarget);
                                    previousInstance = _instance;
                                }
                            }
                        }
                        function processDispatchQueue(dispatchQueue, eventSystemFlags) {
                            var inCapturePhase = (eventSystemFlags & IS_CAPTURE_PHASE) !== 0;
                            for (var i = 0; i < dispatchQueue.length; i++) {
                                var _dispatchQueue$i = dispatchQueue[i], event = _dispatchQueue$i.event, listeners = _dispatchQueue$i.listeners;
                                processDispatchQueueItemsInOrder(event, listeners, inCapturePhase);
                            }
                            rethrowCaughtError();
                        }
                        function dispatchEventsForPlugins(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer) {
                            var nativeEventTarget = getEventTarget(nativeEvent);
                            var dispatchQueue = [];
                            extractEvents$5(dispatchQueue, domEventName, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
                            processDispatchQueue(dispatchQueue, eventSystemFlags);
                        }
                        function listenToNonDelegatedEvent(domEventName, targetElement) {
                            {
                                if (!nonDelegatedEvents.has(domEventName)) {
                                    error('Did not expect a listenToNonDelegatedEvent() call for "%s". This is a bug in React. Please file an issue.', domEventName);
                                }
                            }
                            var isCapturePhaseListener = false;
                            var listenerSet = getEventListenerSet(targetElement);
                            var listenerSetKey = getListenerSetKey(domEventName, isCapturePhaseListener);
                            if (!listenerSet.has(listenerSetKey)) {
                                addTrappedEventListener(targetElement, domEventName, IS_NON_DELEGATED, isCapturePhaseListener);
                                listenerSet.add(listenerSetKey);
                            }
                        }
                        function listenToNativeEvent(domEventName, isCapturePhaseListener, target2) {
                            {
                                if (nonDelegatedEvents.has(domEventName) && !isCapturePhaseListener) {
                                    error('Did not expect a listenToNativeEvent() call for "%s" in the bubble phase. This is a bug in React. Please file an issue.', domEventName);
                                }
                            }
                            var eventSystemFlags = 0;
                            if (isCapturePhaseListener) {
                                eventSystemFlags |= IS_CAPTURE_PHASE;
                            }
                            addTrappedEventListener(target2, domEventName, eventSystemFlags, isCapturePhaseListener);
                        }
                        var listeningMarker = "_reactListening" + Math.random().toString(36).slice(2);
                        function listenToAllSupportedEvents(rootContainerElement) {
                            if (!rootContainerElement[listeningMarker]) {
                                rootContainerElement[listeningMarker] = true;
                                allNativeEvents.forEach(function(domEventName) {
                                    if (domEventName !== "selectionchange") {
                                        if (!nonDelegatedEvents.has(domEventName)) {
                                            listenToNativeEvent(domEventName, false, rootContainerElement);
                                        }
                                        listenToNativeEvent(domEventName, true, rootContainerElement);
                                    }
                                });
                                var ownerDocument = rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;
                                if (ownerDocument !== null) {
                                    if (!ownerDocument[listeningMarker]) {
                                        ownerDocument[listeningMarker] = true;
                                        listenToNativeEvent("selectionchange", false, ownerDocument);
                                    }
                                }
                            }
                        }
                        function addTrappedEventListener(targetContainer, domEventName, eventSystemFlags, isCapturePhaseListener, isDeferredListenerForLegacyFBSupport) {
                            var listener = createEventListenerWrapperWithPriority(targetContainer, domEventName, eventSystemFlags);
                            var isPassiveListener = void 0;
                            if (passiveBrowserEventsSupported) {
                                if (domEventName === "touchstart" || domEventName === "touchmove" || domEventName === "wheel") {
                                    isPassiveListener = true;
                                }
                            }
                            targetContainer = targetContainer;
                            var unsubscribeListener;
                            if (isCapturePhaseListener) {
                                if (isPassiveListener !== void 0) {
                                    unsubscribeListener = addEventCaptureListenerWithPassiveFlag(targetContainer, domEventName, listener, isPassiveListener);
                                } else {
                                    unsubscribeListener = addEventCaptureListener(targetContainer, domEventName, listener);
                                }
                            } else {
                                if (isPassiveListener !== void 0) {
                                    unsubscribeListener = addEventBubbleListenerWithPassiveFlag(targetContainer, domEventName, listener, isPassiveListener);
                                } else {
                                    unsubscribeListener = addEventBubbleListener(targetContainer, domEventName, listener);
                                }
                            }
                        }
                        function isMatchingRootContainer(grandContainer, targetContainer) {
                            return grandContainer === targetContainer || grandContainer.nodeType === COMMENT_NODE && grandContainer.parentNode === targetContainer;
                        }
                        function dispatchEventForPluginEventSystem(domEventName, eventSystemFlags, nativeEvent, targetInst, targetContainer) {
                            var ancestorInst = targetInst;
                            if ((eventSystemFlags & IS_EVENT_HANDLE_NON_MANAGED_NODE) === 0 && (eventSystemFlags & IS_NON_DELEGATED) === 0) {
                                var targetContainerNode = targetContainer;
                                if (targetInst !== null) {
                                    var node = targetInst;
                                    mainLoop:
                                        while (true) {
                                            if (node === null) {
                                                return;
                                            }
                                            var nodeTag = node.tag;
                                            if (nodeTag === HostRoot || nodeTag === HostPortal) {
                                                var container = node.stateNode.containerInfo;
                                                if (isMatchingRootContainer(container, targetContainerNode)) {
                                                    break;
                                                }
                                                if (nodeTag === HostPortal) {
                                                    var grandNode = node.return;
                                                    while (grandNode !== null) {
                                                        var grandTag = grandNode.tag;
                                                        if (grandTag === HostRoot || grandTag === HostPortal) {
                                                            var grandContainer = grandNode.stateNode.containerInfo;
                                                            if (isMatchingRootContainer(grandContainer, targetContainerNode)) {
                                                                return;
                                                            }
                                                        }
                                                        grandNode = grandNode.return;
                                                    }
                                                }
                                                while (container !== null) {
                                                    var parentNode = getClosestInstanceFromNode(container);
                                                    if (parentNode === null) {
                                                        return;
                                                    }
                                                    var parentTag = parentNode.tag;
                                                    if (parentTag === HostComponent || parentTag === HostText) {
                                                        node = ancestorInst = parentNode;
                                                        continue mainLoop;
                                                    }
                                                    container = container.parentNode;
                                                }
                                            }
                                            node = node.return;
                                        }
                                }
                            }
                            batchedUpdates(function() {
                                return dispatchEventsForPlugins(domEventName, eventSystemFlags, nativeEvent, ancestorInst);
                            });
                        }
                        function createDispatchListener(instance2, listener, currentTarget) {
                            return {
                                instance: instance2,
                                listener,
                                currentTarget
                            };
                        }
                        function accumulateSinglePhaseListeners(targetFiber, reactName, nativeEventType, inCapturePhase, accumulateTargetOnly, nativeEvent) {
                            var captureName = reactName !== null ? reactName + "Capture" : null;
                            var reactEventName = inCapturePhase ? captureName : reactName;
                            var listeners = [];
                            var instance2 = targetFiber;
                            var lastHostComponent = null;
                            while (instance2 !== null) {
                                var _instance2 = instance2, stateNode = _instance2.stateNode, tag = _instance2.tag;
                                if (tag === HostComponent && stateNode !== null) {
                                    lastHostComponent = stateNode;
                                    if (reactEventName !== null) {
                                        var listener = getListener(instance2, reactEventName);
                                        if (listener != null) {
                                            listeners.push(createDispatchListener(instance2, listener, lastHostComponent));
                                        }
                                    }
                                }
                                if (accumulateTargetOnly) {
                                    break;
                                }
                                instance2 = instance2.return;
                            }
                            return listeners;
                        }
                        function accumulateTwoPhaseListeners(targetFiber, reactName) {
                            var captureName = reactName + "Capture";
                            var listeners = [];
                            var instance2 = targetFiber;
                            while (instance2 !== null) {
                                var _instance3 = instance2, stateNode = _instance3.stateNode, tag = _instance3.tag;
                                if (tag === HostComponent && stateNode !== null) {
                                    var currentTarget = stateNode;
                                    var captureListener = getListener(instance2, captureName);
                                    if (captureListener != null) {
                                        listeners.unshift(createDispatchListener(instance2, captureListener, currentTarget));
                                    }
                                    var bubbleListener = getListener(instance2, reactName);
                                    if (bubbleListener != null) {
                                        listeners.push(createDispatchListener(instance2, bubbleListener, currentTarget));
                                    }
                                }
                                instance2 = instance2.return;
                            }
                            return listeners;
                        }
                        function getParent(inst) {
                            if (inst === null) {
                                return null;
                            }
                            do {
                                inst = inst.return;
                            } while (inst && inst.tag !== HostComponent);
                            if (inst) {
                                return inst;
                            }
                            return null;
                        }
                        function getLowestCommonAncestor(instA, instB) {
                            var nodeA = instA;
                            var nodeB = instB;
                            var depthA = 0;
                            for (var tempA = nodeA; tempA; tempA = getParent(tempA)) {
                                depthA++;
                            }
                            var depthB = 0;
                            for (var tempB = nodeB; tempB; tempB = getParent(tempB)) {
                                depthB++;
                            }
                            while (depthA - depthB > 0) {
                                nodeA = getParent(nodeA);
                                depthA--;
                            }
                            while (depthB - depthA > 0) {
                                nodeB = getParent(nodeB);
                                depthB--;
                            }
                            var depth = depthA;
                            while (depth--) {
                                if (nodeA === nodeB || nodeB !== null && nodeA === nodeB.alternate) {
                                    return nodeA;
                                }
                                nodeA = getParent(nodeA);
                                nodeB = getParent(nodeB);
                            }
                            return null;
                        }
                        function accumulateEnterLeaveListenersForEvent(dispatchQueue, event, target2, common, inCapturePhase) {
                            var registrationName = event._reactName;
                            var listeners = [];
                            var instance2 = target2;
                            while (instance2 !== null) {
                                if (instance2 === common) {
                                    break;
                                }
                                var _instance4 = instance2, alternate = _instance4.alternate, stateNode = _instance4.stateNode, tag = _instance4.tag;
                                if (alternate !== null && alternate === common) {
                                    break;
                                }
                                if (tag === HostComponent && stateNode !== null) {
                                    var currentTarget = stateNode;
                                    if (inCapturePhase) {
                                        var captureListener = getListener(instance2, registrationName);
                                        if (captureListener != null) {
                                            listeners.unshift(createDispatchListener(instance2, captureListener, currentTarget));
                                        }
                                    } else if (!inCapturePhase) {
                                        var bubbleListener = getListener(instance2, registrationName);
                                        if (bubbleListener != null) {
                                            listeners.push(createDispatchListener(instance2, bubbleListener, currentTarget));
                                        }
                                    }
                                }
                                instance2 = instance2.return;
                            }
                            if (listeners.length !== 0) {
                                dispatchQueue.push({
                                    event,
                                    listeners
                                });
                            }
                        }
                        function accumulateEnterLeaveTwoPhaseListeners(dispatchQueue, leaveEvent, enterEvent, from, to) {
                            var common = from && to ? getLowestCommonAncestor(from, to) : null;
                            if (from !== null) {
                                accumulateEnterLeaveListenersForEvent(dispatchQueue, leaveEvent, from, common, false);
                            }
                            if (to !== null && enterEvent !== null) {
                                accumulateEnterLeaveListenersForEvent(dispatchQueue, enterEvent, to, common, true);
                            }
                        }
                        function getListenerSetKey(domEventName, capture) {
                            return domEventName + "__" + (capture ? "capture" : "bubble");
                        }
                        var didWarnInvalidHydration = false;
                        var DANGEROUSLY_SET_INNER_HTML = "dangerouslySetInnerHTML";
                        var SUPPRESS_CONTENT_EDITABLE_WARNING = "suppressContentEditableWarning";
                        var SUPPRESS_HYDRATION_WARNING = "suppressHydrationWarning";
                        var AUTOFOCUS = "autoFocus";
                        var CHILDREN = "children";
                        var STYLE = "style";
                        var HTML$1 = "__html";
                        var warnedUnknownTags;
                        var validatePropertiesInDevelopment;
                        var warnForPropDifference;
                        var warnForExtraAttributes;
                        var warnForInvalidEventListener;
                        var canDiffStyleForHydrationWarning;
                        var normalizeHTML;
                        {
                            warnedUnknownTags = {
                                // There are working polyfills for <dialog>. Let people use it.
                                dialog: true,
                                // Electron ships a custom <webview> tag to display external web content in
                                // an isolated frame and process.
                                // This tag is not present in non Electron environments such as JSDom which
                                // is often used for testing purposes.
                                // @see https://electronjs.org/docs/api/webview-tag
                                webview: true
                            };
                            validatePropertiesInDevelopment = function(type, props) {
                                validateProperties(type, props);
                                validateProperties$1(type, props);
                                validateProperties$2(type, props, {
                                    registrationNameDependencies,
                                    possibleRegistrationNames
                                });
                            };
                            canDiffStyleForHydrationWarning = canUseDOM && !document.documentMode;
                            warnForPropDifference = function(propName, serverValue, clientValue) {
                                if (didWarnInvalidHydration) {
                                    return;
                                }
                                var normalizedClientValue = normalizeMarkupForTextOrAttribute(clientValue);
                                var normalizedServerValue = normalizeMarkupForTextOrAttribute(serverValue);
                                if (normalizedServerValue === normalizedClientValue) {
                                    return;
                                }
                                didWarnInvalidHydration = true;
                                error("Prop `%s` did not match. Server: %s Client: %s", propName, JSON.stringify(normalizedServerValue), JSON.stringify(normalizedClientValue));
                            };
                            warnForExtraAttributes = function(attributeNames) {
                                if (didWarnInvalidHydration) {
                                    return;
                                }
                                didWarnInvalidHydration = true;
                                var names = [];
                                attributeNames.forEach(function(name) {
                                    names.push(name);
                                });
                                error("Extra attributes from the server: %s", names);
                            };
                            warnForInvalidEventListener = function(registrationName, listener) {
                                if (listener === false) {
                                    error("Expected `%s` listener to be a function, instead got `false`.\n\nIf you used to conditionally omit it with %s={condition && value}, pass %s={condition ? value : undefined} instead.", registrationName, registrationName, registrationName);
                                } else {
                                    error("Expected `%s` listener to be a function, instead got a value of `%s` type.", registrationName, typeof listener);
                                }
                            };
                            normalizeHTML = function(parent, html) {
                                var testElement = parent.namespaceURI === HTML_NAMESPACE ? parent.ownerDocument.createElement(parent.tagName) : parent.ownerDocument.createElementNS(parent.namespaceURI, parent.tagName);
                                testElement.innerHTML = html;
                                return testElement.innerHTML;
                            };
                        }
                        var NORMALIZE_NEWLINES_REGEX = /\r\n?/g;
                        var NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\u0000|\uFFFD/g;
                        function normalizeMarkupForTextOrAttribute(markup) {
                            {
                                checkHtmlStringCoercion(markup);
                            }
                            var markupString = typeof markup === "string" ? markup : "" + markup;
                            return markupString.replace(NORMALIZE_NEWLINES_REGEX, "\n").replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, "");
                        }
                        function checkForUnmatchedText(serverText, clientText, isConcurrentMode, shouldWarnDev) {
                            var normalizedClientText = normalizeMarkupForTextOrAttribute(clientText);
                            var normalizedServerText = normalizeMarkupForTextOrAttribute(serverText);
                            if (normalizedServerText === normalizedClientText) {
                                return;
                            }
                            if (shouldWarnDev) {
                                {
                                    if (!didWarnInvalidHydration) {
                                        didWarnInvalidHydration = true;
                                        error('Text content did not match. Server: "%s" Client: "%s"', normalizedServerText, normalizedClientText);
                                    }
                                }
                            }
                            if (isConcurrentMode && enableClientRenderFallbackOnTextMismatch) {
                                throw new Error("Text content does not match server-rendered HTML.");
                            }
                        }
                        function getOwnerDocumentFromRootContainer(rootContainerElement) {
                            return rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;
                        }
                        function noop() {
                        }
                        function trapClickOnNonInteractiveElement(node) {
                            node.onclick = noop;
                        }
                        function setInitialDOMProperties(tag, domElement, rootContainerElement, nextProps, isCustomComponentTag) {
                            for (var propKey in nextProps) {
                                if (!nextProps.hasOwnProperty(propKey)) {
                                    continue;
                                }
                                var nextProp = nextProps[propKey];
                                if (propKey === STYLE) {
                                    {
                                        if (nextProp) {
                                            Object.freeze(nextProp);
                                        }
                                    }
                                    setValueForStyles(domElement, nextProp);
                                } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                                    var nextHtml = nextProp ? nextProp[HTML$1] : void 0;
                                    if (nextHtml != null) {
                                        setInnerHTML(domElement, nextHtml);
                                    }
                                } else if (propKey === CHILDREN) {
                                    if (typeof nextProp === "string") {
                                        var canSetTextContent = tag !== "textarea" || nextProp !== "";
                                        if (canSetTextContent) {
                                            setTextContent(domElement, nextProp);
                                        }
                                    } else if (typeof nextProp === "number") {
                                        setTextContent(domElement, "" + nextProp);
                                    }
                                } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING)
                                    ;
                                else if (propKey === AUTOFOCUS)
                                    ;
                                else if (registrationNameDependencies.hasOwnProperty(propKey)) {
                                    if (nextProp != null) {
                                        if (typeof nextProp !== "function") {
                                            warnForInvalidEventListener(propKey, nextProp);
                                        }
                                        if (propKey === "onScroll") {
                                            listenToNonDelegatedEvent("scroll", domElement);
                                        }
                                    }
                                } else if (nextProp != null) {
                                    setValueForProperty(domElement, propKey, nextProp, isCustomComponentTag);
                                }
                            }
                        }
                        function updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag) {
                            for (var i = 0; i < updatePayload.length; i += 2) {
                                var propKey = updatePayload[i];
                                var propValue = updatePayload[i + 1];
                                if (propKey === STYLE) {
                                    setValueForStyles(domElement, propValue);
                                } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                                    setInnerHTML(domElement, propValue);
                                } else if (propKey === CHILDREN) {
                                    setTextContent(domElement, propValue);
                                } else {
                                    setValueForProperty(domElement, propKey, propValue, isCustomComponentTag);
                                }
                            }
                        }
                        function createElement(type, props, rootContainerElement, parentNamespace) {
                            var isCustomComponentTag;
                            var ownerDocument = getOwnerDocumentFromRootContainer(rootContainerElement);
                            var domElement;
                            var namespaceURI = parentNamespace;
                            if (namespaceURI === HTML_NAMESPACE) {
                                namespaceURI = getIntrinsicNamespace(type);
                            }
                            if (namespaceURI === HTML_NAMESPACE) {
                                {
                                    isCustomComponentTag = isCustomComponent(type, props);
                                    if (!isCustomComponentTag && type !== type.toLowerCase()) {
                                        error("<%s /> is using incorrect casing. Use PascalCase for React components, or lowercase for HTML elements.", type);
                                    }
                                }
                                if (type === "script") {
                                    var div = ownerDocument.createElement("div");
                                    div.innerHTML = "<script><\/script>";
                                    var firstChild = div.firstChild;
                                    domElement = div.removeChild(firstChild);
                                } else if (typeof props.is === "string") {
                                    domElement = ownerDocument.createElement(type, {
                                        is: props.is
                                    });
                                } else {
                                    domElement = ownerDocument.createElement(type);
                                    if (type === "select") {
                                        var node = domElement;
                                        if (props.multiple) {
                                            node.multiple = true;
                                        } else if (props.size) {
                                            node.size = props.size;
                                        }
                                    }
                                }
                            } else {
                                domElement = ownerDocument.createElementNS(namespaceURI, type);
                            }
                            {
                                if (namespaceURI === HTML_NAMESPACE) {
                                    if (!isCustomComponentTag && Object.prototype.toString.call(domElement) === "[object HTMLUnknownElement]" && !hasOwnProperty.call(warnedUnknownTags, type)) {
                                        warnedUnknownTags[type] = true;
                                        error("The tag <%s> is unrecognized in this browser. If you meant to render a React component, start its name with an uppercase letter.", type);
                                    }
                                }
                            }
                            return domElement;
                        }
                        function createTextNode(text, rootContainerElement) {
                            return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(text);
                        }
                        function setInitialProperties(domElement, tag, rawProps, rootContainerElement) {
                            var isCustomComponentTag = isCustomComponent(tag, rawProps);
                            {
                                validatePropertiesInDevelopment(tag, rawProps);
                            }
                            var props;
                            switch (tag) {
                                case "dialog":
                                    listenToNonDelegatedEvent("cancel", domElement);
                                    listenToNonDelegatedEvent("close", domElement);
                                    props = rawProps;
                                    break;
                                case "iframe":
                                case "object":
                                case "embed":
                                    listenToNonDelegatedEvent("load", domElement);
                                    props = rawProps;
                                    break;
                                case "video":
                                case "audio":
                                    for (var i = 0; i < mediaEventTypes.length; i++) {
                                        listenToNonDelegatedEvent(mediaEventTypes[i], domElement);
                                    }
                                    props = rawProps;
                                    break;
                                case "source":
                                    listenToNonDelegatedEvent("error", domElement);
                                    props = rawProps;
                                    break;
                                case "img":
                                case "image":
                                case "link":
                                    listenToNonDelegatedEvent("error", domElement);
                                    listenToNonDelegatedEvent("load", domElement);
                                    props = rawProps;
                                    break;
                                case "details":
                                    listenToNonDelegatedEvent("toggle", domElement);
                                    props = rawProps;
                                    break;
                                case "input":
                                    initWrapperState(domElement, rawProps);
                                    props = getHostProps(domElement, rawProps);
                                    listenToNonDelegatedEvent("invalid", domElement);
                                    break;
                                case "option":
                                    validateProps(domElement, rawProps);
                                    props = rawProps;
                                    break;
                                case "select":
                                    initWrapperState$1(domElement, rawProps);
                                    props = getHostProps$1(domElement, rawProps);
                                    listenToNonDelegatedEvent("invalid", domElement);
                                    break;
                                case "textarea":
                                    initWrapperState$2(domElement, rawProps);
                                    props = getHostProps$2(domElement, rawProps);
                                    listenToNonDelegatedEvent("invalid", domElement);
                                    break;
                                default:
                                    props = rawProps;
                            }
                            assertValidProps(tag, props);
                            setInitialDOMProperties(tag, domElement, rootContainerElement, props, isCustomComponentTag);
                            switch (tag) {
                                case "input":
                                    track(domElement);
                                    postMountWrapper(domElement, rawProps, false);
                                    break;
                                case "textarea":
                                    track(domElement);
                                    postMountWrapper$3(domElement);
                                    break;
                                case "option":
                                    postMountWrapper$1(domElement, rawProps);
                                    break;
                                case "select":
                                    postMountWrapper$2(domElement, rawProps);
                                    break;
                                default:
                                    if (typeof props.onClick === "function") {
                                        trapClickOnNonInteractiveElement(domElement);
                                    }
                                    break;
                            }
                        }
                        function diffProperties(domElement, tag, lastRawProps, nextRawProps, rootContainerElement) {
                            {
                                validatePropertiesInDevelopment(tag, nextRawProps);
                            }
                            var updatePayload = null;
                            var lastProps;
                            var nextProps;
                            switch (tag) {
                                case "input":
                                    lastProps = getHostProps(domElement, lastRawProps);
                                    nextProps = getHostProps(domElement, nextRawProps);
                                    updatePayload = [];
                                    break;
                                case "select":
                                    lastProps = getHostProps$1(domElement, lastRawProps);
                                    nextProps = getHostProps$1(domElement, nextRawProps);
                                    updatePayload = [];
                                    break;
                                case "textarea":
                                    lastProps = getHostProps$2(domElement, lastRawProps);
                                    nextProps = getHostProps$2(domElement, nextRawProps);
                                    updatePayload = [];
                                    break;
                                default:
                                    lastProps = lastRawProps;
                                    nextProps = nextRawProps;
                                    if (typeof lastProps.onClick !== "function" && typeof nextProps.onClick === "function") {
                                        trapClickOnNonInteractiveElement(domElement);
                                    }
                                    break;
                            }
                            assertValidProps(tag, nextProps);
                            var propKey;
                            var styleName;
                            var styleUpdates = null;
                            for (propKey in lastProps) {
                                if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
                                    continue;
                                }
                                if (propKey === STYLE) {
                                    var lastStyle = lastProps[propKey];
                                    for (styleName in lastStyle) {
                                        if (lastStyle.hasOwnProperty(styleName)) {
                                            if (!styleUpdates) {
                                                styleUpdates = {};
                                            }
                                            styleUpdates[styleName] = "";
                                        }
                                    }
                                } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN)
                                    ;
                                else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING)
                                    ;
                                else if (propKey === AUTOFOCUS)
                                    ;
                                else if (registrationNameDependencies.hasOwnProperty(propKey)) {
                                    if (!updatePayload) {
                                        updatePayload = [];
                                    }
                                } else {
                                    (updatePayload = updatePayload || []).push(propKey, null);
                                }
                            }
                            for (propKey in nextProps) {
                                var nextProp = nextProps[propKey];
                                var lastProp = lastProps != null ? lastProps[propKey] : void 0;
                                if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
                                    continue;
                                }
                                if (propKey === STYLE) {
                                    {
                                        if (nextProp) {
                                            Object.freeze(nextProp);
                                        }
                                    }
                                    if (lastProp) {
                                        for (styleName in lastProp) {
                                            if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
                                                if (!styleUpdates) {
                                                    styleUpdates = {};
                                                }
                                                styleUpdates[styleName] = "";
                                            }
                                        }
                                        for (styleName in nextProp) {
                                            if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
                                                if (!styleUpdates) {
                                                    styleUpdates = {};
                                                }
                                                styleUpdates[styleName] = nextProp[styleName];
                                            }
                                        }
                                    } else {
                                        if (!styleUpdates) {
                                            if (!updatePayload) {
                                                updatePayload = [];
                                            }
                                            updatePayload.push(propKey, styleUpdates);
                                        }
                                        styleUpdates = nextProp;
                                    }
                                } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                                    var nextHtml = nextProp ? nextProp[HTML$1] : void 0;
                                    var lastHtml = lastProp ? lastProp[HTML$1] : void 0;
                                    if (nextHtml != null) {
                                        if (lastHtml !== nextHtml) {
                                            (updatePayload = updatePayload || []).push(propKey, nextHtml);
                                        }
                                    }
                                } else if (propKey === CHILDREN) {
                                    if (typeof nextProp === "string" || typeof nextProp === "number") {
                                        (updatePayload = updatePayload || []).push(propKey, "" + nextProp);
                                    }
                                } else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING)
                                    ;
                                else if (registrationNameDependencies.hasOwnProperty(propKey)) {
                                    if (nextProp != null) {
                                        if (typeof nextProp !== "function") {
                                            warnForInvalidEventListener(propKey, nextProp);
                                        }
                                        if (propKey === "onScroll") {
                                            listenToNonDelegatedEvent("scroll", domElement);
                                        }
                                    }
                                    if (!updatePayload && lastProp !== nextProp) {
                                        updatePayload = [];
                                    }
                                } else {
                                    (updatePayload = updatePayload || []).push(propKey, nextProp);
                                }
                            }
                            if (styleUpdates) {
                                {
                                    validateShorthandPropertyCollisionInDev(styleUpdates, nextProps[STYLE]);
                                }
                                (updatePayload = updatePayload || []).push(STYLE, styleUpdates);
                            }
                            return updatePayload;
                        }
                        function updateProperties(domElement, updatePayload, tag, lastRawProps, nextRawProps) {
                            if (tag === "input" && nextRawProps.type === "radio" && nextRawProps.name != null) {
                                updateChecked(domElement, nextRawProps);
                            }
                            var wasCustomComponentTag = isCustomComponent(tag, lastRawProps);
                            var isCustomComponentTag = isCustomComponent(tag, nextRawProps);
                            updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag);
                            switch (tag) {
                                case "input":
                                    updateWrapper(domElement, nextRawProps);
                                    break;
                                case "textarea":
                                    updateWrapper$1(domElement, nextRawProps);
                                    break;
                                case "select":
                                    postUpdateWrapper(domElement, nextRawProps);
                                    break;
                            }
                        }
                        function getPossibleStandardName(propName) {
                            {
                                var lowerCasedName = propName.toLowerCase();
                                if (!possibleStandardNames.hasOwnProperty(lowerCasedName)) {
                                    return null;
                                }
                                return possibleStandardNames[lowerCasedName] || null;
                            }
                        }
                        function diffHydratedProperties(domElement, tag, rawProps, parentNamespace, rootContainerElement, isConcurrentMode, shouldWarnDev) {
                            var isCustomComponentTag;
                            var extraAttributeNames;
                            {
                                isCustomComponentTag = isCustomComponent(tag, rawProps);
                                validatePropertiesInDevelopment(tag, rawProps);
                            }
                            switch (tag) {
                                case "dialog":
                                    listenToNonDelegatedEvent("cancel", domElement);
                                    listenToNonDelegatedEvent("close", domElement);
                                    break;
                                case "iframe":
                                case "object":
                                case "embed":
                                    listenToNonDelegatedEvent("load", domElement);
                                    break;
                                case "video":
                                case "audio":
                                    for (var i = 0; i < mediaEventTypes.length; i++) {
                                        listenToNonDelegatedEvent(mediaEventTypes[i], domElement);
                                    }
                                    break;
                                case "source":
                                    listenToNonDelegatedEvent("error", domElement);
                                    break;
                                case "img":
                                case "image":
                                case "link":
                                    listenToNonDelegatedEvent("error", domElement);
                                    listenToNonDelegatedEvent("load", domElement);
                                    break;
                                case "details":
                                    listenToNonDelegatedEvent("toggle", domElement);
                                    break;
                                case "input":
                                    initWrapperState(domElement, rawProps);
                                    listenToNonDelegatedEvent("invalid", domElement);
                                    break;
                                case "option":
                                    validateProps(domElement, rawProps);
                                    break;
                                case "select":
                                    initWrapperState$1(domElement, rawProps);
                                    listenToNonDelegatedEvent("invalid", domElement);
                                    break;
                                case "textarea":
                                    initWrapperState$2(domElement, rawProps);
                                    listenToNonDelegatedEvent("invalid", domElement);
                                    break;
                            }
                            assertValidProps(tag, rawProps);
                            {
                                extraAttributeNames = /* @__PURE__ */ new Set();
                                var attributes = domElement.attributes;
                                for (var _i = 0; _i < attributes.length; _i++) {
                                    var name = attributes[_i].name.toLowerCase();
                                    switch (name) {
                                        case "value":
                                            break;
                                        case "checked":
                                            break;
                                        case "selected":
                                            break;
                                        default:
                                            extraAttributeNames.add(attributes[_i].name);
                                    }
                                }
                            }
                            var updatePayload = null;
                            for (var propKey in rawProps) {
                                if (!rawProps.hasOwnProperty(propKey)) {
                                    continue;
                                }
                                var nextProp = rawProps[propKey];
                                if (propKey === CHILDREN) {
                                    if (typeof nextProp === "string") {
                                        if (domElement.textContent !== nextProp) {
                                            if (rawProps[SUPPRESS_HYDRATION_WARNING] !== true) {
                                                checkForUnmatchedText(domElement.textContent, nextProp, isConcurrentMode, shouldWarnDev);
                                            }
                                            updatePayload = [CHILDREN, nextProp];
                                        }
                                    } else if (typeof nextProp === "number") {
                                        if (domElement.textContent !== "" + nextProp) {
                                            if (rawProps[SUPPRESS_HYDRATION_WARNING] !== true) {
                                                checkForUnmatchedText(domElement.textContent, nextProp, isConcurrentMode, shouldWarnDev);
                                            }
                                            updatePayload = [CHILDREN, "" + nextProp];
                                        }
                                    }
                                } else if (registrationNameDependencies.hasOwnProperty(propKey)) {
                                    if (nextProp != null) {
                                        if (typeof nextProp !== "function") {
                                            warnForInvalidEventListener(propKey, nextProp);
                                        }
                                        if (propKey === "onScroll") {
                                            listenToNonDelegatedEvent("scroll", domElement);
                                        }
                                    }
                                } else if (shouldWarnDev && true && // Convince Flow we've calculated it (it's DEV-only in this method.)
                                    typeof isCustomComponentTag === "boolean") {
                                    var serverValue = void 0;
                                    var propertyInfo = isCustomComponentTag && enableCustomElementPropertySupport ? null : getPropertyInfo(propKey);
                                    if (rawProps[SUPPRESS_HYDRATION_WARNING] === true)
                                        ;
                                    else if (propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING || // Controlled attributes are not validated
                                        // TODO: Only ignore them on controlled tags.
                                        propKey === "value" || propKey === "checked" || propKey === "selected")
                                        ;
                                    else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
                                        var serverHTML = domElement.innerHTML;
                                        var nextHtml = nextProp ? nextProp[HTML$1] : void 0;
                                        if (nextHtml != null) {
                                            var expectedHTML = normalizeHTML(domElement, nextHtml);
                                            if (expectedHTML !== serverHTML) {
                                                warnForPropDifference(propKey, serverHTML, expectedHTML);
                                            }
                                        }
                                    } else if (propKey === STYLE) {
                                        extraAttributeNames.delete(propKey);
                                        if (canDiffStyleForHydrationWarning) {
                                            var expectedStyle = createDangerousStringForStyles(nextProp);
                                            serverValue = domElement.getAttribute("style");
                                            if (expectedStyle !== serverValue) {
                                                warnForPropDifference(propKey, serverValue, expectedStyle);
                                            }
                                        }
                                    } else if (isCustomComponentTag && !enableCustomElementPropertySupport) {
                                        extraAttributeNames.delete(propKey.toLowerCase());
                                        serverValue = getValueForAttribute(domElement, propKey, nextProp);
                                        if (nextProp !== serverValue) {
                                            warnForPropDifference(propKey, serverValue, nextProp);
                                        }
                                    } else if (!shouldIgnoreAttribute(propKey, propertyInfo, isCustomComponentTag) && !shouldRemoveAttribute(propKey, nextProp, propertyInfo, isCustomComponentTag)) {
                                        var isMismatchDueToBadCasing = false;
                                        if (propertyInfo !== null) {
                                            extraAttributeNames.delete(propertyInfo.attributeName);
                                            serverValue = getValueForProperty(domElement, propKey, nextProp, propertyInfo);
                                        } else {
                                            var ownNamespace = parentNamespace;
                                            if (ownNamespace === HTML_NAMESPACE) {
                                                ownNamespace = getIntrinsicNamespace(tag);
                                            }
                                            if (ownNamespace === HTML_NAMESPACE) {
                                                extraAttributeNames.delete(propKey.toLowerCase());
                                            } else {
                                                var standardName = getPossibleStandardName(propKey);
                                                if (standardName !== null && standardName !== propKey) {
                                                    isMismatchDueToBadCasing = true;
                                                    extraAttributeNames.delete(standardName);
                                                }
                                                extraAttributeNames.delete(propKey);
                                            }
                                            serverValue = getValueForAttribute(domElement, propKey, nextProp);
                                        }
                                        var dontWarnCustomElement = enableCustomElementPropertySupport;
                                        if (!dontWarnCustomElement && nextProp !== serverValue && !isMismatchDueToBadCasing) {
                                            warnForPropDifference(propKey, serverValue, nextProp);
                                        }
                                    }
                                }
                            }
                            {
                                if (shouldWarnDev) {
                                    if (
                                        // $FlowFixMe - Should be inferred as not undefined.
                                        extraAttributeNames.size > 0 && rawProps[SUPPRESS_HYDRATION_WARNING] !== true
                                    ) {
                                        warnForExtraAttributes(extraAttributeNames);
                                    }
                                }
                            }
                            switch (tag) {
                                case "input":
                                    track(domElement);
                                    postMountWrapper(domElement, rawProps, true);
                                    break;
                                case "textarea":
                                    track(domElement);
                                    postMountWrapper$3(domElement);
                                    break;
                                case "select":
                                case "option":
                                    break;
                                default:
                                    if (typeof rawProps.onClick === "function") {
                                        trapClickOnNonInteractiveElement(domElement);
                                    }
                                    break;
                            }
                            return updatePayload;
                        }
                        function diffHydratedText(textNode, text, isConcurrentMode) {
                            var isDifferent = textNode.nodeValue !== text;
                            return isDifferent;
                        }
                        function warnForDeletedHydratableElement(parentNode, child) {
                            {
                                if (didWarnInvalidHydration) {
                                    return;
                                }
                                didWarnInvalidHydration = true;
                                error("Did not expect server HTML to contain a <%s> in <%s>.", child.nodeName.toLowerCase(), parentNode.nodeName.toLowerCase());
                            }
                        }
                        function warnForDeletedHydratableText(parentNode, child) {
                            {
                                if (didWarnInvalidHydration) {
                                    return;
                                }
                                didWarnInvalidHydration = true;
                                error('Did not expect server HTML to contain the text node "%s" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase());
                            }
                        }
                        function warnForInsertedHydratedElement(parentNode, tag, props) {
                            {
                                if (didWarnInvalidHydration) {
                                    return;
                                }
                                didWarnInvalidHydration = true;
                                error("Expected server HTML to contain a matching <%s> in <%s>.", tag, parentNode.nodeName.toLowerCase());
                            }
                        }
                        function warnForInsertedHydratedText(parentNode, text) {
                            {
                                if (text === "") {
                                    return;
                                }
                                if (didWarnInvalidHydration) {
                                    return;
                                }
                                didWarnInvalidHydration = true;
                                error('Expected server HTML to contain a matching text node for "%s" in <%s>.', text, parentNode.nodeName.toLowerCase());
                            }
                        }
                        function restoreControlledState$3(domElement, tag, props) {
                            switch (tag) {
                                case "input":
                                    restoreControlledState(domElement, props);
                                    return;
                                case "textarea":
                                    restoreControlledState$2(domElement, props);
                                    return;
                                case "select":
                                    restoreControlledState$1(domElement, props);
                                    return;
                            }
                        }
                        var validateDOMNesting = function() {
                        };
                        var updatedAncestorInfo = function() {
                        };
                        {
                            var specialTags = ["address", "applet", "area", "article", "aside", "base", "basefont", "bgsound", "blockquote", "body", "br", "button", "caption", "center", "col", "colgroup", "dd", "details", "dir", "div", "dl", "dt", "embed", "fieldset", "figcaption", "figure", "footer", "form", "frame", "frameset", "h1", "h2", "h3", "h4", "h5", "h6", "head", "header", "hgroup", "hr", "html", "iframe", "img", "input", "isindex", "li", "link", "listing", "main", "marquee", "menu", "menuitem", "meta", "nav", "noembed", "noframes", "noscript", "object", "ol", "p", "param", "plaintext", "pre", "script", "section", "select", "source", "style", "summary", "table", "tbody", "td", "template", "textarea", "tfoot", "th", "thead", "title", "tr", "track", "ul", "wbr", "xmp"];
                            var inScopeTags = [
                                "applet",
                                "caption",
                                "html",
                                "table",
                                "td",
                                "th",
                                "marquee",
                                "object",
                                "template",
                                // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
                                // TODO: Distinguish by namespace here -- for <title>, including it here
                                // errs on the side of fewer warnings
                                "foreignObject",
                                "desc",
                                "title"
                            ];
                            var buttonScopeTags = inScopeTags.concat(["button"]);
                            var impliedEndTags = ["dd", "dt", "li", "option", "optgroup", "p", "rp", "rt"];
                            var emptyAncestorInfo = {
                                current: null,
                                formTag: null,
                                aTagInScope: null,
                                buttonTagInScope: null,
                                nobrTagInScope: null,
                                pTagInButtonScope: null,
                                listItemTagAutoclosing: null,
                                dlItemTagAutoclosing: null
                            };
                            updatedAncestorInfo = function(oldInfo, tag) {
                                var ancestorInfo = assign({}, oldInfo || emptyAncestorInfo);
                                var info = {
                                    tag
                                };
                                if (inScopeTags.indexOf(tag) !== -1) {
                                    ancestorInfo.aTagInScope = null;
                                    ancestorInfo.buttonTagInScope = null;
                                    ancestorInfo.nobrTagInScope = null;
                                }
                                if (buttonScopeTags.indexOf(tag) !== -1) {
                                    ancestorInfo.pTagInButtonScope = null;
                                }
                                if (specialTags.indexOf(tag) !== -1 && tag !== "address" && tag !== "div" && tag !== "p") {
                                    ancestorInfo.listItemTagAutoclosing = null;
                                    ancestorInfo.dlItemTagAutoclosing = null;
                                }
                                ancestorInfo.current = info;
                                if (tag === "form") {
                                    ancestorInfo.formTag = info;
                                }
                                if (tag === "a") {
                                    ancestorInfo.aTagInScope = info;
                                }
                                if (tag === "button") {
                                    ancestorInfo.buttonTagInScope = info;
                                }
                                if (tag === "nobr") {
                                    ancestorInfo.nobrTagInScope = info;
                                }
                                if (tag === "p") {
                                    ancestorInfo.pTagInButtonScope = info;
                                }
                                if (tag === "li") {
                                    ancestorInfo.listItemTagAutoclosing = info;
                                }
                                if (tag === "dd" || tag === "dt") {
                                    ancestorInfo.dlItemTagAutoclosing = info;
                                }
                                return ancestorInfo;
                            };
                            var isTagValidWithParent = function(tag, parentTag) {
                                switch (parentTag) {
                                    case "select":
                                        return tag === "option" || tag === "optgroup" || tag === "#text";
                                    case "optgroup":
                                        return tag === "option" || tag === "#text";
                                    case "option":
                                        return tag === "#text";
                                    case "tr":
                                        return tag === "th" || tag === "td" || tag === "style" || tag === "script" || tag === "template";
                                    case "tbody":
                                    case "thead":
                                    case "tfoot":
                                        return tag === "tr" || tag === "style" || tag === "script" || tag === "template";
                                    case "colgroup":
                                        return tag === "col" || tag === "template";
                                    case "table":
                                        return tag === "caption" || tag === "colgroup" || tag === "tbody" || tag === "tfoot" || tag === "thead" || tag === "style" || tag === "script" || tag === "template";
                                    case "head":
                                        return tag === "base" || tag === "basefont" || tag === "bgsound" || tag === "link" || tag === "meta" || tag === "title" || tag === "noscript" || tag === "noframes" || tag === "style" || tag === "script" || tag === "template";
                                    case "html":
                                        return tag === "head" || tag === "body" || tag === "frameset";
                                    case "frameset":
                                        return tag === "frame";
                                    case "#document":
                                        return tag === "html";
                                }
                                switch (tag) {
                                    case "h1":
                                    case "h2":
                                    case "h3":
                                    case "h4":
                                    case "h5":
                                    case "h6":
                                        return parentTag !== "h1" && parentTag !== "h2" && parentTag !== "h3" && parentTag !== "h4" && parentTag !== "h5" && parentTag !== "h6";
                                    case "rp":
                                    case "rt":
                                        return impliedEndTags.indexOf(parentTag) === -1;
                                    case "body":
                                    case "caption":
                                    case "col":
                                    case "colgroup":
                                    case "frameset":
                                    case "frame":
                                    case "head":
                                    case "html":
                                    case "tbody":
                                    case "td":
                                    case "tfoot":
                                    case "th":
                                    case "thead":
                                    case "tr":
                                        return parentTag == null;
                                }
                                return true;
                            };
                            var findInvalidAncestorForTag = function(tag, ancestorInfo) {
                                switch (tag) {
                                    case "address":
                                    case "article":
                                    case "aside":
                                    case "blockquote":
                                    case "center":
                                    case "details":
                                    case "dialog":
                                    case "dir":
                                    case "div":
                                    case "dl":
                                    case "fieldset":
                                    case "figcaption":
                                    case "figure":
                                    case "footer":
                                    case "header":
                                    case "hgroup":
                                    case "main":
                                    case "menu":
                                    case "nav":
                                    case "ol":
                                    case "p":
                                    case "section":
                                    case "summary":
                                    case "ul":
                                    case "pre":
                                    case "listing":
                                    case "table":
                                    case "hr":
                                    case "xmp":
                                    case "h1":
                                    case "h2":
                                    case "h3":
                                    case "h4":
                                    case "h5":
                                    case "h6":
                                        return ancestorInfo.pTagInButtonScope;
                                    case "form":
                                        return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;
                                    case "li":
                                        return ancestorInfo.listItemTagAutoclosing;
                                    case "dd":
                                    case "dt":
                                        return ancestorInfo.dlItemTagAutoclosing;
                                    case "button":
                                        return ancestorInfo.buttonTagInScope;
                                    case "a":
                                        return ancestorInfo.aTagInScope;
                                    case "nobr":
                                        return ancestorInfo.nobrTagInScope;
                                }
                                return null;
                            };
                            var didWarn$1 = {};
                            validateDOMNesting = function(childTag, childText, ancestorInfo) {
                                ancestorInfo = ancestorInfo || emptyAncestorInfo;
                                var parentInfo = ancestorInfo.current;
                                var parentTag = parentInfo && parentInfo.tag;
                                if (childText != null) {
                                    if (childTag != null) {
                                        error("validateDOMNesting: when childText is passed, childTag should be null");
                                    }
                                    childTag = "#text";
                                }
                                var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
                                var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
                                var invalidParentOrAncestor = invalidParent || invalidAncestor;
                                if (!invalidParentOrAncestor) {
                                    return;
                                }
                                var ancestorTag = invalidParentOrAncestor.tag;
                                var warnKey = !!invalidParent + "|" + childTag + "|" + ancestorTag;
                                if (didWarn$1[warnKey]) {
                                    return;
                                }
                                didWarn$1[warnKey] = true;
                                var tagDisplayName = childTag;
                                var whitespaceInfo = "";
                                if (childTag === "#text") {
                                    if (/\S/.test(childText)) {
                                        tagDisplayName = "Text nodes";
                                    } else {
                                        tagDisplayName = "Whitespace text nodes";
                                        whitespaceInfo = " Make sure you don't have any extra whitespace between tags on each line of your source code.";
                                    }
                                } else {
                                    tagDisplayName = "<" + childTag + ">";
                                }
                                if (invalidParent) {
                                    var info = "";
                                    if (ancestorTag === "table" && childTag === "tr") {
                                        info += " Add a <tbody>, <thead> or <tfoot> to your code to match the DOM tree generated by the browser.";
                                    }
                                    error("validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s", tagDisplayName, ancestorTag, whitespaceInfo, info);
                                } else {
                                    error("validateDOMNesting(...): %s cannot appear as a descendant of <%s>.", tagDisplayName, ancestorTag);
                                }
                            };
                        }
                        var SUPPRESS_HYDRATION_WARNING$1 = "suppressHydrationWarning";
                        var SUSPENSE_START_DATA = "$";
                        var SUSPENSE_END_DATA = "/$";
                        var SUSPENSE_PENDING_START_DATA = "$?";
                        var SUSPENSE_FALLBACK_START_DATA = "$!";
                        var STYLE$1 = "style";
                        var eventsEnabled = null;
                        var selectionInformation = null;
                        function getRootHostContext(rootContainerInstance) {
                            var type;
                            var namespace;
                            var nodeType = rootContainerInstance.nodeType;
                            switch (nodeType) {
                                case DOCUMENT_NODE:
                                case DOCUMENT_FRAGMENT_NODE: {
                                    type = nodeType === DOCUMENT_NODE ? "#document" : "#fragment";
                                    var root2 = rootContainerInstance.documentElement;
                                    namespace = root2 ? root2.namespaceURI : getChildNamespace(null, "");
                                    break;
                                }
                                default: {
                                    var container = nodeType === COMMENT_NODE ? rootContainerInstance.parentNode : rootContainerInstance;
                                    var ownNamespace = container.namespaceURI || null;
                                    type = container.tagName;
                                    namespace = getChildNamespace(ownNamespace, type);
                                    break;
                                }
                            }
                            {
                                var validatedTag = type.toLowerCase();
                                var ancestorInfo = updatedAncestorInfo(null, validatedTag);
                                return {
                                    namespace,
                                    ancestorInfo
                                };
                            }
                        }
                        function getChildHostContext(parentHostContext, type, rootContainerInstance) {
                            {
                                var parentHostContextDev = parentHostContext;
                                var namespace = getChildNamespace(parentHostContextDev.namespace, type);
                                var ancestorInfo = updatedAncestorInfo(parentHostContextDev.ancestorInfo, type);
                                return {
                                    namespace,
                                    ancestorInfo
                                };
                            }
                        }
                        function getPublicInstance(instance2) {
                            return instance2;
                        }
                        function prepareForCommit(containerInfo) {
                            eventsEnabled = isEnabled();
                            selectionInformation = getSelectionInformation();
                            var activeInstance = null;
                            setEnabled(false);
                            return activeInstance;
                        }
                        function resetAfterCommit(containerInfo) {
                            restoreSelection(selectionInformation);
                            setEnabled(eventsEnabled);
                            eventsEnabled = null;
                            selectionInformation = null;
                        }
                        function createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
                            var parentNamespace;
                            {
                                var hostContextDev = hostContext;
                                validateDOMNesting(type, null, hostContextDev.ancestorInfo);
                                if (typeof props.children === "string" || typeof props.children === "number") {
                                    var string = "" + props.children;
                                    var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
                                    validateDOMNesting(null, string, ownAncestorInfo);
                                }
                                parentNamespace = hostContextDev.namespace;
                            }
                            var domElement = createElement(type, props, rootContainerInstance, parentNamespace);
                            precacheFiberNode(internalInstanceHandle, domElement);
                            updateFiberProps(domElement, props);
                            return domElement;
                        }
                        function appendInitialChild(parentInstance, child) {
                            parentInstance.appendChild(child);
                        }
                        function finalizeInitialChildren(domElement, type, props, rootContainerInstance, hostContext) {
                            setInitialProperties(domElement, type, props, rootContainerInstance);
                            switch (type) {
                                case "button":
                                case "input":
                                case "select":
                                case "textarea":
                                    return !!props.autoFocus;
                                case "img":
                                    return true;
                                default:
                                    return false;
                            }
                        }
                        function prepareUpdate(domElement, type, oldProps, newProps, rootContainerInstance, hostContext) {
                            {
                                var hostContextDev = hostContext;
                                if (typeof newProps.children !== typeof oldProps.children && (typeof newProps.children === "string" || typeof newProps.children === "number")) {
                                    var string = "" + newProps.children;
                                    var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
                                    validateDOMNesting(null, string, ownAncestorInfo);
                                }
                            }
                            return diffProperties(domElement, type, oldProps, newProps);
                        }
                        function shouldSetTextContent(type, props) {
                            return type === "textarea" || type === "noscript" || typeof props.children === "string" || typeof props.children === "number" || typeof props.dangerouslySetInnerHTML === "object" && props.dangerouslySetInnerHTML !== null && props.dangerouslySetInnerHTML.__html != null;
                        }
                        function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
                            {
                                var hostContextDev = hostContext;
                                validateDOMNesting(null, text, hostContextDev.ancestorInfo);
                            }
                            var textNode = createTextNode(text, rootContainerInstance);
                            precacheFiberNode(internalInstanceHandle, textNode);
                            return textNode;
                        }
                        function getCurrentEventPriority() {
                            var currentEvent = window.event;
                            if (currentEvent === void 0) {
                                return DefaultEventPriority;
                            }
                            return getEventPriority(currentEvent.type);
                        }
                        var scheduleTimeout = typeof setTimeout === "function" ? setTimeout : void 0;
                        var cancelTimeout = typeof clearTimeout === "function" ? clearTimeout : void 0;
                        var noTimeout = -1;
                        var localPromise = typeof Promise === "function" ? Promise : void 0;
                        var scheduleMicrotask = typeof queueMicrotask === "function" ? queueMicrotask : typeof localPromise !== "undefined" ? function(callback) {
                            return localPromise.resolve(null).then(callback).catch(handleErrorInNextTick);
                        } : scheduleTimeout;
                        function handleErrorInNextTick(error2) {
                            setTimeout(function() {
                                throw error2;
                            });
                        }
                        function commitMount(domElement, type, newProps, internalInstanceHandle) {
                            switch (type) {
                                case "button":
                                case "input":
                                case "select":
                                case "textarea":
                                    if (newProps.autoFocus) {
                                        domElement.focus();
                                    }
                                    return;
                                case "img": {
                                    if (newProps.src) {
                                        domElement.src = newProps.src;
                                    }
                                    return;
                                }
                            }
                        }
                        function commitUpdate(domElement, updatePayload, type, oldProps, newProps, internalInstanceHandle) {
                            updateProperties(domElement, updatePayload, type, oldProps, newProps);
                            updateFiberProps(domElement, newProps);
                        }
                        function resetTextContent(domElement) {
                            setTextContent(domElement, "");
                        }
                        function commitTextUpdate(textInstance, oldText, newText) {
                            textInstance.nodeValue = newText;
                        }
                        function appendChild(parentInstance, child) {
                            parentInstance.appendChild(child);
                        }
                        function appendChildToContainer(container, child) {
                            var parentNode;
                            if (container.nodeType === COMMENT_NODE) {
                                parentNode = container.parentNode;
                                parentNode.insertBefore(child, container);
                            } else {
                                parentNode = container;
                                parentNode.appendChild(child);
                            }
                            var reactRootContainer = container._reactRootContainer;
                            if ((reactRootContainer === null || reactRootContainer === void 0) && parentNode.onclick === null) {
                                trapClickOnNonInteractiveElement(parentNode);
                            }
                        }
                        function insertBefore(parentInstance, child, beforeChild) {
                            parentInstance.insertBefore(child, beforeChild);
                        }
                        function insertInContainerBefore(container, child, beforeChild) {
                            if (container.nodeType === COMMENT_NODE) {
                                container.parentNode.insertBefore(child, beforeChild);
                            } else {
                                container.insertBefore(child, beforeChild);
                            }
                        }
                        function removeChild(parentInstance, child) {
                            parentInstance.removeChild(child);
                        }
                        function removeChildFromContainer(container, child) {
                            if (container.nodeType === COMMENT_NODE) {
                                container.parentNode.removeChild(child);
                            } else {
                                container.removeChild(child);
                            }
                        }
                        function clearSuspenseBoundary(parentInstance, suspenseInstance) {
                            var node = suspenseInstance;
                            var depth = 0;
                            do {
                                var nextNode = node.nextSibling;
                                parentInstance.removeChild(node);
                                if (nextNode && nextNode.nodeType === COMMENT_NODE) {
                                    var data = nextNode.data;
                                    if (data === SUSPENSE_END_DATA) {
                                        if (depth === 0) {
                                            parentInstance.removeChild(nextNode);
                                            retryIfBlockedOn(suspenseInstance);
                                            return;
                                        } else {
                                            depth--;
                                        }
                                    } else if (data === SUSPENSE_START_DATA || data === SUSPENSE_PENDING_START_DATA || data === SUSPENSE_FALLBACK_START_DATA) {
                                        depth++;
                                    }
                                }
                                node = nextNode;
                            } while (node);
                            retryIfBlockedOn(suspenseInstance);
                        }
                        function clearSuspenseBoundaryFromContainer(container, suspenseInstance) {
                            if (container.nodeType === COMMENT_NODE) {
                                clearSuspenseBoundary(container.parentNode, suspenseInstance);
                            } else if (container.nodeType === ELEMENT_NODE) {
                                clearSuspenseBoundary(container, suspenseInstance);
                            }
                            retryIfBlockedOn(container);
                        }
                        function hideInstance(instance2) {
                            instance2 = instance2;
                            var style2 = instance2.style;
                            if (typeof style2.setProperty === "function") {
                                style2.setProperty("display", "none", "important");
                            } else {
                                style2.display = "none";
                            }
                        }
                        function hideTextInstance(textInstance) {
                            textInstance.nodeValue = "";
                        }
                        function unhideInstance(instance2, props) {
                            instance2 = instance2;
                            var styleProp = props[STYLE$1];
                            var display = styleProp !== void 0 && styleProp !== null && styleProp.hasOwnProperty("display") ? styleProp.display : null;
                            instance2.style.display = dangerousStyleValue("display", display);
                        }
                        function unhideTextInstance(textInstance, text) {
                            textInstance.nodeValue = text;
                        }
                        function clearContainer(container) {
                            if (container.nodeType === ELEMENT_NODE) {
                                container.textContent = "";
                            } else if (container.nodeType === DOCUMENT_NODE) {
                                if (container.documentElement) {
                                    container.removeChild(container.documentElement);
                                }
                            }
                        }
                        function canHydrateInstance(instance2, type, props) {
                            if (instance2.nodeType !== ELEMENT_NODE || type.toLowerCase() !== instance2.nodeName.toLowerCase()) {
                                return null;
                            }
                            return instance2;
                        }
                        function canHydrateTextInstance(instance2, text) {
                            if (text === "" || instance2.nodeType !== TEXT_NODE) {
                                return null;
                            }
                            return instance2;
                        }
                        function canHydrateSuspenseInstance(instance2) {
                            if (instance2.nodeType !== COMMENT_NODE) {
                                return null;
                            }
                            return instance2;
                        }
                        function isSuspenseInstancePending(instance2) {
                            return instance2.data === SUSPENSE_PENDING_START_DATA;
                        }
                        function isSuspenseInstanceFallback(instance2) {
                            return instance2.data === SUSPENSE_FALLBACK_START_DATA;
                        }
                        function getSuspenseInstanceFallbackErrorDetails(instance2) {
                            var dataset = instance2.nextSibling && instance2.nextSibling.dataset;
                            var digest, message, stack;
                            if (dataset) {
                                digest = dataset.dgst;
                                {
                                    message = dataset.msg;
                                    stack = dataset.stck;
                                }
                            }
                            {
                                return {
                                    message,
                                    digest,
                                    stack
                                };
                            }
                        }
                        function registerSuspenseInstanceRetry(instance2, callback) {
                            instance2._reactRetry = callback;
                        }
                        function getNextHydratable(node) {
                            for (; node != null; node = node.nextSibling) {
                                var nodeType = node.nodeType;
                                if (nodeType === ELEMENT_NODE || nodeType === TEXT_NODE) {
                                    break;
                                }
                                if (nodeType === COMMENT_NODE) {
                                    var nodeData = node.data;
                                    if (nodeData === SUSPENSE_START_DATA || nodeData === SUSPENSE_FALLBACK_START_DATA || nodeData === SUSPENSE_PENDING_START_DATA) {
                                        break;
                                    }
                                    if (nodeData === SUSPENSE_END_DATA) {
                                        return null;
                                    }
                                }
                            }
                            return node;
                        }
                        function getNextHydratableSibling(instance2) {
                            return getNextHydratable(instance2.nextSibling);
                        }
                        function getFirstHydratableChild(parentInstance) {
                            return getNextHydratable(parentInstance.firstChild);
                        }
                        function getFirstHydratableChildWithinContainer(parentContainer) {
                            return getNextHydratable(parentContainer.firstChild);
                        }
                        function getFirstHydratableChildWithinSuspenseInstance(parentInstance) {
                            return getNextHydratable(parentInstance.nextSibling);
                        }
                        function hydrateInstance(instance2, type, props, rootContainerInstance, hostContext, internalInstanceHandle, shouldWarnDev) {
                            precacheFiberNode(internalInstanceHandle, instance2);
                            updateFiberProps(instance2, props);
                            var parentNamespace;
                            {
                                var hostContextDev = hostContext;
                                parentNamespace = hostContextDev.namespace;
                            }
                            var isConcurrentMode = (internalInstanceHandle.mode & ConcurrentMode) !== NoMode;
                            return diffHydratedProperties(instance2, type, props, parentNamespace, rootContainerInstance, isConcurrentMode, shouldWarnDev);
                        }
                        function hydrateTextInstance(textInstance, text, internalInstanceHandle, shouldWarnDev) {
                            precacheFiberNode(internalInstanceHandle, textInstance);
                            var isConcurrentMode = (internalInstanceHandle.mode & ConcurrentMode) !== NoMode;
                            return diffHydratedText(textInstance, text);
                        }
                        function hydrateSuspenseInstance(suspenseInstance, internalInstanceHandle) {
                            precacheFiberNode(internalInstanceHandle, suspenseInstance);
                        }
                        function getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance) {
                            var node = suspenseInstance.nextSibling;
                            var depth = 0;
                            while (node) {
                                if (node.nodeType === COMMENT_NODE) {
                                    var data = node.data;
                                    if (data === SUSPENSE_END_DATA) {
                                        if (depth === 0) {
                                            return getNextHydratableSibling(node);
                                        } else {
                                            depth--;
                                        }
                                    } else if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) {
                                        depth++;
                                    }
                                }
                                node = node.nextSibling;
                            }
                            return null;
                        }
                        function getParentSuspenseInstance(targetInstance) {
                            var node = targetInstance.previousSibling;
                            var depth = 0;
                            while (node) {
                                if (node.nodeType === COMMENT_NODE) {
                                    var data = node.data;
                                    if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) {
                                        if (depth === 0) {
                                            return node;
                                        } else {
                                            depth--;
                                        }
                                    } else if (data === SUSPENSE_END_DATA) {
                                        depth++;
                                    }
                                }
                                node = node.previousSibling;
                            }
                            return null;
                        }
                        function commitHydratedContainer(container) {
                            retryIfBlockedOn(container);
                        }
                        function commitHydratedSuspenseInstance(suspenseInstance) {
                            retryIfBlockedOn(suspenseInstance);
                        }
                        function shouldDeleteUnhydratedTailInstances(parentType) {
                            return parentType !== "head" && parentType !== "body";
                        }
                        function didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, text, isConcurrentMode) {
                            var shouldWarnDev = true;
                            checkForUnmatchedText(textInstance.nodeValue, text, isConcurrentMode, shouldWarnDev);
                        }
                        function didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, text, isConcurrentMode) {
                            if (parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
                                var shouldWarnDev = true;
                                checkForUnmatchedText(textInstance.nodeValue, text, isConcurrentMode, shouldWarnDev);
                            }
                        }
                        function didNotHydrateInstanceWithinContainer(parentContainer, instance2) {
                            {
                                if (instance2.nodeType === ELEMENT_NODE) {
                                    warnForDeletedHydratableElement(parentContainer, instance2);
                                } else if (instance2.nodeType === COMMENT_NODE)
                                    ;
                                else {
                                    warnForDeletedHydratableText(parentContainer, instance2);
                                }
                            }
                        }
                        function didNotHydrateInstanceWithinSuspenseInstance(parentInstance, instance2) {
                            {
                                var parentNode = parentInstance.parentNode;
                                if (parentNode !== null) {
                                    if (instance2.nodeType === ELEMENT_NODE) {
                                        warnForDeletedHydratableElement(parentNode, instance2);
                                    } else if (instance2.nodeType === COMMENT_NODE)
                                        ;
                                    else {
                                        warnForDeletedHydratableText(parentNode, instance2);
                                    }
                                }
                            }
                        }
                        function didNotHydrateInstance(parentType, parentProps, parentInstance, instance2, isConcurrentMode) {
                            {
                                if (isConcurrentMode || parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
                                    if (instance2.nodeType === ELEMENT_NODE) {
                                        warnForDeletedHydratableElement(parentInstance, instance2);
                                    } else if (instance2.nodeType === COMMENT_NODE)
                                        ;
                                    else {
                                        warnForDeletedHydratableText(parentInstance, instance2);
                                    }
                                }
                            }
                        }
                        function didNotFindHydratableInstanceWithinContainer(parentContainer, type, props) {
                            {
                                warnForInsertedHydratedElement(parentContainer, type);
                            }
                        }
                        function didNotFindHydratableTextInstanceWithinContainer(parentContainer, text) {
                            {
                                warnForInsertedHydratedText(parentContainer, text);
                            }
                        }
                        function didNotFindHydratableInstanceWithinSuspenseInstance(parentInstance, type, props) {
                            {
                                var parentNode = parentInstance.parentNode;
                                if (parentNode !== null)
                                    warnForInsertedHydratedElement(parentNode, type);
                            }
                        }
                        function didNotFindHydratableTextInstanceWithinSuspenseInstance(parentInstance, text) {
                            {
                                var parentNode = parentInstance.parentNode;
                                if (parentNode !== null)
                                    warnForInsertedHydratedText(parentNode, text);
                            }
                        }
                        function didNotFindHydratableInstance(parentType, parentProps, parentInstance, type, props, isConcurrentMode) {
                            {
                                if (isConcurrentMode || parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
                                    warnForInsertedHydratedElement(parentInstance, type);
                                }
                            }
                        }
                        function didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, text, isConcurrentMode) {
                            {
                                if (isConcurrentMode || parentProps[SUPPRESS_HYDRATION_WARNING$1] !== true) {
                                    warnForInsertedHydratedText(parentInstance, text);
                                }
                            }
                        }
                        function errorHydratingContainer(parentContainer) {
                            {
                                error("An error occurred during hydration. The server HTML was replaced with client content in <%s>.", parentContainer.nodeName.toLowerCase());
                            }
                        }
                        function preparePortalMount(portalInstance) {
                            listenToAllSupportedEvents(portalInstance);
                        }
                        var randomKey = Math.random().toString(36).slice(2);
                        var internalInstanceKey = "__reactFiber$" + randomKey;
                        var internalPropsKey = "__reactProps$" + randomKey;
                        var internalContainerInstanceKey = "__reactContainer$" + randomKey;
                        var internalEventHandlersKey = "__reactEvents$" + randomKey;
                        var internalEventHandlerListenersKey = "__reactListeners$" + randomKey;
                        var internalEventHandlesSetKey = "__reactHandles$" + randomKey;
                        function detachDeletedInstance(node) {
                            delete node[internalInstanceKey];
                            delete node[internalPropsKey];
                            delete node[internalEventHandlersKey];
                            delete node[internalEventHandlerListenersKey];
                            delete node[internalEventHandlesSetKey];
                        }
                        function precacheFiberNode(hostInst, node) {
                            node[internalInstanceKey] = hostInst;
                        }
                        function markContainerAsRoot(hostRoot, node) {
                            node[internalContainerInstanceKey] = hostRoot;
                        }
                        function unmarkContainerAsRoot(node) {
                            node[internalContainerInstanceKey] = null;
                        }
                        function isContainerMarkedAsRoot(node) {
                            return !!node[internalContainerInstanceKey];
                        }
                        function getClosestInstanceFromNode(targetNode) {
                            var targetInst = targetNode[internalInstanceKey];
                            if (targetInst) {
                                return targetInst;
                            }
                            var parentNode = targetNode.parentNode;
                            while (parentNode) {
                                targetInst = parentNode[internalContainerInstanceKey] || parentNode[internalInstanceKey];
                                if (targetInst) {
                                    var alternate = targetInst.alternate;
                                    if (targetInst.child !== null || alternate !== null && alternate.child !== null) {
                                        var suspenseInstance = getParentSuspenseInstance(targetNode);
                                        while (suspenseInstance !== null) {
                                            var targetSuspenseInst = suspenseInstance[internalInstanceKey];
                                            if (targetSuspenseInst) {
                                                return targetSuspenseInst;
                                            }
                                            suspenseInstance = getParentSuspenseInstance(suspenseInstance);
                                        }
                                    }
                                    return targetInst;
                                }
                                targetNode = parentNode;
                                parentNode = targetNode.parentNode;
                            }
                            return null;
                        }
                        function getInstanceFromNode(node) {
                            var inst = node[internalInstanceKey] || node[internalContainerInstanceKey];
                            if (inst) {
                                if (inst.tag === HostComponent || inst.tag === HostText || inst.tag === SuspenseComponent || inst.tag === HostRoot) {
                                    return inst;
                                } else {
                                    return null;
                                }
                            }
                            return null;
                        }
                        function getNodeFromInstance(inst) {
                            if (inst.tag === HostComponent || inst.tag === HostText) {
                                return inst.stateNode;
                            }
                            throw new Error("getNodeFromInstance: Invalid argument.");
                        }
                        function getFiberCurrentPropsFromNode(node) {
                            return node[internalPropsKey] || null;
                        }
                        function updateFiberProps(node, props) {
                            node[internalPropsKey] = props;
                        }
                        function getEventListenerSet(node) {
                            var elementListenerSet = node[internalEventHandlersKey];
                            if (elementListenerSet === void 0) {
                                elementListenerSet = node[internalEventHandlersKey] = /* @__PURE__ */ new Set();
                            }
                            return elementListenerSet;
                        }
                        var loggedTypeFailures = {};
                        var ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
                        function setCurrentlyValidatingElement(element) {
                            {
                                if (element) {
                                    var owner = element._owner;
                                    var stack = describeUnknownElementTypeFrameInDEV(element.type, element._source, owner ? owner.type : null);
                                    ReactDebugCurrentFrame$1.setExtraStackFrame(stack);
                                } else {
                                    ReactDebugCurrentFrame$1.setExtraStackFrame(null);
                                }
                            }
                        }
                        function checkPropTypes(typeSpecs, values, location, componentName, element) {
                            {
                                var has2 = Function.call.bind(hasOwnProperty);
                                for (var typeSpecName in typeSpecs) {
                                    if (has2(typeSpecs, typeSpecName)) {
                                        var error$1 = void 0;
                                        try {
                                            if (typeof typeSpecs[typeSpecName] !== "function") {
                                                var err = Error((componentName || "React class") + ": " + location + " type `" + typeSpecName + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + typeof typeSpecs[typeSpecName] + "`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");
                                                err.name = "Invariant Violation";
                                                throw err;
                                            }
                                            error$1 = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED");
                                        } catch (ex) {
                                            error$1 = ex;
                                        }
                                        if (error$1 && !(error$1 instanceof Error)) {
                                            setCurrentlyValidatingElement(element);
                                            error("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).", componentName || "React class", location, typeSpecName, typeof error$1);
                                            setCurrentlyValidatingElement(null);
                                        }
                                        if (error$1 instanceof Error && !(error$1.message in loggedTypeFailures)) {
                                            loggedTypeFailures[error$1.message] = true;
                                            setCurrentlyValidatingElement(element);
                                            error("Failed %s type: %s", location, error$1.message);
                                            setCurrentlyValidatingElement(null);
                                        }
                                    }
                                }
                            }
                        }
                        var valueStack = [];
                        var fiberStack;
                        {
                            fiberStack = [];
                        }
                        var index = -1;
                        function createCursor(defaultValue) {
                            return {
                                current: defaultValue
                            };
                        }
                        function pop(cursor, fiber) {
                            if (index < 0) {
                                {
                                    error("Unexpected pop.");
                                }
                                return;
                            }
                            {
                                if (fiber !== fiberStack[index]) {
                                    error("Unexpected Fiber popped.");
                                }
                            }
                            cursor.current = valueStack[index];
                            valueStack[index] = null;
                            {
                                fiberStack[index] = null;
                            }
                            index--;
                        }
                        function push(cursor, value, fiber) {
                            index++;
                            valueStack[index] = cursor.current;
                            {
                                fiberStack[index] = fiber;
                            }
                            cursor.current = value;
                        }
                        var warnedAboutMissingGetChildContext;
                        {
                            warnedAboutMissingGetChildContext = {};
                        }
                        var emptyContextObject = {};
                        {
                            Object.freeze(emptyContextObject);
                        }
                        var contextStackCursor = createCursor(emptyContextObject);
                        var didPerformWorkStackCursor = createCursor(false);
                        var previousContext = emptyContextObject;
                        function getUnmaskedContext(workInProgress2, Component, didPushOwnContextIfProvider) {
                            {
                                if (didPushOwnContextIfProvider && isContextProvider(Component)) {
                                    return previousContext;
                                }
                                return contextStackCursor.current;
                            }
                        }
                        function cacheContext(workInProgress2, unmaskedContext, maskedContext) {
                            {
                                var instance2 = workInProgress2.stateNode;
                                instance2.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;
                                instance2.__reactInternalMemoizedMaskedChildContext = maskedContext;
                            }
                        }
                        function getMaskedContext(workInProgress2, unmaskedContext) {
                            {
                                var type = workInProgress2.type;
                                var contextTypes = type.contextTypes;
                                if (!contextTypes) {
                                    return emptyContextObject;
                                }
                                var instance2 = workInProgress2.stateNode;
                                if (instance2 && instance2.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) {
                                    return instance2.__reactInternalMemoizedMaskedChildContext;
                                }
                                var context = {};
                                for (var key in contextTypes) {
                                    context[key] = unmaskedContext[key];
                                }
                                {
                                    var name = getComponentNameFromFiber(workInProgress2) || "Unknown";
                                    checkPropTypes(contextTypes, context, "context", name);
                                }
                                if (instance2) {
                                    cacheContext(workInProgress2, unmaskedContext, context);
                                }
                                return context;
                            }
                        }
                        function hasContextChanged() {
                            {
                                return didPerformWorkStackCursor.current;
                            }
                        }
                        function isContextProvider(type) {
                            {
                                var childContextTypes = type.childContextTypes;
                                return childContextTypes !== null && childContextTypes !== void 0;
                            }
                        }
                        function popContext(fiber) {
                            {
                                pop(didPerformWorkStackCursor, fiber);
                                pop(contextStackCursor, fiber);
                            }
                        }
                        function popTopLevelContextObject(fiber) {
                            {
                                pop(didPerformWorkStackCursor, fiber);
                                pop(contextStackCursor, fiber);
                            }
                        }
                        function pushTopLevelContextObject(fiber, context, didChange) {
                            {
                                if (contextStackCursor.current !== emptyContextObject) {
                                    throw new Error("Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.");
                                }
                                push(contextStackCursor, context, fiber);
                                push(didPerformWorkStackCursor, didChange, fiber);
                            }
                        }
                        function processChildContext(fiber, type, parentContext) {
                            {
                                var instance2 = fiber.stateNode;
                                var childContextTypes = type.childContextTypes;
                                if (typeof instance2.getChildContext !== "function") {
                                    {
                                        var componentName = getComponentNameFromFiber(fiber) || "Unknown";
                                        if (!warnedAboutMissingGetChildContext[componentName]) {
                                            warnedAboutMissingGetChildContext[componentName] = true;
                                            error("%s.childContextTypes is specified but there is no getChildContext() method on the instance. You can either define getChildContext() on %s or remove childContextTypes from it.", componentName, componentName);
                                        }
                                    }
                                    return parentContext;
                                }
                                var childContext = instance2.getChildContext();
                                for (var contextKey in childContext) {
                                    if (!(contextKey in childContextTypes)) {
                                        throw new Error((getComponentNameFromFiber(fiber) || "Unknown") + '.getChildContext(): key "' + contextKey + '" is not defined in childContextTypes.');
                                    }
                                }
                                {
                                    var name = getComponentNameFromFiber(fiber) || "Unknown";
                                    checkPropTypes(childContextTypes, childContext, "child context", name);
                                }
                                return assign({}, parentContext, childContext);
                            }
                        }
                        function pushContextProvider(workInProgress2) {
                            {
                                var instance2 = workInProgress2.stateNode;
                                var memoizedMergedChildContext = instance2 && instance2.__reactInternalMemoizedMergedChildContext || emptyContextObject;
                                previousContext = contextStackCursor.current;
                                push(contextStackCursor, memoizedMergedChildContext, workInProgress2);
                                push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress2);
                                return true;
                            }
                        }
                        function invalidateContextProvider(workInProgress2, type, didChange) {
                            {
                                var instance2 = workInProgress2.stateNode;
                                if (!instance2) {
                                    throw new Error("Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.");
                                }
                                if (didChange) {
                                    var mergedContext = processChildContext(workInProgress2, type, previousContext);
                                    instance2.__reactInternalMemoizedMergedChildContext = mergedContext;
                                    pop(didPerformWorkStackCursor, workInProgress2);
                                    pop(contextStackCursor, workInProgress2);
                                    push(contextStackCursor, mergedContext, workInProgress2);
                                    push(didPerformWorkStackCursor, didChange, workInProgress2);
                                } else {
                                    pop(didPerformWorkStackCursor, workInProgress2);
                                    push(didPerformWorkStackCursor, didChange, workInProgress2);
                                }
                            }
                        }
                        function findCurrentUnmaskedContext(fiber) {
                            {
                                if (!isFiberMounted(fiber) || fiber.tag !== ClassComponent) {
                                    throw new Error("Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.");
                                }
                                var node = fiber;
                                do {
                                    switch (node.tag) {
                                        case HostRoot:
                                            return node.stateNode.context;
                                        case ClassComponent: {
                                            var Component = node.type;
                                            if (isContextProvider(Component)) {
                                                return node.stateNode.__reactInternalMemoizedMergedChildContext;
                                            }
                                            break;
                                        }
                                    }
                                    node = node.return;
                                } while (node !== null);
                                throw new Error("Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.");
                            }
                        }
                        var LegacyRoot = 0;
                        var ConcurrentRoot = 1;
                        var syncQueue = null;
                        var includesLegacySyncCallbacks = false;
                        var isFlushingSyncQueue = false;
                        function scheduleSyncCallback(callback) {
                            if (syncQueue === null) {
                                syncQueue = [callback];
                            } else {
                                syncQueue.push(callback);
                            }
                        }
                        function scheduleLegacySyncCallback(callback) {
                            includesLegacySyncCallbacks = true;
                            scheduleSyncCallback(callback);
                        }
                        function flushSyncCallbacksOnlyInLegacyMode() {
                            if (includesLegacySyncCallbacks) {
                                flushSyncCallbacks();
                            }
                        }
                        function flushSyncCallbacks() {
                            if (!isFlushingSyncQueue && syncQueue !== null) {
                                isFlushingSyncQueue = true;
                                var i = 0;
                                var previousUpdatePriority = getCurrentUpdatePriority();
                                try {
                                    var isSync = true;
                                    var queue = syncQueue;
                                    setCurrentUpdatePriority(DiscreteEventPriority);
                                    for (; i < queue.length; i++) {
                                        var callback = queue[i];
                                        do {
                                            callback = callback(isSync);
                                        } while (callback !== null);
                                    }
                                    syncQueue = null;
                                    includesLegacySyncCallbacks = false;
                                } catch (error2) {
                                    if (syncQueue !== null) {
                                        syncQueue = syncQueue.slice(i + 1);
                                    }
                                    scheduleCallback(ImmediatePriority, flushSyncCallbacks);
                                    throw error2;
                                } finally {
                                    setCurrentUpdatePriority(previousUpdatePriority);
                                    isFlushingSyncQueue = false;
                                }
                            }
                            return null;
                        }
                        var forkStack = [];
                        var forkStackIndex = 0;
                        var treeForkProvider = null;
                        var treeForkCount = 0;
                        var idStack = [];
                        var idStackIndex = 0;
                        var treeContextProvider = null;
                        var treeContextId = 1;
                        var treeContextOverflow = "";
                        function isForkedChild(workInProgress2) {
                            warnIfNotHydrating();
                            return (workInProgress2.flags & Forked) !== NoFlags;
                        }
                        function getForksAtLevel(workInProgress2) {
                            warnIfNotHydrating();
                            return treeForkCount;
                        }
                        function getTreeId() {
                            var overflow = treeContextOverflow;
                            var idWithLeadingBit = treeContextId;
                            var id = idWithLeadingBit & ~getLeadingBit(idWithLeadingBit);
                            return id.toString(32) + overflow;
                        }
                        function pushTreeFork(workInProgress2, totalChildren) {
                            warnIfNotHydrating();
                            forkStack[forkStackIndex++] = treeForkCount;
                            forkStack[forkStackIndex++] = treeForkProvider;
                            treeForkProvider = workInProgress2;
                            treeForkCount = totalChildren;
                        }
                        function pushTreeId(workInProgress2, totalChildren, index2) {
                            warnIfNotHydrating();
                            idStack[idStackIndex++] = treeContextId;
                            idStack[idStackIndex++] = treeContextOverflow;
                            idStack[idStackIndex++] = treeContextProvider;
                            treeContextProvider = workInProgress2;
                            var baseIdWithLeadingBit = treeContextId;
                            var baseOverflow = treeContextOverflow;
                            var baseLength = getBitLength(baseIdWithLeadingBit) - 1;
                            var baseId = baseIdWithLeadingBit & ~(1 << baseLength);
                            var slot = index2 + 1;
                            var length = getBitLength(totalChildren) + baseLength;
                            if (length > 30) {
                                var numberOfOverflowBits = baseLength - baseLength % 5;
                                var newOverflowBits = (1 << numberOfOverflowBits) - 1;
                                var newOverflow = (baseId & newOverflowBits).toString(32);
                                var restOfBaseId = baseId >> numberOfOverflowBits;
                                var restOfBaseLength = baseLength - numberOfOverflowBits;
                                var restOfLength = getBitLength(totalChildren) + restOfBaseLength;
                                var restOfNewBits = slot << restOfBaseLength;
                                var id = restOfNewBits | restOfBaseId;
                                var overflow = newOverflow + baseOverflow;
                                treeContextId = 1 << restOfLength | id;
                                treeContextOverflow = overflow;
                            } else {
                                var newBits = slot << baseLength;
                                var _id = newBits | baseId;
                                var _overflow = baseOverflow;
                                treeContextId = 1 << length | _id;
                                treeContextOverflow = _overflow;
                            }
                        }
                        function pushMaterializedTreeId(workInProgress2) {
                            warnIfNotHydrating();
                            var returnFiber = workInProgress2.return;
                            if (returnFiber !== null) {
                                var numberOfForks = 1;
                                var slotIndex = 0;
                                pushTreeFork(workInProgress2, numberOfForks);
                                pushTreeId(workInProgress2, numberOfForks, slotIndex);
                            }
                        }
                        function getBitLength(number) {
                            return 32 - clz32(number);
                        }
                        function getLeadingBit(id) {
                            return 1 << getBitLength(id) - 1;
                        }
                        function popTreeContext(workInProgress2) {
                            while (workInProgress2 === treeForkProvider) {
                                treeForkProvider = forkStack[--forkStackIndex];
                                forkStack[forkStackIndex] = null;
                                treeForkCount = forkStack[--forkStackIndex];
                                forkStack[forkStackIndex] = null;
                            }
                            while (workInProgress2 === treeContextProvider) {
                                treeContextProvider = idStack[--idStackIndex];
                                idStack[idStackIndex] = null;
                                treeContextOverflow = idStack[--idStackIndex];
                                idStack[idStackIndex] = null;
                                treeContextId = idStack[--idStackIndex];
                                idStack[idStackIndex] = null;
                            }
                        }
                        function getSuspendedTreeContext() {
                            warnIfNotHydrating();
                            if (treeContextProvider !== null) {
                                return {
                                    id: treeContextId,
                                    overflow: treeContextOverflow
                                };
                            } else {
                                return null;
                            }
                        }
                        function restoreSuspendedTreeContext(workInProgress2, suspendedContext) {
                            warnIfNotHydrating();
                            idStack[idStackIndex++] = treeContextId;
                            idStack[idStackIndex++] = treeContextOverflow;
                            idStack[idStackIndex++] = treeContextProvider;
                            treeContextId = suspendedContext.id;
                            treeContextOverflow = suspendedContext.overflow;
                            treeContextProvider = workInProgress2;
                        }
                        function warnIfNotHydrating() {
                            {
                                if (!getIsHydrating()) {
                                    error("Expected to be hydrating. This is a bug in React. Please file an issue.");
                                }
                            }
                        }
                        var hydrationParentFiber = null;
                        var nextHydratableInstance = null;
                        var isHydrating = false;
                        var didSuspendOrErrorDEV = false;
                        var hydrationErrors = null;
                        function warnIfHydrating() {
                            {
                                if (isHydrating) {
                                    error("We should not be hydrating here. This is a bug in React. Please file a bug.");
                                }
                            }
                        }
                        function markDidThrowWhileHydratingDEV() {
                            {
                                didSuspendOrErrorDEV = true;
                            }
                        }
                        function didSuspendOrErrorWhileHydratingDEV() {
                            {
                                return didSuspendOrErrorDEV;
                            }
                        }
                        function enterHydrationState(fiber) {
                            var parentInstance = fiber.stateNode.containerInfo;
                            nextHydratableInstance = getFirstHydratableChildWithinContainer(parentInstance);
                            hydrationParentFiber = fiber;
                            isHydrating = true;
                            hydrationErrors = null;
                            didSuspendOrErrorDEV = false;
                            return true;
                        }
                        function reenterHydrationStateFromDehydratedSuspenseInstance(fiber, suspenseInstance, treeContext) {
                            nextHydratableInstance = getFirstHydratableChildWithinSuspenseInstance(suspenseInstance);
                            hydrationParentFiber = fiber;
                            isHydrating = true;
                            hydrationErrors = null;
                            didSuspendOrErrorDEV = false;
                            if (treeContext !== null) {
                                restoreSuspendedTreeContext(fiber, treeContext);
                            }
                            return true;
                        }
                        function warnUnhydratedInstance(returnFiber, instance2) {
                            {
                                switch (returnFiber.tag) {
                                    case HostRoot: {
                                        didNotHydrateInstanceWithinContainer(returnFiber.stateNode.containerInfo, instance2);
                                        break;
                                    }
                                    case HostComponent: {
                                        var isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
                                        didNotHydrateInstance(
                                            returnFiber.type,
                                            returnFiber.memoizedProps,
                                            returnFiber.stateNode,
                                            instance2,
                                            // TODO: Delete this argument when we remove the legacy root API.
                                            isConcurrentMode
                                        );
                                        break;
                                    }
                                    case SuspenseComponent: {
                                        var suspenseState = returnFiber.memoizedState;
                                        if (suspenseState.dehydrated !== null)
                                            didNotHydrateInstanceWithinSuspenseInstance(suspenseState.dehydrated, instance2);
                                        break;
                                    }
                                }
                            }
                        }
                        function deleteHydratableInstance(returnFiber, instance2) {
                            warnUnhydratedInstance(returnFiber, instance2);
                            var childToDelete = createFiberFromHostInstanceForDeletion();
                            childToDelete.stateNode = instance2;
                            childToDelete.return = returnFiber;
                            var deletions = returnFiber.deletions;
                            if (deletions === null) {
                                returnFiber.deletions = [childToDelete];
                                returnFiber.flags |= ChildDeletion;
                            } else {
                                deletions.push(childToDelete);
                            }
                        }
                        function warnNonhydratedInstance(returnFiber, fiber) {
                            {
                                if (didSuspendOrErrorDEV) {
                                    return;
                                }
                                switch (returnFiber.tag) {
                                    case HostRoot: {
                                        var parentContainer = returnFiber.stateNode.containerInfo;
                                        switch (fiber.tag) {
                                            case HostComponent:
                                                var type = fiber.type;
                                                var props = fiber.pendingProps;
                                                didNotFindHydratableInstanceWithinContainer(parentContainer, type);
                                                break;
                                            case HostText:
                                                var text = fiber.pendingProps;
                                                didNotFindHydratableTextInstanceWithinContainer(parentContainer, text);
                                                break;
                                        }
                                        break;
                                    }
                                    case HostComponent: {
                                        var parentType = returnFiber.type;
                                        var parentProps = returnFiber.memoizedProps;
                                        var parentInstance = returnFiber.stateNode;
                                        switch (fiber.tag) {
                                            case HostComponent: {
                                                var _type = fiber.type;
                                                var _props = fiber.pendingProps;
                                                var isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
                                                didNotFindHydratableInstance(
                                                    parentType,
                                                    parentProps,
                                                    parentInstance,
                                                    _type,
                                                    _props,
                                                    // TODO: Delete this argument when we remove the legacy root API.
                                                    isConcurrentMode
                                                );
                                                break;
                                            }
                                            case HostText: {
                                                var _text = fiber.pendingProps;
                                                var _isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
                                                didNotFindHydratableTextInstance(
                                                    parentType,
                                                    parentProps,
                                                    parentInstance,
                                                    _text,
                                                    // TODO: Delete this argument when we remove the legacy root API.
                                                    _isConcurrentMode
                                                );
                                                break;
                                            }
                                        }
                                        break;
                                    }
                                    case SuspenseComponent: {
                                        var suspenseState = returnFiber.memoizedState;
                                        var _parentInstance = suspenseState.dehydrated;
                                        if (_parentInstance !== null)
                                            switch (fiber.tag) {
                                                case HostComponent:
                                                    var _type2 = fiber.type;
                                                    var _props2 = fiber.pendingProps;
                                                    didNotFindHydratableInstanceWithinSuspenseInstance(_parentInstance, _type2);
                                                    break;
                                                case HostText:
                                                    var _text2 = fiber.pendingProps;
                                                    didNotFindHydratableTextInstanceWithinSuspenseInstance(_parentInstance, _text2);
                                                    break;
                                            }
                                        break;
                                    }
                                    default:
                                        return;
                                }
                            }
                        }
                        function insertNonHydratedInstance(returnFiber, fiber) {
                            fiber.flags = fiber.flags & ~Hydrating | Placement;
                            warnNonhydratedInstance(returnFiber, fiber);
                        }
                        function tryHydrate(fiber, nextInstance) {
                            switch (fiber.tag) {
                                case HostComponent: {
                                    var type = fiber.type;
                                    var props = fiber.pendingProps;
                                    var instance2 = canHydrateInstance(nextInstance, type);
                                    if (instance2 !== null) {
                                        fiber.stateNode = instance2;
                                        hydrationParentFiber = fiber;
                                        nextHydratableInstance = getFirstHydratableChild(instance2);
                                        return true;
                                    }
                                    return false;
                                }
                                case HostText: {
                                    var text = fiber.pendingProps;
                                    var textInstance = canHydrateTextInstance(nextInstance, text);
                                    if (textInstance !== null) {
                                        fiber.stateNode = textInstance;
                                        hydrationParentFiber = fiber;
                                        nextHydratableInstance = null;
                                        return true;
                                    }
                                    return false;
                                }
                                case SuspenseComponent: {
                                    var suspenseInstance = canHydrateSuspenseInstance(nextInstance);
                                    if (suspenseInstance !== null) {
                                        var suspenseState = {
                                            dehydrated: suspenseInstance,
                                            treeContext: getSuspendedTreeContext(),
                                            retryLane: OffscreenLane
                                        };
                                        fiber.memoizedState = suspenseState;
                                        var dehydratedFragment = createFiberFromDehydratedFragment(suspenseInstance);
                                        dehydratedFragment.return = fiber;
                                        fiber.child = dehydratedFragment;
                                        hydrationParentFiber = fiber;
                                        nextHydratableInstance = null;
                                        return true;
                                    }
                                    return false;
                                }
                                default:
                                    return false;
                            }
                        }
                        function shouldClientRenderOnMismatch(fiber) {
                            return (fiber.mode & ConcurrentMode) !== NoMode && (fiber.flags & DidCapture) === NoFlags;
                        }
                        function throwOnHydrationMismatch(fiber) {
                            throw new Error("Hydration failed because the initial UI does not match what was rendered on the server.");
                        }
                        function tryToClaimNextHydratableInstance(fiber) {
                            if (!isHydrating) {
                                return;
                            }
                            var nextInstance = nextHydratableInstance;
                            if (!nextInstance) {
                                if (shouldClientRenderOnMismatch(fiber)) {
                                    warnNonhydratedInstance(hydrationParentFiber, fiber);
                                    throwOnHydrationMismatch();
                                }
                                insertNonHydratedInstance(hydrationParentFiber, fiber);
                                isHydrating = false;
                                hydrationParentFiber = fiber;
                                return;
                            }
                            var firstAttemptedInstance = nextInstance;
                            if (!tryHydrate(fiber, nextInstance)) {
                                if (shouldClientRenderOnMismatch(fiber)) {
                                    warnNonhydratedInstance(hydrationParentFiber, fiber);
                                    throwOnHydrationMismatch();
                                }
                                nextInstance = getNextHydratableSibling(firstAttemptedInstance);
                                var prevHydrationParentFiber = hydrationParentFiber;
                                if (!nextInstance || !tryHydrate(fiber, nextInstance)) {
                                    insertNonHydratedInstance(hydrationParentFiber, fiber);
                                    isHydrating = false;
                                    hydrationParentFiber = fiber;
                                    return;
                                }
                                deleteHydratableInstance(prevHydrationParentFiber, firstAttemptedInstance);
                            }
                        }
                        function prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {
                            var instance2 = fiber.stateNode;
                            var shouldWarnIfMismatchDev = !didSuspendOrErrorDEV;
                            var updatePayload = hydrateInstance(instance2, fiber.type, fiber.memoizedProps, rootContainerInstance, hostContext, fiber, shouldWarnIfMismatchDev);
                            fiber.updateQueue = updatePayload;
                            if (updatePayload !== null) {
                                return true;
                            }
                            return false;
                        }
                        function prepareToHydrateHostTextInstance(fiber) {
                            var textInstance = fiber.stateNode;
                            var textContent = fiber.memoizedProps;
                            var shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber);
                            if (shouldUpdate) {
                                var returnFiber = hydrationParentFiber;
                                if (returnFiber !== null) {
                                    switch (returnFiber.tag) {
                                        case HostRoot: {
                                            var parentContainer = returnFiber.stateNode.containerInfo;
                                            var isConcurrentMode = (returnFiber.mode & ConcurrentMode) !== NoMode;
                                            didNotMatchHydratedContainerTextInstance(
                                                parentContainer,
                                                textInstance,
                                                textContent,
                                                // TODO: Delete this argument when we remove the legacy root API.
                                                isConcurrentMode
                                            );
                                            break;
                                        }
                                        case HostComponent: {
                                            var parentType = returnFiber.type;
                                            var parentProps = returnFiber.memoizedProps;
                                            var parentInstance = returnFiber.stateNode;
                                            var _isConcurrentMode2 = (returnFiber.mode & ConcurrentMode) !== NoMode;
                                            didNotMatchHydratedTextInstance(
                                                parentType,
                                                parentProps,
                                                parentInstance,
                                                textInstance,
                                                textContent,
                                                // TODO: Delete this argument when we remove the legacy root API.
                                                _isConcurrentMode2
                                            );
                                            break;
                                        }
                                    }
                                }
                            }
                            return shouldUpdate;
                        }
                        function prepareToHydrateHostSuspenseInstance(fiber) {
                            var suspenseState = fiber.memoizedState;
                            var suspenseInstance = suspenseState !== null ? suspenseState.dehydrated : null;
                            if (!suspenseInstance) {
                                throw new Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
                            }
                            hydrateSuspenseInstance(suspenseInstance, fiber);
                        }
                        function skipPastDehydratedSuspenseInstance(fiber) {
                            var suspenseState = fiber.memoizedState;
                            var suspenseInstance = suspenseState !== null ? suspenseState.dehydrated : null;
                            if (!suspenseInstance) {
                                throw new Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
                            }
                            return getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance);
                        }
                        function popToNextHostParent(fiber) {
                            var parent = fiber.return;
                            while (parent !== null && parent.tag !== HostComponent && parent.tag !== HostRoot && parent.tag !== SuspenseComponent) {
                                parent = parent.return;
                            }
                            hydrationParentFiber = parent;
                        }
                        function popHydrationState(fiber) {
                            if (fiber !== hydrationParentFiber) {
                                return false;
                            }
                            if (!isHydrating) {
                                popToNextHostParent(fiber);
                                isHydrating = true;
                                return false;
                            }
                            if (fiber.tag !== HostRoot && (fiber.tag !== HostComponent || shouldDeleteUnhydratedTailInstances(fiber.type) && !shouldSetTextContent(fiber.type, fiber.memoizedProps))) {
                                var nextInstance = nextHydratableInstance;
                                if (nextInstance) {
                                    if (shouldClientRenderOnMismatch(fiber)) {
                                        warnIfUnhydratedTailNodes(fiber);
                                        throwOnHydrationMismatch();
                                    } else {
                                        while (nextInstance) {
                                            deleteHydratableInstance(fiber, nextInstance);
                                            nextInstance = getNextHydratableSibling(nextInstance);
                                        }
                                    }
                                }
                            }
                            popToNextHostParent(fiber);
                            if (fiber.tag === SuspenseComponent) {
                                nextHydratableInstance = skipPastDehydratedSuspenseInstance(fiber);
                            } else {
                                nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null;
                            }
                            return true;
                        }
                        function hasUnhydratedTailNodes() {
                            return isHydrating && nextHydratableInstance !== null;
                        }
                        function warnIfUnhydratedTailNodes(fiber) {
                            var nextInstance = nextHydratableInstance;
                            while (nextInstance) {
                                warnUnhydratedInstance(fiber, nextInstance);
                                nextInstance = getNextHydratableSibling(nextInstance);
                            }
                        }
                        function resetHydrationState() {
                            hydrationParentFiber = null;
                            nextHydratableInstance = null;
                            isHydrating = false;
                            didSuspendOrErrorDEV = false;
                        }
                        function upgradeHydrationErrorsToRecoverable() {
                            if (hydrationErrors !== null) {
                                queueRecoverableErrors(hydrationErrors);
                                hydrationErrors = null;
                            }
                        }
                        function getIsHydrating() {
                            return isHydrating;
                        }
                        function queueHydrationError(error2) {
                            if (hydrationErrors === null) {
                                hydrationErrors = [error2];
                            } else {
                                hydrationErrors.push(error2);
                            }
                        }
                        var ReactCurrentBatchConfig$1 = ReactSharedInternals.ReactCurrentBatchConfig;
                        var NoTransition = null;
                        function requestCurrentTransition() {
                            return ReactCurrentBatchConfig$1.transition;
                        }
                        var ReactStrictModeWarnings = {
                            recordUnsafeLifecycleWarnings: function(fiber, instance2) {
                            },
                            flushPendingUnsafeLifecycleWarnings: function() {
                            },
                            recordLegacyContextWarning: function(fiber, instance2) {
                            },
                            flushLegacyContextWarning: function() {
                            },
                            discardPendingWarnings: function() {
                            }
                        };
                        {
                            var findStrictRoot = function(fiber) {
                                var maybeStrictRoot = null;
                                var node = fiber;
                                while (node !== null) {
                                    if (node.mode & StrictLegacyMode) {
                                        maybeStrictRoot = node;
                                    }
                                    node = node.return;
                                }
                                return maybeStrictRoot;
                            };
                            var setToSortedString = function(set2) {
                                var array = [];
                                set2.forEach(function(value) {
                                    array.push(value);
                                });
                                return array.sort().join(", ");
                            };
                            var pendingComponentWillMountWarnings = [];
                            var pendingUNSAFE_ComponentWillMountWarnings = [];
                            var pendingComponentWillReceivePropsWarnings = [];
                            var pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
                            var pendingComponentWillUpdateWarnings = [];
                            var pendingUNSAFE_ComponentWillUpdateWarnings = [];
                            var didWarnAboutUnsafeLifecycles = /* @__PURE__ */ new Set();
                            ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function(fiber, instance2) {
                                if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {
                                    return;
                                }
                                if (typeof instance2.componentWillMount === "function" && // Don't warn about react-lifecycles-compat polyfilled components.
                                    instance2.componentWillMount.__suppressDeprecationWarning !== true) {
                                    pendingComponentWillMountWarnings.push(fiber);
                                }
                                if (fiber.mode & StrictLegacyMode && typeof instance2.UNSAFE_componentWillMount === "function") {
                                    pendingUNSAFE_ComponentWillMountWarnings.push(fiber);
                                }
                                if (typeof instance2.componentWillReceiveProps === "function" && instance2.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
                                    pendingComponentWillReceivePropsWarnings.push(fiber);
                                }
                                if (fiber.mode & StrictLegacyMode && typeof instance2.UNSAFE_componentWillReceiveProps === "function") {
                                    pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber);
                                }
                                if (typeof instance2.componentWillUpdate === "function" && instance2.componentWillUpdate.__suppressDeprecationWarning !== true) {
                                    pendingComponentWillUpdateWarnings.push(fiber);
                                }
                                if (fiber.mode & StrictLegacyMode && typeof instance2.UNSAFE_componentWillUpdate === "function") {
                                    pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber);
                                }
                            };
                            ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function() {
                                var componentWillMountUniqueNames = /* @__PURE__ */ new Set();
                                if (pendingComponentWillMountWarnings.length > 0) {
                                    pendingComponentWillMountWarnings.forEach(function(fiber) {
                                        componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                                        didWarnAboutUnsafeLifecycles.add(fiber.type);
                                    });
                                    pendingComponentWillMountWarnings = [];
                                }
                                var UNSAFE_componentWillMountUniqueNames = /* @__PURE__ */ new Set();
                                if (pendingUNSAFE_ComponentWillMountWarnings.length > 0) {
                                    pendingUNSAFE_ComponentWillMountWarnings.forEach(function(fiber) {
                                        UNSAFE_componentWillMountUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                                        didWarnAboutUnsafeLifecycles.add(fiber.type);
                                    });
                                    pendingUNSAFE_ComponentWillMountWarnings = [];
                                }
                                var componentWillReceivePropsUniqueNames = /* @__PURE__ */ new Set();
                                if (pendingComponentWillReceivePropsWarnings.length > 0) {
                                    pendingComponentWillReceivePropsWarnings.forEach(function(fiber) {
                                        componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                                        didWarnAboutUnsafeLifecycles.add(fiber.type);
                                    });
                                    pendingComponentWillReceivePropsWarnings = [];
                                }
                                var UNSAFE_componentWillReceivePropsUniqueNames = /* @__PURE__ */ new Set();
                                if (pendingUNSAFE_ComponentWillReceivePropsWarnings.length > 0) {
                                    pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(function(fiber) {
                                        UNSAFE_componentWillReceivePropsUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                                        didWarnAboutUnsafeLifecycles.add(fiber.type);
                                    });
                                    pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
                                }
                                var componentWillUpdateUniqueNames = /* @__PURE__ */ new Set();
                                if (pendingComponentWillUpdateWarnings.length > 0) {
                                    pendingComponentWillUpdateWarnings.forEach(function(fiber) {
                                        componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                                        didWarnAboutUnsafeLifecycles.add(fiber.type);
                                    });
                                    pendingComponentWillUpdateWarnings = [];
                                }
                                var UNSAFE_componentWillUpdateUniqueNames = /* @__PURE__ */ new Set();
                                if (pendingUNSAFE_ComponentWillUpdateWarnings.length > 0) {
                                    pendingUNSAFE_ComponentWillUpdateWarnings.forEach(function(fiber) {
                                        UNSAFE_componentWillUpdateUniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                                        didWarnAboutUnsafeLifecycles.add(fiber.type);
                                    });
                                    pendingUNSAFE_ComponentWillUpdateWarnings = [];
                                }
                                if (UNSAFE_componentWillMountUniqueNames.size > 0) {
                                    var sortedNames = setToSortedString(UNSAFE_componentWillMountUniqueNames);
                                    error("Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\n\nPlease update the following components: %s", sortedNames);
                                }
                                if (UNSAFE_componentWillReceivePropsUniqueNames.size > 0) {
                                    var _sortedNames = setToSortedString(UNSAFE_componentWillReceivePropsUniqueNames);
                                    error("Using UNSAFE_componentWillReceiveProps in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\n\nPlease update the following components: %s", _sortedNames);
                                }
                                if (UNSAFE_componentWillUpdateUniqueNames.size > 0) {
                                    var _sortedNames2 = setToSortedString(UNSAFE_componentWillUpdateUniqueNames);
                                    error("Using UNSAFE_componentWillUpdate in strict mode is not recommended and may indicate bugs in your code. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n\nPlease update the following components: %s", _sortedNames2);
                                }
                                if (componentWillMountUniqueNames.size > 0) {
                                    var _sortedNames3 = setToSortedString(componentWillMountUniqueNames);
                                    warn("componentWillMount has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move code with side effects to componentDidMount, and set initial state in the constructor.\n* Rename componentWillMount to UNSAFE_componentWillMount to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", _sortedNames3);
                                }
                                if (componentWillReceivePropsUniqueNames.size > 0) {
                                    var _sortedNames4 = setToSortedString(componentWillReceivePropsUniqueNames);
                                    warn("componentWillReceiveProps has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\n* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", _sortedNames4);
                                }
                                if (componentWillUpdateUniqueNames.size > 0) {
                                    var _sortedNames5 = setToSortedString(componentWillUpdateUniqueNames);
                                    warn("componentWillUpdate has been renamed, and is not recommended for use. See https://reactjs.org/link/unsafe-component-lifecycles for details.\n\n* Move data fetching code or side effects to componentDidUpdate.\n* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n\nPlease update the following components: %s", _sortedNames5);
                                }
                            };
                            var pendingLegacyContextWarning = /* @__PURE__ */ new Map();
                            var didWarnAboutLegacyContext = /* @__PURE__ */ new Set();
                            ReactStrictModeWarnings.recordLegacyContextWarning = function(fiber, instance2) {
                                var strictRoot = findStrictRoot(fiber);
                                if (strictRoot === null) {
                                    error("Expected to find a StrictMode component in a strict mode tree. This error is likely caused by a bug in React. Please file an issue.");
                                    return;
                                }
                                if (didWarnAboutLegacyContext.has(fiber.type)) {
                                    return;
                                }
                                var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);
                                if (fiber.type.contextTypes != null || fiber.type.childContextTypes != null || instance2 !== null && typeof instance2.getChildContext === "function") {
                                    if (warningsForRoot === void 0) {
                                        warningsForRoot = [];
                                        pendingLegacyContextWarning.set(strictRoot, warningsForRoot);
                                    }
                                    warningsForRoot.push(fiber);
                                }
                            };
                            ReactStrictModeWarnings.flushLegacyContextWarning = function() {
                                pendingLegacyContextWarning.forEach(function(fiberArray, strictRoot) {
                                    if (fiberArray.length === 0) {
                                        return;
                                    }
                                    var firstFiber = fiberArray[0];
                                    var uniqueNames = /* @__PURE__ */ new Set();
                                    fiberArray.forEach(function(fiber) {
                                        uniqueNames.add(getComponentNameFromFiber(fiber) || "Component");
                                        didWarnAboutLegacyContext.add(fiber.type);
                                    });
                                    var sortedNames = setToSortedString(uniqueNames);
                                    try {
                                        setCurrentFiber(firstFiber);
                                        error("Legacy context API has been detected within a strict-mode tree.\n\nThe old API will be supported in all 16.x releases, but applications using it should migrate to the new version.\n\nPlease update the following components: %s\n\nLearn more about this warning here: https://reactjs.org/link/legacy-context", sortedNames);
                                    } finally {
                                        resetCurrentFiber();
                                    }
                                });
                            };
                            ReactStrictModeWarnings.discardPendingWarnings = function() {
                                pendingComponentWillMountWarnings = [];
                                pendingUNSAFE_ComponentWillMountWarnings = [];
                                pendingComponentWillReceivePropsWarnings = [];
                                pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
                                pendingComponentWillUpdateWarnings = [];
                                pendingUNSAFE_ComponentWillUpdateWarnings = [];
                                pendingLegacyContextWarning = /* @__PURE__ */ new Map();
                            };
                        }
                        function resolveDefaultProps(Component, baseProps) {
                            if (Component && Component.defaultProps) {
                                var props = assign({}, baseProps);
                                var defaultProps = Component.defaultProps;
                                for (var propName in defaultProps) {
                                    if (props[propName] === void 0) {
                                        props[propName] = defaultProps[propName];
                                    }
                                }
                                return props;
                            }
                            return baseProps;
                        }
                        var valueCursor = createCursor(null);
                        var rendererSigil;
                        {
                            rendererSigil = {};
                        }
                        var currentlyRenderingFiber = null;
                        var lastContextDependency = null;
                        var lastFullyObservedContext = null;
                        var isDisallowedContextReadInDEV = false;
                        function resetContextDependencies() {
                            currentlyRenderingFiber = null;
                            lastContextDependency = null;
                            lastFullyObservedContext = null;
                            {
                                isDisallowedContextReadInDEV = false;
                            }
                        }
                        function enterDisallowedContextReadInDEV() {
                            {
                                isDisallowedContextReadInDEV = true;
                            }
                        }
                        function exitDisallowedContextReadInDEV() {
                            {
                                isDisallowedContextReadInDEV = false;
                            }
                        }
                        function pushProvider(providerFiber, context, nextValue) {
                            {
                                push(valueCursor, context._currentValue, providerFiber);
                                context._currentValue = nextValue;
                                {
                                    if (context._currentRenderer !== void 0 && context._currentRenderer !== null && context._currentRenderer !== rendererSigil) {
                                        error("Detected multiple renderers concurrently rendering the same context provider. This is currently unsupported.");
                                    }
                                    context._currentRenderer = rendererSigil;
                                }
                            }
                        }
                        function popProvider(context, providerFiber) {
                            var currentValue = valueCursor.current;
                            pop(valueCursor, providerFiber);
                            {
                                {
                                    context._currentValue = currentValue;
                                }
                            }
                        }
                        function scheduleContextWorkOnParentPath(parent, renderLanes2, propagationRoot) {
                            var node = parent;
                            while (node !== null) {
                                var alternate = node.alternate;
                                if (!isSubsetOfLanes(node.childLanes, renderLanes2)) {
                                    node.childLanes = mergeLanes(node.childLanes, renderLanes2);
                                    if (alternate !== null) {
                                        alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes2);
                                    }
                                } else if (alternate !== null && !isSubsetOfLanes(alternate.childLanes, renderLanes2)) {
                                    alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes2);
                                }
                                if (node === propagationRoot) {
                                    break;
                                }
                                node = node.return;
                            }
                            {
                                if (node !== propagationRoot) {
                                    error("Expected to find the propagation root when scheduling context work. This error is likely caused by a bug in React. Please file an issue.");
                                }
                            }
                        }
                        function propagateContextChange(workInProgress2, context, renderLanes2) {
                            {
                                propagateContextChange_eager(workInProgress2, context, renderLanes2);
                            }
                        }
                        function propagateContextChange_eager(workInProgress2, context, renderLanes2) {
                            var fiber = workInProgress2.child;
                            if (fiber !== null) {
                                fiber.return = workInProgress2;
                            }
                            while (fiber !== null) {
                                var nextFiber = void 0;
                                var list = fiber.dependencies;
                                if (list !== null) {
                                    nextFiber = fiber.child;
                                    var dependency = list.firstContext;
                                    while (dependency !== null) {
                                        if (dependency.context === context) {
                                            if (fiber.tag === ClassComponent) {
                                                var lane = pickArbitraryLane(renderLanes2);
                                                var update = createUpdate(NoTimestamp, lane);
                                                update.tag = ForceUpdate;
                                                var updateQueue = fiber.updateQueue;
                                                if (updateQueue === null)
                                                    ;
                                                else {
                                                    var sharedQueue = updateQueue.shared;
                                                    var pending = sharedQueue.pending;
                                                    if (pending === null) {
                                                        update.next = update;
                                                    } else {
                                                        update.next = pending.next;
                                                        pending.next = update;
                                                    }
                                                    sharedQueue.pending = update;
                                                }
                                            }
                                            fiber.lanes = mergeLanes(fiber.lanes, renderLanes2);
                                            var alternate = fiber.alternate;
                                            if (alternate !== null) {
                                                alternate.lanes = mergeLanes(alternate.lanes, renderLanes2);
                                            }
                                            scheduleContextWorkOnParentPath(fiber.return, renderLanes2, workInProgress2);
                                            list.lanes = mergeLanes(list.lanes, renderLanes2);
                                            break;
                                        }
                                        dependency = dependency.next;
                                    }
                                } else if (fiber.tag === ContextProvider) {
                                    nextFiber = fiber.type === workInProgress2.type ? null : fiber.child;
                                } else if (fiber.tag === DehydratedFragment) {
                                    var parentSuspense = fiber.return;
                                    if (parentSuspense === null) {
                                        throw new Error("We just came from a parent so we must have had a parent. This is a bug in React.");
                                    }
                                    parentSuspense.lanes = mergeLanes(parentSuspense.lanes, renderLanes2);
                                    var _alternate = parentSuspense.alternate;
                                    if (_alternate !== null) {
                                        _alternate.lanes = mergeLanes(_alternate.lanes, renderLanes2);
                                    }
                                    scheduleContextWorkOnParentPath(parentSuspense, renderLanes2, workInProgress2);
                                    nextFiber = fiber.sibling;
                                } else {
                                    nextFiber = fiber.child;
                                }
                                if (nextFiber !== null) {
                                    nextFiber.return = fiber;
                                } else {
                                    nextFiber = fiber;
                                    while (nextFiber !== null) {
                                        if (nextFiber === workInProgress2) {
                                            nextFiber = null;
                                            break;
                                        }
                                        var sibling = nextFiber.sibling;
                                        if (sibling !== null) {
                                            sibling.return = nextFiber.return;
                                            nextFiber = sibling;
                                            break;
                                        }
                                        nextFiber = nextFiber.return;
                                    }
                                }
                                fiber = nextFiber;
                            }
                        }
                        function prepareToReadContext(workInProgress2, renderLanes2) {
                            currentlyRenderingFiber = workInProgress2;
                            lastContextDependency = null;
                            lastFullyObservedContext = null;
                            var dependencies = workInProgress2.dependencies;
                            if (dependencies !== null) {
                                {
                                    var firstContext = dependencies.firstContext;
                                    if (firstContext !== null) {
                                        if (includesSomeLane(dependencies.lanes, renderLanes2)) {
                                            markWorkInProgressReceivedUpdate();
                                        }
                                        dependencies.firstContext = null;
                                    }
                                }
                            }
                        }
                        function readContext(context) {
                            {
                                if (isDisallowedContextReadInDEV) {
                                    error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
                                }
                            }
                            var value = context._currentValue;
                            if (lastFullyObservedContext === context)
                                ;
                            else {
                                var contextItem = {
                                    context,
                                    memoizedValue: value,
                                    next: null
                                };
                                if (lastContextDependency === null) {
                                    if (currentlyRenderingFiber === null) {
                                        throw new Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
                                    }
                                    lastContextDependency = contextItem;
                                    currentlyRenderingFiber.dependencies = {
                                        lanes: NoLanes,
                                        firstContext: contextItem
                                    };
                                } else {
                                    lastContextDependency = lastContextDependency.next = contextItem;
                                }
                            }
                            return value;
                        }
                        var concurrentQueues = null;
                        function pushConcurrentUpdateQueue(queue) {
                            if (concurrentQueues === null) {
                                concurrentQueues = [queue];
                            } else {
                                concurrentQueues.push(queue);
                            }
                        }
                        function finishQueueingConcurrentUpdates() {
                            if (concurrentQueues !== null) {
                                for (var i = 0; i < concurrentQueues.length; i++) {
                                    var queue = concurrentQueues[i];
                                    var lastInterleavedUpdate = queue.interleaved;
                                    if (lastInterleavedUpdate !== null) {
                                        queue.interleaved = null;
                                        var firstInterleavedUpdate = lastInterleavedUpdate.next;
                                        var lastPendingUpdate = queue.pending;
                                        if (lastPendingUpdate !== null) {
                                            var firstPendingUpdate = lastPendingUpdate.next;
                                            lastPendingUpdate.next = firstInterleavedUpdate;
                                            lastInterleavedUpdate.next = firstPendingUpdate;
                                        }
                                        queue.pending = lastInterleavedUpdate;
                                    }
                                }
                                concurrentQueues = null;
                            }
                        }
                        function enqueueConcurrentHookUpdate(fiber, queue, update, lane) {
                            var interleaved = queue.interleaved;
                            if (interleaved === null) {
                                update.next = update;
                                pushConcurrentUpdateQueue(queue);
                            } else {
                                update.next = interleaved.next;
                                interleaved.next = update;
                            }
                            queue.interleaved = update;
                            return markUpdateLaneFromFiberToRoot(fiber, lane);
                        }
                        function enqueueConcurrentHookUpdateAndEagerlyBailout(fiber, queue, update, lane) {
                            var interleaved = queue.interleaved;
                            if (interleaved === null) {
                                update.next = update;
                                pushConcurrentUpdateQueue(queue);
                            } else {
                                update.next = interleaved.next;
                                interleaved.next = update;
                            }
                            queue.interleaved = update;
                        }
                        function enqueueConcurrentClassUpdate(fiber, queue, update, lane) {
                            var interleaved = queue.interleaved;
                            if (interleaved === null) {
                                update.next = update;
                                pushConcurrentUpdateQueue(queue);
                            } else {
                                update.next = interleaved.next;
                                interleaved.next = update;
                            }
                            queue.interleaved = update;
                            return markUpdateLaneFromFiberToRoot(fiber, lane);
                        }
                        function enqueueConcurrentRenderForLane(fiber, lane) {
                            return markUpdateLaneFromFiberToRoot(fiber, lane);
                        }
                        var unsafe_markUpdateLaneFromFiberToRoot = markUpdateLaneFromFiberToRoot;
                        function markUpdateLaneFromFiberToRoot(sourceFiber, lane) {
                            sourceFiber.lanes = mergeLanes(sourceFiber.lanes, lane);
                            var alternate = sourceFiber.alternate;
                            if (alternate !== null) {
                                alternate.lanes = mergeLanes(alternate.lanes, lane);
                            }
                            {
                                if (alternate === null && (sourceFiber.flags & (Placement | Hydrating)) !== NoFlags) {
                                    warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);
                                }
                            }
                            var node = sourceFiber;
                            var parent = sourceFiber.return;
                            while (parent !== null) {
                                parent.childLanes = mergeLanes(parent.childLanes, lane);
                                alternate = parent.alternate;
                                if (alternate !== null) {
                                    alternate.childLanes = mergeLanes(alternate.childLanes, lane);
                                } else {
                                    {
                                        if ((parent.flags & (Placement | Hydrating)) !== NoFlags) {
                                            warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);
                                        }
                                    }
                                }
                                node = parent;
                                parent = parent.return;
                            }
                            if (node.tag === HostRoot) {
                                var root2 = node.stateNode;
                                return root2;
                            } else {
                                return null;
                            }
                        }
                        var UpdateState = 0;
                        var ReplaceState = 1;
                        var ForceUpdate = 2;
                        var CaptureUpdate = 3;
                        var hasForceUpdate = false;
                        var didWarnUpdateInsideUpdate;
                        var currentlyProcessingQueue;
                        {
                            didWarnUpdateInsideUpdate = false;
                            currentlyProcessingQueue = null;
                        }
                        function initializeUpdateQueue(fiber) {
                            var queue = {
                                baseState: fiber.memoizedState,
                                firstBaseUpdate: null,
                                lastBaseUpdate: null,
                                shared: {
                                    pending: null,
                                    interleaved: null,
                                    lanes: NoLanes
                                },
                                effects: null
                            };
                            fiber.updateQueue = queue;
                        }
                        function cloneUpdateQueue(current2, workInProgress2) {
                            var queue = workInProgress2.updateQueue;
                            var currentQueue = current2.updateQueue;
                            if (queue === currentQueue) {
                                var clone = {
                                    baseState: currentQueue.baseState,
                                    firstBaseUpdate: currentQueue.firstBaseUpdate,
                                    lastBaseUpdate: currentQueue.lastBaseUpdate,
                                    shared: currentQueue.shared,
                                    effects: currentQueue.effects
                                };
                                workInProgress2.updateQueue = clone;
                            }
                        }
                        function createUpdate(eventTime, lane) {
                            var update = {
                                eventTime,
                                lane,
                                tag: UpdateState,
                                payload: null,
                                callback: null,
                                next: null
                            };
                            return update;
                        }
                        function enqueueUpdate(fiber, update, lane) {
                            var updateQueue = fiber.updateQueue;
                            if (updateQueue === null) {
                                return null;
                            }
                            var sharedQueue = updateQueue.shared;
                            {
                                if (currentlyProcessingQueue === sharedQueue && !didWarnUpdateInsideUpdate) {
                                    error("An update (setState, replaceState, or forceUpdate) was scheduled from inside an update function. Update functions should be pure, with zero side-effects. Consider using componentDidUpdate or a callback.");
                                    didWarnUpdateInsideUpdate = true;
                                }
                            }
                            if (isUnsafeClassRenderPhaseUpdate()) {
                                var pending = sharedQueue.pending;
                                if (pending === null) {
                                    update.next = update;
                                } else {
                                    update.next = pending.next;
                                    pending.next = update;
                                }
                                sharedQueue.pending = update;
                                return unsafe_markUpdateLaneFromFiberToRoot(fiber, lane);
                            } else {
                                return enqueueConcurrentClassUpdate(fiber, sharedQueue, update, lane);
                            }
                        }
                        function entangleTransitions(root2, fiber, lane) {
                            var updateQueue = fiber.updateQueue;
                            if (updateQueue === null) {
                                return;
                            }
                            var sharedQueue = updateQueue.shared;
                            if (isTransitionLane(lane)) {
                                var queueLanes = sharedQueue.lanes;
                                queueLanes = intersectLanes(queueLanes, root2.pendingLanes);
                                var newQueueLanes = mergeLanes(queueLanes, lane);
                                sharedQueue.lanes = newQueueLanes;
                                markRootEntangled(root2, newQueueLanes);
                            }
                        }
                        function enqueueCapturedUpdate(workInProgress2, capturedUpdate) {
                            var queue = workInProgress2.updateQueue;
                            var current2 = workInProgress2.alternate;
                            if (current2 !== null) {
                                var currentQueue = current2.updateQueue;
                                if (queue === currentQueue) {
                                    var newFirst = null;
                                    var newLast = null;
                                    var firstBaseUpdate = queue.firstBaseUpdate;
                                    if (firstBaseUpdate !== null) {
                                        var update = firstBaseUpdate;
                                        do {
                                            var clone = {
                                                eventTime: update.eventTime,
                                                lane: update.lane,
                                                tag: update.tag,
                                                payload: update.payload,
                                                callback: update.callback,
                                                next: null
                                            };
                                            if (newLast === null) {
                                                newFirst = newLast = clone;
                                            } else {
                                                newLast.next = clone;
                                                newLast = clone;
                                            }
                                            update = update.next;
                                        } while (update !== null);
                                        if (newLast === null) {
                                            newFirst = newLast = capturedUpdate;
                                        } else {
                                            newLast.next = capturedUpdate;
                                            newLast = capturedUpdate;
                                        }
                                    } else {
                                        newFirst = newLast = capturedUpdate;
                                    }
                                    queue = {
                                        baseState: currentQueue.baseState,
                                        firstBaseUpdate: newFirst,
                                        lastBaseUpdate: newLast,
                                        shared: currentQueue.shared,
                                        effects: currentQueue.effects
                                    };
                                    workInProgress2.updateQueue = queue;
                                    return;
                                }
                            }
                            var lastBaseUpdate = queue.lastBaseUpdate;
                            if (lastBaseUpdate === null) {
                                queue.firstBaseUpdate = capturedUpdate;
                            } else {
                                lastBaseUpdate.next = capturedUpdate;
                            }
                            queue.lastBaseUpdate = capturedUpdate;
                        }
                        function getStateFromUpdate(workInProgress2, queue, update, prevState, nextProps, instance2) {
                            switch (update.tag) {
                                case ReplaceState: {
                                    var payload = update.payload;
                                    if (typeof payload === "function") {
                                        {
                                            enterDisallowedContextReadInDEV();
                                        }
                                        var nextState = payload.call(instance2, prevState, nextProps);
                                        {
                                            if (workInProgress2.mode & StrictLegacyMode) {
                                                setIsStrictModeForDevtools(true);
                                                try {
                                                    payload.call(instance2, prevState, nextProps);
                                                } finally {
                                                    setIsStrictModeForDevtools(false);
                                                }
                                            }
                                            exitDisallowedContextReadInDEV();
                                        }
                                        return nextState;
                                    }
                                    return payload;
                                }
                                case CaptureUpdate: {
                                    workInProgress2.flags = workInProgress2.flags & ~ShouldCapture | DidCapture;
                                }
                                case UpdateState: {
                                    var _payload = update.payload;
                                    var partialState;
                                    if (typeof _payload === "function") {
                                        {
                                            enterDisallowedContextReadInDEV();
                                        }
                                        partialState = _payload.call(instance2, prevState, nextProps);
                                        {
                                            if (workInProgress2.mode & StrictLegacyMode) {
                                                setIsStrictModeForDevtools(true);
                                                try {
                                                    _payload.call(instance2, prevState, nextProps);
                                                } finally {
                                                    setIsStrictModeForDevtools(false);
                                                }
                                            }
                                            exitDisallowedContextReadInDEV();
                                        }
                                    } else {
                                        partialState = _payload;
                                    }
                                    if (partialState === null || partialState === void 0) {
                                        return prevState;
                                    }
                                    return assign({}, prevState, partialState);
                                }
                                case ForceUpdate: {
                                    hasForceUpdate = true;
                                    return prevState;
                                }
                            }
                            return prevState;
                        }
                        function processUpdateQueue(workInProgress2, props, instance2, renderLanes2) {
                            var queue = workInProgress2.updateQueue;
                            hasForceUpdate = false;
                            {
                                currentlyProcessingQueue = queue.shared;
                            }
                            var firstBaseUpdate = queue.firstBaseUpdate;
                            var lastBaseUpdate = queue.lastBaseUpdate;
                            var pendingQueue = queue.shared.pending;
                            if (pendingQueue !== null) {
                                queue.shared.pending = null;
                                var lastPendingUpdate = pendingQueue;
                                var firstPendingUpdate = lastPendingUpdate.next;
                                lastPendingUpdate.next = null;
                                if (lastBaseUpdate === null) {
                                    firstBaseUpdate = firstPendingUpdate;
                                } else {
                                    lastBaseUpdate.next = firstPendingUpdate;
                                }
                                lastBaseUpdate = lastPendingUpdate;
                                var current2 = workInProgress2.alternate;
                                if (current2 !== null) {
                                    var currentQueue = current2.updateQueue;
                                    var currentLastBaseUpdate = currentQueue.lastBaseUpdate;
                                    if (currentLastBaseUpdate !== lastBaseUpdate) {
                                        if (currentLastBaseUpdate === null) {
                                            currentQueue.firstBaseUpdate = firstPendingUpdate;
                                        } else {
                                            currentLastBaseUpdate.next = firstPendingUpdate;
                                        }
                                        currentQueue.lastBaseUpdate = lastPendingUpdate;
                                    }
                                }
                            }
                            if (firstBaseUpdate !== null) {
                                var newState = queue.baseState;
                                var newLanes = NoLanes;
                                var newBaseState = null;
                                var newFirstBaseUpdate = null;
                                var newLastBaseUpdate = null;
                                var update = firstBaseUpdate;
                                do {
                                    var updateLane = update.lane;
                                    var updateEventTime = update.eventTime;
                                    if (!isSubsetOfLanes(renderLanes2, updateLane)) {
                                        var clone = {
                                            eventTime: updateEventTime,
                                            lane: updateLane,
                                            tag: update.tag,
                                            payload: update.payload,
                                            callback: update.callback,
                                            next: null
                                        };
                                        if (newLastBaseUpdate === null) {
                                            newFirstBaseUpdate = newLastBaseUpdate = clone;
                                            newBaseState = newState;
                                        } else {
                                            newLastBaseUpdate = newLastBaseUpdate.next = clone;
                                        }
                                        newLanes = mergeLanes(newLanes, updateLane);
                                    } else {
                                        if (newLastBaseUpdate !== null) {
                                            var _clone = {
                                                eventTime: updateEventTime,
                                                // This update is going to be committed so we never want uncommit
                                                // it. Using NoLane works because 0 is a subset of all bitmasks, so
                                                // this will never be skipped by the check above.
                                                lane: NoLane,
                                                tag: update.tag,
                                                payload: update.payload,
                                                callback: update.callback,
                                                next: null
                                            };
                                            newLastBaseUpdate = newLastBaseUpdate.next = _clone;
                                        }
                                        newState = getStateFromUpdate(workInProgress2, queue, update, newState, props, instance2);
                                        var callback = update.callback;
                                        if (callback !== null && // If the update was already committed, we should not queue its
                                            // callback again.
                                            update.lane !== NoLane) {
                                            workInProgress2.flags |= Callback;
                                            var effects = queue.effects;
                                            if (effects === null) {
                                                queue.effects = [update];
                                            } else {
                                                effects.push(update);
                                            }
                                        }
                                    }
                                    update = update.next;
                                    if (update === null) {
                                        pendingQueue = queue.shared.pending;
                                        if (pendingQueue === null) {
                                            break;
                                        } else {
                                            var _lastPendingUpdate = pendingQueue;
                                            var _firstPendingUpdate = _lastPendingUpdate.next;
                                            _lastPendingUpdate.next = null;
                                            update = _firstPendingUpdate;
                                            queue.lastBaseUpdate = _lastPendingUpdate;
                                            queue.shared.pending = null;
                                        }
                                    }
                                } while (true);
                                if (newLastBaseUpdate === null) {
                                    newBaseState = newState;
                                }
                                queue.baseState = newBaseState;
                                queue.firstBaseUpdate = newFirstBaseUpdate;
                                queue.lastBaseUpdate = newLastBaseUpdate;
                                var lastInterleaved = queue.shared.interleaved;
                                if (lastInterleaved !== null) {
                                    var interleaved = lastInterleaved;
                                    do {
                                        newLanes = mergeLanes(newLanes, interleaved.lane);
                                        interleaved = interleaved.next;
                                    } while (interleaved !== lastInterleaved);
                                } else if (firstBaseUpdate === null) {
                                    queue.shared.lanes = NoLanes;
                                }
                                markSkippedUpdateLanes(newLanes);
                                workInProgress2.lanes = newLanes;
                                workInProgress2.memoizedState = newState;
                            }
                            {
                                currentlyProcessingQueue = null;
                            }
                        }
                        function callCallback(callback, context) {
                            if (typeof callback !== "function") {
                                throw new Error("Invalid argument passed as callback. Expected a function. Instead " + ("received: " + callback));
                            }
                            callback.call(context);
                        }
                        function resetHasForceUpdateBeforeProcessing() {
                            hasForceUpdate = false;
                        }
                        function checkHasForceUpdateAfterProcessing() {
                            return hasForceUpdate;
                        }
                        function commitUpdateQueue(finishedWork, finishedQueue, instance2) {
                            var effects = finishedQueue.effects;
                            finishedQueue.effects = null;
                            if (effects !== null) {
                                for (var i = 0; i < effects.length; i++) {
                                    var effect = effects[i];
                                    var callback = effect.callback;
                                    if (callback !== null) {
                                        effect.callback = null;
                                        callCallback(callback, instance2);
                                    }
                                }
                            }
                        }
                        var fakeInternalInstance = {};
                        var emptyRefsObject = new React2.Component().refs;
                        var didWarnAboutStateAssignmentForComponent;
                        var didWarnAboutUninitializedState;
                        var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;
                        var didWarnAboutLegacyLifecyclesAndDerivedState;
                        var didWarnAboutUndefinedDerivedState;
                        var warnOnUndefinedDerivedState;
                        var warnOnInvalidCallback;
                        var didWarnAboutDirectlyAssigningPropsToState;
                        var didWarnAboutContextTypeAndContextTypes;
                        var didWarnAboutInvalidateContextType;
                        {
                            didWarnAboutStateAssignmentForComponent = /* @__PURE__ */ new Set();
                            didWarnAboutUninitializedState = /* @__PURE__ */ new Set();
                            didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = /* @__PURE__ */ new Set();
                            didWarnAboutLegacyLifecyclesAndDerivedState = /* @__PURE__ */ new Set();
                            didWarnAboutDirectlyAssigningPropsToState = /* @__PURE__ */ new Set();
                            didWarnAboutUndefinedDerivedState = /* @__PURE__ */ new Set();
                            didWarnAboutContextTypeAndContextTypes = /* @__PURE__ */ new Set();
                            didWarnAboutInvalidateContextType = /* @__PURE__ */ new Set();
                            var didWarnOnInvalidCallback = /* @__PURE__ */ new Set();
                            warnOnInvalidCallback = function(callback, callerName) {
                                if (callback === null || typeof callback === "function") {
                                    return;
                                }
                                var key = callerName + "_" + callback;
                                if (!didWarnOnInvalidCallback.has(key)) {
                                    didWarnOnInvalidCallback.add(key);
                                    error("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callerName, callback);
                                }
                            };
                            warnOnUndefinedDerivedState = function(type, partialState) {
                                if (partialState === void 0) {
                                    var componentName = getComponentNameFromType(type) || "Component";
                                    if (!didWarnAboutUndefinedDerivedState.has(componentName)) {
                                        didWarnAboutUndefinedDerivedState.add(componentName);
                                        error("%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. You have returned undefined.", componentName);
                                    }
                                }
                            };
                            Object.defineProperty(fakeInternalInstance, "_processChildContext", {
                                enumerable: false,
                                value: function() {
                                    throw new Error("_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn't supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal).");
                                }
                            });
                            Object.freeze(fakeInternalInstance);
                        }
                        function applyDerivedStateFromProps(workInProgress2, ctor, getDerivedStateFromProps, nextProps) {
                            var prevState = workInProgress2.memoizedState;
                            var partialState = getDerivedStateFromProps(nextProps, prevState);
                            {
                                if (workInProgress2.mode & StrictLegacyMode) {
                                    setIsStrictModeForDevtools(true);
                                    try {
                                        partialState = getDerivedStateFromProps(nextProps, prevState);
                                    } finally {
                                        setIsStrictModeForDevtools(false);
                                    }
                                }
                                warnOnUndefinedDerivedState(ctor, partialState);
                            }
                            var memoizedState = partialState === null || partialState === void 0 ? prevState : assign({}, prevState, partialState);
                            workInProgress2.memoizedState = memoizedState;
                            if (workInProgress2.lanes === NoLanes) {
                                var updateQueue = workInProgress2.updateQueue;
                                updateQueue.baseState = memoizedState;
                            }
                        }
                        var classComponentUpdater = {
                            isMounted,
                            enqueueSetState: function(inst, payload, callback) {
                                var fiber = get(inst);
                                var eventTime = requestEventTime();
                                var lane = requestUpdateLane(fiber);
                                var update = createUpdate(eventTime, lane);
                                update.payload = payload;
                                if (callback !== void 0 && callback !== null) {
                                    {
                                        warnOnInvalidCallback(callback, "setState");
                                    }
                                    update.callback = callback;
                                }
                                var root2 = enqueueUpdate(fiber, update, lane);
                                if (root2 !== null) {
                                    scheduleUpdateOnFiber(root2, fiber, lane, eventTime);
                                    entangleTransitions(root2, fiber, lane);
                                }
                                {
                                    markStateUpdateScheduled(fiber, lane);
                                }
                            },
                            enqueueReplaceState: function(inst, payload, callback) {
                                var fiber = get(inst);
                                var eventTime = requestEventTime();
                                var lane = requestUpdateLane(fiber);
                                var update = createUpdate(eventTime, lane);
                                update.tag = ReplaceState;
                                update.payload = payload;
                                if (callback !== void 0 && callback !== null) {
                                    {
                                        warnOnInvalidCallback(callback, "replaceState");
                                    }
                                    update.callback = callback;
                                }
                                var root2 = enqueueUpdate(fiber, update, lane);
                                if (root2 !== null) {
                                    scheduleUpdateOnFiber(root2, fiber, lane, eventTime);
                                    entangleTransitions(root2, fiber, lane);
                                }
                                {
                                    markStateUpdateScheduled(fiber, lane);
                                }
                            },
                            enqueueForceUpdate: function(inst, callback) {
                                var fiber = get(inst);
                                var eventTime = requestEventTime();
                                var lane = requestUpdateLane(fiber);
                                var update = createUpdate(eventTime, lane);
                                update.tag = ForceUpdate;
                                if (callback !== void 0 && callback !== null) {
                                    {
                                        warnOnInvalidCallback(callback, "forceUpdate");
                                    }
                                    update.callback = callback;
                                }
                                var root2 = enqueueUpdate(fiber, update, lane);
                                if (root2 !== null) {
                                    scheduleUpdateOnFiber(root2, fiber, lane, eventTime);
                                    entangleTransitions(root2, fiber, lane);
                                }
                                {
                                    markForceUpdateScheduled(fiber, lane);
                                }
                            }
                        };
                        function checkShouldComponentUpdate(workInProgress2, ctor, oldProps, newProps, oldState, newState, nextContext) {
                            var instance2 = workInProgress2.stateNode;
                            if (typeof instance2.shouldComponentUpdate === "function") {
                                var shouldUpdate = instance2.shouldComponentUpdate(newProps, newState, nextContext);
                                {
                                    if (workInProgress2.mode & StrictLegacyMode) {
                                        setIsStrictModeForDevtools(true);
                                        try {
                                            shouldUpdate = instance2.shouldComponentUpdate(newProps, newState, nextContext);
                                        } finally {
                                            setIsStrictModeForDevtools(false);
                                        }
                                    }
                                    if (shouldUpdate === void 0) {
                                        error("%s.shouldComponentUpdate(): Returned undefined instead of a boolean value. Make sure to return true or false.", getComponentNameFromType(ctor) || "Component");
                                    }
                                }
                                return shouldUpdate;
                            }
                            if (ctor.prototype && ctor.prototype.isPureReactComponent) {
                                return !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);
                            }
                            return true;
                        }
                        function checkClassInstance(workInProgress2, ctor, newProps) {
                            var instance2 = workInProgress2.stateNode;
                            {
                                var name = getComponentNameFromType(ctor) || "Component";
                                var renderPresent = instance2.render;
                                if (!renderPresent) {
                                    if (ctor.prototype && typeof ctor.prototype.render === "function") {
                                        error("%s(...): No `render` method found on the returned component instance: did you accidentally return an object from the constructor?", name);
                                    } else {
                                        error("%s(...): No `render` method found on the returned component instance: you may have forgotten to define `render`.", name);
                                    }
                                }
                                if (instance2.getInitialState && !instance2.getInitialState.isReactClassApproved && !instance2.state) {
                                    error("getInitialState was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Did you mean to define a state property instead?", name);
                                }
                                if (instance2.getDefaultProps && !instance2.getDefaultProps.isReactClassApproved) {
                                    error("getDefaultProps was defined on %s, a plain JavaScript class. This is only supported for classes created using React.createClass. Use a static property to define defaultProps instead.", name);
                                }
                                if (instance2.propTypes) {
                                    error("propTypes was defined as an instance property on %s. Use a static property to define propTypes instead.", name);
                                }
                                if (instance2.contextType) {
                                    error("contextType was defined as an instance property on %s. Use a static property to define contextType instead.", name);
                                }
                                {
                                    if (instance2.contextTypes) {
                                        error("contextTypes was defined as an instance property on %s. Use a static property to define contextTypes instead.", name);
                                    }
                                    if (ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor)) {
                                        didWarnAboutContextTypeAndContextTypes.add(ctor);
                                        error("%s declares both contextTypes and contextType static properties. The legacy contextTypes property will be ignored.", name);
                                    }
                                }
                                if (typeof instance2.componentShouldUpdate === "function") {
                                    error("%s has a method called componentShouldUpdate(). Did you mean shouldComponentUpdate()? The name is phrased as a question because the function is expected to return a value.", name);
                                }
                                if (ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance2.shouldComponentUpdate !== "undefined") {
                                    error("%s has a method called shouldComponentUpdate(). shouldComponentUpdate should not be used when extending React.PureComponent. Please extend React.Component if shouldComponentUpdate is used.", getComponentNameFromType(ctor) || "A pure component");
                                }
                                if (typeof instance2.componentDidUnmount === "function") {
                                    error("%s has a method called componentDidUnmount(). But there is no such lifecycle method. Did you mean componentWillUnmount()?", name);
                                }
                                if (typeof instance2.componentDidReceiveProps === "function") {
                                    error("%s has a method called componentDidReceiveProps(). But there is no such lifecycle method. If you meant to update the state in response to changing props, use componentWillReceiveProps(). If you meant to fetch data or run side-effects or mutations after React has updated the UI, use componentDidUpdate().", name);
                                }
                                if (typeof instance2.componentWillRecieveProps === "function") {
                                    error("%s has a method called componentWillRecieveProps(). Did you mean componentWillReceiveProps()?", name);
                                }
                                if (typeof instance2.UNSAFE_componentWillRecieveProps === "function") {
                                    error("%s has a method called UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?", name);
                                }
                                var hasMutatedProps = instance2.props !== newProps;
                                if (instance2.props !== void 0 && hasMutatedProps) {
                                    error("%s(...): When calling super() in `%s`, make sure to pass up the same props that your component's constructor was passed.", name, name);
                                }
                                if (instance2.defaultProps) {
                                    error("Setting defaultProps as an instance property on %s is not supported and will be ignored. Instead, define defaultProps as a static property on %s.", name, name);
                                }
                                if (typeof instance2.getSnapshotBeforeUpdate === "function" && typeof instance2.componentDidUpdate !== "function" && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)) {
                                    didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);
                                    error("%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). This component defines getSnapshotBeforeUpdate() only.", getComponentNameFromType(ctor));
                                }
                                if (typeof instance2.getDerivedStateFromProps === "function") {
                                    error("%s: getDerivedStateFromProps() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name);
                                }
                                if (typeof instance2.getDerivedStateFromError === "function") {
                                    error("%s: getDerivedStateFromError() is defined as an instance method and will be ignored. Instead, declare it as a static method.", name);
                                }
                                if (typeof ctor.getSnapshotBeforeUpdate === "function") {
                                    error("%s: getSnapshotBeforeUpdate() is defined as a static method and will be ignored. Instead, declare it as an instance method.", name);
                                }
                                var _state = instance2.state;
                                if (_state && (typeof _state !== "object" || isArray(_state))) {
                                    error("%s.state: must be set to an object or null", name);
                                }
                                if (typeof instance2.getChildContext === "function" && typeof ctor.childContextTypes !== "object") {
                                    error("%s.getChildContext(): childContextTypes must be defined in order to use getChildContext().", name);
                                }
                            }
                        }
                        function adoptClassInstance(workInProgress2, instance2) {
                            instance2.updater = classComponentUpdater;
                            workInProgress2.stateNode = instance2;
                            set(instance2, workInProgress2);
                            {
                                instance2._reactInternalInstance = fakeInternalInstance;
                            }
                        }
                        function constructClassInstance(workInProgress2, ctor, props) {
                            var isLegacyContextConsumer = false;
                            var unmaskedContext = emptyContextObject;
                            var context = emptyContextObject;
                            var contextType = ctor.contextType;
                            {
                                if ("contextType" in ctor) {
                                    var isValid = (
                                        // Allow null for conditional declaration
                                        contextType === null || contextType !== void 0 && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType._context === void 0
                                    );
                                    if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {
                                        didWarnAboutInvalidateContextType.add(ctor);
                                        var addendum = "";
                                        if (contextType === void 0) {
                                            addendum = " However, it is set to undefined. This can be caused by a typo or by mixing up named and default imports. This can also happen due to a circular dependency, so try moving the createContext() call to a separate file.";
                                        } else if (typeof contextType !== "object") {
                                            addendum = " However, it is set to a " + typeof contextType + ".";
                                        } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {
                                            addendum = " Did you accidentally pass the Context.Provider instead?";
                                        } else if (contextType._context !== void 0) {
                                            addendum = " Did you accidentally pass the Context.Consumer instead?";
                                        } else {
                                            addendum = " However, it is set to an object with keys {" + Object.keys(contextType).join(", ") + "}.";
                                        }
                                        error("%s defines an invalid contextType. contextType should point to the Context object returned by React.createContext().%s", getComponentNameFromType(ctor) || "Component", addendum);
                                    }
                                }
                            }
                            if (typeof contextType === "object" && contextType !== null) {
                                context = readContext(contextType);
                            } else {
                                unmaskedContext = getUnmaskedContext(workInProgress2, ctor, true);
                                var contextTypes = ctor.contextTypes;
                                isLegacyContextConsumer = contextTypes !== null && contextTypes !== void 0;
                                context = isLegacyContextConsumer ? getMaskedContext(workInProgress2, unmaskedContext) : emptyContextObject;
                            }
                            var instance2 = new ctor(props, context);
                            {
                                if (workInProgress2.mode & StrictLegacyMode) {
                                    setIsStrictModeForDevtools(true);
                                    try {
                                        instance2 = new ctor(props, context);
                                    } finally {
                                        setIsStrictModeForDevtools(false);
                                    }
                                }
                            }
                            var state = workInProgress2.memoizedState = instance2.state !== null && instance2.state !== void 0 ? instance2.state : null;
                            adoptClassInstance(workInProgress2, instance2);
                            {
                                if (typeof ctor.getDerivedStateFromProps === "function" && state === null) {
                                    var componentName = getComponentNameFromType(ctor) || "Component";
                                    if (!didWarnAboutUninitializedState.has(componentName)) {
                                        didWarnAboutUninitializedState.add(componentName);
                                        error("`%s` uses `getDerivedStateFromProps` but its initial state is %s. This is not recommended. Instead, define the initial state by assigning an object to `this.state` in the constructor of `%s`. This ensures that `getDerivedStateFromProps` arguments have a consistent shape.", componentName, instance2.state === null ? "null" : "undefined", componentName);
                                    }
                                }
                                if (typeof ctor.getDerivedStateFromProps === "function" || typeof instance2.getSnapshotBeforeUpdate === "function") {
                                    var foundWillMountName = null;
                                    var foundWillReceivePropsName = null;
                                    var foundWillUpdateName = null;
                                    if (typeof instance2.componentWillMount === "function" && instance2.componentWillMount.__suppressDeprecationWarning !== true) {
                                        foundWillMountName = "componentWillMount";
                                    } else if (typeof instance2.UNSAFE_componentWillMount === "function") {
                                        foundWillMountName = "UNSAFE_componentWillMount";
                                    }
                                    if (typeof instance2.componentWillReceiveProps === "function" && instance2.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
                                        foundWillReceivePropsName = "componentWillReceiveProps";
                                    } else if (typeof instance2.UNSAFE_componentWillReceiveProps === "function") {
                                        foundWillReceivePropsName = "UNSAFE_componentWillReceiveProps";
                                    }
                                    if (typeof instance2.componentWillUpdate === "function" && instance2.componentWillUpdate.__suppressDeprecationWarning !== true) {
                                        foundWillUpdateName = "componentWillUpdate";
                                    } else if (typeof instance2.UNSAFE_componentWillUpdate === "function") {
                                        foundWillUpdateName = "UNSAFE_componentWillUpdate";
                                    }
                                    if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
                                        var _componentName = getComponentNameFromType(ctor) || "Component";
                                        var newApiName = typeof ctor.getDerivedStateFromProps === "function" ? "getDerivedStateFromProps()" : "getSnapshotBeforeUpdate()";
                                        if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {
                                            didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);
                                            error("Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\nThe above lifecycles should be removed. Learn more about this warning here:\nhttps://reactjs.org/link/unsafe-component-lifecycles", _componentName, newApiName, foundWillMountName !== null ? "\n  " + foundWillMountName : "", foundWillReceivePropsName !== null ? "\n  " + foundWillReceivePropsName : "", foundWillUpdateName !== null ? "\n  " + foundWillUpdateName : "");
                                        }
                                    }
                                }
                            }
                            if (isLegacyContextConsumer) {
                                cacheContext(workInProgress2, unmaskedContext, context);
                            }
                            return instance2;
                        }
                        function callComponentWillMount(workInProgress2, instance2) {
                            var oldState = instance2.state;
                            if (typeof instance2.componentWillMount === "function") {
                                instance2.componentWillMount();
                            }
                            if (typeof instance2.UNSAFE_componentWillMount === "function") {
                                instance2.UNSAFE_componentWillMount();
                            }
                            if (oldState !== instance2.state) {
                                {
                                    error("%s.componentWillMount(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", getComponentNameFromFiber(workInProgress2) || "Component");
                                }
                                classComponentUpdater.enqueueReplaceState(instance2, instance2.state, null);
                            }
                        }
                        function callComponentWillReceiveProps(workInProgress2, instance2, newProps, nextContext) {
                            var oldState = instance2.state;
                            if (typeof instance2.componentWillReceiveProps === "function") {
                                instance2.componentWillReceiveProps(newProps, nextContext);
                            }
                            if (typeof instance2.UNSAFE_componentWillReceiveProps === "function") {
                                instance2.UNSAFE_componentWillReceiveProps(newProps, nextContext);
                            }
                            if (instance2.state !== oldState) {
                                {
                                    var componentName = getComponentNameFromFiber(workInProgress2) || "Component";
                                    if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {
                                        didWarnAboutStateAssignmentForComponent.add(componentName);
                                        error("%s.componentWillReceiveProps(): Assigning directly to this.state is deprecated (except inside a component's constructor). Use setState instead.", componentName);
                                    }
                                }
                                classComponentUpdater.enqueueReplaceState(instance2, instance2.state, null);
                            }
                        }
                        function mountClassInstance(workInProgress2, ctor, newProps, renderLanes2) {
                            {
                                checkClassInstance(workInProgress2, ctor, newProps);
                            }
                            var instance2 = workInProgress2.stateNode;
                            instance2.props = newProps;
                            instance2.state = workInProgress2.memoizedState;
                            instance2.refs = emptyRefsObject;
                            initializeUpdateQueue(workInProgress2);
                            var contextType = ctor.contextType;
                            if (typeof contextType === "object" && contextType !== null) {
                                instance2.context = readContext(contextType);
                            } else {
                                var unmaskedContext = getUnmaskedContext(workInProgress2, ctor, true);
                                instance2.context = getMaskedContext(workInProgress2, unmaskedContext);
                            }
                            {
                                if (instance2.state === newProps) {
                                    var componentName = getComponentNameFromType(ctor) || "Component";
                                    if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {
                                        didWarnAboutDirectlyAssigningPropsToState.add(componentName);
                                        error("%s: It is not recommended to assign props directly to state because updates to props won't be reflected in state. In most cases, it is better to use props directly.", componentName);
                                    }
                                }
                                if (workInProgress2.mode & StrictLegacyMode) {
                                    ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress2, instance2);
                                }
                                {
                                    ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress2, instance2);
                                }
                            }
                            instance2.state = workInProgress2.memoizedState;
                            var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
                            if (typeof getDerivedStateFromProps === "function") {
                                applyDerivedStateFromProps(workInProgress2, ctor, getDerivedStateFromProps, newProps);
                                instance2.state = workInProgress2.memoizedState;
                            }
                            if (typeof ctor.getDerivedStateFromProps !== "function" && typeof instance2.getSnapshotBeforeUpdate !== "function" && (typeof instance2.UNSAFE_componentWillMount === "function" || typeof instance2.componentWillMount === "function")) {
                                callComponentWillMount(workInProgress2, instance2);
                                processUpdateQueue(workInProgress2, newProps, instance2, renderLanes2);
                                instance2.state = workInProgress2.memoizedState;
                            }
                            if (typeof instance2.componentDidMount === "function") {
                                var fiberFlags = Update;
                                {
                                    fiberFlags |= LayoutStatic;
                                }
                                if ((workInProgress2.mode & StrictEffectsMode) !== NoMode) {
                                    fiberFlags |= MountLayoutDev;
                                }
                                workInProgress2.flags |= fiberFlags;
                            }
                        }
                        function resumeMountClassInstance(workInProgress2, ctor, newProps, renderLanes2) {
                            var instance2 = workInProgress2.stateNode;
                            var oldProps = workInProgress2.memoizedProps;
                            instance2.props = oldProps;
                            var oldContext = instance2.context;
                            var contextType = ctor.contextType;
                            var nextContext = emptyContextObject;
                            if (typeof contextType === "object" && contextType !== null) {
                                nextContext = readContext(contextType);
                            } else {
                                var nextLegacyUnmaskedContext = getUnmaskedContext(workInProgress2, ctor, true);
                                nextContext = getMaskedContext(workInProgress2, nextLegacyUnmaskedContext);
                            }
                            var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
                            var hasNewLifecycles = typeof getDerivedStateFromProps === "function" || typeof instance2.getSnapshotBeforeUpdate === "function";
                            if (!hasNewLifecycles && (typeof instance2.UNSAFE_componentWillReceiveProps === "function" || typeof instance2.componentWillReceiveProps === "function")) {
                                if (oldProps !== newProps || oldContext !== nextContext) {
                                    callComponentWillReceiveProps(workInProgress2, instance2, newProps, nextContext);
                                }
                            }
                            resetHasForceUpdateBeforeProcessing();
                            var oldState = workInProgress2.memoizedState;
                            var newState = instance2.state = oldState;
                            processUpdateQueue(workInProgress2, newProps, instance2, renderLanes2);
                            newState = workInProgress2.memoizedState;
                            if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
                                if (typeof instance2.componentDidMount === "function") {
                                    var fiberFlags = Update;
                                    {
                                        fiberFlags |= LayoutStatic;
                                    }
                                    if ((workInProgress2.mode & StrictEffectsMode) !== NoMode) {
                                        fiberFlags |= MountLayoutDev;
                                    }
                                    workInProgress2.flags |= fiberFlags;
                                }
                                return false;
                            }
                            if (typeof getDerivedStateFromProps === "function") {
                                applyDerivedStateFromProps(workInProgress2, ctor, getDerivedStateFromProps, newProps);
                                newState = workInProgress2.memoizedState;
                            }
                            var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress2, ctor, oldProps, newProps, oldState, newState, nextContext);
                            if (shouldUpdate) {
                                if (!hasNewLifecycles && (typeof instance2.UNSAFE_componentWillMount === "function" || typeof instance2.componentWillMount === "function")) {
                                    if (typeof instance2.componentWillMount === "function") {
                                        instance2.componentWillMount();
                                    }
                                    if (typeof instance2.UNSAFE_componentWillMount === "function") {
                                        instance2.UNSAFE_componentWillMount();
                                    }
                                }
                                if (typeof instance2.componentDidMount === "function") {
                                    var _fiberFlags = Update;
                                    {
                                        _fiberFlags |= LayoutStatic;
                                    }
                                    if ((workInProgress2.mode & StrictEffectsMode) !== NoMode) {
                                        _fiberFlags |= MountLayoutDev;
                                    }
                                    workInProgress2.flags |= _fiberFlags;
                                }
                            } else {
                                if (typeof instance2.componentDidMount === "function") {
                                    var _fiberFlags2 = Update;
                                    {
                                        _fiberFlags2 |= LayoutStatic;
                                    }
                                    if ((workInProgress2.mode & StrictEffectsMode) !== NoMode) {
                                        _fiberFlags2 |= MountLayoutDev;
                                    }
                                    workInProgress2.flags |= _fiberFlags2;
                                }
                                workInProgress2.memoizedProps = newProps;
                                workInProgress2.memoizedState = newState;
                            }
                            instance2.props = newProps;
                            instance2.state = newState;
                            instance2.context = nextContext;
                            return shouldUpdate;
                        }
                        function updateClassInstance(current2, workInProgress2, ctor, newProps, renderLanes2) {
                            var instance2 = workInProgress2.stateNode;
                            cloneUpdateQueue(current2, workInProgress2);
                            var unresolvedOldProps = workInProgress2.memoizedProps;
                            var oldProps = workInProgress2.type === workInProgress2.elementType ? unresolvedOldProps : resolveDefaultProps(workInProgress2.type, unresolvedOldProps);
                            instance2.props = oldProps;
                            var unresolvedNewProps = workInProgress2.pendingProps;
                            var oldContext = instance2.context;
                            var contextType = ctor.contextType;
                            var nextContext = emptyContextObject;
                            if (typeof contextType === "object" && contextType !== null) {
                                nextContext = readContext(contextType);
                            } else {
                                var nextUnmaskedContext = getUnmaskedContext(workInProgress2, ctor, true);
                                nextContext = getMaskedContext(workInProgress2, nextUnmaskedContext);
                            }
                            var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
                            var hasNewLifecycles = typeof getDerivedStateFromProps === "function" || typeof instance2.getSnapshotBeforeUpdate === "function";
                            if (!hasNewLifecycles && (typeof instance2.UNSAFE_componentWillReceiveProps === "function" || typeof instance2.componentWillReceiveProps === "function")) {
                                if (unresolvedOldProps !== unresolvedNewProps || oldContext !== nextContext) {
                                    callComponentWillReceiveProps(workInProgress2, instance2, newProps, nextContext);
                                }
                            }
                            resetHasForceUpdateBeforeProcessing();
                            var oldState = workInProgress2.memoizedState;
                            var newState = instance2.state = oldState;
                            processUpdateQueue(workInProgress2, newProps, instance2, renderLanes2);
                            newState = workInProgress2.memoizedState;
                            if (unresolvedOldProps === unresolvedNewProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing() && !enableLazyContextPropagation) {
                                if (typeof instance2.componentDidUpdate === "function") {
                                    if (unresolvedOldProps !== current2.memoizedProps || oldState !== current2.memoizedState) {
                                        workInProgress2.flags |= Update;
                                    }
                                }
                                if (typeof instance2.getSnapshotBeforeUpdate === "function") {
                                    if (unresolvedOldProps !== current2.memoizedProps || oldState !== current2.memoizedState) {
                                        workInProgress2.flags |= Snapshot;
                                    }
                                }
                                return false;
                            }
                            if (typeof getDerivedStateFromProps === "function") {
                                applyDerivedStateFromProps(workInProgress2, ctor, getDerivedStateFromProps, newProps);
                                newState = workInProgress2.memoizedState;
                            }
                            var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress2, ctor, oldProps, newProps, oldState, newState, nextContext) || // TODO: In some cases, we'll end up checking if context has changed twice,
                                // both before and after `shouldComponentUpdate` has been called. Not ideal,
                                // but I'm loath to refactor this function. This only happens for memoized
                                // components so it's not that common.
                                enableLazyContextPropagation;
                            if (shouldUpdate) {
                                if (!hasNewLifecycles && (typeof instance2.UNSAFE_componentWillUpdate === "function" || typeof instance2.componentWillUpdate === "function")) {
                                    if (typeof instance2.componentWillUpdate === "function") {
                                        instance2.componentWillUpdate(newProps, newState, nextContext);
                                    }
                                    if (typeof instance2.UNSAFE_componentWillUpdate === "function") {
                                        instance2.UNSAFE_componentWillUpdate(newProps, newState, nextContext);
                                    }
                                }
                                if (typeof instance2.componentDidUpdate === "function") {
                                    workInProgress2.flags |= Update;
                                }
                                if (typeof instance2.getSnapshotBeforeUpdate === "function") {
                                    workInProgress2.flags |= Snapshot;
                                }
                            } else {
                                if (typeof instance2.componentDidUpdate === "function") {
                                    if (unresolvedOldProps !== current2.memoizedProps || oldState !== current2.memoizedState) {
                                        workInProgress2.flags |= Update;
                                    }
                                }
                                if (typeof instance2.getSnapshotBeforeUpdate === "function") {
                                    if (unresolvedOldProps !== current2.memoizedProps || oldState !== current2.memoizedState) {
                                        workInProgress2.flags |= Snapshot;
                                    }
                                }
                                workInProgress2.memoizedProps = newProps;
                                workInProgress2.memoizedState = newState;
                            }
                            instance2.props = newProps;
                            instance2.state = newState;
                            instance2.context = nextContext;
                            return shouldUpdate;
                        }
                        var didWarnAboutMaps;
                        var didWarnAboutGenerators;
                        var didWarnAboutStringRefs;
                        var ownerHasKeyUseWarning;
                        var ownerHasFunctionTypeWarning;
                        var warnForMissingKey = function(child, returnFiber) {
                        };
                        {
                            didWarnAboutMaps = false;
                            didWarnAboutGenerators = false;
                            didWarnAboutStringRefs = {};
                            ownerHasKeyUseWarning = {};
                            ownerHasFunctionTypeWarning = {};
                            warnForMissingKey = function(child, returnFiber) {
                                if (child === null || typeof child !== "object") {
                                    return;
                                }
                                if (!child._store || child._store.validated || child.key != null) {
                                    return;
                                }
                                if (typeof child._store !== "object") {
                                    throw new Error("React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.");
                                }
                                child._store.validated = true;
                                var componentName = getComponentNameFromFiber(returnFiber) || "Component";
                                if (ownerHasKeyUseWarning[componentName]) {
                                    return;
                                }
                                ownerHasKeyUseWarning[componentName] = true;
                                error('Each child in a list should have a unique "key" prop. See https://reactjs.org/link/warning-keys for more information.');
                            };
                        }
                        function coerceRef(returnFiber, current2, element) {
                            var mixedRef = element.ref;
                            if (mixedRef !== null && typeof mixedRef !== "function" && typeof mixedRef !== "object") {
                                {
                                    if ((returnFiber.mode & StrictLegacyMode || warnAboutStringRefs) && // We warn in ReactElement.js if owner and self are equal for string refs
                                        // because these cannot be automatically converted to an arrow function
                                        // using a codemod. Therefore, we don't have to warn about string refs again.
                                        !(element._owner && element._self && element._owner.stateNode !== element._self)) {
                                        var componentName = getComponentNameFromFiber(returnFiber) || "Component";
                                        if (!didWarnAboutStringRefs[componentName]) {
                                            {
                                                error('A string ref, "%s", has been found within a strict mode tree. String refs are a source of potential bugs and should be avoided. We recommend using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', mixedRef);
                                            }
                                            didWarnAboutStringRefs[componentName] = true;
                                        }
                                    }
                                }
                                if (element._owner) {
                                    var owner = element._owner;
                                    var inst;
                                    if (owner) {
                                        var ownerFiber = owner;
                                        if (ownerFiber.tag !== ClassComponent) {
                                            throw new Error("Function components cannot have string refs. We recommend using useRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref");
                                        }
                                        inst = ownerFiber.stateNode;
                                    }
                                    if (!inst) {
                                        throw new Error("Missing owner for string ref " + mixedRef + ". This error is likely caused by a bug in React. Please file an issue.");
                                    }
                                    var resolvedInst = inst;
                                    {
                                        checkPropStringCoercion(mixedRef, "ref");
                                    }
                                    var stringRef = "" + mixedRef;
                                    if (current2 !== null && current2.ref !== null && typeof current2.ref === "function" && current2.ref._stringRef === stringRef) {
                                        return current2.ref;
                                    }
                                    var ref = function(value) {
                                        var refs = resolvedInst.refs;
                                        if (refs === emptyRefsObject) {
                                            refs = resolvedInst.refs = {};
                                        }
                                        if (value === null) {
                                            delete refs[stringRef];
                                        } else {
                                            refs[stringRef] = value;
                                        }
                                    };
                                    ref._stringRef = stringRef;
                                    return ref;
                                } else {
                                    if (typeof mixedRef !== "string") {
                                        throw new Error("Expected ref to be a function, a string, an object returned by React.createRef(), or null.");
                                    }
                                    if (!element._owner) {
                                        throw new Error("Element ref was specified as a string (" + mixedRef + ") but no owner was set. This could happen for one of the following reasons:\n1. You may be adding a ref to a function component\n2. You may be adding a ref to a component that was not created inside a component's render method\n3. You have multiple copies of React loaded\nSee https://reactjs.org/link/refs-must-have-owner for more information.");
                                    }
                                }
                            }
                            return mixedRef;
                        }
                        function throwOnInvalidObjectType(returnFiber, newChild) {
                            var childString = Object.prototype.toString.call(newChild);
                            throw new Error("Objects are not valid as a React child (found: " + (childString === "[object Object]" ? "object with keys {" + Object.keys(newChild).join(", ") + "}" : childString) + "). If you meant to render a collection of children, use an array instead.");
                        }
                        function warnOnFunctionType(returnFiber) {
                            {
                                var componentName = getComponentNameFromFiber(returnFiber) || "Component";
                                if (ownerHasFunctionTypeWarning[componentName]) {
                                    return;
                                }
                                ownerHasFunctionTypeWarning[componentName] = true;
                                error("Functions are not valid as a React child. This may happen if you return a Component instead of <Component /> from render. Or maybe you meant to call this function rather than return it.");
                            }
                        }
                        function resolveLazy(lazyType) {
                            var payload = lazyType._payload;
                            var init = lazyType._init;
                            return init(payload);
                        }
                        function ChildReconciler(shouldTrackSideEffects) {
                            function deleteChild(returnFiber, childToDelete) {
                                if (!shouldTrackSideEffects) {
                                    return;
                                }
                                var deletions = returnFiber.deletions;
                                if (deletions === null) {
                                    returnFiber.deletions = [childToDelete];
                                    returnFiber.flags |= ChildDeletion;
                                } else {
                                    deletions.push(childToDelete);
                                }
                            }
                            function deleteRemainingChildren(returnFiber, currentFirstChild) {
                                if (!shouldTrackSideEffects) {
                                    return null;
                                }
                                var childToDelete = currentFirstChild;
                                while (childToDelete !== null) {
                                    deleteChild(returnFiber, childToDelete);
                                    childToDelete = childToDelete.sibling;
                                }
                                return null;
                            }
                            function mapRemainingChildren(returnFiber, currentFirstChild) {
                                var existingChildren = /* @__PURE__ */ new Map();
                                var existingChild = currentFirstChild;
                                while (existingChild !== null) {
                                    if (existingChild.key !== null) {
                                        existingChildren.set(existingChild.key, existingChild);
                                    } else {
                                        existingChildren.set(existingChild.index, existingChild);
                                    }
                                    existingChild = existingChild.sibling;
                                }
                                return existingChildren;
                            }
                            function useFiber(fiber, pendingProps) {
                                var clone = createWorkInProgress(fiber, pendingProps);
                                clone.index = 0;
                                clone.sibling = null;
                                return clone;
                            }
                            function placeChild(newFiber, lastPlacedIndex, newIndex) {
                                newFiber.index = newIndex;
                                if (!shouldTrackSideEffects) {
                                    newFiber.flags |= Forked;
                                    return lastPlacedIndex;
                                }
                                var current2 = newFiber.alternate;
                                if (current2 !== null) {
                                    var oldIndex = current2.index;
                                    if (oldIndex < lastPlacedIndex) {
                                        newFiber.flags |= Placement;
                                        return lastPlacedIndex;
                                    } else {
                                        return oldIndex;
                                    }
                                } else {
                                    newFiber.flags |= Placement;
                                    return lastPlacedIndex;
                                }
                            }
                            function placeSingleChild(newFiber) {
                                if (shouldTrackSideEffects && newFiber.alternate === null) {
                                    newFiber.flags |= Placement;
                                }
                                return newFiber;
                            }
                            function updateTextNode(returnFiber, current2, textContent, lanes) {
                                if (current2 === null || current2.tag !== HostText) {
                                    var created = createFiberFromText(textContent, returnFiber.mode, lanes);
                                    created.return = returnFiber;
                                    return created;
                                } else {
                                    var existing = useFiber(current2, textContent);
                                    existing.return = returnFiber;
                                    return existing;
                                }
                            }
                            function updateElement(returnFiber, current2, element, lanes) {
                                var elementType = element.type;
                                if (elementType === REACT_FRAGMENT_TYPE) {
                                    return updateFragment2(returnFiber, current2, element.props.children, lanes, element.key);
                                }
                                if (current2 !== null) {
                                    if (current2.elementType === elementType || // Keep this check inline so it only runs on the false path:
                                        isCompatibleFamilyForHotReloading(current2, element) || // Lazy types should reconcile their resolved type.
                                        // We need to do this after the Hot Reloading check above,
                                        // because hot reloading has different semantics than prod because
                                        // it doesn't resuspend. So we can't let the call below suspend.
                                        typeof elementType === "object" && elementType !== null && elementType.$$typeof === REACT_LAZY_TYPE && resolveLazy(elementType) === current2.type) {
                                        var existing = useFiber(current2, element.props);
                                        existing.ref = coerceRef(returnFiber, current2, element);
                                        existing.return = returnFiber;
                                        {
                                            existing._debugSource = element._source;
                                            existing._debugOwner = element._owner;
                                        }
                                        return existing;
                                    }
                                }
                                var created = createFiberFromElement(element, returnFiber.mode, lanes);
                                created.ref = coerceRef(returnFiber, current2, element);
                                created.return = returnFiber;
                                return created;
                            }
                            function updatePortal(returnFiber, current2, portal, lanes) {
                                if (current2 === null || current2.tag !== HostPortal || current2.stateNode.containerInfo !== portal.containerInfo || current2.stateNode.implementation !== portal.implementation) {
                                    var created = createFiberFromPortal(portal, returnFiber.mode, lanes);
                                    created.return = returnFiber;
                                    return created;
                                } else {
                                    var existing = useFiber(current2, portal.children || []);
                                    existing.return = returnFiber;
                                    return existing;
                                }
                            }
                            function updateFragment2(returnFiber, current2, fragment, lanes, key) {
                                if (current2 === null || current2.tag !== Fragment) {
                                    var created = createFiberFromFragment(fragment, returnFiber.mode, lanes, key);
                                    created.return = returnFiber;
                                    return created;
                                } else {
                                    var existing = useFiber(current2, fragment);
                                    existing.return = returnFiber;
                                    return existing;
                                }
                            }
                            function createChild(returnFiber, newChild, lanes) {
                                if (typeof newChild === "string" && newChild !== "" || typeof newChild === "number") {
                                    var created = createFiberFromText("" + newChild, returnFiber.mode, lanes);
                                    created.return = returnFiber;
                                    return created;
                                }
                                if (typeof newChild === "object" && newChild !== null) {
                                    switch (newChild.$$typeof) {
                                        case REACT_ELEMENT_TYPE: {
                                            var _created = createFiberFromElement(newChild, returnFiber.mode, lanes);
                                            _created.ref = coerceRef(returnFiber, null, newChild);
                                            _created.return = returnFiber;
                                            return _created;
                                        }
                                        case REACT_PORTAL_TYPE: {
                                            var _created2 = createFiberFromPortal(newChild, returnFiber.mode, lanes);
                                            _created2.return = returnFiber;
                                            return _created2;
                                        }
                                        case REACT_LAZY_TYPE: {
                                            var payload = newChild._payload;
                                            var init = newChild._init;
                                            return createChild(returnFiber, init(payload), lanes);
                                        }
                                    }
                                    if (isArray(newChild) || getIteratorFn(newChild)) {
                                        var _created3 = createFiberFromFragment(newChild, returnFiber.mode, lanes, null);
                                        _created3.return = returnFiber;
                                        return _created3;
                                    }
                                    throwOnInvalidObjectType(returnFiber, newChild);
                                }
                                {
                                    if (typeof newChild === "function") {
                                        warnOnFunctionType(returnFiber);
                                    }
                                }
                                return null;
                            }
                            function updateSlot(returnFiber, oldFiber, newChild, lanes) {
                                var key = oldFiber !== null ? oldFiber.key : null;
                                if (typeof newChild === "string" && newChild !== "" || typeof newChild === "number") {
                                    if (key !== null) {
                                        return null;
                                    }
                                    return updateTextNode(returnFiber, oldFiber, "" + newChild, lanes);
                                }
                                if (typeof newChild === "object" && newChild !== null) {
                                    switch (newChild.$$typeof) {
                                        case REACT_ELEMENT_TYPE: {
                                            if (newChild.key === key) {
                                                return updateElement(returnFiber, oldFiber, newChild, lanes);
                                            } else {
                                                return null;
                                            }
                                        }
                                        case REACT_PORTAL_TYPE: {
                                            if (newChild.key === key) {
                                                return updatePortal(returnFiber, oldFiber, newChild, lanes);
                                            } else {
                                                return null;
                                            }
                                        }
                                        case REACT_LAZY_TYPE: {
                                            var payload = newChild._payload;
                                            var init = newChild._init;
                                            return updateSlot(returnFiber, oldFiber, init(payload), lanes);
                                        }
                                    }
                                    if (isArray(newChild) || getIteratorFn(newChild)) {
                                        if (key !== null) {
                                            return null;
                                        }
                                        return updateFragment2(returnFiber, oldFiber, newChild, lanes, null);
                                    }
                                    throwOnInvalidObjectType(returnFiber, newChild);
                                }
                                {
                                    if (typeof newChild === "function") {
                                        warnOnFunctionType(returnFiber);
                                    }
                                }
                                return null;
                            }
                            function updateFromMap(existingChildren, returnFiber, newIdx, newChild, lanes) {
                                if (typeof newChild === "string" && newChild !== "" || typeof newChild === "number") {
                                    var matchedFiber = existingChildren.get(newIdx) || null;
                                    return updateTextNode(returnFiber, matchedFiber, "" + newChild, lanes);
                                }
                                if (typeof newChild === "object" && newChild !== null) {
                                    switch (newChild.$$typeof) {
                                        case REACT_ELEMENT_TYPE: {
                                            var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
                                            return updateElement(returnFiber, _matchedFiber, newChild, lanes);
                                        }
                                        case REACT_PORTAL_TYPE: {
                                            var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;
                                            return updatePortal(returnFiber, _matchedFiber2, newChild, lanes);
                                        }
                                        case REACT_LAZY_TYPE:
                                            var payload = newChild._payload;
                                            var init = newChild._init;
                                            return updateFromMap(existingChildren, returnFiber, newIdx, init(payload), lanes);
                                    }
                                    if (isArray(newChild) || getIteratorFn(newChild)) {
                                        var _matchedFiber3 = existingChildren.get(newIdx) || null;
                                        return updateFragment2(returnFiber, _matchedFiber3, newChild, lanes, null);
                                    }
                                    throwOnInvalidObjectType(returnFiber, newChild);
                                }
                                {
                                    if (typeof newChild === "function") {
                                        warnOnFunctionType(returnFiber);
                                    }
                                }
                                return null;
                            }
                            function warnOnInvalidKey(child, knownKeys, returnFiber) {
                                {
                                    if (typeof child !== "object" || child === null) {
                                        return knownKeys;
                                    }
                                    switch (child.$$typeof) {
                                        case REACT_ELEMENT_TYPE:
                                        case REACT_PORTAL_TYPE:
                                            warnForMissingKey(child, returnFiber);
                                            var key = child.key;
                                            if (typeof key !== "string") {
                                                break;
                                            }
                                            if (knownKeys === null) {
                                                knownKeys = /* @__PURE__ */ new Set();
                                                knownKeys.add(key);
                                                break;
                                            }
                                            if (!knownKeys.has(key)) {
                                                knownKeys.add(key);
                                                break;
                                            }
                                            error("Encountered two children with the same key, `%s`. Keys should be unique so that components maintain their identity across updates. Non-unique keys may cause children to be duplicated and/or omitted \u2014 the behavior is unsupported and could change in a future version.", key);
                                            break;
                                        case REACT_LAZY_TYPE:
                                            var payload = child._payload;
                                            var init = child._init;
                                            warnOnInvalidKey(init(payload), knownKeys, returnFiber);
                                            break;
                                    }
                                }
                                return knownKeys;
                            }
                            function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, lanes) {
                                {
                                    var knownKeys = null;
                                    for (var i = 0; i < newChildren.length; i++) {
                                        var child = newChildren[i];
                                        knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);
                                    }
                                }
                                var resultingFirstChild = null;
                                var previousNewFiber = null;
                                var oldFiber = currentFirstChild;
                                var lastPlacedIndex = 0;
                                var newIdx = 0;
                                var nextOldFiber = null;
                                for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {
                                    if (oldFiber.index > newIdx) {
                                        nextOldFiber = oldFiber;
                                        oldFiber = null;
                                    } else {
                                        nextOldFiber = oldFiber.sibling;
                                    }
                                    var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], lanes);
                                    if (newFiber === null) {
                                        if (oldFiber === null) {
                                            oldFiber = nextOldFiber;
                                        }
                                        break;
                                    }
                                    if (shouldTrackSideEffects) {
                                        if (oldFiber && newFiber.alternate === null) {
                                            deleteChild(returnFiber, oldFiber);
                                        }
                                    }
                                    lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
                                    if (previousNewFiber === null) {
                                        resultingFirstChild = newFiber;
                                    } else {
                                        previousNewFiber.sibling = newFiber;
                                    }
                                    previousNewFiber = newFiber;
                                    oldFiber = nextOldFiber;
                                }
                                if (newIdx === newChildren.length) {
                                    deleteRemainingChildren(returnFiber, oldFiber);
                                    if (getIsHydrating()) {
                                        var numberOfForks = newIdx;
                                        pushTreeFork(returnFiber, numberOfForks);
                                    }
                                    return resultingFirstChild;
                                }
                                if (oldFiber === null) {
                                    for (; newIdx < newChildren.length; newIdx++) {
                                        var _newFiber = createChild(returnFiber, newChildren[newIdx], lanes);
                                        if (_newFiber === null) {
                                            continue;
                                        }
                                        lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);
                                        if (previousNewFiber === null) {
                                            resultingFirstChild = _newFiber;
                                        } else {
                                            previousNewFiber.sibling = _newFiber;
                                        }
                                        previousNewFiber = _newFiber;
                                    }
                                    if (getIsHydrating()) {
                                        var _numberOfForks = newIdx;
                                        pushTreeFork(returnFiber, _numberOfForks);
                                    }
                                    return resultingFirstChild;
                                }
                                var existingChildren = mapRemainingChildren(returnFiber, oldFiber);
                                for (; newIdx < newChildren.length; newIdx++) {
                                    var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], lanes);
                                    if (_newFiber2 !== null) {
                                        if (shouldTrackSideEffects) {
                                            if (_newFiber2.alternate !== null) {
                                                existingChildren.delete(_newFiber2.key === null ? newIdx : _newFiber2.key);
                                            }
                                        }
                                        lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);
                                        if (previousNewFiber === null) {
                                            resultingFirstChild = _newFiber2;
                                        } else {
                                            previousNewFiber.sibling = _newFiber2;
                                        }
                                        previousNewFiber = _newFiber2;
                                    }
                                }
                                if (shouldTrackSideEffects) {
                                    existingChildren.forEach(function(child2) {
                                        return deleteChild(returnFiber, child2);
                                    });
                                }
                                if (getIsHydrating()) {
                                    var _numberOfForks2 = newIdx;
                                    pushTreeFork(returnFiber, _numberOfForks2);
                                }
                                return resultingFirstChild;
                            }
                            function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, lanes) {
                                var iteratorFn = getIteratorFn(newChildrenIterable);
                                if (typeof iteratorFn !== "function") {
                                    throw new Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.");
                                }
                                {
                                    if (typeof Symbol === "function" && // $FlowFixMe Flow doesn't know about toStringTag
                                        newChildrenIterable[Symbol.toStringTag] === "Generator") {
                                        if (!didWarnAboutGenerators) {
                                            error("Using Generators as children is unsupported and will likely yield unexpected results because enumerating a generator mutates it. You may convert it to an array with `Array.from()` or the `[...spread]` operator before rendering. Keep in mind you might need to polyfill these features for older browsers.");
                                        }
                                        didWarnAboutGenerators = true;
                                    }
                                    if (newChildrenIterable.entries === iteratorFn) {
                                        if (!didWarnAboutMaps) {
                                            error("Using Maps as children is not supported. Use an array of keyed ReactElements instead.");
                                        }
                                        didWarnAboutMaps = true;
                                    }
                                    var _newChildren = iteratorFn.call(newChildrenIterable);
                                    if (_newChildren) {
                                        var knownKeys = null;
                                        var _step = _newChildren.next();
                                        for (; !_step.done; _step = _newChildren.next()) {
                                            var child = _step.value;
                                            knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);
                                        }
                                    }
                                }
                                var newChildren = iteratorFn.call(newChildrenIterable);
                                if (newChildren == null) {
                                    throw new Error("An iterable object provided no iterator.");
                                }
                                var resultingFirstChild = null;
                                var previousNewFiber = null;
                                var oldFiber = currentFirstChild;
                                var lastPlacedIndex = 0;
                                var newIdx = 0;
                                var nextOldFiber = null;
                                var step = newChildren.next();
                                for (; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()) {
                                    if (oldFiber.index > newIdx) {
                                        nextOldFiber = oldFiber;
                                        oldFiber = null;
                                    } else {
                                        nextOldFiber = oldFiber.sibling;
                                    }
                                    var newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);
                                    if (newFiber === null) {
                                        if (oldFiber === null) {
                                            oldFiber = nextOldFiber;
                                        }
                                        break;
                                    }
                                    if (shouldTrackSideEffects) {
                                        if (oldFiber && newFiber.alternate === null) {
                                            deleteChild(returnFiber, oldFiber);
                                        }
                                    }
                                    lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);
                                    if (previousNewFiber === null) {
                                        resultingFirstChild = newFiber;
                                    } else {
                                        previousNewFiber.sibling = newFiber;
                                    }
                                    previousNewFiber = newFiber;
                                    oldFiber = nextOldFiber;
                                }
                                if (step.done) {
                                    deleteRemainingChildren(returnFiber, oldFiber);
                                    if (getIsHydrating()) {
                                        var numberOfForks = newIdx;
                                        pushTreeFork(returnFiber, numberOfForks);
                                    }
                                    return resultingFirstChild;
                                }
                                if (oldFiber === null) {
                                    for (; !step.done; newIdx++, step = newChildren.next()) {
                                        var _newFiber3 = createChild(returnFiber, step.value, lanes);
                                        if (_newFiber3 === null) {
                                            continue;
                                        }
                                        lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);
                                        if (previousNewFiber === null) {
                                            resultingFirstChild = _newFiber3;
                                        } else {
                                            previousNewFiber.sibling = _newFiber3;
                                        }
                                        previousNewFiber = _newFiber3;
                                    }
                                    if (getIsHydrating()) {
                                        var _numberOfForks3 = newIdx;
                                        pushTreeFork(returnFiber, _numberOfForks3);
                                    }
                                    return resultingFirstChild;
                                }
                                var existingChildren = mapRemainingChildren(returnFiber, oldFiber);
                                for (; !step.done; newIdx++, step = newChildren.next()) {
                                    var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, lanes);
                                    if (_newFiber4 !== null) {
                                        if (shouldTrackSideEffects) {
                                            if (_newFiber4.alternate !== null) {
                                                existingChildren.delete(_newFiber4.key === null ? newIdx : _newFiber4.key);
                                            }
                                        }
                                        lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);
                                        if (previousNewFiber === null) {
                                            resultingFirstChild = _newFiber4;
                                        } else {
                                            previousNewFiber.sibling = _newFiber4;
                                        }
                                        previousNewFiber = _newFiber4;
                                    }
                                }
                                if (shouldTrackSideEffects) {
                                    existingChildren.forEach(function(child2) {
                                        return deleteChild(returnFiber, child2);
                                    });
                                }
                                if (getIsHydrating()) {
                                    var _numberOfForks4 = newIdx;
                                    pushTreeFork(returnFiber, _numberOfForks4);
                                }
                                return resultingFirstChild;
                            }
                            function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, lanes) {
                                if (currentFirstChild !== null && currentFirstChild.tag === HostText) {
                                    deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
                                    var existing = useFiber(currentFirstChild, textContent);
                                    existing.return = returnFiber;
                                    return existing;
                                }
                                deleteRemainingChildren(returnFiber, currentFirstChild);
                                var created = createFiberFromText(textContent, returnFiber.mode, lanes);
                                created.return = returnFiber;
                                return created;
                            }
                            function reconcileSingleElement(returnFiber, currentFirstChild, element, lanes) {
                                var key = element.key;
                                var child = currentFirstChild;
                                while (child !== null) {
                                    if (child.key === key) {
                                        var elementType = element.type;
                                        if (elementType === REACT_FRAGMENT_TYPE) {
                                            if (child.tag === Fragment) {
                                                deleteRemainingChildren(returnFiber, child.sibling);
                                                var existing = useFiber(child, element.props.children);
                                                existing.return = returnFiber;
                                                {
                                                    existing._debugSource = element._source;
                                                    existing._debugOwner = element._owner;
                                                }
                                                return existing;
                                            }
                                        } else {
                                            if (child.elementType === elementType || // Keep this check inline so it only runs on the false path:
                                                isCompatibleFamilyForHotReloading(child, element) || // Lazy types should reconcile their resolved type.
                                                // We need to do this after the Hot Reloading check above,
                                                // because hot reloading has different semantics than prod because
                                                // it doesn't resuspend. So we can't let the call below suspend.
                                                typeof elementType === "object" && elementType !== null && elementType.$$typeof === REACT_LAZY_TYPE && resolveLazy(elementType) === child.type) {
                                                deleteRemainingChildren(returnFiber, child.sibling);
                                                var _existing = useFiber(child, element.props);
                                                _existing.ref = coerceRef(returnFiber, child, element);
                                                _existing.return = returnFiber;
                                                {
                                                    _existing._debugSource = element._source;
                                                    _existing._debugOwner = element._owner;
                                                }
                                                return _existing;
                                            }
                                        }
                                        deleteRemainingChildren(returnFiber, child);
                                        break;
                                    } else {
                                        deleteChild(returnFiber, child);
                                    }
                                    child = child.sibling;
                                }
                                if (element.type === REACT_FRAGMENT_TYPE) {
                                    var created = createFiberFromFragment(element.props.children, returnFiber.mode, lanes, element.key);
                                    created.return = returnFiber;
                                    return created;
                                } else {
                                    var _created4 = createFiberFromElement(element, returnFiber.mode, lanes);
                                    _created4.ref = coerceRef(returnFiber, currentFirstChild, element);
                                    _created4.return = returnFiber;
                                    return _created4;
                                }
                            }
                            function reconcileSinglePortal(returnFiber, currentFirstChild, portal, lanes) {
                                var key = portal.key;
                                var child = currentFirstChild;
                                while (child !== null) {
                                    if (child.key === key) {
                                        if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {
                                            deleteRemainingChildren(returnFiber, child.sibling);
                                            var existing = useFiber(child, portal.children || []);
                                            existing.return = returnFiber;
                                            return existing;
                                        } else {
                                            deleteRemainingChildren(returnFiber, child);
                                            break;
                                        }
                                    } else {
                                        deleteChild(returnFiber, child);
                                    }
                                    child = child.sibling;
                                }
                                var created = createFiberFromPortal(portal, returnFiber.mode, lanes);
                                created.return = returnFiber;
                                return created;
                            }
                            function reconcileChildFibers2(returnFiber, currentFirstChild, newChild, lanes) {
                                var isUnkeyedTopLevelFragment = typeof newChild === "object" && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null;
                                if (isUnkeyedTopLevelFragment) {
                                    newChild = newChild.props.children;
                                }
                                if (typeof newChild === "object" && newChild !== null) {
                                    switch (newChild.$$typeof) {
                                        case REACT_ELEMENT_TYPE:
                                            return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, lanes));
                                        case REACT_PORTAL_TYPE:
                                            return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, lanes));
                                        case REACT_LAZY_TYPE:
                                            var payload = newChild._payload;
                                            var init = newChild._init;
                                            return reconcileChildFibers2(returnFiber, currentFirstChild, init(payload), lanes);
                                    }
                                    if (isArray(newChild)) {
                                        return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, lanes);
                                    }
                                    if (getIteratorFn(newChild)) {
                                        return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, lanes);
                                    }
                                    throwOnInvalidObjectType(returnFiber, newChild);
                                }
                                if (typeof newChild === "string" && newChild !== "" || typeof newChild === "number") {
                                    return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, "" + newChild, lanes));
                                }
                                {
                                    if (typeof newChild === "function") {
                                        warnOnFunctionType(returnFiber);
                                    }
                                }
                                return deleteRemainingChildren(returnFiber, currentFirstChild);
                            }
                            return reconcileChildFibers2;
                        }
                        var reconcileChildFibers = ChildReconciler(true);
                        var mountChildFibers = ChildReconciler(false);
                        function cloneChildFibers(current2, workInProgress2) {
                            if (current2 !== null && workInProgress2.child !== current2.child) {
                                throw new Error("Resuming work not yet implemented.");
                            }
                            if (workInProgress2.child === null) {
                                return;
                            }
                            var currentChild = workInProgress2.child;
                            var newChild = createWorkInProgress(currentChild, currentChild.pendingProps);
                            workInProgress2.child = newChild;
                            newChild.return = workInProgress2;
                            while (currentChild.sibling !== null) {
                                currentChild = currentChild.sibling;
                                newChild = newChild.sibling = createWorkInProgress(currentChild, currentChild.pendingProps);
                                newChild.return = workInProgress2;
                            }
                            newChild.sibling = null;
                        }
                        function resetChildFibers(workInProgress2, lanes) {
                            var child = workInProgress2.child;
                            while (child !== null) {
                                resetWorkInProgress(child, lanes);
                                child = child.sibling;
                            }
                        }
                        var NO_CONTEXT = {};
                        var contextStackCursor$1 = createCursor(NO_CONTEXT);
                        var contextFiberStackCursor = createCursor(NO_CONTEXT);
                        var rootInstanceStackCursor = createCursor(NO_CONTEXT);
                        function requiredContext(c) {
                            if (c === NO_CONTEXT) {
                                throw new Error("Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.");
                            }
                            return c;
                        }
                        function getRootHostContainer() {
                            var rootInstance = requiredContext(rootInstanceStackCursor.current);
                            return rootInstance;
                        }
                        function pushHostContainer(fiber, nextRootInstance) {
                            push(rootInstanceStackCursor, nextRootInstance, fiber);
                            push(contextFiberStackCursor, fiber, fiber);
                            push(contextStackCursor$1, NO_CONTEXT, fiber);
                            var nextRootContext = getRootHostContext(nextRootInstance);
                            pop(contextStackCursor$1, fiber);
                            push(contextStackCursor$1, nextRootContext, fiber);
                        }
                        function popHostContainer(fiber) {
                            pop(contextStackCursor$1, fiber);
                            pop(contextFiberStackCursor, fiber);
                            pop(rootInstanceStackCursor, fiber);
                        }
                        function getHostContext() {
                            var context = requiredContext(contextStackCursor$1.current);
                            return context;
                        }
                        function pushHostContext(fiber) {
                            var rootInstance = requiredContext(rootInstanceStackCursor.current);
                            var context = requiredContext(contextStackCursor$1.current);
                            var nextContext = getChildHostContext(context, fiber.type);
                            if (context === nextContext) {
                                return;
                            }
                            push(contextFiberStackCursor, fiber, fiber);
                            push(contextStackCursor$1, nextContext, fiber);
                        }
                        function popHostContext(fiber) {
                            if (contextFiberStackCursor.current !== fiber) {
                                return;
                            }
                            pop(contextStackCursor$1, fiber);
                            pop(contextFiberStackCursor, fiber);
                        }
                        var DefaultSuspenseContext = 0;
                        var SubtreeSuspenseContextMask = 1;
                        var InvisibleParentSuspenseContext = 1;
                        var ForceSuspenseFallback = 2;
                        var suspenseStackCursor = createCursor(DefaultSuspenseContext);
                        function hasSuspenseContext(parentContext, flag) {
                            return (parentContext & flag) !== 0;
                        }
                        function setDefaultShallowSuspenseContext(parentContext) {
                            return parentContext & SubtreeSuspenseContextMask;
                        }
                        function setShallowSuspenseContext(parentContext, shallowContext) {
                            return parentContext & SubtreeSuspenseContextMask | shallowContext;
                        }
                        function addSubtreeSuspenseContext(parentContext, subtreeContext) {
                            return parentContext | subtreeContext;
                        }
                        function pushSuspenseContext(fiber, newContext) {
                            push(suspenseStackCursor, newContext, fiber);
                        }
                        function popSuspenseContext(fiber) {
                            pop(suspenseStackCursor, fiber);
                        }
                        function shouldCaptureSuspense(workInProgress2, hasInvisibleParent) {
                            var nextState = workInProgress2.memoizedState;
                            if (nextState !== null) {
                                if (nextState.dehydrated !== null) {
                                    return true;
                                }
                                return false;
                            }
                            var props = workInProgress2.memoizedProps;
                            {
                                return true;
                            }
                        }
                        function findFirstSuspended(row) {
                            var node = row;
                            while (node !== null) {
                                if (node.tag === SuspenseComponent) {
                                    var state = node.memoizedState;
                                    if (state !== null) {
                                        var dehydrated = state.dehydrated;
                                        if (dehydrated === null || isSuspenseInstancePending(dehydrated) || isSuspenseInstanceFallback(dehydrated)) {
                                            return node;
                                        }
                                    }
                                } else if (node.tag === SuspenseListComponent && // revealOrder undefined can't be trusted because it don't
                                    // keep track of whether it suspended or not.
                                    node.memoizedProps.revealOrder !== void 0) {
                                    var didSuspend = (node.flags & DidCapture) !== NoFlags;
                                    if (didSuspend) {
                                        return node;
                                    }
                                } else if (node.child !== null) {
                                    node.child.return = node;
                                    node = node.child;
                                    continue;
                                }
                                if (node === row) {
                                    return null;
                                }
                                while (node.sibling === null) {
                                    if (node.return === null || node.return === row) {
                                        return null;
                                    }
                                    node = node.return;
                                }
                                node.sibling.return = node.return;
                                node = node.sibling;
                            }
                            return null;
                        }
                        var NoFlags$1 = (
                            /*   */
                            0
                        );
                        var HasEffect = (
                            /* */
                            1
                        );
                        var Insertion = (
                            /*  */
                            2
                        );
                        var Layout = (
                            /*    */
                            4
                        );
                        var Passive$1 = (
                            /*   */
                            8
                        );
                        var workInProgressSources = [];
                        function resetWorkInProgressVersions() {
                            for (var i = 0; i < workInProgressSources.length; i++) {
                                var mutableSource = workInProgressSources[i];
                                {
                                    mutableSource._workInProgressVersionPrimary = null;
                                }
                            }
                            workInProgressSources.length = 0;
                        }
                        function registerMutableSourceForHydration(root2, mutableSource) {
                            var getVersion = mutableSource._getVersion;
                            var version = getVersion(mutableSource._source);
                            if (root2.mutableSourceEagerHydrationData == null) {
                                root2.mutableSourceEagerHydrationData = [mutableSource, version];
                            } else {
                                root2.mutableSourceEagerHydrationData.push(mutableSource, version);
                            }
                        }
                        var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher, ReactCurrentBatchConfig$2 = ReactSharedInternals.ReactCurrentBatchConfig;
                        var didWarnAboutMismatchedHooksForComponent;
                        var didWarnUncachedGetSnapshot;
                        {
                            didWarnAboutMismatchedHooksForComponent = /* @__PURE__ */ new Set();
                        }
                        var renderLanes = NoLanes;
                        var currentlyRenderingFiber$1 = null;
                        var currentHook = null;
                        var workInProgressHook = null;
                        var didScheduleRenderPhaseUpdate = false;
                        var didScheduleRenderPhaseUpdateDuringThisPass = false;
                        var localIdCounter = 0;
                        var globalClientIdCounter = 0;
                        var RE_RENDER_LIMIT = 25;
                        var currentHookNameInDev = null;
                        var hookTypesDev = null;
                        var hookTypesUpdateIndexDev = -1;
                        var ignorePreviousDependencies = false;
                        function mountHookTypesDev() {
                            {
                                var hookName = currentHookNameInDev;
                                if (hookTypesDev === null) {
                                    hookTypesDev = [hookName];
                                } else {
                                    hookTypesDev.push(hookName);
                                }
                            }
                        }
                        function updateHookTypesDev() {
                            {
                                var hookName = currentHookNameInDev;
                                if (hookTypesDev !== null) {
                                    hookTypesUpdateIndexDev++;
                                    if (hookTypesDev[hookTypesUpdateIndexDev] !== hookName) {
                                        warnOnHookMismatchInDev(hookName);
                                    }
                                }
                            }
                        }
                        function checkDepsAreArrayDev(deps) {
                            {
                                if (deps !== void 0 && deps !== null && !isArray(deps)) {
                                    error("%s received a final argument that is not an array (instead, received `%s`). When specified, the final argument must be an array.", currentHookNameInDev, typeof deps);
                                }
                            }
                        }
                        function warnOnHookMismatchInDev(currentHookName) {
                            {
                                var componentName = getComponentNameFromFiber(currentlyRenderingFiber$1);
                                if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {
                                    didWarnAboutMismatchedHooksForComponent.add(componentName);
                                    if (hookTypesDev !== null) {
                                        var table = "";
                                        var secondColumnStart = 30;
                                        for (var i = 0; i <= hookTypesUpdateIndexDev; i++) {
                                            var oldHookName = hookTypesDev[i];
                                            var newHookName = i === hookTypesUpdateIndexDev ? currentHookName : oldHookName;
                                            var row = i + 1 + ". " + oldHookName;
                                            while (row.length < secondColumnStart) {
                                                row += " ";
                                            }
                                            row += newHookName + "\n";
                                            table += row;
                                        }
                                        error("React has detected a change in the order of Hooks called by %s. This will lead to bugs and errors if not fixed. For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks\n\n   Previous render            Next render\n   ------------------------------------------------------\n%s   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n", componentName, table);
                                    }
                                }
                            }
                        }
                        function throwInvalidHookError() {
                            throw new Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.");
                        }
                        function areHookInputsEqual(nextDeps, prevDeps) {
                            {
                                if (ignorePreviousDependencies) {
                                    return false;
                                }
                            }
                            if (prevDeps === null) {
                                {
                                    error("%s received a final argument during this render, but not during the previous render. Even though the final argument is optional, its type cannot change between renders.", currentHookNameInDev);
                                }
                                return false;
                            }
                            {
                                if (nextDeps.length !== prevDeps.length) {
                                    error("The final argument passed to %s changed size between renders. The order and size of this array must remain constant.\n\nPrevious: %s\nIncoming: %s", currentHookNameInDev, "[" + prevDeps.join(", ") + "]", "[" + nextDeps.join(", ") + "]");
                                }
                            }
                            for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {
                                if (objectIs(nextDeps[i], prevDeps[i])) {
                                    continue;
                                }
                                return false;
                            }
                            return true;
                        }
                        function renderWithHooks(current2, workInProgress2, Component, props, secondArg, nextRenderLanes) {
                            renderLanes = nextRenderLanes;
                            currentlyRenderingFiber$1 = workInProgress2;
                            {
                                hookTypesDev = current2 !== null ? current2._debugHookTypes : null;
                                hookTypesUpdateIndexDev = -1;
                                ignorePreviousDependencies = current2 !== null && current2.type !== workInProgress2.type;
                            }
                            workInProgress2.memoizedState = null;
                            workInProgress2.updateQueue = null;
                            workInProgress2.lanes = NoLanes;
                            {
                                if (current2 !== null && current2.memoizedState !== null) {
                                    ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;
                                } else if (hookTypesDev !== null) {
                                    ReactCurrentDispatcher$1.current = HooksDispatcherOnMountWithHookTypesInDEV;
                                } else {
                                    ReactCurrentDispatcher$1.current = HooksDispatcherOnMountInDEV;
                                }
                            }
                            var children = Component(props, secondArg);
                            if (didScheduleRenderPhaseUpdateDuringThisPass) {
                                var numberOfReRenders = 0;
                                do {
                                    didScheduleRenderPhaseUpdateDuringThisPass = false;
                                    localIdCounter = 0;
                                    if (numberOfReRenders >= RE_RENDER_LIMIT) {
                                        throw new Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
                                    }
                                    numberOfReRenders += 1;
                                    {
                                        ignorePreviousDependencies = false;
                                    }
                                    currentHook = null;
                                    workInProgressHook = null;
                                    workInProgress2.updateQueue = null;
                                    {
                                        hookTypesUpdateIndexDev = -1;
                                    }
                                    ReactCurrentDispatcher$1.current = HooksDispatcherOnRerenderInDEV;
                                    children = Component(props, secondArg);
                                } while (didScheduleRenderPhaseUpdateDuringThisPass);
                            }
                            ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
                            {
                                workInProgress2._debugHookTypes = hookTypesDev;
                            }
                            var didRenderTooFewHooks = currentHook !== null && currentHook.next !== null;
                            renderLanes = NoLanes;
                            currentlyRenderingFiber$1 = null;
                            currentHook = null;
                            workInProgressHook = null;
                            {
                                currentHookNameInDev = null;
                                hookTypesDev = null;
                                hookTypesUpdateIndexDev = -1;
                                if (current2 !== null && (current2.flags & StaticMask) !== (workInProgress2.flags & StaticMask) && // Disable this warning in legacy mode, because legacy Suspense is weird
                                    // and creates false positives. To make this work in legacy mode, we'd
                                    // need to mark fibers that commit in an incomplete state, somehow. For
                                    // now I'll disable the warning that most of the bugs that would trigger
                                    // it are either exclusive to concurrent mode or exist in both.
                                    (current2.mode & ConcurrentMode) !== NoMode) {
                                    error("Internal React error: Expected static flag was missing. Please notify the React team.");
                                }
                            }
                            didScheduleRenderPhaseUpdate = false;
                            if (didRenderTooFewHooks) {
                                throw new Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement.");
                            }
                            return children;
                        }
                        function checkDidRenderIdHook() {
                            var didRenderIdHook = localIdCounter !== 0;
                            localIdCounter = 0;
                            return didRenderIdHook;
                        }
                        function bailoutHooks(current2, workInProgress2, lanes) {
                            workInProgress2.updateQueue = current2.updateQueue;
                            if ((workInProgress2.mode & StrictEffectsMode) !== NoMode) {
                                workInProgress2.flags &= ~(MountPassiveDev | MountLayoutDev | Passive | Update);
                            } else {
                                workInProgress2.flags &= ~(Passive | Update);
                            }
                            current2.lanes = removeLanes(current2.lanes, lanes);
                        }
                        function resetHooksAfterThrow() {
                            ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
                            if (didScheduleRenderPhaseUpdate) {
                                var hook = currentlyRenderingFiber$1.memoizedState;
                                while (hook !== null) {
                                    var queue = hook.queue;
                                    if (queue !== null) {
                                        queue.pending = null;
                                    }
                                    hook = hook.next;
                                }
                                didScheduleRenderPhaseUpdate = false;
                            }
                            renderLanes = NoLanes;
                            currentlyRenderingFiber$1 = null;
                            currentHook = null;
                            workInProgressHook = null;
                            {
                                hookTypesDev = null;
                                hookTypesUpdateIndexDev = -1;
                                currentHookNameInDev = null;
                                isUpdatingOpaqueValueInRenderPhase = false;
                            }
                            didScheduleRenderPhaseUpdateDuringThisPass = false;
                            localIdCounter = 0;
                        }
                        function mountWorkInProgressHook() {
                            var hook = {
                                memoizedState: null,
                                baseState: null,
                                baseQueue: null,
                                queue: null,
                                next: null
                            };
                            if (workInProgressHook === null) {
                                currentlyRenderingFiber$1.memoizedState = workInProgressHook = hook;
                            } else {
                                workInProgressHook = workInProgressHook.next = hook;
                            }
                            return workInProgressHook;
                        }
                        function updateWorkInProgressHook() {
                            var nextCurrentHook;
                            if (currentHook === null) {
                                var current2 = currentlyRenderingFiber$1.alternate;
                                if (current2 !== null) {
                                    nextCurrentHook = current2.memoizedState;
                                } else {
                                    nextCurrentHook = null;
                                }
                            } else {
                                nextCurrentHook = currentHook.next;
                            }
                            var nextWorkInProgressHook;
                            if (workInProgressHook === null) {
                                nextWorkInProgressHook = currentlyRenderingFiber$1.memoizedState;
                            } else {
                                nextWorkInProgressHook = workInProgressHook.next;
                            }
                            if (nextWorkInProgressHook !== null) {
                                workInProgressHook = nextWorkInProgressHook;
                                nextWorkInProgressHook = workInProgressHook.next;
                                currentHook = nextCurrentHook;
                            } else {
                                if (nextCurrentHook === null) {
                                    throw new Error("Rendered more hooks than during the previous render.");
                                }
                                currentHook = nextCurrentHook;
                                var newHook = {
                                    memoizedState: currentHook.memoizedState,
                                    baseState: currentHook.baseState,
                                    baseQueue: currentHook.baseQueue,
                                    queue: currentHook.queue,
                                    next: null
                                };
                                if (workInProgressHook === null) {
                                    currentlyRenderingFiber$1.memoizedState = workInProgressHook = newHook;
                                } else {
                                    workInProgressHook = workInProgressHook.next = newHook;
                                }
                            }
                            return workInProgressHook;
                        }
                        function createFunctionComponentUpdateQueue() {
                            return {
                                lastEffect: null,
                                stores: null
                            };
                        }
                        function basicStateReducer(state, action) {
                            return typeof action === "function" ? action(state) : action;
                        }
                        function mountReducer(reducer, initialArg, init) {
                            var hook = mountWorkInProgressHook();
                            var initialState;
                            if (init !== void 0) {
                                initialState = init(initialArg);
                            } else {
                                initialState = initialArg;
                            }
                            hook.memoizedState = hook.baseState = initialState;
                            var queue = {
                                pending: null,
                                interleaved: null,
                                lanes: NoLanes,
                                dispatch: null,
                                lastRenderedReducer: reducer,
                                lastRenderedState: initialState
                            };
                            hook.queue = queue;
                            var dispatch = queue.dispatch = dispatchReducerAction.bind(null, currentlyRenderingFiber$1, queue);
                            return [hook.memoizedState, dispatch];
                        }
                        function updateReducer(reducer, initialArg, init) {
                            var hook = updateWorkInProgressHook();
                            var queue = hook.queue;
                            if (queue === null) {
                                throw new Error("Should have a queue. This is likely a bug in React. Please file an issue.");
                            }
                            queue.lastRenderedReducer = reducer;
                            var current2 = currentHook;
                            var baseQueue = current2.baseQueue;
                            var pendingQueue = queue.pending;
                            if (pendingQueue !== null) {
                                if (baseQueue !== null) {
                                    var baseFirst = baseQueue.next;
                                    var pendingFirst = pendingQueue.next;
                                    baseQueue.next = pendingFirst;
                                    pendingQueue.next = baseFirst;
                                }
                                {
                                    if (current2.baseQueue !== baseQueue) {
                                        error("Internal error: Expected work-in-progress queue to be a clone. This is a bug in React.");
                                    }
                                }
                                current2.baseQueue = baseQueue = pendingQueue;
                                queue.pending = null;
                            }
                            if (baseQueue !== null) {
                                var first = baseQueue.next;
                                var newState = current2.baseState;
                                var newBaseState = null;
                                var newBaseQueueFirst = null;
                                var newBaseQueueLast = null;
                                var update = first;
                                do {
                                    var updateLane = update.lane;
                                    if (!isSubsetOfLanes(renderLanes, updateLane)) {
                                        var clone = {
                                            lane: updateLane,
                                            action: update.action,
                                            hasEagerState: update.hasEagerState,
                                            eagerState: update.eagerState,
                                            next: null
                                        };
                                        if (newBaseQueueLast === null) {
                                            newBaseQueueFirst = newBaseQueueLast = clone;
                                            newBaseState = newState;
                                        } else {
                                            newBaseQueueLast = newBaseQueueLast.next = clone;
                                        }
                                        currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, updateLane);
                                        markSkippedUpdateLanes(updateLane);
                                    } else {
                                        if (newBaseQueueLast !== null) {
                                            var _clone = {
                                                // This update is going to be committed so we never want uncommit
                                                // it. Using NoLane works because 0 is a subset of all bitmasks, so
                                                // this will never be skipped by the check above.
                                                lane: NoLane,
                                                action: update.action,
                                                hasEagerState: update.hasEagerState,
                                                eagerState: update.eagerState,
                                                next: null
                                            };
                                            newBaseQueueLast = newBaseQueueLast.next = _clone;
                                        }
                                        if (update.hasEagerState) {
                                            newState = update.eagerState;
                                        } else {
                                            var action = update.action;
                                            newState = reducer(newState, action);
                                        }
                                    }
                                    update = update.next;
                                } while (update !== null && update !== first);
                                if (newBaseQueueLast === null) {
                                    newBaseState = newState;
                                } else {
                                    newBaseQueueLast.next = newBaseQueueFirst;
                                }
                                if (!objectIs(newState, hook.memoizedState)) {
                                    markWorkInProgressReceivedUpdate();
                                }
                                hook.memoizedState = newState;
                                hook.baseState = newBaseState;
                                hook.baseQueue = newBaseQueueLast;
                                queue.lastRenderedState = newState;
                            }
                            var lastInterleaved = queue.interleaved;
                            if (lastInterleaved !== null) {
                                var interleaved = lastInterleaved;
                                do {
                                    var interleavedLane = interleaved.lane;
                                    currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, interleavedLane);
                                    markSkippedUpdateLanes(interleavedLane);
                                    interleaved = interleaved.next;
                                } while (interleaved !== lastInterleaved);
                            } else if (baseQueue === null) {
                                queue.lanes = NoLanes;
                            }
                            var dispatch = queue.dispatch;
                            return [hook.memoizedState, dispatch];
                        }
                        function rerenderReducer(reducer, initialArg, init) {
                            var hook = updateWorkInProgressHook();
                            var queue = hook.queue;
                            if (queue === null) {
                                throw new Error("Should have a queue. This is likely a bug in React. Please file an issue.");
                            }
                            queue.lastRenderedReducer = reducer;
                            var dispatch = queue.dispatch;
                            var lastRenderPhaseUpdate = queue.pending;
                            var newState = hook.memoizedState;
                            if (lastRenderPhaseUpdate !== null) {
                                queue.pending = null;
                                var firstRenderPhaseUpdate = lastRenderPhaseUpdate.next;
                                var update = firstRenderPhaseUpdate;
                                do {
                                    var action = update.action;
                                    newState = reducer(newState, action);
                                    update = update.next;
                                } while (update !== firstRenderPhaseUpdate);
                                if (!objectIs(newState, hook.memoizedState)) {
                                    markWorkInProgressReceivedUpdate();
                                }
                                hook.memoizedState = newState;
                                if (hook.baseQueue === null) {
                                    hook.baseState = newState;
                                }
                                queue.lastRenderedState = newState;
                            }
                            return [newState, dispatch];
                        }
                        function mountMutableSource(source, getSnapshot, subscribe) {
                            {
                                return void 0;
                            }
                        }
                        function updateMutableSource(source, getSnapshot, subscribe) {
                            {
                                return void 0;
                            }
                        }
                        function mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
                            var fiber = currentlyRenderingFiber$1;
                            var hook = mountWorkInProgressHook();
                            var nextSnapshot;
                            var isHydrating2 = getIsHydrating();
                            if (isHydrating2) {
                                if (getServerSnapshot === void 0) {
                                    throw new Error("Missing getServerSnapshot, which is required for server-rendered content. Will revert to client rendering.");
                                }
                                nextSnapshot = getServerSnapshot();
                                {
                                    if (!didWarnUncachedGetSnapshot) {
                                        if (nextSnapshot !== getServerSnapshot()) {
                                            error("The result of getServerSnapshot should be cached to avoid an infinite loop");
                                            didWarnUncachedGetSnapshot = true;
                                        }
                                    }
                                }
                            } else {
                                nextSnapshot = getSnapshot();
                                {
                                    if (!didWarnUncachedGetSnapshot) {
                                        var cachedSnapshot = getSnapshot();
                                        if (!objectIs(nextSnapshot, cachedSnapshot)) {
                                            error("The result of getSnapshot should be cached to avoid an infinite loop");
                                            didWarnUncachedGetSnapshot = true;
                                        }
                                    }
                                }
                                var root2 = getWorkInProgressRoot();
                                if (root2 === null) {
                                    throw new Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
                                }
                                if (!includesBlockingLane(root2, renderLanes)) {
                                    pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);
                                }
                            }
                            hook.memoizedState = nextSnapshot;
                            var inst = {
                                value: nextSnapshot,
                                getSnapshot
                            };
                            hook.queue = inst;
                            mountEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [subscribe]);
                            fiber.flags |= Passive;
                            pushEffect(HasEffect | Passive$1, updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot), void 0, null);
                            return nextSnapshot;
                        }
                        function updateSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
                            var fiber = currentlyRenderingFiber$1;
                            var hook = updateWorkInProgressHook();
                            var nextSnapshot = getSnapshot();
                            {
                                if (!didWarnUncachedGetSnapshot) {
                                    var cachedSnapshot = getSnapshot();
                                    if (!objectIs(nextSnapshot, cachedSnapshot)) {
                                        error("The result of getSnapshot should be cached to avoid an infinite loop");
                                        didWarnUncachedGetSnapshot = true;
                                    }
                                }
                            }
                            var prevSnapshot = hook.memoizedState;
                            var snapshotChanged = !objectIs(prevSnapshot, nextSnapshot);
                            if (snapshotChanged) {
                                hook.memoizedState = nextSnapshot;
                                markWorkInProgressReceivedUpdate();
                            }
                            var inst = hook.queue;
                            updateEffect(subscribeToStore.bind(null, fiber, inst, subscribe), [subscribe]);
                            if (inst.getSnapshot !== getSnapshot || snapshotChanged || // Check if the susbcribe function changed. We can save some memory by
                                // checking whether we scheduled a subscription effect above.
                                workInProgressHook !== null && workInProgressHook.memoizedState.tag & HasEffect) {
                                fiber.flags |= Passive;
                                pushEffect(HasEffect | Passive$1, updateStoreInstance.bind(null, fiber, inst, nextSnapshot, getSnapshot), void 0, null);
                                var root2 = getWorkInProgressRoot();
                                if (root2 === null) {
                                    throw new Error("Expected a work-in-progress root. This is a bug in React. Please file an issue.");
                                }
                                if (!includesBlockingLane(root2, renderLanes)) {
                                    pushStoreConsistencyCheck(fiber, getSnapshot, nextSnapshot);
                                }
                            }
                            return nextSnapshot;
                        }
                        function pushStoreConsistencyCheck(fiber, getSnapshot, renderedSnapshot) {
                            fiber.flags |= StoreConsistency;
                            var check = {
                                getSnapshot,
                                value: renderedSnapshot
                            };
                            var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;
                            if (componentUpdateQueue === null) {
                                componentUpdateQueue = createFunctionComponentUpdateQueue();
                                currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;
                                componentUpdateQueue.stores = [check];
                            } else {
                                var stores = componentUpdateQueue.stores;
                                if (stores === null) {
                                    componentUpdateQueue.stores = [check];
                                } else {
                                    stores.push(check);
                                }
                            }
                        }
                        function updateStoreInstance(fiber, inst, nextSnapshot, getSnapshot) {
                            inst.value = nextSnapshot;
                            inst.getSnapshot = getSnapshot;
                            if (checkIfSnapshotChanged(inst)) {
                                forceStoreRerender(fiber);
                            }
                        }
                        function subscribeToStore(fiber, inst, subscribe) {
                            var handleStoreChange = function() {
                                if (checkIfSnapshotChanged(inst)) {
                                    forceStoreRerender(fiber);
                                }
                            };
                            return subscribe(handleStoreChange);
                        }
                        function checkIfSnapshotChanged(inst) {
                            var latestGetSnapshot = inst.getSnapshot;
                            var prevValue = inst.value;
                            try {
                                var nextValue = latestGetSnapshot();
                                return !objectIs(prevValue, nextValue);
                            } catch (error2) {
                                return true;
                            }
                        }
                        function forceStoreRerender(fiber) {
                            var root2 = enqueueConcurrentRenderForLane(fiber, SyncLane);
                            if (root2 !== null) {
                                scheduleUpdateOnFiber(root2, fiber, SyncLane, NoTimestamp);
                            }
                        }
                        function mountState(initialState) {
                            var hook = mountWorkInProgressHook();
                            if (typeof initialState === "function") {
                                initialState = initialState();
                            }
                            hook.memoizedState = hook.baseState = initialState;
                            var queue = {
                                pending: null,
                                interleaved: null,
                                lanes: NoLanes,
                                dispatch: null,
                                lastRenderedReducer: basicStateReducer,
                                lastRenderedState: initialState
                            };
                            hook.queue = queue;
                            var dispatch = queue.dispatch = dispatchSetState.bind(null, currentlyRenderingFiber$1, queue);
                            return [hook.memoizedState, dispatch];
                        }
                        function updateState(initialState) {
                            return updateReducer(basicStateReducer);
                        }
                        function rerenderState(initialState) {
                            return rerenderReducer(basicStateReducer);
                        }
                        function pushEffect(tag, create, destroy, deps) {
                            var effect = {
                                tag,
                                create,
                                destroy,
                                deps,
                                // Circular
                                next: null
                            };
                            var componentUpdateQueue = currentlyRenderingFiber$1.updateQueue;
                            if (componentUpdateQueue === null) {
                                componentUpdateQueue = createFunctionComponentUpdateQueue();
                                currentlyRenderingFiber$1.updateQueue = componentUpdateQueue;
                                componentUpdateQueue.lastEffect = effect.next = effect;
                            } else {
                                var lastEffect = componentUpdateQueue.lastEffect;
                                if (lastEffect === null) {
                                    componentUpdateQueue.lastEffect = effect.next = effect;
                                } else {
                                    var firstEffect = lastEffect.next;
                                    lastEffect.next = effect;
                                    effect.next = firstEffect;
                                    componentUpdateQueue.lastEffect = effect;
                                }
                            }
                            return effect;
                        }
                        function mountRef(initialValue) {
                            var hook = mountWorkInProgressHook();
                            {
                                var _ref2 = {
                                    current: initialValue
                                };
                                hook.memoizedState = _ref2;
                                return _ref2;
                            }
                        }
                        function updateRef(initialValue) {
                            var hook = updateWorkInProgressHook();
                            return hook.memoizedState;
                        }
                        function mountEffectImpl(fiberFlags, hookFlags, create, deps) {
                            var hook = mountWorkInProgressHook();
                            var nextDeps = deps === void 0 ? null : deps;
                            currentlyRenderingFiber$1.flags |= fiberFlags;
                            hook.memoizedState = pushEffect(HasEffect | hookFlags, create, void 0, nextDeps);
                        }
                        function updateEffectImpl(fiberFlags, hookFlags, create, deps) {
                            var hook = updateWorkInProgressHook();
                            var nextDeps = deps === void 0 ? null : deps;
                            var destroy = void 0;
                            if (currentHook !== null) {
                                var prevEffect = currentHook.memoizedState;
                                destroy = prevEffect.destroy;
                                if (nextDeps !== null) {
                                    var prevDeps = prevEffect.deps;
                                    if (areHookInputsEqual(nextDeps, prevDeps)) {
                                        hook.memoizedState = pushEffect(hookFlags, create, destroy, nextDeps);
                                        return;
                                    }
                                }
                            }
                            currentlyRenderingFiber$1.flags |= fiberFlags;
                            hook.memoizedState = pushEffect(HasEffect | hookFlags, create, destroy, nextDeps);
                        }
                        function mountEffect(create, deps) {
                            if ((currentlyRenderingFiber$1.mode & StrictEffectsMode) !== NoMode) {
                                return mountEffectImpl(MountPassiveDev | Passive | PassiveStatic, Passive$1, create, deps);
                            } else {
                                return mountEffectImpl(Passive | PassiveStatic, Passive$1, create, deps);
                            }
                        }
                        function updateEffect(create, deps) {
                            return updateEffectImpl(Passive, Passive$1, create, deps);
                        }
                        function mountInsertionEffect(create, deps) {
                            return mountEffectImpl(Update, Insertion, create, deps);
                        }
                        function updateInsertionEffect(create, deps) {
                            return updateEffectImpl(Update, Insertion, create, deps);
                        }
                        function mountLayoutEffect(create, deps) {
                            var fiberFlags = Update;
                            {
                                fiberFlags |= LayoutStatic;
                            }
                            if ((currentlyRenderingFiber$1.mode & StrictEffectsMode) !== NoMode) {
                                fiberFlags |= MountLayoutDev;
                            }
                            return mountEffectImpl(fiberFlags, Layout, create, deps);
                        }
                        function updateLayoutEffect(create, deps) {
                            return updateEffectImpl(Update, Layout, create, deps);
                        }
                        function imperativeHandleEffect(create, ref) {
                            if (typeof ref === "function") {
                                var refCallback = ref;
                                var _inst = create();
                                refCallback(_inst);
                                return function() {
                                    refCallback(null);
                                };
                            } else if (ref !== null && ref !== void 0) {
                                var refObject = ref;
                                {
                                    if (!refObject.hasOwnProperty("current")) {
                                        error("Expected useImperativeHandle() first argument to either be a ref callback or React.createRef() object. Instead received: %s.", "an object with keys {" + Object.keys(refObject).join(", ") + "}");
                                    }
                                }
                                var _inst2 = create();
                                refObject.current = _inst2;
                                return function() {
                                    refObject.current = null;
                                };
                            }
                        }
                        function mountImperativeHandle(ref, create, deps) {
                            {
                                if (typeof create !== "function") {
                                    error("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", create !== null ? typeof create : "null");
                                }
                            }
                            var effectDeps = deps !== null && deps !== void 0 ? deps.concat([ref]) : null;
                            var fiberFlags = Update;
                            {
                                fiberFlags |= LayoutStatic;
                            }
                            if ((currentlyRenderingFiber$1.mode & StrictEffectsMode) !== NoMode) {
                                fiberFlags |= MountLayoutDev;
                            }
                            return mountEffectImpl(fiberFlags, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
                        }
                        function updateImperativeHandle(ref, create, deps) {
                            {
                                if (typeof create !== "function") {
                                    error("Expected useImperativeHandle() second argument to be a function that creates a handle. Instead received: %s.", create !== null ? typeof create : "null");
                                }
                            }
                            var effectDeps = deps !== null && deps !== void 0 ? deps.concat([ref]) : null;
                            return updateEffectImpl(Update, Layout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
                        }
                        function mountDebugValue(value, formatterFn) {
                        }
                        var updateDebugValue = mountDebugValue;
                        function mountCallback(callback, deps) {
                            var hook = mountWorkInProgressHook();
                            var nextDeps = deps === void 0 ? null : deps;
                            hook.memoizedState = [callback, nextDeps];
                            return callback;
                        }
                        function updateCallback(callback, deps) {
                            var hook = updateWorkInProgressHook();
                            var nextDeps = deps === void 0 ? null : deps;
                            var prevState = hook.memoizedState;
                            if (prevState !== null) {
                                if (nextDeps !== null) {
                                    var prevDeps = prevState[1];
                                    if (areHookInputsEqual(nextDeps, prevDeps)) {
                                        return prevState[0];
                                    }
                                }
                            }
                            hook.memoizedState = [callback, nextDeps];
                            return callback;
                        }
                        function mountMemo(nextCreate, deps) {
                            var hook = mountWorkInProgressHook();
                            var nextDeps = deps === void 0 ? null : deps;
                            var nextValue = nextCreate();
                            hook.memoizedState = [nextValue, nextDeps];
                            return nextValue;
                        }
                        function updateMemo(nextCreate, deps) {
                            var hook = updateWorkInProgressHook();
                            var nextDeps = deps === void 0 ? null : deps;
                            var prevState = hook.memoizedState;
                            if (prevState !== null) {
                                if (nextDeps !== null) {
                                    var prevDeps = prevState[1];
                                    if (areHookInputsEqual(nextDeps, prevDeps)) {
                                        return prevState[0];
                                    }
                                }
                            }
                            var nextValue = nextCreate();
                            hook.memoizedState = [nextValue, nextDeps];
                            return nextValue;
                        }
                        function mountDeferredValue(value) {
                            var hook = mountWorkInProgressHook();
                            hook.memoizedState = value;
                            return value;
                        }
                        function updateDeferredValue(value) {
                            var hook = updateWorkInProgressHook();
                            var resolvedCurrentHook = currentHook;
                            var prevValue = resolvedCurrentHook.memoizedState;
                            return updateDeferredValueImpl(hook, prevValue, value);
                        }
                        function rerenderDeferredValue(value) {
                            var hook = updateWorkInProgressHook();
                            if (currentHook === null) {
                                hook.memoizedState = value;
                                return value;
                            } else {
                                var prevValue = currentHook.memoizedState;
                                return updateDeferredValueImpl(hook, prevValue, value);
                            }
                        }
                        function updateDeferredValueImpl(hook, prevValue, value) {
                            var shouldDeferValue = !includesOnlyNonUrgentLanes(renderLanes);
                            if (shouldDeferValue) {
                                if (!objectIs(value, prevValue)) {
                                    var deferredLane = claimNextTransitionLane();
                                    currentlyRenderingFiber$1.lanes = mergeLanes(currentlyRenderingFiber$1.lanes, deferredLane);
                                    markSkippedUpdateLanes(deferredLane);
                                    hook.baseState = true;
                                }
                                return prevValue;
                            } else {
                                if (hook.baseState) {
                                    hook.baseState = false;
                                    markWorkInProgressReceivedUpdate();
                                }
                                hook.memoizedState = value;
                                return value;
                            }
                        }
                        function startTransition(setPending, callback, options2) {
                            var previousPriority = getCurrentUpdatePriority();
                            setCurrentUpdatePriority(higherEventPriority(previousPriority, ContinuousEventPriority));
                            setPending(true);
                            var prevTransition = ReactCurrentBatchConfig$2.transition;
                            ReactCurrentBatchConfig$2.transition = {};
                            var currentTransition = ReactCurrentBatchConfig$2.transition;
                            {
                                ReactCurrentBatchConfig$2.transition._updatedFibers = /* @__PURE__ */ new Set();
                            }
                            try {
                                setPending(false);
                                callback();
                            } finally {
                                setCurrentUpdatePriority(previousPriority);
                                ReactCurrentBatchConfig$2.transition = prevTransition;
                                {
                                    if (prevTransition === null && currentTransition._updatedFibers) {
                                        var updatedFibersCount = currentTransition._updatedFibers.size;
                                        if (updatedFibersCount > 10) {
                                            warn("Detected a large number of updates inside startTransition. If this is due to a subscription please re-write it to use React provided hooks. Otherwise concurrent mode guarantees are off the table.");
                                        }
                                        currentTransition._updatedFibers.clear();
                                    }
                                }
                            }
                        }
                        function mountTransition() {
                            var _mountState = mountState(false), isPending = _mountState[0], setPending = _mountState[1];
                            var start = startTransition.bind(null, setPending);
                            var hook = mountWorkInProgressHook();
                            hook.memoizedState = start;
                            return [isPending, start];
                        }
                        function updateTransition() {
                            var _updateState = updateState(), isPending = _updateState[0];
                            var hook = updateWorkInProgressHook();
                            var start = hook.memoizedState;
                            return [isPending, start];
                        }
                        function rerenderTransition() {
                            var _rerenderState = rerenderState(), isPending = _rerenderState[0];
                            var hook = updateWorkInProgressHook();
                            var start = hook.memoizedState;
                            return [isPending, start];
                        }
                        var isUpdatingOpaqueValueInRenderPhase = false;
                        function getIsUpdatingOpaqueValueInRenderPhaseInDEV() {
                            {
                                return isUpdatingOpaqueValueInRenderPhase;
                            }
                        }
                        function mountId() {
                            var hook = mountWorkInProgressHook();
                            var root2 = getWorkInProgressRoot();
                            var identifierPrefix = root2.identifierPrefix;
                            var id;
                            if (getIsHydrating()) {
                                var treeId = getTreeId();
                                id = ":" + identifierPrefix + "R" + treeId;
                                var localId = localIdCounter++;
                                if (localId > 0) {
                                    id += "H" + localId.toString(32);
                                }
                                id += ":";
                            } else {
                                var globalClientId = globalClientIdCounter++;
                                id = ":" + identifierPrefix + "r" + globalClientId.toString(32) + ":";
                            }
                            hook.memoizedState = id;
                            return id;
                        }
                        function updateId() {
                            var hook = updateWorkInProgressHook();
                            var id = hook.memoizedState;
                            return id;
                        }
                        function dispatchReducerAction(fiber, queue, action) {
                            {
                                if (typeof arguments[3] === "function") {
                                    error("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
                                }
                            }
                            var lane = requestUpdateLane(fiber);
                            var update = {
                                lane,
                                action,
                                hasEagerState: false,
                                eagerState: null,
                                next: null
                            };
                            if (isRenderPhaseUpdate(fiber)) {
                                enqueueRenderPhaseUpdate(queue, update);
                            } else {
                                var root2 = enqueueConcurrentHookUpdate(fiber, queue, update, lane);
                                if (root2 !== null) {
                                    var eventTime = requestEventTime();
                                    scheduleUpdateOnFiber(root2, fiber, lane, eventTime);
                                    entangleTransitionUpdate(root2, queue, lane);
                                }
                            }
                            markUpdateInDevTools(fiber, lane);
                        }
                        function dispatchSetState(fiber, queue, action) {
                            {
                                if (typeof arguments[3] === "function") {
                                    error("State updates from the useState() and useReducer() Hooks don't support the second callback argument. To execute a side effect after rendering, declare it in the component body with useEffect().");
                                }
                            }
                            var lane = requestUpdateLane(fiber);
                            var update = {
                                lane,
                                action,
                                hasEagerState: false,
                                eagerState: null,
                                next: null
                            };
                            if (isRenderPhaseUpdate(fiber)) {
                                enqueueRenderPhaseUpdate(queue, update);
                            } else {
                                var alternate = fiber.alternate;
                                if (fiber.lanes === NoLanes && (alternate === null || alternate.lanes === NoLanes)) {
                                    var lastRenderedReducer = queue.lastRenderedReducer;
                                    if (lastRenderedReducer !== null) {
                                        var prevDispatcher;
                                        {
                                            prevDispatcher = ReactCurrentDispatcher$1.current;
                                            ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
                                        }
                                        try {
                                            var currentState = queue.lastRenderedState;
                                            var eagerState = lastRenderedReducer(currentState, action);
                                            update.hasEagerState = true;
                                            update.eagerState = eagerState;
                                            if (objectIs(eagerState, currentState)) {
                                                enqueueConcurrentHookUpdateAndEagerlyBailout(fiber, queue, update, lane);
                                                return;
                                            }
                                        } catch (error2) {
                                        } finally {
                                            {
                                                ReactCurrentDispatcher$1.current = prevDispatcher;
                                            }
                                        }
                                    }
                                }
                                var root2 = enqueueConcurrentHookUpdate(fiber, queue, update, lane);
                                if (root2 !== null) {
                                    var eventTime = requestEventTime();
                                    scheduleUpdateOnFiber(root2, fiber, lane, eventTime);
                                    entangleTransitionUpdate(root2, queue, lane);
                                }
                            }
                            markUpdateInDevTools(fiber, lane);
                        }
                        function isRenderPhaseUpdate(fiber) {
                            var alternate = fiber.alternate;
                            return fiber === currentlyRenderingFiber$1 || alternate !== null && alternate === currentlyRenderingFiber$1;
                        }
                        function enqueueRenderPhaseUpdate(queue, update) {
                            didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate = true;
                            var pending = queue.pending;
                            if (pending === null) {
                                update.next = update;
                            } else {
                                update.next = pending.next;
                                pending.next = update;
                            }
                            queue.pending = update;
                        }
                        function entangleTransitionUpdate(root2, queue, lane) {
                            if (isTransitionLane(lane)) {
                                var queueLanes = queue.lanes;
                                queueLanes = intersectLanes(queueLanes, root2.pendingLanes);
                                var newQueueLanes = mergeLanes(queueLanes, lane);
                                queue.lanes = newQueueLanes;
                                markRootEntangled(root2, newQueueLanes);
                            }
                        }
                        function markUpdateInDevTools(fiber, lane, action) {
                            {
                                markStateUpdateScheduled(fiber, lane);
                            }
                        }
                        var ContextOnlyDispatcher = {
                            readContext,
                            useCallback: throwInvalidHookError,
                            useContext: throwInvalidHookError,
                            useEffect: throwInvalidHookError,
                            useImperativeHandle: throwInvalidHookError,
                            useInsertionEffect: throwInvalidHookError,
                            useLayoutEffect: throwInvalidHookError,
                            useMemo: throwInvalidHookError,
                            useReducer: throwInvalidHookError,
                            useRef: throwInvalidHookError,
                            useState: throwInvalidHookError,
                            useDebugValue: throwInvalidHookError,
                            useDeferredValue: throwInvalidHookError,
                            useTransition: throwInvalidHookError,
                            useMutableSource: throwInvalidHookError,
                            useSyncExternalStore: throwInvalidHookError,
                            useId: throwInvalidHookError,
                            unstable_isNewReconciler: enableNewReconciler
                        };
                        var HooksDispatcherOnMountInDEV = null;
                        var HooksDispatcherOnMountWithHookTypesInDEV = null;
                        var HooksDispatcherOnUpdateInDEV = null;
                        var HooksDispatcherOnRerenderInDEV = null;
                        var InvalidNestedHooksDispatcherOnMountInDEV = null;
                        var InvalidNestedHooksDispatcherOnUpdateInDEV = null;
                        var InvalidNestedHooksDispatcherOnRerenderInDEV = null;
                        {
                            var warnInvalidContextAccess = function() {
                                error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
                            };
                            var warnInvalidHookAccess = function() {
                                error("Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. You can only call Hooks at the top level of your React function. For more information, see https://reactjs.org/link/rules-of-hooks");
                            };
                            HooksDispatcherOnMountInDEV = {
                                readContext: function(context) {
                                    return readContext(context);
                                },
                                useCallback: function(callback, deps) {
                                    currentHookNameInDev = "useCallback";
                                    mountHookTypesDev();
                                    checkDepsAreArrayDev(deps);
                                    return mountCallback(callback, deps);
                                },
                                useContext: function(context) {
                                    currentHookNameInDev = "useContext";
                                    mountHookTypesDev();
                                    return readContext(context);
                                },
                                useEffect: function(create, deps) {
                                    currentHookNameInDev = "useEffect";
                                    mountHookTypesDev();
                                    checkDepsAreArrayDev(deps);
                                    return mountEffect(create, deps);
                                },
                                useImperativeHandle: function(ref, create, deps) {
                                    currentHookNameInDev = "useImperativeHandle";
                                    mountHookTypesDev();
                                    checkDepsAreArrayDev(deps);
                                    return mountImperativeHandle(ref, create, deps);
                                },
                                useInsertionEffect: function(create, deps) {
                                    currentHookNameInDev = "useInsertionEffect";
                                    mountHookTypesDev();
                                    checkDepsAreArrayDev(deps);
                                    return mountInsertionEffect(create, deps);
                                },
                                useLayoutEffect: function(create, deps) {
                                    currentHookNameInDev = "useLayoutEffect";
                                    mountHookTypesDev();
                                    checkDepsAreArrayDev(deps);
                                    return mountLayoutEffect(create, deps);
                                },
                                useMemo: function(create, deps) {
                                    currentHookNameInDev = "useMemo";
                                    mountHookTypesDev();
                                    checkDepsAreArrayDev(deps);
                                    var prevDispatcher = ReactCurrentDispatcher$1.current;
                                    ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
                                    try {
                                        return mountMemo(create, deps);
                                    } finally {
                                        ReactCurrentDispatcher$1.current = prevDispatcher;
                                    }
                                },
                                useReducer: function(reducer, initialArg, init) {
                                    currentHookNameInDev = "useReducer";
                                    mountHookTypesDev();
                                    var prevDispatcher = ReactCurrentDispatcher$1.current;
                                    ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
                                    try {
                                        return mountReducer(reducer, initialArg, init);
                                    } finally {
                                        ReactCurrentDispatcher$1.current = prevDispatcher;
                                    }
                                },
                                useRef: function(initialValue) {
                                    currentHookNameInDev = "useRef";
                                    mountHookTypesDev();
                                    return mountRef(initialValue);
                                },
                                useState: function(initialState) {
                                    currentHookNameInDev = "useState";
                                    mountHookTypesDev();
                                    var prevDispatcher = ReactCurrentDispatcher$1.current;
                                    ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
                                    try {
                                        return mountState(initialState);
                                    } finally {
                                        ReactCurrentDispatcher$1.current = prevDispatcher;
                                    }
                                },
                                useDebugValue: function(value, formatterFn) {
                                    currentHookNameInDev = "useDebugValue";
                                    mountHookTypesDev();
                                    return mountDebugValue();
                                },
                                useDeferredValue: function(value) {
                                    currentHookNameInDev = "useDeferredValue";
                                    mountHookTypesDev();
                                    return mountDeferredValue(value);
                                },
                                useTransition: function() {
                                    currentHookNameInDev = "useTransition";
                                    mountHookTypesDev();
                                    return mountTransition();
                                },
                                useMutableSource: function(source, getSnapshot, subscribe) {
                                    currentHookNameInDev = "useMutableSource";
                                    mountHookTypesDev();
                                    return mountMutableSource();
                                },
                                useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
                                    currentHookNameInDev = "useSyncExternalStore";
                                    mountHookTypesDev();
                                    return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
                                },
                                useId: function() {
                                    currentHookNameInDev = "useId";
                                    mountHookTypesDev();
                                    return mountId();
                                },
                                unstable_isNewReconciler: enableNewReconciler
                            };
                            HooksDispatcherOnMountWithHookTypesInDEV = {
                                readContext: function(context) {
                                    return readContext(context);
                                },
                                useCallback: function(callback, deps) {
                                    currentHookNameInDev = "useCallback";
                                    updateHookTypesDev();
                                    return mountCallback(callback, deps);
                                },
                                useContext: function(context) {
                                    currentHookNameInDev = "useContext";
                                    updateHookTypesDev();
                                    return readContext(context);
                                },
                                useEffect: function(create, deps) {
                                    currentHookNameInDev = "useEffect";
                                    updateHookTypesDev();
                                    return mountEffect(create, deps);
                                },
                                useImperativeHandle: function(ref, create, deps) {
                                    currentHookNameInDev = "useImperativeHandle";
                                    updateHookTypesDev();
                                    return mountImperativeHandle(ref, create, deps);
                                },
                                useInsertionEffect: function(create, deps) {
                                    currentHookNameInDev = "useInsertionEffect";
                                    updateHookTypesDev();
                                    return mountInsertionEffect(create, deps);
                                },
                                useLayoutEffect: function(create, deps) {
                                    currentHookNameInDev = "useLayoutEffect";
                                    updateHookTypesDev();
                                    return mountLayoutEffect(create, deps);
                                },
                                useMemo: function(create, deps) {
                                    currentHookNameInDev = "useMemo";
                                    updateHookTypesDev();
                                    var prevDispatcher = ReactCurrentDispatcher$1.current;
                                    ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
                                    try {
                                        return mountMemo(create, deps);
                                    } finally {
                                        ReactCurrentDispatcher$1.current = prevDispatcher;
                                    }
                                },
                                useReducer: function(reducer, initialArg, init) {
                                    currentHookNameInDev = "useReducer";
                                    updateHookTypesDev();
                                    var prevDispatcher = ReactCurrentDispatcher$1.current;
                                    ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
                                    try {
                                        return mountReducer(reducer, initialArg, init);
                                    } finally {
                                        ReactCurrentDispatcher$1.current = prevDispatcher;
                                    }
                                },
                                useRef: function(initialValue) {
                                    currentHookNameInDev = "useRef";
                                    updateHookTypesDev();
                                    return mountRef(initialValue);
                                },
                                useState: function(initialState) {
                                    currentHookNameInDev = "useState";
                                    updateHookTypesDev();
                                    var prevDispatcher = ReactCurrentDispatcher$1.current;
                                    ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
                                    try {
                                        return mountState(initialState);
                                    } finally {
                                        ReactCurrentDispatcher$1.current = prevDispatcher;
                                    }
                                },
                                useDebugValue: function(value, formatterFn) {
                                    currentHookNameInDev = "useDebugValue";
                                    updateHookTypesDev();
                                    return mountDebugValue();
                                },
                                useDeferredValue: function(value) {
                                    currentHookNameInDev = "useDeferredValue";
                                    updateHookTypesDev();
                                    return mountDeferredValue(value);
                                },
                                useTransition: function() {
                                    currentHookNameInDev = "useTransition";
                                    updateHookTypesDev();
                                    return mountTransition();
                                },
                                useMutableSource: function(source, getSnapshot, subscribe) {
                                    currentHookNameInDev = "useMutableSource";
                                    updateHookTypesDev();
                                    return mountMutableSource();
                                },
                                useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
                                    currentHookNameInDev = "useSyncExternalStore";
                                    updateHookTypesDev();
                                    return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
                                },
                                useId: function() {
                                    currentHookNameInDev = "useId";
                                    updateHookTypesDev();
                                    return mountId();
                                },
                                unstable_isNewReconciler: enableNewReconciler
                            };
                            HooksDispatcherOnUpdateInDEV = {
                                readContext: function(context) {
                                    return readContext(context);
                                },
                                useCallback: function(callback, deps) {
                                    currentHookNameInDev = "useCallback";
                                    updateHookTypesDev();
                                    return updateCallback(callback, deps);
                                },
                                useContext: function(context) {
                                    currentHookNameInDev = "useContext";
                                    updateHookTypesDev();
                                    return readContext(context);
                                },
                                useEffect: function(create, deps) {
                                    currentHookNameInDev = "useEffect";
                                    updateHookTypesDev();
                                    return updateEffect(create, deps);
                                },
                                useImperativeHandle: function(ref, create, deps) {
                                    currentHookNameInDev = "useImperativeHandle";
                                    updateHookTypesDev();
                                    return updateImperativeHandle(ref, create, deps);
                                },
                                useInsertionEffect: function(create, deps) {
                                    currentHookNameInDev = "useInsertionEffect";
                                    updateHookTypesDev();
                                    return updateInsertionEffect(create, deps);
                                },
                                useLayoutEffect: function(create, deps) {
                                    currentHookNameInDev = "useLayoutEffect";
                                    updateHookTypesDev();
                                    return updateLayoutEffect(create, deps);
                                },
                                useMemo: function(create, deps) {
                                    currentHookNameInDev = "useMemo";
                                    updateHookTypesDev();
                                    var prevDispatcher = ReactCurrentDispatcher$1.current;
                                    ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
                                    try {
                                        return updateMemo(create, deps);
                                    } finally {
                                        ReactCurrentDispatcher$1.current = prevDispatcher;
                                    }
                                },
                                useReducer: function(reducer, initialArg, init) {
                                    currentHookNameInDev = "useReducer";
                                    updateHookTypesDev();
                                    var prevDispatcher = ReactCurrentDispatcher$1.current;
                                    ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
                                    try {
                                        return updateReducer(reducer, initialArg, init);
                                    } finally {
                                        ReactCurrentDispatcher$1.current = prevDispatcher;
                                    }
                                },
                                useRef: function(initialValue) {
                                    currentHookNameInDev = "useRef";
                                    updateHookTypesDev();
                                    return updateRef();
                                },
                                useState: function(initialState) {
                                    currentHookNameInDev = "useState";
                                    updateHookTypesDev();
                                    var prevDispatcher = ReactCurrentDispatcher$1.current;
                                    ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
                                    try {
                                        return updateState(initialState);
                                    } finally {
                                        ReactCurrentDispatcher$1.current = prevDispatcher;
                                    }
                                },
                                useDebugValue: function(value, formatterFn) {
                                    currentHookNameInDev = "useDebugValue";
                                    updateHookTypesDev();
                                    return updateDebugValue();
                                },
                                useDeferredValue: function(value) {
                                    currentHookNameInDev = "useDeferredValue";
                                    updateHookTypesDev();
                                    return updateDeferredValue(value);
                                },
                                useTransition: function() {
                                    currentHookNameInDev = "useTransition";
                                    updateHookTypesDev();
                                    return updateTransition();
                                },
                                useMutableSource: function(source, getSnapshot, subscribe) {
                                    currentHookNameInDev = "useMutableSource";
                                    updateHookTypesDev();
                                    return updateMutableSource();
                                },
                                useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
                                    currentHookNameInDev = "useSyncExternalStore";
                                    updateHookTypesDev();
                                    return updateSyncExternalStore(subscribe, getSnapshot);
                                },
                                useId: function() {
                                    currentHookNameInDev = "useId";
                                    updateHookTypesDev();
                                    return updateId();
                                },
                                unstable_isNewReconciler: enableNewReconciler
                            };
                            HooksDispatcherOnRerenderInDEV = {
                                readContext: function(context) {
                                    return readContext(context);
                                },
                                useCallback: function(callback, deps) {
                                    currentHookNameInDev = "useCallback";
                                    updateHookTypesDev();
                                    return updateCallback(callback, deps);
                                },
                                useContext: function(context) {
                                    currentHookNameInDev = "useContext";
                                    updateHookTypesDev();
                                    return readContext(context);
                                },
                                useEffect: function(create, deps) {
                                    currentHookNameInDev = "useEffect";
                                    updateHookTypesDev();
                                    return updateEffect(create, deps);
                                },
                                useImperativeHandle: function(ref, create, deps) {
                                    currentHookNameInDev = "useImperativeHandle";
                                    updateHookTypesDev();
                                    return updateImperativeHandle(ref, create, deps);
                                },
                                useInsertionEffect: function(create, deps) {
                                    currentHookNameInDev = "useInsertionEffect";
                                    updateHookTypesDev();
                                    return updateInsertionEffect(create, deps);
                                },
                                useLayoutEffect: function(create, deps) {
                                    currentHookNameInDev = "useLayoutEffect";
                                    updateHookTypesDev();
                                    return updateLayoutEffect(create, deps);
                                },
                                useMemo: function(create, deps) {
                                    currentHookNameInDev = "useMemo";
                                    updateHookTypesDev();
                                    var prevDispatcher = ReactCurrentDispatcher$1.current;
                                    ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;
                                    try {
                                        return updateMemo(create, deps);
                                    } finally {
                                        ReactCurrentDispatcher$1.current = prevDispatcher;
                                    }
                                },
                                useReducer: function(reducer, initialArg, init) {
                                    currentHookNameInDev = "useReducer";
                                    updateHookTypesDev();
                                    var prevDispatcher = ReactCurrentDispatcher$1.current;
                                    ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;
                                    try {
                                        return rerenderReducer(reducer, initialArg, init);
                                    } finally {
                                        ReactCurrentDispatcher$1.current = prevDispatcher;
                                    }
                                },
                                useRef: function(initialValue) {
                                    currentHookNameInDev = "useRef";
                                    updateHookTypesDev();
                                    return updateRef();
                                },
                                useState: function(initialState) {
                                    currentHookNameInDev = "useState";
                                    updateHookTypesDev();
                                    var prevDispatcher = ReactCurrentDispatcher$1.current;
                                    ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnRerenderInDEV;
                                    try {
                                        return rerenderState(initialState);
                                    } finally {
                                        ReactCurrentDispatcher$1.current = prevDispatcher;
                                    }
                                },
                                useDebugValue: function(value, formatterFn) {
                                    currentHookNameInDev = "useDebugValue";
                                    updateHookTypesDev();
                                    return updateDebugValue();
                                },
                                useDeferredValue: function(value) {
                                    currentHookNameInDev = "useDeferredValue";
                                    updateHookTypesDev();
                                    return rerenderDeferredValue(value);
                                },
                                useTransition: function() {
                                    currentHookNameInDev = "useTransition";
                                    updateHookTypesDev();
                                    return rerenderTransition();
                                },
                                useMutableSource: function(source, getSnapshot, subscribe) {
                                    currentHookNameInDev = "useMutableSource";
                                    updateHookTypesDev();
                                    return updateMutableSource();
                                },
                                useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
                                    currentHookNameInDev = "useSyncExternalStore";
                                    updateHookTypesDev();
                                    return updateSyncExternalStore(subscribe, getSnapshot);
                                },
                                useId: function() {
                                    currentHookNameInDev = "useId";
                                    updateHookTypesDev();
                                    return updateId();
                                },
                                unstable_isNewReconciler: enableNewReconciler
                            };
                            InvalidNestedHooksDispatcherOnMountInDEV = {
                                readContext: function(context) {
                                    warnInvalidContextAccess();
                                    return readContext(context);
                                },
                                useCallback: function(callback, deps) {
                                    currentHookNameInDev = "useCallback";
                                    warnInvalidHookAccess();
                                    mountHookTypesDev();
                                    return mountCallback(callback, deps);
                                },
                                useContext: function(context) {
                                    currentHookNameInDev = "useContext";
                                    warnInvalidHookAccess();
                                    mountHookTypesDev();
                                    return readContext(context);
                                },
                                useEffect: function(create, deps) {
                                    currentHookNameInDev = "useEffect";
                                    warnInvalidHookAccess();
                                    mountHookTypesDev();
                                    return mountEffect(create, deps);
                                },
                                useImperativeHandle: function(ref, create, deps) {
                                    currentHookNameInDev = "useImperativeHandle";
                                    warnInvalidHookAccess();
                                    mountHookTypesDev();
                                    return mountImperativeHandle(ref, create, deps);
                                },
                                useInsertionEffect: function(create, deps) {
                                    currentHookNameInDev = "useInsertionEffect";
                                    warnInvalidHookAccess();
                                    mountHookTypesDev();
                                    return mountInsertionEffect(create, deps);
                                },
                                useLayoutEffect: function(create, deps) {
                                    currentHookNameInDev = "useLayoutEffect";
                                    warnInvalidHookAccess();
                                    mountHookTypesDev();
                                    return mountLayoutEffect(create, deps);
                                },
                                useMemo: function(create, deps) {
                                    currentHookNameInDev = "useMemo";
                                    warnInvalidHookAccess();
                                    mountHookTypesDev();
                                    var prevDispatcher = ReactCurrentDispatcher$1.current;
                                    ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
                                    try {
                                        return mountMemo(create, deps);
                                    } finally {
                                        ReactCurrentDispatcher$1.current = prevDispatcher;
                                    }
                                },
                                useReducer: function(reducer, initialArg, init) {
                                    currentHookNameInDev = "useReducer";
                                    warnInvalidHookAccess();
                                    mountHookTypesDev();
                                    var prevDispatcher = ReactCurrentDispatcher$1.current;
                                    ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
                                    try {
                                        return mountReducer(reducer, initialArg, init);
                                    } finally {
                                        ReactCurrentDispatcher$1.current = prevDispatcher;
                                    }
                                },
                                useRef: function(initialValue) {
                                    currentHookNameInDev = "useRef";
                                    warnInvalidHookAccess();
                                    mountHookTypesDev();
                                    return mountRef(initialValue);
                                },
                                useState: function(initialState) {
                                    currentHookNameInDev = "useState";
                                    warnInvalidHookAccess();
                                    mountHookTypesDev();
                                    var prevDispatcher = ReactCurrentDispatcher$1.current;
                                    ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;
                                    try {
                                        return mountState(initialState);
                                    } finally {
                                        ReactCurrentDispatcher$1.current = prevDispatcher;
                                    }
                                },
                                useDebugValue: function(value, formatterFn) {
                                    currentHookNameInDev = "useDebugValue";
                                    warnInvalidHookAccess();
                                    mountHookTypesDev();
                                    return mountDebugValue();
                                },
                                useDeferredValue: function(value) {
                                    currentHookNameInDev = "useDeferredValue";
                                    warnInvalidHookAccess();
                                    mountHookTypesDev();
                                    return mountDeferredValue(value);
                                },
                                useTransition: function() {
                                    currentHookNameInDev = "useTransition";
                                    warnInvalidHookAccess();
                                    mountHookTypesDev();
                                    return mountTransition();
                                },
                                useMutableSource: function(source, getSnapshot, subscribe) {
                                    currentHookNameInDev = "useMutableSource";
                                    warnInvalidHookAccess();
                                    mountHookTypesDev();
                                    return mountMutableSource();
                                },
                                useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
                                    currentHookNameInDev = "useSyncExternalStore";
                                    warnInvalidHookAccess();
                                    mountHookTypesDev();
                                    return mountSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);
                                },
                                useId: function() {
                                    currentHookNameInDev = "useId";
                                    warnInvalidHookAccess();
                                    mountHookTypesDev();
                                    return mountId();
                                },
                                unstable_isNewReconciler: enableNewReconciler
                            };
                            InvalidNestedHooksDispatcherOnUpdateInDEV = {
                                readContext: function(context) {
                                    warnInvalidContextAccess();
                                    return readContext(context);
                                },
                                useCallback: function(callback, deps) {
                                    currentHookNameInDev = "useCallback";
                                    warnInvalidHookAccess();
                                    updateHookTypesDev();
                                    return updateCallback(callback, deps);
                                },
                                useContext: function(context) {
                                    currentHookNameInDev = "useContext";
                                    warnInvalidHookAccess();
                                    updateHookTypesDev();
                                    return readContext(context);
                                },
                                useEffect: function(create, deps) {
                                    currentHookNameInDev = "useEffect";
                                    warnInvalidHookAccess();
                                    updateHookTypesDev();
                                    return updateEffect(create, deps);
                                },
                                useImperativeHandle: function(ref, create, deps) {
                                    currentHookNameInDev = "useImperativeHandle";
                                    warnInvalidHookAccess();
                                    updateHookTypesDev();
                                    return updateImperativeHandle(ref, create, deps);
                                },
                                useInsertionEffect: function(create, deps) {
                                    currentHookNameInDev = "useInsertionEffect";
                                    warnInvalidHookAccess();
                                    updateHookTypesDev();
                                    return updateInsertionEffect(create, deps);
                                },
                                useLayoutEffect: function(create, deps) {
                                    currentHookNameInDev = "useLayoutEffect";
                                    warnInvalidHookAccess();
                                    updateHookTypesDev();
                                    return updateLayoutEffect(create, deps);
                                },
                                useMemo: function(create, deps) {
                                    currentHookNameInDev = "useMemo";
                                    warnInvalidHookAccess();
                                    updateHookTypesDev();
                                    var prevDispatcher = ReactCurrentDispatcher$1.current;
                                    ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
                                    try {
                                        return updateMemo(create, deps);
                                    } finally {
                                        ReactCurrentDispatcher$1.current = prevDispatcher;
                                    }
                                },
                                useReducer: function(reducer, initialArg, init) {
                                    currentHookNameInDev = "useReducer";
                                    warnInvalidHookAccess();
                                    updateHookTypesDev();
                                    var prevDispatcher = ReactCurrentDispatcher$1.current;
                                    ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
                                    try {
                                        return updateReducer(reducer, initialArg, init);
                                    } finally {
                                        ReactCurrentDispatcher$1.current = prevDispatcher;
                                    }
                                },
                                useRef: function(initialValue) {
                                    currentHookNameInDev = "useRef";
                                    warnInvalidHookAccess();
                                    updateHookTypesDev();
                                    return updateRef();
                                },
                                useState: function(initialState) {
                                    currentHookNameInDev = "useState";
                                    warnInvalidHookAccess();
                                    updateHookTypesDev();
                                    var prevDispatcher = ReactCurrentDispatcher$1.current;
                                    ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
                                    try {
                                        return updateState(initialState);
                                    } finally {
                                        ReactCurrentDispatcher$1.current = prevDispatcher;
                                    }
                                },
                                useDebugValue: function(value, formatterFn) {
                                    currentHookNameInDev = "useDebugValue";
                                    warnInvalidHookAccess();
                                    updateHookTypesDev();
                                    return updateDebugValue();
                                },
                                useDeferredValue: function(value) {
                                    currentHookNameInDev = "useDeferredValue";
                                    warnInvalidHookAccess();
                                    updateHookTypesDev();
                                    return updateDeferredValue(value);
                                },
                                useTransition: function() {
                                    currentHookNameInDev = "useTransition";
                                    warnInvalidHookAccess();
                                    updateHookTypesDev();
                                    return updateTransition();
                                },
                                useMutableSource: function(source, getSnapshot, subscribe) {
                                    currentHookNameInDev = "useMutableSource";
                                    warnInvalidHookAccess();
                                    updateHookTypesDev();
                                    return updateMutableSource();
                                },
                                useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
                                    currentHookNameInDev = "useSyncExternalStore";
                                    warnInvalidHookAccess();
                                    updateHookTypesDev();
                                    return updateSyncExternalStore(subscribe, getSnapshot);
                                },
                                useId: function() {
                                    currentHookNameInDev = "useId";
                                    warnInvalidHookAccess();
                                    updateHookTypesDev();
                                    return updateId();
                                },
                                unstable_isNewReconciler: enableNewReconciler
                            };
                            InvalidNestedHooksDispatcherOnRerenderInDEV = {
                                readContext: function(context) {
                                    warnInvalidContextAccess();
                                    return readContext(context);
                                },
                                useCallback: function(callback, deps) {
                                    currentHookNameInDev = "useCallback";
                                    warnInvalidHookAccess();
                                    updateHookTypesDev();
                                    return updateCallback(callback, deps);
                                },
                                useContext: function(context) {
                                    currentHookNameInDev = "useContext";
                                    warnInvalidHookAccess();
                                    updateHookTypesDev();
                                    return readContext(context);
                                },
                                useEffect: function(create, deps) {
                                    currentHookNameInDev = "useEffect";
                                    warnInvalidHookAccess();
                                    updateHookTypesDev();
                                    return updateEffect(create, deps);
                                },
                                useImperativeHandle: function(ref, create, deps) {
                                    currentHookNameInDev = "useImperativeHandle";
                                    warnInvalidHookAccess();
                                    updateHookTypesDev();
                                    return updateImperativeHandle(ref, create, deps);
                                },
                                useInsertionEffect: function(create, deps) {
                                    currentHookNameInDev = "useInsertionEffect";
                                    warnInvalidHookAccess();
                                    updateHookTypesDev();
                                    return updateInsertionEffect(create, deps);
                                },
                                useLayoutEffect: function(create, deps) {
                                    currentHookNameInDev = "useLayoutEffect";
                                    warnInvalidHookAccess();
                                    updateHookTypesDev();
                                    return updateLayoutEffect(create, deps);
                                },
                                useMemo: function(create, deps) {
                                    currentHookNameInDev = "useMemo";
                                    warnInvalidHookAccess();
                                    updateHookTypesDev();
                                    var prevDispatcher = ReactCurrentDispatcher$1.current;
                                    ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
                                    try {
                                        return updateMemo(create, deps);
                                    } finally {
                                        ReactCurrentDispatcher$1.current = prevDispatcher;
                                    }
                                },
                                useReducer: function(reducer, initialArg, init) {
                                    currentHookNameInDev = "useReducer";
                                    warnInvalidHookAccess();
                                    updateHookTypesDev();
                                    var prevDispatcher = ReactCurrentDispatcher$1.current;
                                    ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
                                    try {
                                        return rerenderReducer(reducer, initialArg, init);
                                    } finally {
                                        ReactCurrentDispatcher$1.current = prevDispatcher;
                                    }
                                },
                                useRef: function(initialValue) {
                                    currentHookNameInDev = "useRef";
                                    warnInvalidHookAccess();
                                    updateHookTypesDev();
                                    return updateRef();
                                },
                                useState: function(initialState) {
                                    currentHookNameInDev = "useState";
                                    warnInvalidHookAccess();
                                    updateHookTypesDev();
                                    var prevDispatcher = ReactCurrentDispatcher$1.current;
                                    ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
                                    try {
                                        return rerenderState(initialState);
                                    } finally {
                                        ReactCurrentDispatcher$1.current = prevDispatcher;
                                    }
                                },
                                useDebugValue: function(value, formatterFn) {
                                    currentHookNameInDev = "useDebugValue";
                                    warnInvalidHookAccess();
                                    updateHookTypesDev();
                                    return updateDebugValue();
                                },
                                useDeferredValue: function(value) {
                                    currentHookNameInDev = "useDeferredValue";
                                    warnInvalidHookAccess();
                                    updateHookTypesDev();
                                    return rerenderDeferredValue(value);
                                },
                                useTransition: function() {
                                    currentHookNameInDev = "useTransition";
                                    warnInvalidHookAccess();
                                    updateHookTypesDev();
                                    return rerenderTransition();
                                },
                                useMutableSource: function(source, getSnapshot, subscribe) {
                                    currentHookNameInDev = "useMutableSource";
                                    warnInvalidHookAccess();
                                    updateHookTypesDev();
                                    return updateMutableSource();
                                },
                                useSyncExternalStore: function(subscribe, getSnapshot, getServerSnapshot) {
                                    currentHookNameInDev = "useSyncExternalStore";
                                    warnInvalidHookAccess();
                                    updateHookTypesDev();
                                    return updateSyncExternalStore(subscribe, getSnapshot);
                                },
                                useId: function() {
                                    currentHookNameInDev = "useId";
                                    warnInvalidHookAccess();
                                    updateHookTypesDev();
                                    return updateId();
                                },
                                unstable_isNewReconciler: enableNewReconciler
                            };
                        }
                        var now$1 = Scheduler.unstable_now;
                        var commitTime = 0;
                        var layoutEffectStartTime = -1;
                        var profilerStartTime = -1;
                        var passiveEffectStartTime = -1;
                        var currentUpdateIsNested = false;
                        var nestedUpdateScheduled = false;
                        function isCurrentUpdateNested() {
                            return currentUpdateIsNested;
                        }
                        function markNestedUpdateScheduled() {
                            {
                                nestedUpdateScheduled = true;
                            }
                        }
                        function resetNestedUpdateFlag() {
                            {
                                currentUpdateIsNested = false;
                                nestedUpdateScheduled = false;
                            }
                        }
                        function syncNestedUpdateFlag() {
                            {
                                currentUpdateIsNested = nestedUpdateScheduled;
                                nestedUpdateScheduled = false;
                            }
                        }
                        function getCommitTime() {
                            return commitTime;
                        }
                        function recordCommitTime() {
                            commitTime = now$1();
                        }
                        function startProfilerTimer(fiber) {
                            profilerStartTime = now$1();
                            if (fiber.actualStartTime < 0) {
                                fiber.actualStartTime = now$1();
                            }
                        }
                        function stopProfilerTimerIfRunning(fiber) {
                            profilerStartTime = -1;
                        }
                        function stopProfilerTimerIfRunningAndRecordDelta(fiber, overrideBaseTime) {
                            if (profilerStartTime >= 0) {
                                var elapsedTime = now$1() - profilerStartTime;
                                fiber.actualDuration += elapsedTime;
                                if (overrideBaseTime) {
                                    fiber.selfBaseDuration = elapsedTime;
                                }
                                profilerStartTime = -1;
                            }
                        }
                        function recordLayoutEffectDuration(fiber) {
                            if (layoutEffectStartTime >= 0) {
                                var elapsedTime = now$1() - layoutEffectStartTime;
                                layoutEffectStartTime = -1;
                                var parentFiber = fiber.return;
                                while (parentFiber !== null) {
                                    switch (parentFiber.tag) {
                                        case HostRoot:
                                            var root2 = parentFiber.stateNode;
                                            root2.effectDuration += elapsedTime;
                                            return;
                                        case Profiler:
                                            var parentStateNode = parentFiber.stateNode;
                                            parentStateNode.effectDuration += elapsedTime;
                                            return;
                                    }
                                    parentFiber = parentFiber.return;
                                }
                            }
                        }
                        function recordPassiveEffectDuration(fiber) {
                            if (passiveEffectStartTime >= 0) {
                                var elapsedTime = now$1() - passiveEffectStartTime;
                                passiveEffectStartTime = -1;
                                var parentFiber = fiber.return;
                                while (parentFiber !== null) {
                                    switch (parentFiber.tag) {
                                        case HostRoot:
                                            var root2 = parentFiber.stateNode;
                                            if (root2 !== null) {
                                                root2.passiveEffectDuration += elapsedTime;
                                            }
                                            return;
                                        case Profiler:
                                            var parentStateNode = parentFiber.stateNode;
                                            if (parentStateNode !== null) {
                                                parentStateNode.passiveEffectDuration += elapsedTime;
                                            }
                                            return;
                                    }
                                    parentFiber = parentFiber.return;
                                }
                            }
                        }
                        function startLayoutEffectTimer() {
                            layoutEffectStartTime = now$1();
                        }
                        function startPassiveEffectTimer() {
                            passiveEffectStartTime = now$1();
                        }
                        function transferActualDuration(fiber) {
                            var child = fiber.child;
                            while (child) {
                                fiber.actualDuration += child.actualDuration;
                                child = child.sibling;
                            }
                        }
                        function createCapturedValueAtFiber(value, source) {
                            return {
                                value,
                                source,
                                stack: getStackByFiberInDevAndProd(source),
                                digest: null
                            };
                        }
                        function createCapturedValue(value, digest, stack) {
                            return {
                                value,
                                source: null,
                                stack: stack != null ? stack : null,
                                digest: digest != null ? digest : null
                            };
                        }
                        function showErrorDialog(boundary, errorInfo) {
                            return true;
                        }
                        function logCapturedError(boundary, errorInfo) {
                            try {
                                var logError = showErrorDialog(boundary, errorInfo);
                                if (logError === false) {
                                    return;
                                }
                                var error2 = errorInfo.value;
                                if (true) {
                                    var source = errorInfo.source;
                                    var stack = errorInfo.stack;
                                    var componentStack = stack !== null ? stack : "";
                                    if (error2 != null && error2._suppressLogging) {
                                        if (boundary.tag === ClassComponent) {
                                            return;
                                        }
                                        console["error"](error2);
                                    }
                                    var componentName = source ? getComponentNameFromFiber(source) : null;
                                    var componentNameMessage = componentName ? "The above error occurred in the <" + componentName + "> component:" : "The above error occurred in one of your React components:";
                                    var errorBoundaryMessage;
                                    if (boundary.tag === HostRoot) {
                                        errorBoundaryMessage = "Consider adding an error boundary to your tree to customize error handling behavior.\nVisit https://reactjs.org/link/error-boundaries to learn more about error boundaries.";
                                    } else {
                                        var errorBoundaryName = getComponentNameFromFiber(boundary) || "Anonymous";
                                        errorBoundaryMessage = "React will try to recreate this component tree from scratch " + ("using the error boundary you provided, " + errorBoundaryName + ".");
                                    }
                                    var combinedMessage = componentNameMessage + "\n" + componentStack + "\n\n" + ("" + errorBoundaryMessage);
                                    console["error"](combinedMessage);
                                } else {
                                    console["error"](error2);
                                }
                            } catch (e) {
                                setTimeout(function() {
                                    throw e;
                                });
                            }
                        }
                        var PossiblyWeakMap$1 = typeof WeakMap === "function" ? WeakMap : Map;
                        function createRootErrorUpdate(fiber, errorInfo, lane) {
                            var update = createUpdate(NoTimestamp, lane);
                            update.tag = CaptureUpdate;
                            update.payload = {
                                element: null
                            };
                            var error2 = errorInfo.value;
                            update.callback = function() {
                                onUncaughtError(error2);
                                logCapturedError(fiber, errorInfo);
                            };
                            return update;
                        }
                        function createClassErrorUpdate(fiber, errorInfo, lane) {
                            var update = createUpdate(NoTimestamp, lane);
                            update.tag = CaptureUpdate;
                            var getDerivedStateFromError = fiber.type.getDerivedStateFromError;
                            if (typeof getDerivedStateFromError === "function") {
                                var error$1 = errorInfo.value;
                                update.payload = function() {
                                    return getDerivedStateFromError(error$1);
                                };
                                update.callback = function() {
                                    {
                                        markFailedErrorBoundaryForHotReloading(fiber);
                                    }
                                    logCapturedError(fiber, errorInfo);
                                };
                            }
                            var inst = fiber.stateNode;
                            if (inst !== null && typeof inst.componentDidCatch === "function") {
                                update.callback = function callback() {
                                    {
                                        markFailedErrorBoundaryForHotReloading(fiber);
                                    }
                                    logCapturedError(fiber, errorInfo);
                                    if (typeof getDerivedStateFromError !== "function") {
                                        markLegacyErrorBoundaryAsFailed(this);
                                    }
                                    var error$12 = errorInfo.value;
                                    var stack = errorInfo.stack;
                                    this.componentDidCatch(error$12, {
                                        componentStack: stack !== null ? stack : ""
                                    });
                                    {
                                        if (typeof getDerivedStateFromError !== "function") {
                                            if (!includesSomeLane(fiber.lanes, SyncLane)) {
                                                error("%s: Error boundaries should implement getDerivedStateFromError(). In that method, return a state update to display an error message or fallback UI.", getComponentNameFromFiber(fiber) || "Unknown");
                                            }
                                        }
                                    }
                                };
                            }
                            return update;
                        }
                        function attachPingListener(root2, wakeable, lanes) {
                            var pingCache = root2.pingCache;
                            var threadIDs;
                            if (pingCache === null) {
                                pingCache = root2.pingCache = new PossiblyWeakMap$1();
                                threadIDs = /* @__PURE__ */ new Set();
                                pingCache.set(wakeable, threadIDs);
                            } else {
                                threadIDs = pingCache.get(wakeable);
                                if (threadIDs === void 0) {
                                    threadIDs = /* @__PURE__ */ new Set();
                                    pingCache.set(wakeable, threadIDs);
                                }
                            }
                            if (!threadIDs.has(lanes)) {
                                threadIDs.add(lanes);
                                var ping = pingSuspendedRoot.bind(null, root2, wakeable, lanes);
                                {
                                    if (isDevToolsPresent) {
                                        restorePendingUpdaters(root2, lanes);
                                    }
                                }
                                wakeable.then(ping, ping);
                            }
                        }
                        function attachRetryListener(suspenseBoundary, root2, wakeable, lanes) {
                            var wakeables = suspenseBoundary.updateQueue;
                            if (wakeables === null) {
                                var updateQueue = /* @__PURE__ */ new Set();
                                updateQueue.add(wakeable);
                                suspenseBoundary.updateQueue = updateQueue;
                            } else {
                                wakeables.add(wakeable);
                            }
                        }
                        function resetSuspendedComponent(sourceFiber, rootRenderLanes) {
                            var tag = sourceFiber.tag;
                            if ((sourceFiber.mode & ConcurrentMode) === NoMode && (tag === FunctionComponent || tag === ForwardRef || tag === SimpleMemoComponent)) {
                                var currentSource = sourceFiber.alternate;
                                if (currentSource) {
                                    sourceFiber.updateQueue = currentSource.updateQueue;
                                    sourceFiber.memoizedState = currentSource.memoizedState;
                                    sourceFiber.lanes = currentSource.lanes;
                                } else {
                                    sourceFiber.updateQueue = null;
                                    sourceFiber.memoizedState = null;
                                }
                            }
                        }
                        function getNearestSuspenseBoundaryToCapture(returnFiber) {
                            var node = returnFiber;
                            do {
                                if (node.tag === SuspenseComponent && shouldCaptureSuspense(node)) {
                                    return node;
                                }
                                node = node.return;
                            } while (node !== null);
                            return null;
                        }
                        function markSuspenseBoundaryShouldCapture(suspenseBoundary, returnFiber, sourceFiber, root2, rootRenderLanes) {
                            if ((suspenseBoundary.mode & ConcurrentMode) === NoMode) {
                                if (suspenseBoundary === returnFiber) {
                                    suspenseBoundary.flags |= ShouldCapture;
                                } else {
                                    suspenseBoundary.flags |= DidCapture;
                                    sourceFiber.flags |= ForceUpdateForLegacySuspense;
                                    sourceFiber.flags &= ~(LifecycleEffectMask | Incomplete);
                                    if (sourceFiber.tag === ClassComponent) {
                                        var currentSourceFiber = sourceFiber.alternate;
                                        if (currentSourceFiber === null) {
                                            sourceFiber.tag = IncompleteClassComponent;
                                        } else {
                                            var update = createUpdate(NoTimestamp, SyncLane);
                                            update.tag = ForceUpdate;
                                            enqueueUpdate(sourceFiber, update, SyncLane);
                                        }
                                    }
                                    sourceFiber.lanes = mergeLanes(sourceFiber.lanes, SyncLane);
                                }
                                return suspenseBoundary;
                            }
                            suspenseBoundary.flags |= ShouldCapture;
                            suspenseBoundary.lanes = rootRenderLanes;
                            return suspenseBoundary;
                        }
                        function throwException(root2, returnFiber, sourceFiber, value, rootRenderLanes) {
                            sourceFiber.flags |= Incomplete;
                            {
                                if (isDevToolsPresent) {
                                    restorePendingUpdaters(root2, rootRenderLanes);
                                }
                            }
                            if (value !== null && typeof value === "object" && typeof value.then === "function") {
                                var wakeable = value;
                                resetSuspendedComponent(sourceFiber);
                                {
                                    if (getIsHydrating() && sourceFiber.mode & ConcurrentMode) {
                                        markDidThrowWhileHydratingDEV();
                                    }
                                }
                                var suspenseBoundary = getNearestSuspenseBoundaryToCapture(returnFiber);
                                if (suspenseBoundary !== null) {
                                    suspenseBoundary.flags &= ~ForceClientRender;
                                    markSuspenseBoundaryShouldCapture(suspenseBoundary, returnFiber, sourceFiber, root2, rootRenderLanes);
                                    if (suspenseBoundary.mode & ConcurrentMode) {
                                        attachPingListener(root2, wakeable, rootRenderLanes);
                                    }
                                    attachRetryListener(suspenseBoundary, root2, wakeable);
                                    return;
                                } else {
                                    if (!includesSyncLane(rootRenderLanes)) {
                                        attachPingListener(root2, wakeable, rootRenderLanes);
                                        renderDidSuspendDelayIfPossible();
                                        return;
                                    }
                                    var uncaughtSuspenseError = new Error("A component suspended while responding to synchronous input. This will cause the UI to be replaced with a loading indicator. To fix, updates that suspend should be wrapped with startTransition.");
                                    value = uncaughtSuspenseError;
                                }
                            } else {
                                if (getIsHydrating() && sourceFiber.mode & ConcurrentMode) {
                                    markDidThrowWhileHydratingDEV();
                                    var _suspenseBoundary = getNearestSuspenseBoundaryToCapture(returnFiber);
                                    if (_suspenseBoundary !== null) {
                                        if ((_suspenseBoundary.flags & ShouldCapture) === NoFlags) {
                                            _suspenseBoundary.flags |= ForceClientRender;
                                        }
                                        markSuspenseBoundaryShouldCapture(_suspenseBoundary, returnFiber, sourceFiber, root2, rootRenderLanes);
                                        queueHydrationError(createCapturedValueAtFiber(value, sourceFiber));
                                        return;
                                    }
                                }
                            }
                            value = createCapturedValueAtFiber(value, sourceFiber);
                            renderDidError(value);
                            var workInProgress2 = returnFiber;
                            do {
                                switch (workInProgress2.tag) {
                                    case HostRoot: {
                                        var _errorInfo = value;
                                        workInProgress2.flags |= ShouldCapture;
                                        var lane = pickArbitraryLane(rootRenderLanes);
                                        workInProgress2.lanes = mergeLanes(workInProgress2.lanes, lane);
                                        var update = createRootErrorUpdate(workInProgress2, _errorInfo, lane);
                                        enqueueCapturedUpdate(workInProgress2, update);
                                        return;
                                    }
                                    case ClassComponent:
                                        var errorInfo = value;
                                        var ctor = workInProgress2.type;
                                        var instance2 = workInProgress2.stateNode;
                                        if ((workInProgress2.flags & DidCapture) === NoFlags && (typeof ctor.getDerivedStateFromError === "function" || instance2 !== null && typeof instance2.componentDidCatch === "function" && !isAlreadyFailedLegacyErrorBoundary(instance2))) {
                                            workInProgress2.flags |= ShouldCapture;
                                            var _lane = pickArbitraryLane(rootRenderLanes);
                                            workInProgress2.lanes = mergeLanes(workInProgress2.lanes, _lane);
                                            var _update = createClassErrorUpdate(workInProgress2, errorInfo, _lane);
                                            enqueueCapturedUpdate(workInProgress2, _update);
                                            return;
                                        }
                                        break;
                                }
                                workInProgress2 = workInProgress2.return;
                            } while (workInProgress2 !== null);
                        }
                        function getSuspendedCache() {
                            {
                                return null;
                            }
                        }
                        var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
                        var didReceiveUpdate = false;
                        var didWarnAboutBadClass;
                        var didWarnAboutModulePatternComponent;
                        var didWarnAboutContextTypeOnFunctionComponent;
                        var didWarnAboutGetDerivedStateOnFunctionComponent;
                        var didWarnAboutFunctionRefs;
                        var didWarnAboutReassigningProps;
                        var didWarnAboutRevealOrder;
                        var didWarnAboutTailOptions;
                        {
                            didWarnAboutBadClass = {};
                            didWarnAboutModulePatternComponent = {};
                            didWarnAboutContextTypeOnFunctionComponent = {};
                            didWarnAboutGetDerivedStateOnFunctionComponent = {};
                            didWarnAboutFunctionRefs = {};
                            didWarnAboutReassigningProps = false;
                            didWarnAboutRevealOrder = {};
                            didWarnAboutTailOptions = {};
                        }
                        function reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2) {
                            if (current2 === null) {
                                workInProgress2.child = mountChildFibers(workInProgress2, null, nextChildren, renderLanes2);
                            } else {
                                workInProgress2.child = reconcileChildFibers(workInProgress2, current2.child, nextChildren, renderLanes2);
                            }
                        }
                        function forceUnmountCurrentAndReconcile(current2, workInProgress2, nextChildren, renderLanes2) {
                            workInProgress2.child = reconcileChildFibers(workInProgress2, current2.child, null, renderLanes2);
                            workInProgress2.child = reconcileChildFibers(workInProgress2, null, nextChildren, renderLanes2);
                        }
                        function updateForwardRef(current2, workInProgress2, Component, nextProps, renderLanes2) {
                            {
                                if (workInProgress2.type !== workInProgress2.elementType) {
                                    var innerPropTypes = Component.propTypes;
                                    if (innerPropTypes) {
                                        checkPropTypes(
                                            innerPropTypes,
                                            nextProps,
                                            // Resolved props
                                            "prop",
                                            getComponentNameFromType(Component)
                                        );
                                    }
                                }
                            }
                            var render2 = Component.render;
                            var ref = workInProgress2.ref;
                            var nextChildren;
                            var hasId;
                            prepareToReadContext(workInProgress2, renderLanes2);
                            {
                                markComponentRenderStarted(workInProgress2);
                            }
                            {
                                ReactCurrentOwner$1.current = workInProgress2;
                                setIsRendering(true);
                                nextChildren = renderWithHooks(current2, workInProgress2, render2, nextProps, ref, renderLanes2);
                                hasId = checkDidRenderIdHook();
                                if (workInProgress2.mode & StrictLegacyMode) {
                                    setIsStrictModeForDevtools(true);
                                    try {
                                        nextChildren = renderWithHooks(current2, workInProgress2, render2, nextProps, ref, renderLanes2);
                                        hasId = checkDidRenderIdHook();
                                    } finally {
                                        setIsStrictModeForDevtools(false);
                                    }
                                }
                                setIsRendering(false);
                            }
                            {
                                markComponentRenderStopped();
                            }
                            if (current2 !== null && !didReceiveUpdate) {
                                bailoutHooks(current2, workInProgress2, renderLanes2);
                                return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
                            }
                            if (getIsHydrating() && hasId) {
                                pushMaterializedTreeId(workInProgress2);
                            }
                            workInProgress2.flags |= PerformedWork;
                            reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
                            return workInProgress2.child;
                        }
                        function updateMemoComponent(current2, workInProgress2, Component, nextProps, renderLanes2) {
                            if (current2 === null) {
                                var type = Component.type;
                                if (isSimpleFunctionComponent(type) && Component.compare === null && // SimpleMemoComponent codepath doesn't resolve outer props either.
                                    Component.defaultProps === void 0) {
                                    var resolvedType = type;
                                    {
                                        resolvedType = resolveFunctionForHotReloading(type);
                                    }
                                    workInProgress2.tag = SimpleMemoComponent;
                                    workInProgress2.type = resolvedType;
                                    {
                                        validateFunctionComponentInDev(workInProgress2, type);
                                    }
                                    return updateSimpleMemoComponent(current2, workInProgress2, resolvedType, nextProps, renderLanes2);
                                }
                                {
                                    var innerPropTypes = type.propTypes;
                                    if (innerPropTypes) {
                                        checkPropTypes(
                                            innerPropTypes,
                                            nextProps,
                                            // Resolved props
                                            "prop",
                                            getComponentNameFromType(type)
                                        );
                                    }
                                }
                                var child = createFiberFromTypeAndProps(Component.type, null, nextProps, workInProgress2, workInProgress2.mode, renderLanes2);
                                child.ref = workInProgress2.ref;
                                child.return = workInProgress2;
                                workInProgress2.child = child;
                                return child;
                            }
                            {
                                var _type = Component.type;
                                var _innerPropTypes = _type.propTypes;
                                if (_innerPropTypes) {
                                    checkPropTypes(
                                        _innerPropTypes,
                                        nextProps,
                                        // Resolved props
                                        "prop",
                                        getComponentNameFromType(_type)
                                    );
                                }
                            }
                            var currentChild = current2.child;
                            var hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(current2, renderLanes2);
                            if (!hasScheduledUpdateOrContext) {
                                var prevProps = currentChild.memoizedProps;
                                var compare = Component.compare;
                                compare = compare !== null ? compare : shallowEqual;
                                if (compare(prevProps, nextProps) && current2.ref === workInProgress2.ref) {
                                    return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
                                }
                            }
                            workInProgress2.flags |= PerformedWork;
                            var newChild = createWorkInProgress(currentChild, nextProps);
                            newChild.ref = workInProgress2.ref;
                            newChild.return = workInProgress2;
                            workInProgress2.child = newChild;
                            return newChild;
                        }
                        function updateSimpleMemoComponent(current2, workInProgress2, Component, nextProps, renderLanes2) {
                            {
                                if (workInProgress2.type !== workInProgress2.elementType) {
                                    var outerMemoType = workInProgress2.elementType;
                                    if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {
                                        var lazyComponent = outerMemoType;
                                        var payload = lazyComponent._payload;
                                        var init = lazyComponent._init;
                                        try {
                                            outerMemoType = init(payload);
                                        } catch (x) {
                                            outerMemoType = null;
                                        }
                                        var outerPropTypes = outerMemoType && outerMemoType.propTypes;
                                        if (outerPropTypes) {
                                            checkPropTypes(
                                                outerPropTypes,
                                                nextProps,
                                                // Resolved (SimpleMemoComponent has no defaultProps)
                                                "prop",
                                                getComponentNameFromType(outerMemoType)
                                            );
                                        }
                                    }
                                }
                            }
                            if (current2 !== null) {
                                var prevProps = current2.memoizedProps;
                                if (shallowEqual(prevProps, nextProps) && current2.ref === workInProgress2.ref && // Prevent bailout if the implementation changed due to hot reload.
                                    workInProgress2.type === current2.type) {
                                    didReceiveUpdate = false;
                                    workInProgress2.pendingProps = nextProps = prevProps;
                                    if (!checkScheduledUpdateOrContext(current2, renderLanes2)) {
                                        workInProgress2.lanes = current2.lanes;
                                        return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
                                    } else if ((current2.flags & ForceUpdateForLegacySuspense) !== NoFlags) {
                                        didReceiveUpdate = true;
                                    }
                                }
                            }
                            return updateFunctionComponent(current2, workInProgress2, Component, nextProps, renderLanes2);
                        }
                        function updateOffscreenComponent(current2, workInProgress2, renderLanes2) {
                            var nextProps = workInProgress2.pendingProps;
                            var nextChildren = nextProps.children;
                            var prevState = current2 !== null ? current2.memoizedState : null;
                            if (nextProps.mode === "hidden" || enableLegacyHidden) {
                                if ((workInProgress2.mode & ConcurrentMode) === NoMode) {
                                    var nextState = {
                                        baseLanes: NoLanes,
                                        cachePool: null,
                                        transitions: null
                                    };
                                    workInProgress2.memoizedState = nextState;
                                    pushRenderLanes(workInProgress2, renderLanes2);
                                } else if (!includesSomeLane(renderLanes2, OffscreenLane)) {
                                    var spawnedCachePool = null;
                                    var nextBaseLanes;
                                    if (prevState !== null) {
                                        var prevBaseLanes = prevState.baseLanes;
                                        nextBaseLanes = mergeLanes(prevBaseLanes, renderLanes2);
                                    } else {
                                        nextBaseLanes = renderLanes2;
                                    }
                                    workInProgress2.lanes = workInProgress2.childLanes = laneToLanes(OffscreenLane);
                                    var _nextState = {
                                        baseLanes: nextBaseLanes,
                                        cachePool: spawnedCachePool,
                                        transitions: null
                                    };
                                    workInProgress2.memoizedState = _nextState;
                                    workInProgress2.updateQueue = null;
                                    pushRenderLanes(workInProgress2, nextBaseLanes);
                                    return null;
                                } else {
                                    var _nextState2 = {
                                        baseLanes: NoLanes,
                                        cachePool: null,
                                        transitions: null
                                    };
                                    workInProgress2.memoizedState = _nextState2;
                                    var subtreeRenderLanes2 = prevState !== null ? prevState.baseLanes : renderLanes2;
                                    pushRenderLanes(workInProgress2, subtreeRenderLanes2);
                                }
                            } else {
                                var _subtreeRenderLanes;
                                if (prevState !== null) {
                                    _subtreeRenderLanes = mergeLanes(prevState.baseLanes, renderLanes2);
                                    workInProgress2.memoizedState = null;
                                } else {
                                    _subtreeRenderLanes = renderLanes2;
                                }
                                pushRenderLanes(workInProgress2, _subtreeRenderLanes);
                            }
                            reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
                            return workInProgress2.child;
                        }
                        function updateFragment(current2, workInProgress2, renderLanes2) {
                            var nextChildren = workInProgress2.pendingProps;
                            reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
                            return workInProgress2.child;
                        }
                        function updateMode(current2, workInProgress2, renderLanes2) {
                            var nextChildren = workInProgress2.pendingProps.children;
                            reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
                            return workInProgress2.child;
                        }
                        function updateProfiler(current2, workInProgress2, renderLanes2) {
                            {
                                workInProgress2.flags |= Update;
                                {
                                    var stateNode = workInProgress2.stateNode;
                                    stateNode.effectDuration = 0;
                                    stateNode.passiveEffectDuration = 0;
                                }
                            }
                            var nextProps = workInProgress2.pendingProps;
                            var nextChildren = nextProps.children;
                            reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
                            return workInProgress2.child;
                        }
                        function markRef(current2, workInProgress2) {
                            var ref = workInProgress2.ref;
                            if (current2 === null && ref !== null || current2 !== null && current2.ref !== ref) {
                                workInProgress2.flags |= Ref;
                                {
                                    workInProgress2.flags |= RefStatic;
                                }
                            }
                        }
                        function updateFunctionComponent(current2, workInProgress2, Component, nextProps, renderLanes2) {
                            {
                                if (workInProgress2.type !== workInProgress2.elementType) {
                                    var innerPropTypes = Component.propTypes;
                                    if (innerPropTypes) {
                                        checkPropTypes(
                                            innerPropTypes,
                                            nextProps,
                                            // Resolved props
                                            "prop",
                                            getComponentNameFromType(Component)
                                        );
                                    }
                                }
                            }
                            var context;
                            {
                                var unmaskedContext = getUnmaskedContext(workInProgress2, Component, true);
                                context = getMaskedContext(workInProgress2, unmaskedContext);
                            }
                            var nextChildren;
                            var hasId;
                            prepareToReadContext(workInProgress2, renderLanes2);
                            {
                                markComponentRenderStarted(workInProgress2);
                            }
                            {
                                ReactCurrentOwner$1.current = workInProgress2;
                                setIsRendering(true);
                                nextChildren = renderWithHooks(current2, workInProgress2, Component, nextProps, context, renderLanes2);
                                hasId = checkDidRenderIdHook();
                                if (workInProgress2.mode & StrictLegacyMode) {
                                    setIsStrictModeForDevtools(true);
                                    try {
                                        nextChildren = renderWithHooks(current2, workInProgress2, Component, nextProps, context, renderLanes2);
                                        hasId = checkDidRenderIdHook();
                                    } finally {
                                        setIsStrictModeForDevtools(false);
                                    }
                                }
                                setIsRendering(false);
                            }
                            {
                                markComponentRenderStopped();
                            }
                            if (current2 !== null && !didReceiveUpdate) {
                                bailoutHooks(current2, workInProgress2, renderLanes2);
                                return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
                            }
                            if (getIsHydrating() && hasId) {
                                pushMaterializedTreeId(workInProgress2);
                            }
                            workInProgress2.flags |= PerformedWork;
                            reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
                            return workInProgress2.child;
                        }
                        function updateClassComponent(current2, workInProgress2, Component, nextProps, renderLanes2) {
                            {
                                switch (shouldError(workInProgress2)) {
                                    case false: {
                                        var _instance = workInProgress2.stateNode;
                                        var ctor = workInProgress2.type;
                                        var tempInstance = new ctor(workInProgress2.memoizedProps, _instance.context);
                                        var state = tempInstance.state;
                                        _instance.updater.enqueueSetState(_instance, state, null);
                                        break;
                                    }
                                    case true: {
                                        workInProgress2.flags |= DidCapture;
                                        workInProgress2.flags |= ShouldCapture;
                                        var error$1 = new Error("Simulated error coming from DevTools");
                                        var lane = pickArbitraryLane(renderLanes2);
                                        workInProgress2.lanes = mergeLanes(workInProgress2.lanes, lane);
                                        var update = createClassErrorUpdate(workInProgress2, createCapturedValueAtFiber(error$1, workInProgress2), lane);
                                        enqueueCapturedUpdate(workInProgress2, update);
                                        break;
                                    }
                                }
                                if (workInProgress2.type !== workInProgress2.elementType) {
                                    var innerPropTypes = Component.propTypes;
                                    if (innerPropTypes) {
                                        checkPropTypes(
                                            innerPropTypes,
                                            nextProps,
                                            // Resolved props
                                            "prop",
                                            getComponentNameFromType(Component)
                                        );
                                    }
                                }
                            }
                            var hasContext;
                            if (isContextProvider(Component)) {
                                hasContext = true;
                                pushContextProvider(workInProgress2);
                            } else {
                                hasContext = false;
                            }
                            prepareToReadContext(workInProgress2, renderLanes2);
                            var instance2 = workInProgress2.stateNode;
                            var shouldUpdate;
                            if (instance2 === null) {
                                resetSuspendedCurrentOnMountInLegacyMode(current2, workInProgress2);
                                constructClassInstance(workInProgress2, Component, nextProps);
                                mountClassInstance(workInProgress2, Component, nextProps, renderLanes2);
                                shouldUpdate = true;
                            } else if (current2 === null) {
                                shouldUpdate = resumeMountClassInstance(workInProgress2, Component, nextProps, renderLanes2);
                            } else {
                                shouldUpdate = updateClassInstance(current2, workInProgress2, Component, nextProps, renderLanes2);
                            }
                            var nextUnitOfWork = finishClassComponent(current2, workInProgress2, Component, shouldUpdate, hasContext, renderLanes2);
                            {
                                var inst = workInProgress2.stateNode;
                                if (shouldUpdate && inst.props !== nextProps) {
                                    if (!didWarnAboutReassigningProps) {
                                        error("It looks like %s is reassigning its own `this.props` while rendering. This is not supported and can lead to confusing bugs.", getComponentNameFromFiber(workInProgress2) || "a component");
                                    }
                                    didWarnAboutReassigningProps = true;
                                }
                            }
                            return nextUnitOfWork;
                        }
                        function finishClassComponent(current2, workInProgress2, Component, shouldUpdate, hasContext, renderLanes2) {
                            markRef(current2, workInProgress2);
                            var didCaptureError = (workInProgress2.flags & DidCapture) !== NoFlags;
                            if (!shouldUpdate && !didCaptureError) {
                                if (hasContext) {
                                    invalidateContextProvider(workInProgress2, Component, false);
                                }
                                return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
                            }
                            var instance2 = workInProgress2.stateNode;
                            ReactCurrentOwner$1.current = workInProgress2;
                            var nextChildren;
                            if (didCaptureError && typeof Component.getDerivedStateFromError !== "function") {
                                nextChildren = null;
                                {
                                    stopProfilerTimerIfRunning();
                                }
                            } else {
                                {
                                    markComponentRenderStarted(workInProgress2);
                                }
                                {
                                    setIsRendering(true);
                                    nextChildren = instance2.render();
                                    if (workInProgress2.mode & StrictLegacyMode) {
                                        setIsStrictModeForDevtools(true);
                                        try {
                                            instance2.render();
                                        } finally {
                                            setIsStrictModeForDevtools(false);
                                        }
                                    }
                                    setIsRendering(false);
                                }
                                {
                                    markComponentRenderStopped();
                                }
                            }
                            workInProgress2.flags |= PerformedWork;
                            if (current2 !== null && didCaptureError) {
                                forceUnmountCurrentAndReconcile(current2, workInProgress2, nextChildren, renderLanes2);
                            } else {
                                reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
                            }
                            workInProgress2.memoizedState = instance2.state;
                            if (hasContext) {
                                invalidateContextProvider(workInProgress2, Component, true);
                            }
                            return workInProgress2.child;
                        }
                        function pushHostRootContext(workInProgress2) {
                            var root2 = workInProgress2.stateNode;
                            if (root2.pendingContext) {
                                pushTopLevelContextObject(workInProgress2, root2.pendingContext, root2.pendingContext !== root2.context);
                            } else if (root2.context) {
                                pushTopLevelContextObject(workInProgress2, root2.context, false);
                            }
                            pushHostContainer(workInProgress2, root2.containerInfo);
                        }
                        function updateHostRoot(current2, workInProgress2, renderLanes2) {
                            pushHostRootContext(workInProgress2);
                            if (current2 === null) {
                                throw new Error("Should have a current fiber. This is a bug in React.");
                            }
                            var nextProps = workInProgress2.pendingProps;
                            var prevState = workInProgress2.memoizedState;
                            var prevChildren = prevState.element;
                            cloneUpdateQueue(current2, workInProgress2);
                            processUpdateQueue(workInProgress2, nextProps, null, renderLanes2);
                            var nextState = workInProgress2.memoizedState;
                            var root2 = workInProgress2.stateNode;
                            var nextChildren = nextState.element;
                            if (prevState.isDehydrated) {
                                var overrideState = {
                                    element: nextChildren,
                                    isDehydrated: false,
                                    cache: nextState.cache,
                                    pendingSuspenseBoundaries: nextState.pendingSuspenseBoundaries,
                                    transitions: nextState.transitions
                                };
                                var updateQueue = workInProgress2.updateQueue;
                                updateQueue.baseState = overrideState;
                                workInProgress2.memoizedState = overrideState;
                                if (workInProgress2.flags & ForceClientRender) {
                                    var recoverableError = createCapturedValueAtFiber(new Error("There was an error while hydrating. Because the error happened outside of a Suspense boundary, the entire root will switch to client rendering."), workInProgress2);
                                    return mountHostRootWithoutHydrating(current2, workInProgress2, nextChildren, renderLanes2, recoverableError);
                                } else if (nextChildren !== prevChildren) {
                                    var _recoverableError = createCapturedValueAtFiber(new Error("This root received an early update, before anything was able hydrate. Switched the entire root to client rendering."), workInProgress2);
                                    return mountHostRootWithoutHydrating(current2, workInProgress2, nextChildren, renderLanes2, _recoverableError);
                                } else {
                                    enterHydrationState(workInProgress2);
                                    var child = mountChildFibers(workInProgress2, null, nextChildren, renderLanes2);
                                    workInProgress2.child = child;
                                    var node = child;
                                    while (node) {
                                        node.flags = node.flags & ~Placement | Hydrating;
                                        node = node.sibling;
                                    }
                                }
                            } else {
                                resetHydrationState();
                                if (nextChildren === prevChildren) {
                                    return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
                                }
                                reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
                            }
                            return workInProgress2.child;
                        }
                        function mountHostRootWithoutHydrating(current2, workInProgress2, nextChildren, renderLanes2, recoverableError) {
                            resetHydrationState();
                            queueHydrationError(recoverableError);
                            workInProgress2.flags |= ForceClientRender;
                            reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
                            return workInProgress2.child;
                        }
                        function updateHostComponent(current2, workInProgress2, renderLanes2) {
                            pushHostContext(workInProgress2);
                            if (current2 === null) {
                                tryToClaimNextHydratableInstance(workInProgress2);
                            }
                            var type = workInProgress2.type;
                            var nextProps = workInProgress2.pendingProps;
                            var prevProps = current2 !== null ? current2.memoizedProps : null;
                            var nextChildren = nextProps.children;
                            var isDirectTextChild = shouldSetTextContent(type, nextProps);
                            if (isDirectTextChild) {
                                nextChildren = null;
                            } else if (prevProps !== null && shouldSetTextContent(type, prevProps)) {
                                workInProgress2.flags |= ContentReset;
                            }
                            markRef(current2, workInProgress2);
                            reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
                            return workInProgress2.child;
                        }
                        function updateHostText(current2, workInProgress2) {
                            if (current2 === null) {
                                tryToClaimNextHydratableInstance(workInProgress2);
                            }
                            return null;
                        }
                        function mountLazyComponent(_current, workInProgress2, elementType, renderLanes2) {
                            resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress2);
                            var props = workInProgress2.pendingProps;
                            var lazyComponent = elementType;
                            var payload = lazyComponent._payload;
                            var init = lazyComponent._init;
                            var Component = init(payload);
                            workInProgress2.type = Component;
                            var resolvedTag = workInProgress2.tag = resolveLazyComponentTag(Component);
                            var resolvedProps = resolveDefaultProps(Component, props);
                            var child;
                            switch (resolvedTag) {
                                case FunctionComponent: {
                                    {
                                        validateFunctionComponentInDev(workInProgress2, Component);
                                        workInProgress2.type = Component = resolveFunctionForHotReloading(Component);
                                    }
                                    child = updateFunctionComponent(null, workInProgress2, Component, resolvedProps, renderLanes2);
                                    return child;
                                }
                                case ClassComponent: {
                                    {
                                        workInProgress2.type = Component = resolveClassForHotReloading(Component);
                                    }
                                    child = updateClassComponent(null, workInProgress2, Component, resolvedProps, renderLanes2);
                                    return child;
                                }
                                case ForwardRef: {
                                    {
                                        workInProgress2.type = Component = resolveForwardRefForHotReloading(Component);
                                    }
                                    child = updateForwardRef(null, workInProgress2, Component, resolvedProps, renderLanes2);
                                    return child;
                                }
                                case MemoComponent: {
                                    {
                                        if (workInProgress2.type !== workInProgress2.elementType) {
                                            var outerPropTypes = Component.propTypes;
                                            if (outerPropTypes) {
                                                checkPropTypes(
                                                    outerPropTypes,
                                                    resolvedProps,
                                                    // Resolved for outer only
                                                    "prop",
                                                    getComponentNameFromType(Component)
                                                );
                                            }
                                        }
                                    }
                                    child = updateMemoComponent(
                                        null,
                                        workInProgress2,
                                        Component,
                                        resolveDefaultProps(Component.type, resolvedProps),
                                        // The inner type can have defaults too
                                        renderLanes2
                                    );
                                    return child;
                                }
                            }
                            var hint = "";
                            {
                                if (Component !== null && typeof Component === "object" && Component.$$typeof === REACT_LAZY_TYPE) {
                                    hint = " Did you wrap a component in React.lazy() more than once?";
                                }
                            }
                            throw new Error("Element type is invalid. Received a promise that resolves to: " + Component + ". " + ("Lazy element type must resolve to a class or function." + hint));
                        }
                        function mountIncompleteClassComponent(_current, workInProgress2, Component, nextProps, renderLanes2) {
                            resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress2);
                            workInProgress2.tag = ClassComponent;
                            var hasContext;
                            if (isContextProvider(Component)) {
                                hasContext = true;
                                pushContextProvider(workInProgress2);
                            } else {
                                hasContext = false;
                            }
                            prepareToReadContext(workInProgress2, renderLanes2);
                            constructClassInstance(workInProgress2, Component, nextProps);
                            mountClassInstance(workInProgress2, Component, nextProps, renderLanes2);
                            return finishClassComponent(null, workInProgress2, Component, true, hasContext, renderLanes2);
                        }
                        function mountIndeterminateComponent(_current, workInProgress2, Component, renderLanes2) {
                            resetSuspendedCurrentOnMountInLegacyMode(_current, workInProgress2);
                            var props = workInProgress2.pendingProps;
                            var context;
                            {
                                var unmaskedContext = getUnmaskedContext(workInProgress2, Component, false);
                                context = getMaskedContext(workInProgress2, unmaskedContext);
                            }
                            prepareToReadContext(workInProgress2, renderLanes2);
                            var value;
                            var hasId;
                            {
                                markComponentRenderStarted(workInProgress2);
                            }
                            {
                                if (Component.prototype && typeof Component.prototype.render === "function") {
                                    var componentName = getComponentNameFromType(Component) || "Unknown";
                                    if (!didWarnAboutBadClass[componentName]) {
                                        error("The <%s /> component appears to have a render method, but doesn't extend React.Component. This is likely to cause errors. Change %s to extend React.Component instead.", componentName, componentName);
                                        didWarnAboutBadClass[componentName] = true;
                                    }
                                }
                                if (workInProgress2.mode & StrictLegacyMode) {
                                    ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress2, null);
                                }
                                setIsRendering(true);
                                ReactCurrentOwner$1.current = workInProgress2;
                                value = renderWithHooks(null, workInProgress2, Component, props, context, renderLanes2);
                                hasId = checkDidRenderIdHook();
                                setIsRendering(false);
                            }
                            {
                                markComponentRenderStopped();
                            }
                            workInProgress2.flags |= PerformedWork;
                            {
                                if (typeof value === "object" && value !== null && typeof value.render === "function" && value.$$typeof === void 0) {
                                    var _componentName = getComponentNameFromType(Component) || "Unknown";
                                    if (!didWarnAboutModulePatternComponent[_componentName]) {
                                        error("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName, _componentName, _componentName);
                                        didWarnAboutModulePatternComponent[_componentName] = true;
                                    }
                                }
                            }
                            if (
                                // Run these checks in production only if the flag is off.
                                // Eventually we'll delete this branch altogether.
                                typeof value === "object" && value !== null && typeof value.render === "function" && value.$$typeof === void 0
                            ) {
                                {
                                    var _componentName2 = getComponentNameFromType(Component) || "Unknown";
                                    if (!didWarnAboutModulePatternComponent[_componentName2]) {
                                        error("The <%s /> component appears to be a function component that returns a class instance. Change %s to a class that extends React.Component instead. If you can't use a class try assigning the prototype on the function as a workaround. `%s.prototype = React.Component.prototype`. Don't use an arrow function since it cannot be called with `new` by React.", _componentName2, _componentName2, _componentName2);
                                        didWarnAboutModulePatternComponent[_componentName2] = true;
                                    }
                                }
                                workInProgress2.tag = ClassComponent;
                                workInProgress2.memoizedState = null;
                                workInProgress2.updateQueue = null;
                                var hasContext = false;
                                if (isContextProvider(Component)) {
                                    hasContext = true;
                                    pushContextProvider(workInProgress2);
                                } else {
                                    hasContext = false;
                                }
                                workInProgress2.memoizedState = value.state !== null && value.state !== void 0 ? value.state : null;
                                initializeUpdateQueue(workInProgress2);
                                adoptClassInstance(workInProgress2, value);
                                mountClassInstance(workInProgress2, Component, props, renderLanes2);
                                return finishClassComponent(null, workInProgress2, Component, true, hasContext, renderLanes2);
                            } else {
                                workInProgress2.tag = FunctionComponent;
                                {
                                    if (workInProgress2.mode & StrictLegacyMode) {
                                        setIsStrictModeForDevtools(true);
                                        try {
                                            value = renderWithHooks(null, workInProgress2, Component, props, context, renderLanes2);
                                            hasId = checkDidRenderIdHook();
                                        } finally {
                                            setIsStrictModeForDevtools(false);
                                        }
                                    }
                                }
                                if (getIsHydrating() && hasId) {
                                    pushMaterializedTreeId(workInProgress2);
                                }
                                reconcileChildren(null, workInProgress2, value, renderLanes2);
                                {
                                    validateFunctionComponentInDev(workInProgress2, Component);
                                }
                                return workInProgress2.child;
                            }
                        }
                        function validateFunctionComponentInDev(workInProgress2, Component) {
                            {
                                if (Component) {
                                    if (Component.childContextTypes) {
                                        error("%s(...): childContextTypes cannot be defined on a function component.", Component.displayName || Component.name || "Component");
                                    }
                                }
                                if (workInProgress2.ref !== null) {
                                    var info = "";
                                    var ownerName = getCurrentFiberOwnerNameInDevOrNull();
                                    if (ownerName) {
                                        info += "\n\nCheck the render method of `" + ownerName + "`.";
                                    }
                                    var warningKey = ownerName || "";
                                    var debugSource = workInProgress2._debugSource;
                                    if (debugSource) {
                                        warningKey = debugSource.fileName + ":" + debugSource.lineNumber;
                                    }
                                    if (!didWarnAboutFunctionRefs[warningKey]) {
                                        didWarnAboutFunctionRefs[warningKey] = true;
                                        error("Function components cannot be given refs. Attempts to access this ref will fail. Did you mean to use React.forwardRef()?%s", info);
                                    }
                                }
                                if (typeof Component.getDerivedStateFromProps === "function") {
                                    var _componentName3 = getComponentNameFromType(Component) || "Unknown";
                                    if (!didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3]) {
                                        error("%s: Function components do not support getDerivedStateFromProps.", _componentName3);
                                        didWarnAboutGetDerivedStateOnFunctionComponent[_componentName3] = true;
                                    }
                                }
                                if (typeof Component.contextType === "object" && Component.contextType !== null) {
                                    var _componentName4 = getComponentNameFromType(Component) || "Unknown";
                                    if (!didWarnAboutContextTypeOnFunctionComponent[_componentName4]) {
                                        error("%s: Function components do not support contextType.", _componentName4);
                                        didWarnAboutContextTypeOnFunctionComponent[_componentName4] = true;
                                    }
                                }
                            }
                        }
                        var SUSPENDED_MARKER = {
                            dehydrated: null,
                            treeContext: null,
                            retryLane: NoLane
                        };
                        function mountSuspenseOffscreenState(renderLanes2) {
                            return {
                                baseLanes: renderLanes2,
                                cachePool: getSuspendedCache(),
                                transitions: null
                            };
                        }
                        function updateSuspenseOffscreenState(prevOffscreenState, renderLanes2) {
                            var cachePool = null;
                            return {
                                baseLanes: mergeLanes(prevOffscreenState.baseLanes, renderLanes2),
                                cachePool,
                                transitions: prevOffscreenState.transitions
                            };
                        }
                        function shouldRemainOnFallback(suspenseContext, current2, workInProgress2, renderLanes2) {
                            if (current2 !== null) {
                                var suspenseState = current2.memoizedState;
                                if (suspenseState === null) {
                                    return false;
                                }
                            }
                            return hasSuspenseContext(suspenseContext, ForceSuspenseFallback);
                        }
                        function getRemainingWorkInPrimaryTree(current2, renderLanes2) {
                            return removeLanes(current2.childLanes, renderLanes2);
                        }
                        function updateSuspenseComponent(current2, workInProgress2, renderLanes2) {
                            var nextProps = workInProgress2.pendingProps;
                            {
                                if (shouldSuspend(workInProgress2)) {
                                    workInProgress2.flags |= DidCapture;
                                }
                            }
                            var suspenseContext = suspenseStackCursor.current;
                            var showFallback = false;
                            var didSuspend = (workInProgress2.flags & DidCapture) !== NoFlags;
                            if (didSuspend || shouldRemainOnFallback(suspenseContext, current2)) {
                                showFallback = true;
                                workInProgress2.flags &= ~DidCapture;
                            } else {
                                if (current2 === null || current2.memoizedState !== null) {
                                    {
                                        suspenseContext = addSubtreeSuspenseContext(suspenseContext, InvisibleParentSuspenseContext);
                                    }
                                }
                            }
                            suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
                            pushSuspenseContext(workInProgress2, suspenseContext);
                            if (current2 === null) {
                                tryToClaimNextHydratableInstance(workInProgress2);
                                var suspenseState = workInProgress2.memoizedState;
                                if (suspenseState !== null) {
                                    var dehydrated = suspenseState.dehydrated;
                                    if (dehydrated !== null) {
                                        return mountDehydratedSuspenseComponent(workInProgress2, dehydrated);
                                    }
                                }
                                var nextPrimaryChildren = nextProps.children;
                                var nextFallbackChildren = nextProps.fallback;
                                if (showFallback) {
                                    var fallbackFragment = mountSuspenseFallbackChildren(workInProgress2, nextPrimaryChildren, nextFallbackChildren, renderLanes2);
                                    var primaryChildFragment = workInProgress2.child;
                                    primaryChildFragment.memoizedState = mountSuspenseOffscreenState(renderLanes2);
                                    workInProgress2.memoizedState = SUSPENDED_MARKER;
                                    return fallbackFragment;
                                } else {
                                    return mountSuspensePrimaryChildren(workInProgress2, nextPrimaryChildren);
                                }
                            } else {
                                var prevState = current2.memoizedState;
                                if (prevState !== null) {
                                    var _dehydrated = prevState.dehydrated;
                                    if (_dehydrated !== null) {
                                        return updateDehydratedSuspenseComponent(current2, workInProgress2, didSuspend, nextProps, _dehydrated, prevState, renderLanes2);
                                    }
                                }
                                if (showFallback) {
                                    var _nextFallbackChildren = nextProps.fallback;
                                    var _nextPrimaryChildren = nextProps.children;
                                    var fallbackChildFragment = updateSuspenseFallbackChildren(current2, workInProgress2, _nextPrimaryChildren, _nextFallbackChildren, renderLanes2);
                                    var _primaryChildFragment2 = workInProgress2.child;
                                    var prevOffscreenState = current2.child.memoizedState;
                                    _primaryChildFragment2.memoizedState = prevOffscreenState === null ? mountSuspenseOffscreenState(renderLanes2) : updateSuspenseOffscreenState(prevOffscreenState, renderLanes2);
                                    _primaryChildFragment2.childLanes = getRemainingWorkInPrimaryTree(current2, renderLanes2);
                                    workInProgress2.memoizedState = SUSPENDED_MARKER;
                                    return fallbackChildFragment;
                                } else {
                                    var _nextPrimaryChildren2 = nextProps.children;
                                    var _primaryChildFragment3 = updateSuspensePrimaryChildren(current2, workInProgress2, _nextPrimaryChildren2, renderLanes2);
                                    workInProgress2.memoizedState = null;
                                    return _primaryChildFragment3;
                                }
                            }
                        }
                        function mountSuspensePrimaryChildren(workInProgress2, primaryChildren, renderLanes2) {
                            var mode = workInProgress2.mode;
                            var primaryChildProps = {
                                mode: "visible",
                                children: primaryChildren
                            };
                            var primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, mode);
                            primaryChildFragment.return = workInProgress2;
                            workInProgress2.child = primaryChildFragment;
                            return primaryChildFragment;
                        }
                        function mountSuspenseFallbackChildren(workInProgress2, primaryChildren, fallbackChildren, renderLanes2) {
                            var mode = workInProgress2.mode;
                            var progressedPrimaryFragment = workInProgress2.child;
                            var primaryChildProps = {
                                mode: "hidden",
                                children: primaryChildren
                            };
                            var primaryChildFragment;
                            var fallbackChildFragment;
                            if ((mode & ConcurrentMode) === NoMode && progressedPrimaryFragment !== null) {
                                primaryChildFragment = progressedPrimaryFragment;
                                primaryChildFragment.childLanes = NoLanes;
                                primaryChildFragment.pendingProps = primaryChildProps;
                                if (workInProgress2.mode & ProfileMode) {
                                    primaryChildFragment.actualDuration = 0;
                                    primaryChildFragment.actualStartTime = -1;
                                    primaryChildFragment.selfBaseDuration = 0;
                                    primaryChildFragment.treeBaseDuration = 0;
                                }
                                fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes2, null);
                            } else {
                                primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, mode);
                                fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes2, null);
                            }
                            primaryChildFragment.return = workInProgress2;
                            fallbackChildFragment.return = workInProgress2;
                            primaryChildFragment.sibling = fallbackChildFragment;
                            workInProgress2.child = primaryChildFragment;
                            return fallbackChildFragment;
                        }
                        function mountWorkInProgressOffscreenFiber(offscreenProps, mode, renderLanes2) {
                            return createFiberFromOffscreen(offscreenProps, mode, NoLanes, null);
                        }
                        function updateWorkInProgressOffscreenFiber(current2, offscreenProps) {
                            return createWorkInProgress(current2, offscreenProps);
                        }
                        function updateSuspensePrimaryChildren(current2, workInProgress2, primaryChildren, renderLanes2) {
                            var currentPrimaryChildFragment = current2.child;
                            var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;
                            var primaryChildFragment = updateWorkInProgressOffscreenFiber(currentPrimaryChildFragment, {
                                mode: "visible",
                                children: primaryChildren
                            });
                            if ((workInProgress2.mode & ConcurrentMode) === NoMode) {
                                primaryChildFragment.lanes = renderLanes2;
                            }
                            primaryChildFragment.return = workInProgress2;
                            primaryChildFragment.sibling = null;
                            if (currentFallbackChildFragment !== null) {
                                var deletions = workInProgress2.deletions;
                                if (deletions === null) {
                                    workInProgress2.deletions = [currentFallbackChildFragment];
                                    workInProgress2.flags |= ChildDeletion;
                                } else {
                                    deletions.push(currentFallbackChildFragment);
                                }
                            }
                            workInProgress2.child = primaryChildFragment;
                            return primaryChildFragment;
                        }
                        function updateSuspenseFallbackChildren(current2, workInProgress2, primaryChildren, fallbackChildren, renderLanes2) {
                            var mode = workInProgress2.mode;
                            var currentPrimaryChildFragment = current2.child;
                            var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;
                            var primaryChildProps = {
                                mode: "hidden",
                                children: primaryChildren
                            };
                            var primaryChildFragment;
                            if (
                                // In legacy mode, we commit the primary tree as if it successfully
                                // completed, even though it's in an inconsistent state.
                                (mode & ConcurrentMode) === NoMode && // Make sure we're on the second pass, i.e. the primary child fragment was
                                // already cloned. In legacy mode, the only case where this isn't true is
                                // when DevTools forces us to display a fallback; we skip the first render
                                // pass entirely and go straight to rendering the fallback. (In Concurrent
                                // Mode, SuspenseList can also trigger this scenario, but this is a legacy-
                                // only codepath.)
                                workInProgress2.child !== currentPrimaryChildFragment
                            ) {
                                var progressedPrimaryFragment = workInProgress2.child;
                                primaryChildFragment = progressedPrimaryFragment;
                                primaryChildFragment.childLanes = NoLanes;
                                primaryChildFragment.pendingProps = primaryChildProps;
                                if (workInProgress2.mode & ProfileMode) {
                                    primaryChildFragment.actualDuration = 0;
                                    primaryChildFragment.actualStartTime = -1;
                                    primaryChildFragment.selfBaseDuration = currentPrimaryChildFragment.selfBaseDuration;
                                    primaryChildFragment.treeBaseDuration = currentPrimaryChildFragment.treeBaseDuration;
                                }
                                workInProgress2.deletions = null;
                            } else {
                                primaryChildFragment = updateWorkInProgressOffscreenFiber(currentPrimaryChildFragment, primaryChildProps);
                                primaryChildFragment.subtreeFlags = currentPrimaryChildFragment.subtreeFlags & StaticMask;
                            }
                            var fallbackChildFragment;
                            if (currentFallbackChildFragment !== null) {
                                fallbackChildFragment = createWorkInProgress(currentFallbackChildFragment, fallbackChildren);
                            } else {
                                fallbackChildFragment = createFiberFromFragment(fallbackChildren, mode, renderLanes2, null);
                                fallbackChildFragment.flags |= Placement;
                            }
                            fallbackChildFragment.return = workInProgress2;
                            primaryChildFragment.return = workInProgress2;
                            primaryChildFragment.sibling = fallbackChildFragment;
                            workInProgress2.child = primaryChildFragment;
                            return fallbackChildFragment;
                        }
                        function retrySuspenseComponentWithoutHydrating(current2, workInProgress2, renderLanes2, recoverableError) {
                            if (recoverableError !== null) {
                                queueHydrationError(recoverableError);
                            }
                            reconcileChildFibers(workInProgress2, current2.child, null, renderLanes2);
                            var nextProps = workInProgress2.pendingProps;
                            var primaryChildren = nextProps.children;
                            var primaryChildFragment = mountSuspensePrimaryChildren(workInProgress2, primaryChildren);
                            primaryChildFragment.flags |= Placement;
                            workInProgress2.memoizedState = null;
                            return primaryChildFragment;
                        }
                        function mountSuspenseFallbackAfterRetryWithoutHydrating(current2, workInProgress2, primaryChildren, fallbackChildren, renderLanes2) {
                            var fiberMode = workInProgress2.mode;
                            var primaryChildProps = {
                                mode: "visible",
                                children: primaryChildren
                            };
                            var primaryChildFragment = mountWorkInProgressOffscreenFiber(primaryChildProps, fiberMode);
                            var fallbackChildFragment = createFiberFromFragment(fallbackChildren, fiberMode, renderLanes2, null);
                            fallbackChildFragment.flags |= Placement;
                            primaryChildFragment.return = workInProgress2;
                            fallbackChildFragment.return = workInProgress2;
                            primaryChildFragment.sibling = fallbackChildFragment;
                            workInProgress2.child = primaryChildFragment;
                            if ((workInProgress2.mode & ConcurrentMode) !== NoMode) {
                                reconcileChildFibers(workInProgress2, current2.child, null, renderLanes2);
                            }
                            return fallbackChildFragment;
                        }
                        function mountDehydratedSuspenseComponent(workInProgress2, suspenseInstance, renderLanes2) {
                            if ((workInProgress2.mode & ConcurrentMode) === NoMode) {
                                {
                                    error("Cannot hydrate Suspense in legacy mode. Switch from ReactDOM.hydrate(element, container) to ReactDOMClient.hydrateRoot(container, <App />).render(element) or remove the Suspense components from the server rendered components.");
                                }
                                workInProgress2.lanes = laneToLanes(SyncLane);
                            } else if (isSuspenseInstanceFallback(suspenseInstance)) {
                                workInProgress2.lanes = laneToLanes(DefaultHydrationLane);
                            } else {
                                workInProgress2.lanes = laneToLanes(OffscreenLane);
                            }
                            return null;
                        }
                        function updateDehydratedSuspenseComponent(current2, workInProgress2, didSuspend, nextProps, suspenseInstance, suspenseState, renderLanes2) {
                            if (!didSuspend) {
                                warnIfHydrating();
                                if ((workInProgress2.mode & ConcurrentMode) === NoMode) {
                                    return retrySuspenseComponentWithoutHydrating(
                                        current2,
                                        workInProgress2,
                                        renderLanes2,
                                        // TODO: When we delete legacy mode, we should make this error argument
                                        // required — every concurrent mode path that causes hydration to
                                        // de-opt to client rendering should have an error message.
                                        null
                                    );
                                }
                                if (isSuspenseInstanceFallback(suspenseInstance)) {
                                    var digest, message, stack;
                                    {
                                        var _getSuspenseInstanceF = getSuspenseInstanceFallbackErrorDetails(suspenseInstance);
                                        digest = _getSuspenseInstanceF.digest;
                                        message = _getSuspenseInstanceF.message;
                                        stack = _getSuspenseInstanceF.stack;
                                    }
                                    var error2;
                                    if (message) {
                                        error2 = new Error(message);
                                    } else {
                                        error2 = new Error("The server could not finish this Suspense boundary, likely due to an error during server rendering. Switched to client rendering.");
                                    }
                                    var capturedValue = createCapturedValue(error2, digest, stack);
                                    return retrySuspenseComponentWithoutHydrating(current2, workInProgress2, renderLanes2, capturedValue);
                                }
                                var hasContextChanged2 = includesSomeLane(renderLanes2, current2.childLanes);
                                if (didReceiveUpdate || hasContextChanged2) {
                                    var root2 = getWorkInProgressRoot();
                                    if (root2 !== null) {
                                        var attemptHydrationAtLane = getBumpedLaneForHydration(root2, renderLanes2);
                                        if (attemptHydrationAtLane !== NoLane && attemptHydrationAtLane !== suspenseState.retryLane) {
                                            suspenseState.retryLane = attemptHydrationAtLane;
                                            var eventTime = NoTimestamp;
                                            enqueueConcurrentRenderForLane(current2, attemptHydrationAtLane);
                                            scheduleUpdateOnFiber(root2, current2, attemptHydrationAtLane, eventTime);
                                        }
                                    }
                                    renderDidSuspendDelayIfPossible();
                                    var _capturedValue = createCapturedValue(new Error("This Suspense boundary received an update before it finished hydrating. This caused the boundary to switch to client rendering. The usual way to fix this is to wrap the original update in startTransition."));
                                    return retrySuspenseComponentWithoutHydrating(current2, workInProgress2, renderLanes2, _capturedValue);
                                } else if (isSuspenseInstancePending(suspenseInstance)) {
                                    workInProgress2.flags |= DidCapture;
                                    workInProgress2.child = current2.child;
                                    var retry = retryDehydratedSuspenseBoundary.bind(null, current2);
                                    registerSuspenseInstanceRetry(suspenseInstance, retry);
                                    return null;
                                } else {
                                    reenterHydrationStateFromDehydratedSuspenseInstance(workInProgress2, suspenseInstance, suspenseState.treeContext);
                                    var primaryChildren = nextProps.children;
                                    var primaryChildFragment = mountSuspensePrimaryChildren(workInProgress2, primaryChildren);
                                    primaryChildFragment.flags |= Hydrating;
                                    return primaryChildFragment;
                                }
                            } else {
                                if (workInProgress2.flags & ForceClientRender) {
                                    workInProgress2.flags &= ~ForceClientRender;
                                    var _capturedValue2 = createCapturedValue(new Error("There was an error while hydrating this Suspense boundary. Switched to client rendering."));
                                    return retrySuspenseComponentWithoutHydrating(current2, workInProgress2, renderLanes2, _capturedValue2);
                                } else if (workInProgress2.memoizedState !== null) {
                                    workInProgress2.child = current2.child;
                                    workInProgress2.flags |= DidCapture;
                                    return null;
                                } else {
                                    var nextPrimaryChildren = nextProps.children;
                                    var nextFallbackChildren = nextProps.fallback;
                                    var fallbackChildFragment = mountSuspenseFallbackAfterRetryWithoutHydrating(current2, workInProgress2, nextPrimaryChildren, nextFallbackChildren, renderLanes2);
                                    var _primaryChildFragment4 = workInProgress2.child;
                                    _primaryChildFragment4.memoizedState = mountSuspenseOffscreenState(renderLanes2);
                                    workInProgress2.memoizedState = SUSPENDED_MARKER;
                                    return fallbackChildFragment;
                                }
                            }
                        }
                        function scheduleSuspenseWorkOnFiber(fiber, renderLanes2, propagationRoot) {
                            fiber.lanes = mergeLanes(fiber.lanes, renderLanes2);
                            var alternate = fiber.alternate;
                            if (alternate !== null) {
                                alternate.lanes = mergeLanes(alternate.lanes, renderLanes2);
                            }
                            scheduleContextWorkOnParentPath(fiber.return, renderLanes2, propagationRoot);
                        }
                        function propagateSuspenseContextChange(workInProgress2, firstChild, renderLanes2) {
                            var node = firstChild;
                            while (node !== null) {
                                if (node.tag === SuspenseComponent) {
                                    var state = node.memoizedState;
                                    if (state !== null) {
                                        scheduleSuspenseWorkOnFiber(node, renderLanes2, workInProgress2);
                                    }
                                } else if (node.tag === SuspenseListComponent) {
                                    scheduleSuspenseWorkOnFiber(node, renderLanes2, workInProgress2);
                                } else if (node.child !== null) {
                                    node.child.return = node;
                                    node = node.child;
                                    continue;
                                }
                                if (node === workInProgress2) {
                                    return;
                                }
                                while (node.sibling === null) {
                                    if (node.return === null || node.return === workInProgress2) {
                                        return;
                                    }
                                    node = node.return;
                                }
                                node.sibling.return = node.return;
                                node = node.sibling;
                            }
                        }
                        function findLastContentRow(firstChild) {
                            var row = firstChild;
                            var lastContentRow = null;
                            while (row !== null) {
                                var currentRow = row.alternate;
                                if (currentRow !== null && findFirstSuspended(currentRow) === null) {
                                    lastContentRow = row;
                                }
                                row = row.sibling;
                            }
                            return lastContentRow;
                        }
                        function validateRevealOrder(revealOrder) {
                            {
                                if (revealOrder !== void 0 && revealOrder !== "forwards" && revealOrder !== "backwards" && revealOrder !== "together" && !didWarnAboutRevealOrder[revealOrder]) {
                                    didWarnAboutRevealOrder[revealOrder] = true;
                                    if (typeof revealOrder === "string") {
                                        switch (revealOrder.toLowerCase()) {
                                            case "together":
                                            case "forwards":
                                            case "backwards": {
                                                error('"%s" is not a valid value for revealOrder on <SuspenseList />. Use lowercase "%s" instead.', revealOrder, revealOrder.toLowerCase());
                                                break;
                                            }
                                            case "forward":
                                            case "backward": {
                                                error('"%s" is not a valid value for revealOrder on <SuspenseList />. React uses the -s suffix in the spelling. Use "%ss" instead.', revealOrder, revealOrder.toLowerCase());
                                                break;
                                            }
                                            default:
                                                error('"%s" is not a supported revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', revealOrder);
                                                break;
                                        }
                                    } else {
                                        error('%s is not a supported value for revealOrder on <SuspenseList />. Did you mean "together", "forwards" or "backwards"?', revealOrder);
                                    }
                                }
                            }
                        }
                        function validateTailOptions(tailMode, revealOrder) {
                            {
                                if (tailMode !== void 0 && !didWarnAboutTailOptions[tailMode]) {
                                    if (tailMode !== "collapsed" && tailMode !== "hidden") {
                                        didWarnAboutTailOptions[tailMode] = true;
                                        error('"%s" is not a supported value for tail on <SuspenseList />. Did you mean "collapsed" or "hidden"?', tailMode);
                                    } else if (revealOrder !== "forwards" && revealOrder !== "backwards") {
                                        didWarnAboutTailOptions[tailMode] = true;
                                        error('<SuspenseList tail="%s" /> is only valid if revealOrder is "forwards" or "backwards". Did you mean to specify revealOrder="forwards"?', tailMode);
                                    }
                                }
                            }
                        }
                        function validateSuspenseListNestedChild(childSlot, index2) {
                            {
                                var isAnArray = isArray(childSlot);
                                var isIterable = !isAnArray && typeof getIteratorFn(childSlot) === "function";
                                if (isAnArray || isIterable) {
                                    var type = isAnArray ? "array" : "iterable";
                                    error("A nested %s was passed to row #%s in <SuspenseList />. Wrap it in an additional SuspenseList to configure its revealOrder: <SuspenseList revealOrder=...> ... <SuspenseList revealOrder=...>{%s}</SuspenseList> ... </SuspenseList>", type, index2, type);
                                    return false;
                                }
                            }
                            return true;
                        }
                        function validateSuspenseListChildren(children, revealOrder) {
                            {
                                if ((revealOrder === "forwards" || revealOrder === "backwards") && children !== void 0 && children !== null && children !== false) {
                                    if (isArray(children)) {
                                        for (var i = 0; i < children.length; i++) {
                                            if (!validateSuspenseListNestedChild(children[i], i)) {
                                                return;
                                            }
                                        }
                                    } else {
                                        var iteratorFn = getIteratorFn(children);
                                        if (typeof iteratorFn === "function") {
                                            var childrenIterator = iteratorFn.call(children);
                                            if (childrenIterator) {
                                                var step = childrenIterator.next();
                                                var _i = 0;
                                                for (; !step.done; step = childrenIterator.next()) {
                                                    if (!validateSuspenseListNestedChild(step.value, _i)) {
                                                        return;
                                                    }
                                                    _i++;
                                                }
                                            }
                                        } else {
                                            error('A single row was passed to a <SuspenseList revealOrder="%s" />. This is not useful since it needs multiple rows. Did you mean to pass multiple children or an array?', revealOrder);
                                        }
                                    }
                                }
                            }
                        }
                        function initSuspenseListRenderState(workInProgress2, isBackwards, tail, lastContentRow, tailMode) {
                            var renderState = workInProgress2.memoizedState;
                            if (renderState === null) {
                                workInProgress2.memoizedState = {
                                    isBackwards,
                                    rendering: null,
                                    renderingStartTime: 0,
                                    last: lastContentRow,
                                    tail,
                                    tailMode
                                };
                            } else {
                                renderState.isBackwards = isBackwards;
                                renderState.rendering = null;
                                renderState.renderingStartTime = 0;
                                renderState.last = lastContentRow;
                                renderState.tail = tail;
                                renderState.tailMode = tailMode;
                            }
                        }
                        function updateSuspenseListComponent(current2, workInProgress2, renderLanes2) {
                            var nextProps = workInProgress2.pendingProps;
                            var revealOrder = nextProps.revealOrder;
                            var tailMode = nextProps.tail;
                            var newChildren = nextProps.children;
                            validateRevealOrder(revealOrder);
                            validateTailOptions(tailMode, revealOrder);
                            validateSuspenseListChildren(newChildren, revealOrder);
                            reconcileChildren(current2, workInProgress2, newChildren, renderLanes2);
                            var suspenseContext = suspenseStackCursor.current;
                            var shouldForceFallback = hasSuspenseContext(suspenseContext, ForceSuspenseFallback);
                            if (shouldForceFallback) {
                                suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
                                workInProgress2.flags |= DidCapture;
                            } else {
                                var didSuspendBefore = current2 !== null && (current2.flags & DidCapture) !== NoFlags;
                                if (didSuspendBefore) {
                                    propagateSuspenseContextChange(workInProgress2, workInProgress2.child, renderLanes2);
                                }
                                suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
                            }
                            pushSuspenseContext(workInProgress2, suspenseContext);
                            if ((workInProgress2.mode & ConcurrentMode) === NoMode) {
                                workInProgress2.memoizedState = null;
                            } else {
                                switch (revealOrder) {
                                    case "forwards": {
                                        var lastContentRow = findLastContentRow(workInProgress2.child);
                                        var tail;
                                        if (lastContentRow === null) {
                                            tail = workInProgress2.child;
                                            workInProgress2.child = null;
                                        } else {
                                            tail = lastContentRow.sibling;
                                            lastContentRow.sibling = null;
                                        }
                                        initSuspenseListRenderState(
                                            workInProgress2,
                                            false,
                                            // isBackwards
                                            tail,
                                            lastContentRow,
                                            tailMode
                                        );
                                        break;
                                    }
                                    case "backwards": {
                                        var _tail = null;
                                        var row = workInProgress2.child;
                                        workInProgress2.child = null;
                                        while (row !== null) {
                                            var currentRow = row.alternate;
                                            if (currentRow !== null && findFirstSuspended(currentRow) === null) {
                                                workInProgress2.child = row;
                                                break;
                                            }
                                            var nextRow = row.sibling;
                                            row.sibling = _tail;
                                            _tail = row;
                                            row = nextRow;
                                        }
                                        initSuspenseListRenderState(
                                            workInProgress2,
                                            true,
                                            // isBackwards
                                            _tail,
                                            null,
                                            // last
                                            tailMode
                                        );
                                        break;
                                    }
                                    case "together": {
                                        initSuspenseListRenderState(
                                            workInProgress2,
                                            false,
                                            // isBackwards
                                            null,
                                            // tail
                                            null,
                                            // last
                                            void 0
                                        );
                                        break;
                                    }
                                    default: {
                                        workInProgress2.memoizedState = null;
                                    }
                                }
                            }
                            return workInProgress2.child;
                        }
                        function updatePortalComponent(current2, workInProgress2, renderLanes2) {
                            pushHostContainer(workInProgress2, workInProgress2.stateNode.containerInfo);
                            var nextChildren = workInProgress2.pendingProps;
                            if (current2 === null) {
                                workInProgress2.child = reconcileChildFibers(workInProgress2, null, nextChildren, renderLanes2);
                            } else {
                                reconcileChildren(current2, workInProgress2, nextChildren, renderLanes2);
                            }
                            return workInProgress2.child;
                        }
                        var hasWarnedAboutUsingNoValuePropOnContextProvider = false;
                        function updateContextProvider(current2, workInProgress2, renderLanes2) {
                            var providerType = workInProgress2.type;
                            var context = providerType._context;
                            var newProps = workInProgress2.pendingProps;
                            var oldProps = workInProgress2.memoizedProps;
                            var newValue = newProps.value;
                            {
                                if (!("value" in newProps)) {
                                    if (!hasWarnedAboutUsingNoValuePropOnContextProvider) {
                                        hasWarnedAboutUsingNoValuePropOnContextProvider = true;
                                        error("The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?");
                                    }
                                }
                                var providerPropTypes = workInProgress2.type.propTypes;
                                if (providerPropTypes) {
                                    checkPropTypes(providerPropTypes, newProps, "prop", "Context.Provider");
                                }
                            }
                            pushProvider(workInProgress2, context, newValue);
                            {
                                if (oldProps !== null) {
                                    var oldValue = oldProps.value;
                                    if (objectIs(oldValue, newValue)) {
                                        if (oldProps.children === newProps.children && !hasContextChanged()) {
                                            return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
                                        }
                                    } else {
                                        propagateContextChange(workInProgress2, context, renderLanes2);
                                    }
                                }
                            }
                            var newChildren = newProps.children;
                            reconcileChildren(current2, workInProgress2, newChildren, renderLanes2);
                            return workInProgress2.child;
                        }
                        var hasWarnedAboutUsingContextAsConsumer = false;
                        function updateContextConsumer(current2, workInProgress2, renderLanes2) {
                            var context = workInProgress2.type;
                            {
                                if (context._context === void 0) {
                                    if (context !== context.Consumer) {
                                        if (!hasWarnedAboutUsingContextAsConsumer) {
                                            hasWarnedAboutUsingContextAsConsumer = true;
                                            error("Rendering <Context> directly is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?");
                                        }
                                    }
                                } else {
                                    context = context._context;
                                }
                            }
                            var newProps = workInProgress2.pendingProps;
                            var render2 = newProps.children;
                            {
                                if (typeof render2 !== "function") {
                                    error("A context consumer was rendered with multiple children, or a child that isn't a function. A context consumer expects a single child that is a function. If you did pass a function, make sure there is no trailing or leading whitespace around it.");
                                }
                            }
                            prepareToReadContext(workInProgress2, renderLanes2);
                            var newValue = readContext(context);
                            {
                                markComponentRenderStarted(workInProgress2);
                            }
                            var newChildren;
                            {
                                ReactCurrentOwner$1.current = workInProgress2;
                                setIsRendering(true);
                                newChildren = render2(newValue);
                                setIsRendering(false);
                            }
                            {
                                markComponentRenderStopped();
                            }
                            workInProgress2.flags |= PerformedWork;
                            reconcileChildren(current2, workInProgress2, newChildren, renderLanes2);
                            return workInProgress2.child;
                        }
                        function markWorkInProgressReceivedUpdate() {
                            didReceiveUpdate = true;
                        }
                        function resetSuspendedCurrentOnMountInLegacyMode(current2, workInProgress2) {
                            if ((workInProgress2.mode & ConcurrentMode) === NoMode) {
                                if (current2 !== null) {
                                    current2.alternate = null;
                                    workInProgress2.alternate = null;
                                    workInProgress2.flags |= Placement;
                                }
                            }
                        }
                        function bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2) {
                            if (current2 !== null) {
                                workInProgress2.dependencies = current2.dependencies;
                            }
                            {
                                stopProfilerTimerIfRunning();
                            }
                            markSkippedUpdateLanes(workInProgress2.lanes);
                            if (!includesSomeLane(renderLanes2, workInProgress2.childLanes)) {
                                {
                                    return null;
                                }
                            }
                            cloneChildFibers(current2, workInProgress2);
                            return workInProgress2.child;
                        }
                        function remountFiber(current2, oldWorkInProgress, newWorkInProgress) {
                            {
                                var returnFiber = oldWorkInProgress.return;
                                if (returnFiber === null) {
                                    throw new Error("Cannot swap the root fiber.");
                                }
                                current2.alternate = null;
                                oldWorkInProgress.alternate = null;
                                newWorkInProgress.index = oldWorkInProgress.index;
                                newWorkInProgress.sibling = oldWorkInProgress.sibling;
                                newWorkInProgress.return = oldWorkInProgress.return;
                                newWorkInProgress.ref = oldWorkInProgress.ref;
                                if (oldWorkInProgress === returnFiber.child) {
                                    returnFiber.child = newWorkInProgress;
                                } else {
                                    var prevSibling = returnFiber.child;
                                    if (prevSibling === null) {
                                        throw new Error("Expected parent to have a child.");
                                    }
                                    while (prevSibling.sibling !== oldWorkInProgress) {
                                        prevSibling = prevSibling.sibling;
                                        if (prevSibling === null) {
                                            throw new Error("Expected to find the previous sibling.");
                                        }
                                    }
                                    prevSibling.sibling = newWorkInProgress;
                                }
                                var deletions = returnFiber.deletions;
                                if (deletions === null) {
                                    returnFiber.deletions = [current2];
                                    returnFiber.flags |= ChildDeletion;
                                } else {
                                    deletions.push(current2);
                                }
                                newWorkInProgress.flags |= Placement;
                                return newWorkInProgress;
                            }
                        }
                        function checkScheduledUpdateOrContext(current2, renderLanes2) {
                            var updateLanes = current2.lanes;
                            if (includesSomeLane(updateLanes, renderLanes2)) {
                                return true;
                            }
                            return false;
                        }
                        function attemptEarlyBailoutIfNoScheduledUpdate(current2, workInProgress2, renderLanes2) {
                            switch (workInProgress2.tag) {
                                case HostRoot:
                                    pushHostRootContext(workInProgress2);
                                    var root2 = workInProgress2.stateNode;
                                    resetHydrationState();
                                    break;
                                case HostComponent:
                                    pushHostContext(workInProgress2);
                                    break;
                                case ClassComponent: {
                                    var Component = workInProgress2.type;
                                    if (isContextProvider(Component)) {
                                        pushContextProvider(workInProgress2);
                                    }
                                    break;
                                }
                                case HostPortal:
                                    pushHostContainer(workInProgress2, workInProgress2.stateNode.containerInfo);
                                    break;
                                case ContextProvider: {
                                    var newValue = workInProgress2.memoizedProps.value;
                                    var context = workInProgress2.type._context;
                                    pushProvider(workInProgress2, context, newValue);
                                    break;
                                }
                                case Profiler:
                                {
                                    var hasChildWork = includesSomeLane(renderLanes2, workInProgress2.childLanes);
                                    if (hasChildWork) {
                                        workInProgress2.flags |= Update;
                                    }
                                    {
                                        var stateNode = workInProgress2.stateNode;
                                        stateNode.effectDuration = 0;
                                        stateNode.passiveEffectDuration = 0;
                                    }
                                }
                                    break;
                                case SuspenseComponent: {
                                    var state = workInProgress2.memoizedState;
                                    if (state !== null) {
                                        if (state.dehydrated !== null) {
                                            pushSuspenseContext(workInProgress2, setDefaultShallowSuspenseContext(suspenseStackCursor.current));
                                            workInProgress2.flags |= DidCapture;
                                            return null;
                                        }
                                        var primaryChildFragment = workInProgress2.child;
                                        var primaryChildLanes = primaryChildFragment.childLanes;
                                        if (includesSomeLane(renderLanes2, primaryChildLanes)) {
                                            return updateSuspenseComponent(current2, workInProgress2, renderLanes2);
                                        } else {
                                            pushSuspenseContext(workInProgress2, setDefaultShallowSuspenseContext(suspenseStackCursor.current));
                                            var child = bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
                                            if (child !== null) {
                                                return child.sibling;
                                            } else {
                                                return null;
                                            }
                                        }
                                    } else {
                                        pushSuspenseContext(workInProgress2, setDefaultShallowSuspenseContext(suspenseStackCursor.current));
                                    }
                                    break;
                                }
                                case SuspenseListComponent: {
                                    var didSuspendBefore = (current2.flags & DidCapture) !== NoFlags;
                                    var _hasChildWork = includesSomeLane(renderLanes2, workInProgress2.childLanes);
                                    if (didSuspendBefore) {
                                        if (_hasChildWork) {
                                            return updateSuspenseListComponent(current2, workInProgress2, renderLanes2);
                                        }
                                        workInProgress2.flags |= DidCapture;
                                    }
                                    var renderState = workInProgress2.memoizedState;
                                    if (renderState !== null) {
                                        renderState.rendering = null;
                                        renderState.tail = null;
                                        renderState.lastEffect = null;
                                    }
                                    pushSuspenseContext(workInProgress2, suspenseStackCursor.current);
                                    if (_hasChildWork) {
                                        break;
                                    } else {
                                        return null;
                                    }
                                }
                                case OffscreenComponent:
                                case LegacyHiddenComponent: {
                                    workInProgress2.lanes = NoLanes;
                                    return updateOffscreenComponent(current2, workInProgress2, renderLanes2);
                                }
                            }
                            return bailoutOnAlreadyFinishedWork(current2, workInProgress2, renderLanes2);
                        }
                        function beginWork(current2, workInProgress2, renderLanes2) {
                            {
                                if (workInProgress2._debugNeedsRemount && current2 !== null) {
                                    return remountFiber(current2, workInProgress2, createFiberFromTypeAndProps(workInProgress2.type, workInProgress2.key, workInProgress2.pendingProps, workInProgress2._debugOwner || null, workInProgress2.mode, workInProgress2.lanes));
                                }
                            }
                            if (current2 !== null) {
                                var oldProps = current2.memoizedProps;
                                var newProps = workInProgress2.pendingProps;
                                if (oldProps !== newProps || hasContextChanged() || // Force a re-render if the implementation changed due to hot reload:
                                    workInProgress2.type !== current2.type) {
                                    didReceiveUpdate = true;
                                } else {
                                    var hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(current2, renderLanes2);
                                    if (!hasScheduledUpdateOrContext && // If this is the second pass of an error or suspense boundary, there
                                        // may not be work scheduled on `current`, so we check for this flag.
                                        (workInProgress2.flags & DidCapture) === NoFlags) {
                                        didReceiveUpdate = false;
                                        return attemptEarlyBailoutIfNoScheduledUpdate(current2, workInProgress2, renderLanes2);
                                    }
                                    if ((current2.flags & ForceUpdateForLegacySuspense) !== NoFlags) {
                                        didReceiveUpdate = true;
                                    } else {
                                        didReceiveUpdate = false;
                                    }
                                }
                            } else {
                                didReceiveUpdate = false;
                                if (getIsHydrating() && isForkedChild(workInProgress2)) {
                                    var slotIndex = workInProgress2.index;
                                    var numberOfForks = getForksAtLevel();
                                    pushTreeId(workInProgress2, numberOfForks, slotIndex);
                                }
                            }
                            workInProgress2.lanes = NoLanes;
                            switch (workInProgress2.tag) {
                                case IndeterminateComponent: {
                                    return mountIndeterminateComponent(current2, workInProgress2, workInProgress2.type, renderLanes2);
                                }
                                case LazyComponent: {
                                    var elementType = workInProgress2.elementType;
                                    return mountLazyComponent(current2, workInProgress2, elementType, renderLanes2);
                                }
                                case FunctionComponent: {
                                    var Component = workInProgress2.type;
                                    var unresolvedProps = workInProgress2.pendingProps;
                                    var resolvedProps = workInProgress2.elementType === Component ? unresolvedProps : resolveDefaultProps(Component, unresolvedProps);
                                    return updateFunctionComponent(current2, workInProgress2, Component, resolvedProps, renderLanes2);
                                }
                                case ClassComponent: {
                                    var _Component = workInProgress2.type;
                                    var _unresolvedProps = workInProgress2.pendingProps;
                                    var _resolvedProps = workInProgress2.elementType === _Component ? _unresolvedProps : resolveDefaultProps(_Component, _unresolvedProps);
                                    return updateClassComponent(current2, workInProgress2, _Component, _resolvedProps, renderLanes2);
                                }
                                case HostRoot:
                                    return updateHostRoot(current2, workInProgress2, renderLanes2);
                                case HostComponent:
                                    return updateHostComponent(current2, workInProgress2, renderLanes2);
                                case HostText:
                                    return updateHostText(current2, workInProgress2);
                                case SuspenseComponent:
                                    return updateSuspenseComponent(current2, workInProgress2, renderLanes2);
                                case HostPortal:
                                    return updatePortalComponent(current2, workInProgress2, renderLanes2);
                                case ForwardRef: {
                                    var type = workInProgress2.type;
                                    var _unresolvedProps2 = workInProgress2.pendingProps;
                                    var _resolvedProps2 = workInProgress2.elementType === type ? _unresolvedProps2 : resolveDefaultProps(type, _unresolvedProps2);
                                    return updateForwardRef(current2, workInProgress2, type, _resolvedProps2, renderLanes2);
                                }
                                case Fragment:
                                    return updateFragment(current2, workInProgress2, renderLanes2);
                                case Mode:
                                    return updateMode(current2, workInProgress2, renderLanes2);
                                case Profiler:
                                    return updateProfiler(current2, workInProgress2, renderLanes2);
                                case ContextProvider:
                                    return updateContextProvider(current2, workInProgress2, renderLanes2);
                                case ContextConsumer:
                                    return updateContextConsumer(current2, workInProgress2, renderLanes2);
                                case MemoComponent: {
                                    var _type2 = workInProgress2.type;
                                    var _unresolvedProps3 = workInProgress2.pendingProps;
                                    var _resolvedProps3 = resolveDefaultProps(_type2, _unresolvedProps3);
                                    {
                                        if (workInProgress2.type !== workInProgress2.elementType) {
                                            var outerPropTypes = _type2.propTypes;
                                            if (outerPropTypes) {
                                                checkPropTypes(
                                                    outerPropTypes,
                                                    _resolvedProps3,
                                                    // Resolved for outer only
                                                    "prop",
                                                    getComponentNameFromType(_type2)
                                                );
                                            }
                                        }
                                    }
                                    _resolvedProps3 = resolveDefaultProps(_type2.type, _resolvedProps3);
                                    return updateMemoComponent(current2, workInProgress2, _type2, _resolvedProps3, renderLanes2);
                                }
                                case SimpleMemoComponent: {
                                    return updateSimpleMemoComponent(current2, workInProgress2, workInProgress2.type, workInProgress2.pendingProps, renderLanes2);
                                }
                                case IncompleteClassComponent: {
                                    var _Component2 = workInProgress2.type;
                                    var _unresolvedProps4 = workInProgress2.pendingProps;
                                    var _resolvedProps4 = workInProgress2.elementType === _Component2 ? _unresolvedProps4 : resolveDefaultProps(_Component2, _unresolvedProps4);
                                    return mountIncompleteClassComponent(current2, workInProgress2, _Component2, _resolvedProps4, renderLanes2);
                                }
                                case SuspenseListComponent: {
                                    return updateSuspenseListComponent(current2, workInProgress2, renderLanes2);
                                }
                                case ScopeComponent: {
                                    break;
                                }
                                case OffscreenComponent: {
                                    return updateOffscreenComponent(current2, workInProgress2, renderLanes2);
                                }
                            }
                            throw new Error("Unknown unit of work tag (" + workInProgress2.tag + "). This error is likely caused by a bug in React. Please file an issue.");
                        }
                        function markUpdate(workInProgress2) {
                            workInProgress2.flags |= Update;
                        }
                        function markRef$1(workInProgress2) {
                            workInProgress2.flags |= Ref;
                            {
                                workInProgress2.flags |= RefStatic;
                            }
                        }
                        var appendAllChildren;
                        var updateHostContainer;
                        var updateHostComponent$1;
                        var updateHostText$1;
                        {
                            appendAllChildren = function(parent, workInProgress2, needsVisibilityToggle, isHidden) {
                                var node = workInProgress2.child;
                                while (node !== null) {
                                    if (node.tag === HostComponent || node.tag === HostText) {
                                        appendInitialChild(parent, node.stateNode);
                                    } else if (node.tag === HostPortal)
                                        ;
                                    else if (node.child !== null) {
                                        node.child.return = node;
                                        node = node.child;
                                        continue;
                                    }
                                    if (node === workInProgress2) {
                                        return;
                                    }
                                    while (node.sibling === null) {
                                        if (node.return === null || node.return === workInProgress2) {
                                            return;
                                        }
                                        node = node.return;
                                    }
                                    node.sibling.return = node.return;
                                    node = node.sibling;
                                }
                            };
                            updateHostContainer = function(current2, workInProgress2) {
                            };
                            updateHostComponent$1 = function(current2, workInProgress2, type, newProps, rootContainerInstance) {
                                var oldProps = current2.memoizedProps;
                                if (oldProps === newProps) {
                                    return;
                                }
                                var instance2 = workInProgress2.stateNode;
                                var currentHostContext = getHostContext();
                                var updatePayload = prepareUpdate(instance2, type, oldProps, newProps, rootContainerInstance, currentHostContext);
                                workInProgress2.updateQueue = updatePayload;
                                if (updatePayload) {
                                    markUpdate(workInProgress2);
                                }
                            };
                            updateHostText$1 = function(current2, workInProgress2, oldText, newText) {
                                if (oldText !== newText) {
                                    markUpdate(workInProgress2);
                                }
                            };
                        }
                        function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
                            if (getIsHydrating()) {
                                return;
                            }
                            switch (renderState.tailMode) {
                                case "hidden": {
                                    var tailNode = renderState.tail;
                                    var lastTailNode = null;
                                    while (tailNode !== null) {
                                        if (tailNode.alternate !== null) {
                                            lastTailNode = tailNode;
                                        }
                                        tailNode = tailNode.sibling;
                                    }
                                    if (lastTailNode === null) {
                                        renderState.tail = null;
                                    } else {
                                        lastTailNode.sibling = null;
                                    }
                                    break;
                                }
                                case "collapsed": {
                                    var _tailNode = renderState.tail;
                                    var _lastTailNode = null;
                                    while (_tailNode !== null) {
                                        if (_tailNode.alternate !== null) {
                                            _lastTailNode = _tailNode;
                                        }
                                        _tailNode = _tailNode.sibling;
                                    }
                                    if (_lastTailNode === null) {
                                        if (!hasRenderedATailFallback && renderState.tail !== null) {
                                            renderState.tail.sibling = null;
                                        } else {
                                            renderState.tail = null;
                                        }
                                    } else {
                                        _lastTailNode.sibling = null;
                                    }
                                    break;
                                }
                            }
                        }
                        function bubbleProperties(completedWork) {
                            var didBailout = completedWork.alternate !== null && completedWork.alternate.child === completedWork.child;
                            var newChildLanes = NoLanes;
                            var subtreeFlags = NoFlags;
                            if (!didBailout) {
                                if ((completedWork.mode & ProfileMode) !== NoMode) {
                                    var actualDuration = completedWork.actualDuration;
                                    var treeBaseDuration = completedWork.selfBaseDuration;
                                    var child = completedWork.child;
                                    while (child !== null) {
                                        newChildLanes = mergeLanes(newChildLanes, mergeLanes(child.lanes, child.childLanes));
                                        subtreeFlags |= child.subtreeFlags;
                                        subtreeFlags |= child.flags;
                                        actualDuration += child.actualDuration;
                                        treeBaseDuration += child.treeBaseDuration;
                                        child = child.sibling;
                                    }
                                    completedWork.actualDuration = actualDuration;
                                    completedWork.treeBaseDuration = treeBaseDuration;
                                } else {
                                    var _child = completedWork.child;
                                    while (_child !== null) {
                                        newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child.lanes, _child.childLanes));
                                        subtreeFlags |= _child.subtreeFlags;
                                        subtreeFlags |= _child.flags;
                                        _child.return = completedWork;
                                        _child = _child.sibling;
                                    }
                                }
                                completedWork.subtreeFlags |= subtreeFlags;
                            } else {
                                if ((completedWork.mode & ProfileMode) !== NoMode) {
                                    var _treeBaseDuration = completedWork.selfBaseDuration;
                                    var _child2 = completedWork.child;
                                    while (_child2 !== null) {
                                        newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child2.lanes, _child2.childLanes));
                                        subtreeFlags |= _child2.subtreeFlags & StaticMask;
                                        subtreeFlags |= _child2.flags & StaticMask;
                                        _treeBaseDuration += _child2.treeBaseDuration;
                                        _child2 = _child2.sibling;
                                    }
                                    completedWork.treeBaseDuration = _treeBaseDuration;
                                } else {
                                    var _child3 = completedWork.child;
                                    while (_child3 !== null) {
                                        newChildLanes = mergeLanes(newChildLanes, mergeLanes(_child3.lanes, _child3.childLanes));
                                        subtreeFlags |= _child3.subtreeFlags & StaticMask;
                                        subtreeFlags |= _child3.flags & StaticMask;
                                        _child3.return = completedWork;
                                        _child3 = _child3.sibling;
                                    }
                                }
                                completedWork.subtreeFlags |= subtreeFlags;
                            }
                            completedWork.childLanes = newChildLanes;
                            return didBailout;
                        }
                        function completeDehydratedSuspenseBoundary(current2, workInProgress2, nextState) {
                            if (hasUnhydratedTailNodes() && (workInProgress2.mode & ConcurrentMode) !== NoMode && (workInProgress2.flags & DidCapture) === NoFlags) {
                                warnIfUnhydratedTailNodes(workInProgress2);
                                resetHydrationState();
                                workInProgress2.flags |= ForceClientRender | Incomplete | ShouldCapture;
                                return false;
                            }
                            var wasHydrated = popHydrationState(workInProgress2);
                            if (nextState !== null && nextState.dehydrated !== null) {
                                if (current2 === null) {
                                    if (!wasHydrated) {
                                        throw new Error("A dehydrated suspense component was completed without a hydrated node. This is probably a bug in React.");
                                    }
                                    prepareToHydrateHostSuspenseInstance(workInProgress2);
                                    bubbleProperties(workInProgress2);
                                    {
                                        if ((workInProgress2.mode & ProfileMode) !== NoMode) {
                                            var isTimedOutSuspense = nextState !== null;
                                            if (isTimedOutSuspense) {
                                                var primaryChildFragment = workInProgress2.child;
                                                if (primaryChildFragment !== null) {
                                                    workInProgress2.treeBaseDuration -= primaryChildFragment.treeBaseDuration;
                                                }
                                            }
                                        }
                                    }
                                    return false;
                                } else {
                                    resetHydrationState();
                                    if ((workInProgress2.flags & DidCapture) === NoFlags) {
                                        workInProgress2.memoizedState = null;
                                    }
                                    workInProgress2.flags |= Update;
                                    bubbleProperties(workInProgress2);
                                    {
                                        if ((workInProgress2.mode & ProfileMode) !== NoMode) {
                                            var _isTimedOutSuspense = nextState !== null;
                                            if (_isTimedOutSuspense) {
                                                var _primaryChildFragment = workInProgress2.child;
                                                if (_primaryChildFragment !== null) {
                                                    workInProgress2.treeBaseDuration -= _primaryChildFragment.treeBaseDuration;
                                                }
                                            }
                                        }
                                    }
                                    return false;
                                }
                            } else {
                                upgradeHydrationErrorsToRecoverable();
                                return true;
                            }
                        }
                        function completeWork(current2, workInProgress2, renderLanes2) {
                            var newProps = workInProgress2.pendingProps;
                            popTreeContext(workInProgress2);
                            switch (workInProgress2.tag) {
                                case IndeterminateComponent:
                                case LazyComponent:
                                case SimpleMemoComponent:
                                case FunctionComponent:
                                case ForwardRef:
                                case Fragment:
                                case Mode:
                                case Profiler:
                                case ContextConsumer:
                                case MemoComponent:
                                    bubbleProperties(workInProgress2);
                                    return null;
                                case ClassComponent: {
                                    var Component = workInProgress2.type;
                                    if (isContextProvider(Component)) {
                                        popContext(workInProgress2);
                                    }
                                    bubbleProperties(workInProgress2);
                                    return null;
                                }
                                case HostRoot: {
                                    var fiberRoot = workInProgress2.stateNode;
                                    popHostContainer(workInProgress2);
                                    popTopLevelContextObject(workInProgress2);
                                    resetWorkInProgressVersions();
                                    if (fiberRoot.pendingContext) {
                                        fiberRoot.context = fiberRoot.pendingContext;
                                        fiberRoot.pendingContext = null;
                                    }
                                    if (current2 === null || current2.child === null) {
                                        var wasHydrated = popHydrationState(workInProgress2);
                                        if (wasHydrated) {
                                            markUpdate(workInProgress2);
                                        } else {
                                            if (current2 !== null) {
                                                var prevState = current2.memoizedState;
                                                if (
                                                    // Check if this is a client root
                                                    !prevState.isDehydrated || // Check if we reverted to client rendering (e.g. due to an error)
                                                    (workInProgress2.flags & ForceClientRender) !== NoFlags
                                                ) {
                                                    workInProgress2.flags |= Snapshot;
                                                    upgradeHydrationErrorsToRecoverable();
                                                }
                                            }
                                        }
                                    }
                                    updateHostContainer(current2, workInProgress2);
                                    bubbleProperties(workInProgress2);
                                    return null;
                                }
                                case HostComponent: {
                                    popHostContext(workInProgress2);
                                    var rootContainerInstance = getRootHostContainer();
                                    var type = workInProgress2.type;
                                    if (current2 !== null && workInProgress2.stateNode != null) {
                                        updateHostComponent$1(current2, workInProgress2, type, newProps, rootContainerInstance);
                                        if (current2.ref !== workInProgress2.ref) {
                                            markRef$1(workInProgress2);
                                        }
                                    } else {
                                        if (!newProps) {
                                            if (workInProgress2.stateNode === null) {
                                                throw new Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
                                            }
                                            bubbleProperties(workInProgress2);
                                            return null;
                                        }
                                        var currentHostContext = getHostContext();
                                        var _wasHydrated = popHydrationState(workInProgress2);
                                        if (_wasHydrated) {
                                            if (prepareToHydrateHostInstance(workInProgress2, rootContainerInstance, currentHostContext)) {
                                                markUpdate(workInProgress2);
                                            }
                                        } else {
                                            var instance2 = createInstance(type, newProps, rootContainerInstance, currentHostContext, workInProgress2);
                                            appendAllChildren(instance2, workInProgress2, false, false);
                                            workInProgress2.stateNode = instance2;
                                            if (finalizeInitialChildren(instance2, type, newProps, rootContainerInstance)) {
                                                markUpdate(workInProgress2);
                                            }
                                        }
                                        if (workInProgress2.ref !== null) {
                                            markRef$1(workInProgress2);
                                        }
                                    }
                                    bubbleProperties(workInProgress2);
                                    return null;
                                }
                                case HostText: {
                                    var newText = newProps;
                                    if (current2 && workInProgress2.stateNode != null) {
                                        var oldText = current2.memoizedProps;
                                        updateHostText$1(current2, workInProgress2, oldText, newText);
                                    } else {
                                        if (typeof newText !== "string") {
                                            if (workInProgress2.stateNode === null) {
                                                throw new Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
                                            }
                                        }
                                        var _rootContainerInstance = getRootHostContainer();
                                        var _currentHostContext = getHostContext();
                                        var _wasHydrated2 = popHydrationState(workInProgress2);
                                        if (_wasHydrated2) {
                                            if (prepareToHydrateHostTextInstance(workInProgress2)) {
                                                markUpdate(workInProgress2);
                                            }
                                        } else {
                                            workInProgress2.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext, workInProgress2);
                                        }
                                    }
                                    bubbleProperties(workInProgress2);
                                    return null;
                                }
                                case SuspenseComponent: {
                                    popSuspenseContext(workInProgress2);
                                    var nextState = workInProgress2.memoizedState;
                                    if (current2 === null || current2.memoizedState !== null && current2.memoizedState.dehydrated !== null) {
                                        var fallthroughToNormalSuspensePath = completeDehydratedSuspenseBoundary(current2, workInProgress2, nextState);
                                        if (!fallthroughToNormalSuspensePath) {
                                            if (workInProgress2.flags & ShouldCapture) {
                                                return workInProgress2;
                                            } else {
                                                return null;
                                            }
                                        }
                                    }
                                    if ((workInProgress2.flags & DidCapture) !== NoFlags) {
                                        workInProgress2.lanes = renderLanes2;
                                        if ((workInProgress2.mode & ProfileMode) !== NoMode) {
                                            transferActualDuration(workInProgress2);
                                        }
                                        return workInProgress2;
                                    }
                                    var nextDidTimeout = nextState !== null;
                                    var prevDidTimeout = current2 !== null && current2.memoizedState !== null;
                                    if (nextDidTimeout !== prevDidTimeout) {
                                        if (nextDidTimeout) {
                                            var _offscreenFiber2 = workInProgress2.child;
                                            _offscreenFiber2.flags |= Visibility;
                                            if ((workInProgress2.mode & ConcurrentMode) !== NoMode) {
                                                var hasInvisibleChildContext = current2 === null && (workInProgress2.memoizedProps.unstable_avoidThisFallback !== true || !enableSuspenseAvoidThisFallback);
                                                if (hasInvisibleChildContext || hasSuspenseContext(suspenseStackCursor.current, InvisibleParentSuspenseContext)) {
                                                    renderDidSuspend();
                                                } else {
                                                    renderDidSuspendDelayIfPossible();
                                                }
                                            }
                                        }
                                    }
                                    var wakeables = workInProgress2.updateQueue;
                                    if (wakeables !== null) {
                                        workInProgress2.flags |= Update;
                                    }
                                    bubbleProperties(workInProgress2);
                                    {
                                        if ((workInProgress2.mode & ProfileMode) !== NoMode) {
                                            if (nextDidTimeout) {
                                                var primaryChildFragment = workInProgress2.child;
                                                if (primaryChildFragment !== null) {
                                                    workInProgress2.treeBaseDuration -= primaryChildFragment.treeBaseDuration;
                                                }
                                            }
                                        }
                                    }
                                    return null;
                                }
                                case HostPortal:
                                    popHostContainer(workInProgress2);
                                    updateHostContainer(current2, workInProgress2);
                                    if (current2 === null) {
                                        preparePortalMount(workInProgress2.stateNode.containerInfo);
                                    }
                                    bubbleProperties(workInProgress2);
                                    return null;
                                case ContextProvider:
                                    var context = workInProgress2.type._context;
                                    popProvider(context, workInProgress2);
                                    bubbleProperties(workInProgress2);
                                    return null;
                                case IncompleteClassComponent: {
                                    var _Component = workInProgress2.type;
                                    if (isContextProvider(_Component)) {
                                        popContext(workInProgress2);
                                    }
                                    bubbleProperties(workInProgress2);
                                    return null;
                                }
                                case SuspenseListComponent: {
                                    popSuspenseContext(workInProgress2);
                                    var renderState = workInProgress2.memoizedState;
                                    if (renderState === null) {
                                        bubbleProperties(workInProgress2);
                                        return null;
                                    }
                                    var didSuspendAlready = (workInProgress2.flags & DidCapture) !== NoFlags;
                                    var renderedTail = renderState.rendering;
                                    if (renderedTail === null) {
                                        if (!didSuspendAlready) {
                                            var cannotBeSuspended = renderHasNotSuspendedYet() && (current2 === null || (current2.flags & DidCapture) === NoFlags);
                                            if (!cannotBeSuspended) {
                                                var row = workInProgress2.child;
                                                while (row !== null) {
                                                    var suspended = findFirstSuspended(row);
                                                    if (suspended !== null) {
                                                        didSuspendAlready = true;
                                                        workInProgress2.flags |= DidCapture;
                                                        cutOffTailIfNeeded(renderState, false);
                                                        var newThenables = suspended.updateQueue;
                                                        if (newThenables !== null) {
                                                            workInProgress2.updateQueue = newThenables;
                                                            workInProgress2.flags |= Update;
                                                        }
                                                        workInProgress2.subtreeFlags = NoFlags;
                                                        resetChildFibers(workInProgress2, renderLanes2);
                                                        pushSuspenseContext(workInProgress2, setShallowSuspenseContext(suspenseStackCursor.current, ForceSuspenseFallback));
                                                        return workInProgress2.child;
                                                    }
                                                    row = row.sibling;
                                                }
                                            }
                                            if (renderState.tail !== null && now() > getRenderTargetTime()) {
                                                workInProgress2.flags |= DidCapture;
                                                didSuspendAlready = true;
                                                cutOffTailIfNeeded(renderState, false);
                                                workInProgress2.lanes = SomeRetryLane;
                                            }
                                        } else {
                                            cutOffTailIfNeeded(renderState, false);
                                        }
                                    } else {
                                        if (!didSuspendAlready) {
                                            var _suspended = findFirstSuspended(renderedTail);
                                            if (_suspended !== null) {
                                                workInProgress2.flags |= DidCapture;
                                                didSuspendAlready = true;
                                                var _newThenables = _suspended.updateQueue;
                                                if (_newThenables !== null) {
                                                    workInProgress2.updateQueue = _newThenables;
                                                    workInProgress2.flags |= Update;
                                                }
                                                cutOffTailIfNeeded(renderState, true);
                                                if (renderState.tail === null && renderState.tailMode === "hidden" && !renderedTail.alternate && !getIsHydrating()) {
                                                    bubbleProperties(workInProgress2);
                                                    return null;
                                                }
                                            } else if (
                                                // The time it took to render last row is greater than the remaining
                                                // time we have to render. So rendering one more row would likely
                                                // exceed it.
                                                now() * 2 - renderState.renderingStartTime > getRenderTargetTime() && renderLanes2 !== OffscreenLane
                                            ) {
                                                workInProgress2.flags |= DidCapture;
                                                didSuspendAlready = true;
                                                cutOffTailIfNeeded(renderState, false);
                                                workInProgress2.lanes = SomeRetryLane;
                                            }
                                        }
                                        if (renderState.isBackwards) {
                                            renderedTail.sibling = workInProgress2.child;
                                            workInProgress2.child = renderedTail;
                                        } else {
                                            var previousSibling = renderState.last;
                                            if (previousSibling !== null) {
                                                previousSibling.sibling = renderedTail;
                                            } else {
                                                workInProgress2.child = renderedTail;
                                            }
                                            renderState.last = renderedTail;
                                        }
                                    }
                                    if (renderState.tail !== null) {
                                        var next = renderState.tail;
                                        renderState.rendering = next;
                                        renderState.tail = next.sibling;
                                        renderState.renderingStartTime = now();
                                        next.sibling = null;
                                        var suspenseContext = suspenseStackCursor.current;
                                        if (didSuspendAlready) {
                                            suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
                                        } else {
                                            suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
                                        }
                                        pushSuspenseContext(workInProgress2, suspenseContext);
                                        return next;
                                    }
                                    bubbleProperties(workInProgress2);
                                    return null;
                                }
                                case ScopeComponent: {
                                    break;
                                }
                                case OffscreenComponent:
                                case LegacyHiddenComponent: {
                                    popRenderLanes(workInProgress2);
                                    var _nextState = workInProgress2.memoizedState;
                                    var nextIsHidden = _nextState !== null;
                                    if (current2 !== null) {
                                        var _prevState = current2.memoizedState;
                                        var prevIsHidden = _prevState !== null;
                                        if (prevIsHidden !== nextIsHidden && // LegacyHidden doesn't do any hiding — it only pre-renders.
                                            !enableLegacyHidden) {
                                            workInProgress2.flags |= Visibility;
                                        }
                                    }
                                    if (!nextIsHidden || (workInProgress2.mode & ConcurrentMode) === NoMode) {
                                        bubbleProperties(workInProgress2);
                                    } else {
                                        if (includesSomeLane(subtreeRenderLanes, OffscreenLane)) {
                                            bubbleProperties(workInProgress2);
                                            {
                                                if (workInProgress2.subtreeFlags & (Placement | Update)) {
                                                    workInProgress2.flags |= Visibility;
                                                }
                                            }
                                        }
                                    }
                                    return null;
                                }
                                case CacheComponent: {
                                    return null;
                                }
                                case TracingMarkerComponent: {
                                    return null;
                                }
                            }
                            throw new Error("Unknown unit of work tag (" + workInProgress2.tag + "). This error is likely caused by a bug in React. Please file an issue.");
                        }
                        function unwindWork(current2, workInProgress2, renderLanes2) {
                            popTreeContext(workInProgress2);
                            switch (workInProgress2.tag) {
                                case ClassComponent: {
                                    var Component = workInProgress2.type;
                                    if (isContextProvider(Component)) {
                                        popContext(workInProgress2);
                                    }
                                    var flags = workInProgress2.flags;
                                    if (flags & ShouldCapture) {
                                        workInProgress2.flags = flags & ~ShouldCapture | DidCapture;
                                        if ((workInProgress2.mode & ProfileMode) !== NoMode) {
                                            transferActualDuration(workInProgress2);
                                        }
                                        return workInProgress2;
                                    }
                                    return null;
                                }
                                case HostRoot: {
                                    var root2 = workInProgress2.stateNode;
                                    popHostContainer(workInProgress2);
                                    popTopLevelContextObject(workInProgress2);
                                    resetWorkInProgressVersions();
                                    var _flags = workInProgress2.flags;
                                    if ((_flags & ShouldCapture) !== NoFlags && (_flags & DidCapture) === NoFlags) {
                                        workInProgress2.flags = _flags & ~ShouldCapture | DidCapture;
                                        return workInProgress2;
                                    }
                                    return null;
                                }
                                case HostComponent: {
                                    popHostContext(workInProgress2);
                                    return null;
                                }
                                case SuspenseComponent: {
                                    popSuspenseContext(workInProgress2);
                                    var suspenseState = workInProgress2.memoizedState;
                                    if (suspenseState !== null && suspenseState.dehydrated !== null) {
                                        if (workInProgress2.alternate === null) {
                                            throw new Error("Threw in newly mounted dehydrated component. This is likely a bug in React. Please file an issue.");
                                        }
                                        resetHydrationState();
                                    }
                                    var _flags2 = workInProgress2.flags;
                                    if (_flags2 & ShouldCapture) {
                                        workInProgress2.flags = _flags2 & ~ShouldCapture | DidCapture;
                                        if ((workInProgress2.mode & ProfileMode) !== NoMode) {
                                            transferActualDuration(workInProgress2);
                                        }
                                        return workInProgress2;
                                    }
                                    return null;
                                }
                                case SuspenseListComponent: {
                                    popSuspenseContext(workInProgress2);
                                    return null;
                                }
                                case HostPortal:
                                    popHostContainer(workInProgress2);
                                    return null;
                                case ContextProvider:
                                    var context = workInProgress2.type._context;
                                    popProvider(context, workInProgress2);
                                    return null;
                                case OffscreenComponent:
                                case LegacyHiddenComponent:
                                    popRenderLanes(workInProgress2);
                                    return null;
                                case CacheComponent:
                                    return null;
                                default:
                                    return null;
                            }
                        }
                        function unwindInterruptedWork(current2, interruptedWork, renderLanes2) {
                            popTreeContext(interruptedWork);
                            switch (interruptedWork.tag) {
                                case ClassComponent: {
                                    var childContextTypes = interruptedWork.type.childContextTypes;
                                    if (childContextTypes !== null && childContextTypes !== void 0) {
                                        popContext(interruptedWork);
                                    }
                                    break;
                                }
                                case HostRoot: {
                                    var root2 = interruptedWork.stateNode;
                                    popHostContainer(interruptedWork);
                                    popTopLevelContextObject(interruptedWork);
                                    resetWorkInProgressVersions();
                                    break;
                                }
                                case HostComponent: {
                                    popHostContext(interruptedWork);
                                    break;
                                }
                                case HostPortal:
                                    popHostContainer(interruptedWork);
                                    break;
                                case SuspenseComponent:
                                    popSuspenseContext(interruptedWork);
                                    break;
                                case SuspenseListComponent:
                                    popSuspenseContext(interruptedWork);
                                    break;
                                case ContextProvider:
                                    var context = interruptedWork.type._context;
                                    popProvider(context, interruptedWork);
                                    break;
                                case OffscreenComponent:
                                case LegacyHiddenComponent:
                                    popRenderLanes(interruptedWork);
                                    break;
                            }
                        }
                        var didWarnAboutUndefinedSnapshotBeforeUpdate = null;
                        {
                            didWarnAboutUndefinedSnapshotBeforeUpdate = /* @__PURE__ */ new Set();
                        }
                        var offscreenSubtreeIsHidden = false;
                        var offscreenSubtreeWasHidden = false;
                        var PossiblyWeakSet = typeof WeakSet === "function" ? WeakSet : Set;
                        var nextEffect = null;
                        var inProgressLanes = null;
                        var inProgressRoot = null;
                        function reportUncaughtErrorInDEV(error2) {
                            {
                                invokeGuardedCallback(null, function() {
                                    throw error2;
                                });
                                clearCaughtError();
                            }
                        }
                        var callComponentWillUnmountWithTimer = function(current2, instance2) {
                            instance2.props = current2.memoizedProps;
                            instance2.state = current2.memoizedState;
                            if (current2.mode & ProfileMode) {
                                try {
                                    startLayoutEffectTimer();
                                    instance2.componentWillUnmount();
                                } finally {
                                    recordLayoutEffectDuration(current2);
                                }
                            } else {
                                instance2.componentWillUnmount();
                            }
                        };
                        function safelyCallCommitHookLayoutEffectListMount(current2, nearestMountedAncestor) {
                            try {
                                commitHookEffectListMount(Layout, current2);
                            } catch (error2) {
                                captureCommitPhaseError(current2, nearestMountedAncestor, error2);
                            }
                        }
                        function safelyCallComponentWillUnmount(current2, nearestMountedAncestor, instance2) {
                            try {
                                callComponentWillUnmountWithTimer(current2, instance2);
                            } catch (error2) {
                                captureCommitPhaseError(current2, nearestMountedAncestor, error2);
                            }
                        }
                        function safelyCallComponentDidMount(current2, nearestMountedAncestor, instance2) {
                            try {
                                instance2.componentDidMount();
                            } catch (error2) {
                                captureCommitPhaseError(current2, nearestMountedAncestor, error2);
                            }
                        }
                        function safelyAttachRef(current2, nearestMountedAncestor) {
                            try {
                                commitAttachRef(current2);
                            } catch (error2) {
                                captureCommitPhaseError(current2, nearestMountedAncestor, error2);
                            }
                        }
                        function safelyDetachRef(current2, nearestMountedAncestor) {
                            var ref = current2.ref;
                            if (ref !== null) {
                                if (typeof ref === "function") {
                                    var retVal;
                                    try {
                                        if (enableProfilerTimer && enableProfilerCommitHooks && current2.mode & ProfileMode) {
                                            try {
                                                startLayoutEffectTimer();
                                                retVal = ref(null);
                                            } finally {
                                                recordLayoutEffectDuration(current2);
                                            }
                                        } else {
                                            retVal = ref(null);
                                        }
                                    } catch (error2) {
                                        captureCommitPhaseError(current2, nearestMountedAncestor, error2);
                                    }
                                    {
                                        if (typeof retVal === "function") {
                                            error("Unexpected return value from a callback ref in %s. A callback ref should not return a function.", getComponentNameFromFiber(current2));
                                        }
                                    }
                                } else {
                                    ref.current = null;
                                }
                            }
                        }
                        function safelyCallDestroy(current2, nearestMountedAncestor, destroy) {
                            try {
                                destroy();
                            } catch (error2) {
                                captureCommitPhaseError(current2, nearestMountedAncestor, error2);
                            }
                        }
                        var focusedInstanceHandle = null;
                        var shouldFireAfterActiveInstanceBlur = false;
                        function commitBeforeMutationEffects(root2, firstChild) {
                            focusedInstanceHandle = prepareForCommit(root2.containerInfo);
                            nextEffect = firstChild;
                            commitBeforeMutationEffects_begin();
                            var shouldFire = shouldFireAfterActiveInstanceBlur;
                            shouldFireAfterActiveInstanceBlur = false;
                            focusedInstanceHandle = null;
                            return shouldFire;
                        }
                        function commitBeforeMutationEffects_begin() {
                            while (nextEffect !== null) {
                                var fiber = nextEffect;
                                var child = fiber.child;
                                if ((fiber.subtreeFlags & BeforeMutationMask) !== NoFlags && child !== null) {
                                    child.return = fiber;
                                    nextEffect = child;
                                } else {
                                    commitBeforeMutationEffects_complete();
                                }
                            }
                        }
                        function commitBeforeMutationEffects_complete() {
                            while (nextEffect !== null) {
                                var fiber = nextEffect;
                                setCurrentFiber(fiber);
                                try {
                                    commitBeforeMutationEffectsOnFiber(fiber);
                                } catch (error2) {
                                    captureCommitPhaseError(fiber, fiber.return, error2);
                                }
                                resetCurrentFiber();
                                var sibling = fiber.sibling;
                                if (sibling !== null) {
                                    sibling.return = fiber.return;
                                    nextEffect = sibling;
                                    return;
                                }
                                nextEffect = fiber.return;
                            }
                        }
                        function commitBeforeMutationEffectsOnFiber(finishedWork) {
                            var current2 = finishedWork.alternate;
                            var flags = finishedWork.flags;
                            if ((flags & Snapshot) !== NoFlags) {
                                setCurrentFiber(finishedWork);
                                switch (finishedWork.tag) {
                                    case FunctionComponent:
                                    case ForwardRef:
                                    case SimpleMemoComponent: {
                                        break;
                                    }
                                    case ClassComponent: {
                                        if (current2 !== null) {
                                            var prevProps = current2.memoizedProps;
                                            var prevState = current2.memoizedState;
                                            var instance2 = finishedWork.stateNode;
                                            {
                                                if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                                                    if (instance2.props !== finishedWork.memoizedProps) {
                                                        error("Expected %s props to match memoized props before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                                                    }
                                                    if (instance2.state !== finishedWork.memoizedState) {
                                                        error("Expected %s state to match memoized state before getSnapshotBeforeUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                                                    }
                                                }
                                            }
                                            var snapshot = instance2.getSnapshotBeforeUpdate(finishedWork.elementType === finishedWork.type ? prevProps : resolveDefaultProps(finishedWork.type, prevProps), prevState);
                                            {
                                                var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;
                                                if (snapshot === void 0 && !didWarnSet.has(finishedWork.type)) {
                                                    didWarnSet.add(finishedWork.type);
                                                    error("%s.getSnapshotBeforeUpdate(): A snapshot value (or null) must be returned. You have returned undefined.", getComponentNameFromFiber(finishedWork));
                                                }
                                            }
                                            instance2.__reactInternalSnapshotBeforeUpdate = snapshot;
                                        }
                                        break;
                                    }
                                    case HostRoot: {
                                        {
                                            var root2 = finishedWork.stateNode;
                                            clearContainer(root2.containerInfo);
                                        }
                                        break;
                                    }
                                    case HostComponent:
                                    case HostText:
                                    case HostPortal:
                                    case IncompleteClassComponent:
                                        break;
                                    default: {
                                        throw new Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
                                    }
                                }
                                resetCurrentFiber();
                            }
                        }
                        function commitHookEffectListUnmount(flags, finishedWork, nearestMountedAncestor) {
                            var updateQueue = finishedWork.updateQueue;
                            var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;
                            if (lastEffect !== null) {
                                var firstEffect = lastEffect.next;
                                var effect = firstEffect;
                                do {
                                    if ((effect.tag & flags) === flags) {
                                        var destroy = effect.destroy;
                                        effect.destroy = void 0;
                                        if (destroy !== void 0) {
                                            {
                                                if ((flags & Passive$1) !== NoFlags$1) {
                                                    markComponentPassiveEffectUnmountStarted(finishedWork);
                                                } else if ((flags & Layout) !== NoFlags$1) {
                                                    markComponentLayoutEffectUnmountStarted(finishedWork);
                                                }
                                            }
                                            {
                                                if ((flags & Insertion) !== NoFlags$1) {
                                                    setIsRunningInsertionEffect(true);
                                                }
                                            }
                                            safelyCallDestroy(finishedWork, nearestMountedAncestor, destroy);
                                            {
                                                if ((flags & Insertion) !== NoFlags$1) {
                                                    setIsRunningInsertionEffect(false);
                                                }
                                            }
                                            {
                                                if ((flags & Passive$1) !== NoFlags$1) {
                                                    markComponentPassiveEffectUnmountStopped();
                                                } else if ((flags & Layout) !== NoFlags$1) {
                                                    markComponentLayoutEffectUnmountStopped();
                                                }
                                            }
                                        }
                                    }
                                    effect = effect.next;
                                } while (effect !== firstEffect);
                            }
                        }
                        function commitHookEffectListMount(flags, finishedWork) {
                            var updateQueue = finishedWork.updateQueue;
                            var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;
                            if (lastEffect !== null) {
                                var firstEffect = lastEffect.next;
                                var effect = firstEffect;
                                do {
                                    if ((effect.tag & flags) === flags) {
                                        {
                                            if ((flags & Passive$1) !== NoFlags$1) {
                                                markComponentPassiveEffectMountStarted(finishedWork);
                                            } else if ((flags & Layout) !== NoFlags$1) {
                                                markComponentLayoutEffectMountStarted(finishedWork);
                                            }
                                        }
                                        var create = effect.create;
                                        {
                                            if ((flags & Insertion) !== NoFlags$1) {
                                                setIsRunningInsertionEffect(true);
                                            }
                                        }
                                        effect.destroy = create();
                                        {
                                            if ((flags & Insertion) !== NoFlags$1) {
                                                setIsRunningInsertionEffect(false);
                                            }
                                        }
                                        {
                                            if ((flags & Passive$1) !== NoFlags$1) {
                                                markComponentPassiveEffectMountStopped();
                                            } else if ((flags & Layout) !== NoFlags$1) {
                                                markComponentLayoutEffectMountStopped();
                                            }
                                        }
                                        {
                                            var destroy = effect.destroy;
                                            if (destroy !== void 0 && typeof destroy !== "function") {
                                                var hookName = void 0;
                                                if ((effect.tag & Layout) !== NoFlags) {
                                                    hookName = "useLayoutEffect";
                                                } else if ((effect.tag & Insertion) !== NoFlags) {
                                                    hookName = "useInsertionEffect";
                                                } else {
                                                    hookName = "useEffect";
                                                }
                                                var addendum = void 0;
                                                if (destroy === null) {
                                                    addendum = " You returned null. If your effect does not require clean up, return undefined (or nothing).";
                                                } else if (typeof destroy.then === "function") {
                                                    addendum = "\n\nIt looks like you wrote " + hookName + "(async () => ...) or returned a Promise. Instead, write the async function inside your effect and call it immediately:\n\n" + hookName + "(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching";
                                                } else {
                                                    addendum = " You returned: " + destroy;
                                                }
                                                error("%s must not return anything besides a function, which is used for clean-up.%s", hookName, addendum);
                                            }
                                        }
                                    }
                                    effect = effect.next;
                                } while (effect !== firstEffect);
                            }
                        }
                        function commitPassiveEffectDurations(finishedRoot, finishedWork) {
                            {
                                if ((finishedWork.flags & Update) !== NoFlags) {
                                    switch (finishedWork.tag) {
                                        case Profiler: {
                                            var passiveEffectDuration = finishedWork.stateNode.passiveEffectDuration;
                                            var _finishedWork$memoize = finishedWork.memoizedProps, id = _finishedWork$memoize.id, onPostCommit = _finishedWork$memoize.onPostCommit;
                                            var commitTime2 = getCommitTime();
                                            var phase = finishedWork.alternate === null ? "mount" : "update";
                                            {
                                                if (isCurrentUpdateNested()) {
                                                    phase = "nested-update";
                                                }
                                            }
                                            if (typeof onPostCommit === "function") {
                                                onPostCommit(id, phase, passiveEffectDuration, commitTime2);
                                            }
                                            var parentFiber = finishedWork.return;
                                            outer:
                                                while (parentFiber !== null) {
                                                    switch (parentFiber.tag) {
                                                        case HostRoot:
                                                            var root2 = parentFiber.stateNode;
                                                            root2.passiveEffectDuration += passiveEffectDuration;
                                                            break outer;
                                                        case Profiler:
                                                            var parentStateNode = parentFiber.stateNode;
                                                            parentStateNode.passiveEffectDuration += passiveEffectDuration;
                                                            break outer;
                                                    }
                                                    parentFiber = parentFiber.return;
                                                }
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        function commitLayoutEffectOnFiber(finishedRoot, current2, finishedWork, committedLanes) {
                            if ((finishedWork.flags & LayoutMask) !== NoFlags) {
                                switch (finishedWork.tag) {
                                    case FunctionComponent:
                                    case ForwardRef:
                                    case SimpleMemoComponent: {
                                        if (!offscreenSubtreeWasHidden) {
                                            if (finishedWork.mode & ProfileMode) {
                                                try {
                                                    startLayoutEffectTimer();
                                                    commitHookEffectListMount(Layout | HasEffect, finishedWork);
                                                } finally {
                                                    recordLayoutEffectDuration(finishedWork);
                                                }
                                            } else {
                                                commitHookEffectListMount(Layout | HasEffect, finishedWork);
                                            }
                                        }
                                        break;
                                    }
                                    case ClassComponent: {
                                        var instance2 = finishedWork.stateNode;
                                        if (finishedWork.flags & Update) {
                                            if (!offscreenSubtreeWasHidden) {
                                                if (current2 === null) {
                                                    {
                                                        if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                                                            if (instance2.props !== finishedWork.memoizedProps) {
                                                                error("Expected %s props to match memoized props before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                                                            }
                                                            if (instance2.state !== finishedWork.memoizedState) {
                                                                error("Expected %s state to match memoized state before componentDidMount. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                                                            }
                                                        }
                                                    }
                                                    if (finishedWork.mode & ProfileMode) {
                                                        try {
                                                            startLayoutEffectTimer();
                                                            instance2.componentDidMount();
                                                        } finally {
                                                            recordLayoutEffectDuration(finishedWork);
                                                        }
                                                    } else {
                                                        instance2.componentDidMount();
                                                    }
                                                } else {
                                                    var prevProps = finishedWork.elementType === finishedWork.type ? current2.memoizedProps : resolveDefaultProps(finishedWork.type, current2.memoizedProps);
                                                    var prevState = current2.memoizedState;
                                                    {
                                                        if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                                                            if (instance2.props !== finishedWork.memoizedProps) {
                                                                error("Expected %s props to match memoized props before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                                                            }
                                                            if (instance2.state !== finishedWork.memoizedState) {
                                                                error("Expected %s state to match memoized state before componentDidUpdate. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                                                            }
                                                        }
                                                    }
                                                    if (finishedWork.mode & ProfileMode) {
                                                        try {
                                                            startLayoutEffectTimer();
                                                            instance2.componentDidUpdate(prevProps, prevState, instance2.__reactInternalSnapshotBeforeUpdate);
                                                        } finally {
                                                            recordLayoutEffectDuration(finishedWork);
                                                        }
                                                    } else {
                                                        instance2.componentDidUpdate(prevProps, prevState, instance2.__reactInternalSnapshotBeforeUpdate);
                                                    }
                                                }
                                            }
                                        }
                                        var updateQueue = finishedWork.updateQueue;
                                        if (updateQueue !== null) {
                                            {
                                                if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                                                    if (instance2.props !== finishedWork.memoizedProps) {
                                                        error("Expected %s props to match memoized props before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.props`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                                                    }
                                                    if (instance2.state !== finishedWork.memoizedState) {
                                                        error("Expected %s state to match memoized state before processing the update queue. This might either be because of a bug in React, or because a component reassigns its own `this.state`. Please file an issue.", getComponentNameFromFiber(finishedWork) || "instance");
                                                    }
                                                }
                                            }
                                            commitUpdateQueue(finishedWork, updateQueue, instance2);
                                        }
                                        break;
                                    }
                                    case HostRoot: {
                                        var _updateQueue = finishedWork.updateQueue;
                                        if (_updateQueue !== null) {
                                            var _instance = null;
                                            if (finishedWork.child !== null) {
                                                switch (finishedWork.child.tag) {
                                                    case HostComponent:
                                                        _instance = getPublicInstance(finishedWork.child.stateNode);
                                                        break;
                                                    case ClassComponent:
                                                        _instance = finishedWork.child.stateNode;
                                                        break;
                                                }
                                            }
                                            commitUpdateQueue(finishedWork, _updateQueue, _instance);
                                        }
                                        break;
                                    }
                                    case HostComponent: {
                                        var _instance2 = finishedWork.stateNode;
                                        if (current2 === null && finishedWork.flags & Update) {
                                            var type = finishedWork.type;
                                            var props = finishedWork.memoizedProps;
                                            commitMount(_instance2, type, props);
                                        }
                                        break;
                                    }
                                    case HostText: {
                                        break;
                                    }
                                    case HostPortal: {
                                        break;
                                    }
                                    case Profiler: {
                                        {
                                            var _finishedWork$memoize2 = finishedWork.memoizedProps, onCommit = _finishedWork$memoize2.onCommit, onRender = _finishedWork$memoize2.onRender;
                                            var effectDuration = finishedWork.stateNode.effectDuration;
                                            var commitTime2 = getCommitTime();
                                            var phase = current2 === null ? "mount" : "update";
                                            {
                                                if (isCurrentUpdateNested()) {
                                                    phase = "nested-update";
                                                }
                                            }
                                            if (typeof onRender === "function") {
                                                onRender(finishedWork.memoizedProps.id, phase, finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, commitTime2);
                                            }
                                            {
                                                if (typeof onCommit === "function") {
                                                    onCommit(finishedWork.memoizedProps.id, phase, effectDuration, commitTime2);
                                                }
                                                enqueuePendingPassiveProfilerEffect(finishedWork);
                                                var parentFiber = finishedWork.return;
                                                outer:
                                                    while (parentFiber !== null) {
                                                        switch (parentFiber.tag) {
                                                            case HostRoot:
                                                                var root2 = parentFiber.stateNode;
                                                                root2.effectDuration += effectDuration;
                                                                break outer;
                                                            case Profiler:
                                                                var parentStateNode = parentFiber.stateNode;
                                                                parentStateNode.effectDuration += effectDuration;
                                                                break outer;
                                                        }
                                                        parentFiber = parentFiber.return;
                                                    }
                                            }
                                        }
                                        break;
                                    }
                                    case SuspenseComponent: {
                                        commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);
                                        break;
                                    }
                                    case SuspenseListComponent:
                                    case IncompleteClassComponent:
                                    case ScopeComponent:
                                    case OffscreenComponent:
                                    case LegacyHiddenComponent:
                                    case TracingMarkerComponent: {
                                        break;
                                    }
                                    default:
                                        throw new Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
                                }
                            }
                            if (!offscreenSubtreeWasHidden) {
                                {
                                    if (finishedWork.flags & Ref) {
                                        commitAttachRef(finishedWork);
                                    }
                                }
                            }
                        }
                        function reappearLayoutEffectsOnFiber(node) {
                            switch (node.tag) {
                                case FunctionComponent:
                                case ForwardRef:
                                case SimpleMemoComponent: {
                                    if (node.mode & ProfileMode) {
                                        try {
                                            startLayoutEffectTimer();
                                            safelyCallCommitHookLayoutEffectListMount(node, node.return);
                                        } finally {
                                            recordLayoutEffectDuration(node);
                                        }
                                    } else {
                                        safelyCallCommitHookLayoutEffectListMount(node, node.return);
                                    }
                                    break;
                                }
                                case ClassComponent: {
                                    var instance2 = node.stateNode;
                                    if (typeof instance2.componentDidMount === "function") {
                                        safelyCallComponentDidMount(node, node.return, instance2);
                                    }
                                    safelyAttachRef(node, node.return);
                                    break;
                                }
                                case HostComponent: {
                                    safelyAttachRef(node, node.return);
                                    break;
                                }
                            }
                        }
                        function hideOrUnhideAllChildren(finishedWork, isHidden) {
                            var hostSubtreeRoot = null;
                            {
                                var node = finishedWork;
                                while (true) {
                                    if (node.tag === HostComponent) {
                                        if (hostSubtreeRoot === null) {
                                            hostSubtreeRoot = node;
                                            try {
                                                var instance2 = node.stateNode;
                                                if (isHidden) {
                                                    hideInstance(instance2);
                                                } else {
                                                    unhideInstance(node.stateNode, node.memoizedProps);
                                                }
                                            } catch (error2) {
                                                captureCommitPhaseError(finishedWork, finishedWork.return, error2);
                                            }
                                        }
                                    } else if (node.tag === HostText) {
                                        if (hostSubtreeRoot === null) {
                                            try {
                                                var _instance3 = node.stateNode;
                                                if (isHidden) {
                                                    hideTextInstance(_instance3);
                                                } else {
                                                    unhideTextInstance(_instance3, node.memoizedProps);
                                                }
                                            } catch (error2) {
                                                captureCommitPhaseError(finishedWork, finishedWork.return, error2);
                                            }
                                        }
                                    } else if ((node.tag === OffscreenComponent || node.tag === LegacyHiddenComponent) && node.memoizedState !== null && node !== finishedWork)
                                        ;
                                    else if (node.child !== null) {
                                        node.child.return = node;
                                        node = node.child;
                                        continue;
                                    }
                                    if (node === finishedWork) {
                                        return;
                                    }
                                    while (node.sibling === null) {
                                        if (node.return === null || node.return === finishedWork) {
                                            return;
                                        }
                                        if (hostSubtreeRoot === node) {
                                            hostSubtreeRoot = null;
                                        }
                                        node = node.return;
                                    }
                                    if (hostSubtreeRoot === node) {
                                        hostSubtreeRoot = null;
                                    }
                                    node.sibling.return = node.return;
                                    node = node.sibling;
                                }
                            }
                        }
                        function commitAttachRef(finishedWork) {
                            var ref = finishedWork.ref;
                            if (ref !== null) {
                                var instance2 = finishedWork.stateNode;
                                var instanceToUse;
                                switch (finishedWork.tag) {
                                    case HostComponent:
                                        instanceToUse = getPublicInstance(instance2);
                                        break;
                                    default:
                                        instanceToUse = instance2;
                                }
                                if (typeof ref === "function") {
                                    var retVal;
                                    if (finishedWork.mode & ProfileMode) {
                                        try {
                                            startLayoutEffectTimer();
                                            retVal = ref(instanceToUse);
                                        } finally {
                                            recordLayoutEffectDuration(finishedWork);
                                        }
                                    } else {
                                        retVal = ref(instanceToUse);
                                    }
                                    {
                                        if (typeof retVal === "function") {
                                            error("Unexpected return value from a callback ref in %s. A callback ref should not return a function.", getComponentNameFromFiber(finishedWork));
                                        }
                                    }
                                } else {
                                    {
                                        if (!ref.hasOwnProperty("current")) {
                                            error("Unexpected ref object provided for %s. Use either a ref-setter function or React.createRef().", getComponentNameFromFiber(finishedWork));
                                        }
                                    }
                                    ref.current = instanceToUse;
                                }
                            }
                        }
                        function detachFiberMutation(fiber) {
                            var alternate = fiber.alternate;
                            if (alternate !== null) {
                                alternate.return = null;
                            }
                            fiber.return = null;
                        }
                        function detachFiberAfterEffects(fiber) {
                            var alternate = fiber.alternate;
                            if (alternate !== null) {
                                fiber.alternate = null;
                                detachFiberAfterEffects(alternate);
                            }
                            {
                                fiber.child = null;
                                fiber.deletions = null;
                                fiber.sibling = null;
                                if (fiber.tag === HostComponent) {
                                    var hostInstance = fiber.stateNode;
                                    if (hostInstance !== null) {
                                        detachDeletedInstance(hostInstance);
                                    }
                                }
                                fiber.stateNode = null;
                                {
                                    fiber._debugOwner = null;
                                }
                                {
                                    fiber.return = null;
                                    fiber.dependencies = null;
                                    fiber.memoizedProps = null;
                                    fiber.memoizedState = null;
                                    fiber.pendingProps = null;
                                    fiber.stateNode = null;
                                    fiber.updateQueue = null;
                                }
                            }
                        }
                        function getHostParentFiber(fiber) {
                            var parent = fiber.return;
                            while (parent !== null) {
                                if (isHostParent(parent)) {
                                    return parent;
                                }
                                parent = parent.return;
                            }
                            throw new Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
                        }
                        function isHostParent(fiber) {
                            return fiber.tag === HostComponent || fiber.tag === HostRoot || fiber.tag === HostPortal;
                        }
                        function getHostSibling(fiber) {
                            var node = fiber;
                            siblings:
                                while (true) {
                                    while (node.sibling === null) {
                                        if (node.return === null || isHostParent(node.return)) {
                                            return null;
                                        }
                                        node = node.return;
                                    }
                                    node.sibling.return = node.return;
                                    node = node.sibling;
                                    while (node.tag !== HostComponent && node.tag !== HostText && node.tag !== DehydratedFragment) {
                                        if (node.flags & Placement) {
                                            continue siblings;
                                        }
                                        if (node.child === null || node.tag === HostPortal) {
                                            continue siblings;
                                        } else {
                                            node.child.return = node;
                                            node = node.child;
                                        }
                                    }
                                    if (!(node.flags & Placement)) {
                                        return node.stateNode;
                                    }
                                }
                        }
                        function commitPlacement(finishedWork) {
                            var parentFiber = getHostParentFiber(finishedWork);
                            switch (parentFiber.tag) {
                                case HostComponent: {
                                    var parent = parentFiber.stateNode;
                                    if (parentFiber.flags & ContentReset) {
                                        resetTextContent(parent);
                                        parentFiber.flags &= ~ContentReset;
                                    }
                                    var before = getHostSibling(finishedWork);
                                    insertOrAppendPlacementNode(finishedWork, before, parent);
                                    break;
                                }
                                case HostRoot:
                                case HostPortal: {
                                    var _parent = parentFiber.stateNode.containerInfo;
                                    var _before = getHostSibling(finishedWork);
                                    insertOrAppendPlacementNodeIntoContainer(finishedWork, _before, _parent);
                                    break;
                                }
                                default:
                                    throw new Error("Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.");
                            }
                        }
                        function insertOrAppendPlacementNodeIntoContainer(node, before, parent) {
                            var tag = node.tag;
                            var isHost = tag === HostComponent || tag === HostText;
                            if (isHost) {
                                var stateNode = node.stateNode;
                                if (before) {
                                    insertInContainerBefore(parent, stateNode, before);
                                } else {
                                    appendChildToContainer(parent, stateNode);
                                }
                            } else if (tag === HostPortal)
                                ;
                            else {
                                var child = node.child;
                                if (child !== null) {
                                    insertOrAppendPlacementNodeIntoContainer(child, before, parent);
                                    var sibling = child.sibling;
                                    while (sibling !== null) {
                                        insertOrAppendPlacementNodeIntoContainer(sibling, before, parent);
                                        sibling = sibling.sibling;
                                    }
                                }
                            }
                        }
                        function insertOrAppendPlacementNode(node, before, parent) {
                            var tag = node.tag;
                            var isHost = tag === HostComponent || tag === HostText;
                            if (isHost) {
                                var stateNode = node.stateNode;
                                if (before) {
                                    insertBefore(parent, stateNode, before);
                                } else {
                                    appendChild(parent, stateNode);
                                }
                            } else if (tag === HostPortal)
                                ;
                            else {
                                var child = node.child;
                                if (child !== null) {
                                    insertOrAppendPlacementNode(child, before, parent);
                                    var sibling = child.sibling;
                                    while (sibling !== null) {
                                        insertOrAppendPlacementNode(sibling, before, parent);
                                        sibling = sibling.sibling;
                                    }
                                }
                            }
                        }
                        var hostParent = null;
                        var hostParentIsContainer = false;
                        function commitDeletionEffects(root2, returnFiber, deletedFiber) {
                            {
                                var parent = returnFiber;
                                findParent:
                                    while (parent !== null) {
                                        switch (parent.tag) {
                                            case HostComponent: {
                                                hostParent = parent.stateNode;
                                                hostParentIsContainer = false;
                                                break findParent;
                                            }
                                            case HostRoot: {
                                                hostParent = parent.stateNode.containerInfo;
                                                hostParentIsContainer = true;
                                                break findParent;
                                            }
                                            case HostPortal: {
                                                hostParent = parent.stateNode.containerInfo;
                                                hostParentIsContainer = true;
                                                break findParent;
                                            }
                                        }
                                        parent = parent.return;
                                    }
                                if (hostParent === null) {
                                    throw new Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
                                }
                                commitDeletionEffectsOnFiber(root2, returnFiber, deletedFiber);
                                hostParent = null;
                                hostParentIsContainer = false;
                            }
                            detachFiberMutation(deletedFiber);
                        }
                        function recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, parent) {
                            var child = parent.child;
                            while (child !== null) {
                                commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, child);
                                child = child.sibling;
                            }
                        }
                        function commitDeletionEffectsOnFiber(finishedRoot, nearestMountedAncestor, deletedFiber) {
                            onCommitUnmount(deletedFiber);
                            switch (deletedFiber.tag) {
                                case HostComponent: {
                                    if (!offscreenSubtreeWasHidden) {
                                        safelyDetachRef(deletedFiber, nearestMountedAncestor);
                                    }
                                }
                                case HostText: {
                                    {
                                        var prevHostParent = hostParent;
                                        var prevHostParentIsContainer = hostParentIsContainer;
                                        hostParent = null;
                                        recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                                        hostParent = prevHostParent;
                                        hostParentIsContainer = prevHostParentIsContainer;
                                        if (hostParent !== null) {
                                            if (hostParentIsContainer) {
                                                removeChildFromContainer(hostParent, deletedFiber.stateNode);
                                            } else {
                                                removeChild(hostParent, deletedFiber.stateNode);
                                            }
                                        }
                                    }
                                    return;
                                }
                                case DehydratedFragment: {
                                    {
                                        if (hostParent !== null) {
                                            if (hostParentIsContainer) {
                                                clearSuspenseBoundaryFromContainer(hostParent, deletedFiber.stateNode);
                                            } else {
                                                clearSuspenseBoundary(hostParent, deletedFiber.stateNode);
                                            }
                                        }
                                    }
                                    return;
                                }
                                case HostPortal: {
                                    {
                                        var _prevHostParent = hostParent;
                                        var _prevHostParentIsContainer = hostParentIsContainer;
                                        hostParent = deletedFiber.stateNode.containerInfo;
                                        hostParentIsContainer = true;
                                        recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                                        hostParent = _prevHostParent;
                                        hostParentIsContainer = _prevHostParentIsContainer;
                                    }
                                    return;
                                }
                                case FunctionComponent:
                                case ForwardRef:
                                case MemoComponent:
                                case SimpleMemoComponent: {
                                    if (!offscreenSubtreeWasHidden) {
                                        var updateQueue = deletedFiber.updateQueue;
                                        if (updateQueue !== null) {
                                            var lastEffect = updateQueue.lastEffect;
                                            if (lastEffect !== null) {
                                                var firstEffect = lastEffect.next;
                                                var effect = firstEffect;
                                                do {
                                                    var _effect = effect, destroy = _effect.destroy, tag = _effect.tag;
                                                    if (destroy !== void 0) {
                                                        if ((tag & Insertion) !== NoFlags$1) {
                                                            safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);
                                                        } else if ((tag & Layout) !== NoFlags$1) {
                                                            {
                                                                markComponentLayoutEffectUnmountStarted(deletedFiber);
                                                            }
                                                            if (deletedFiber.mode & ProfileMode) {
                                                                startLayoutEffectTimer();
                                                                safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);
                                                                recordLayoutEffectDuration(deletedFiber);
                                                            } else {
                                                                safelyCallDestroy(deletedFiber, nearestMountedAncestor, destroy);
                                                            }
                                                            {
                                                                markComponentLayoutEffectUnmountStopped();
                                                            }
                                                        }
                                                    }
                                                    effect = effect.next;
                                                } while (effect !== firstEffect);
                                            }
                                        }
                                    }
                                    recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                                    return;
                                }
                                case ClassComponent: {
                                    if (!offscreenSubtreeWasHidden) {
                                        safelyDetachRef(deletedFiber, nearestMountedAncestor);
                                        var instance2 = deletedFiber.stateNode;
                                        if (typeof instance2.componentWillUnmount === "function") {
                                            safelyCallComponentWillUnmount(deletedFiber, nearestMountedAncestor, instance2);
                                        }
                                    }
                                    recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                                    return;
                                }
                                case ScopeComponent: {
                                    recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                                    return;
                                }
                                case OffscreenComponent: {
                                    if (
                                        // TODO: Remove this dead flag
                                        deletedFiber.mode & ConcurrentMode
                                    ) {
                                        var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
                                        offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden || deletedFiber.memoizedState !== null;
                                        recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                                        offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
                                    } else {
                                        recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                                    }
                                    break;
                                }
                                default: {
                                    recursivelyTraverseDeletionEffects(finishedRoot, nearestMountedAncestor, deletedFiber);
                                    return;
                                }
                            }
                        }
                        function commitSuspenseCallback(finishedWork) {
                            var newState = finishedWork.memoizedState;
                        }
                        function commitSuspenseHydrationCallbacks(finishedRoot, finishedWork) {
                            var newState = finishedWork.memoizedState;
                            if (newState === null) {
                                var current2 = finishedWork.alternate;
                                if (current2 !== null) {
                                    var prevState = current2.memoizedState;
                                    if (prevState !== null) {
                                        var suspenseInstance = prevState.dehydrated;
                                        if (suspenseInstance !== null) {
                                            commitHydratedSuspenseInstance(suspenseInstance);
                                        }
                                    }
                                }
                            }
                        }
                        function attachSuspenseRetryListeners(finishedWork) {
                            var wakeables = finishedWork.updateQueue;
                            if (wakeables !== null) {
                                finishedWork.updateQueue = null;
                                var retryCache = finishedWork.stateNode;
                                if (retryCache === null) {
                                    retryCache = finishedWork.stateNode = new PossiblyWeakSet();
                                }
                                wakeables.forEach(function(wakeable) {
                                    var retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);
                                    if (!retryCache.has(wakeable)) {
                                        retryCache.add(wakeable);
                                        {
                                            if (isDevToolsPresent) {
                                                if (inProgressLanes !== null && inProgressRoot !== null) {
                                                    restorePendingUpdaters(inProgressRoot, inProgressLanes);
                                                } else {
                                                    throw Error("Expected finished root and lanes to be set. This is a bug in React.");
                                                }
                                            }
                                        }
                                        wakeable.then(retry, retry);
                                    }
                                });
                            }
                        }
                        function commitMutationEffects(root2, finishedWork, committedLanes) {
                            inProgressLanes = committedLanes;
                            inProgressRoot = root2;
                            setCurrentFiber(finishedWork);
                            commitMutationEffectsOnFiber(finishedWork, root2);
                            setCurrentFiber(finishedWork);
                            inProgressLanes = null;
                            inProgressRoot = null;
                        }
                        function recursivelyTraverseMutationEffects(root2, parentFiber, lanes) {
                            var deletions = parentFiber.deletions;
                            if (deletions !== null) {
                                for (var i = 0; i < deletions.length; i++) {
                                    var childToDelete = deletions[i];
                                    try {
                                        commitDeletionEffects(root2, parentFiber, childToDelete);
                                    } catch (error2) {
                                        captureCommitPhaseError(childToDelete, parentFiber, error2);
                                    }
                                }
                            }
                            var prevDebugFiber = getCurrentFiber();
                            if (parentFiber.subtreeFlags & MutationMask) {
                                var child = parentFiber.child;
                                while (child !== null) {
                                    setCurrentFiber(child);
                                    commitMutationEffectsOnFiber(child, root2);
                                    child = child.sibling;
                                }
                            }
                            setCurrentFiber(prevDebugFiber);
                        }
                        function commitMutationEffectsOnFiber(finishedWork, root2, lanes) {
                            var current2 = finishedWork.alternate;
                            var flags = finishedWork.flags;
                            switch (finishedWork.tag) {
                                case FunctionComponent:
                                case ForwardRef:
                                case MemoComponent:
                                case SimpleMemoComponent: {
                                    recursivelyTraverseMutationEffects(root2, finishedWork);
                                    commitReconciliationEffects(finishedWork);
                                    if (flags & Update) {
                                        try {
                                            commitHookEffectListUnmount(Insertion | HasEffect, finishedWork, finishedWork.return);
                                            commitHookEffectListMount(Insertion | HasEffect, finishedWork);
                                        } catch (error2) {
                                            captureCommitPhaseError(finishedWork, finishedWork.return, error2);
                                        }
                                        if (finishedWork.mode & ProfileMode) {
                                            try {
                                                startLayoutEffectTimer();
                                                commitHookEffectListUnmount(Layout | HasEffect, finishedWork, finishedWork.return);
                                            } catch (error2) {
                                                captureCommitPhaseError(finishedWork, finishedWork.return, error2);
                                            }
                                            recordLayoutEffectDuration(finishedWork);
                                        } else {
                                            try {
                                                commitHookEffectListUnmount(Layout | HasEffect, finishedWork, finishedWork.return);
                                            } catch (error2) {
                                                captureCommitPhaseError(finishedWork, finishedWork.return, error2);
                                            }
                                        }
                                    }
                                    return;
                                }
                                case ClassComponent: {
                                    recursivelyTraverseMutationEffects(root2, finishedWork);
                                    commitReconciliationEffects(finishedWork);
                                    if (flags & Ref) {
                                        if (current2 !== null) {
                                            safelyDetachRef(current2, current2.return);
                                        }
                                    }
                                    return;
                                }
                                case HostComponent: {
                                    recursivelyTraverseMutationEffects(root2, finishedWork);
                                    commitReconciliationEffects(finishedWork);
                                    if (flags & Ref) {
                                        if (current2 !== null) {
                                            safelyDetachRef(current2, current2.return);
                                        }
                                    }
                                    {
                                        if (finishedWork.flags & ContentReset) {
                                            var instance2 = finishedWork.stateNode;
                                            try {
                                                resetTextContent(instance2);
                                            } catch (error2) {
                                                captureCommitPhaseError(finishedWork, finishedWork.return, error2);
                                            }
                                        }
                                        if (flags & Update) {
                                            var _instance4 = finishedWork.stateNode;
                                            if (_instance4 != null) {
                                                var newProps = finishedWork.memoizedProps;
                                                var oldProps = current2 !== null ? current2.memoizedProps : newProps;
                                                var type = finishedWork.type;
                                                var updatePayload = finishedWork.updateQueue;
                                                finishedWork.updateQueue = null;
                                                if (updatePayload !== null) {
                                                    try {
                                                        commitUpdate(_instance4, updatePayload, type, oldProps, newProps, finishedWork);
                                                    } catch (error2) {
                                                        captureCommitPhaseError(finishedWork, finishedWork.return, error2);
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    return;
                                }
                                case HostText: {
                                    recursivelyTraverseMutationEffects(root2, finishedWork);
                                    commitReconciliationEffects(finishedWork);
                                    if (flags & Update) {
                                        {
                                            if (finishedWork.stateNode === null) {
                                                throw new Error("This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.");
                                            }
                                            var textInstance = finishedWork.stateNode;
                                            var newText = finishedWork.memoizedProps;
                                            var oldText = current2 !== null ? current2.memoizedProps : newText;
                                            try {
                                                commitTextUpdate(textInstance, oldText, newText);
                                            } catch (error2) {
                                                captureCommitPhaseError(finishedWork, finishedWork.return, error2);
                                            }
                                        }
                                    }
                                    return;
                                }
                                case HostRoot: {
                                    recursivelyTraverseMutationEffects(root2, finishedWork);
                                    commitReconciliationEffects(finishedWork);
                                    if (flags & Update) {
                                        {
                                            if (current2 !== null) {
                                                var prevRootState = current2.memoizedState;
                                                if (prevRootState.isDehydrated) {
                                                    try {
                                                        commitHydratedContainer(root2.containerInfo);
                                                    } catch (error2) {
                                                        captureCommitPhaseError(finishedWork, finishedWork.return, error2);
                                                    }
                                                }
                                            }
                                        }
                                    }
                                    return;
                                }
                                case HostPortal: {
                                    recursivelyTraverseMutationEffects(root2, finishedWork);
                                    commitReconciliationEffects(finishedWork);
                                    return;
                                }
                                case SuspenseComponent: {
                                    recursivelyTraverseMutationEffects(root2, finishedWork);
                                    commitReconciliationEffects(finishedWork);
                                    var offscreenFiber = finishedWork.child;
                                    if (offscreenFiber.flags & Visibility) {
                                        var offscreenInstance = offscreenFiber.stateNode;
                                        var newState = offscreenFiber.memoizedState;
                                        var isHidden = newState !== null;
                                        offscreenInstance.isHidden = isHidden;
                                        if (isHidden) {
                                            var wasHidden = offscreenFiber.alternate !== null && offscreenFiber.alternate.memoizedState !== null;
                                            if (!wasHidden) {
                                                markCommitTimeOfFallback();
                                            }
                                        }
                                    }
                                    if (flags & Update) {
                                        try {
                                            commitSuspenseCallback(finishedWork);
                                        } catch (error2) {
                                            captureCommitPhaseError(finishedWork, finishedWork.return, error2);
                                        }
                                        attachSuspenseRetryListeners(finishedWork);
                                    }
                                    return;
                                }
                                case OffscreenComponent: {
                                    var _wasHidden = current2 !== null && current2.memoizedState !== null;
                                    if (
                                        // TODO: Remove this dead flag
                                        finishedWork.mode & ConcurrentMode
                                    ) {
                                        var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
                                        offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden || _wasHidden;
                                        recursivelyTraverseMutationEffects(root2, finishedWork);
                                        offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
                                    } else {
                                        recursivelyTraverseMutationEffects(root2, finishedWork);
                                    }
                                    commitReconciliationEffects(finishedWork);
                                    if (flags & Visibility) {
                                        var _offscreenInstance = finishedWork.stateNode;
                                        var _newState = finishedWork.memoizedState;
                                        var _isHidden = _newState !== null;
                                        var offscreenBoundary = finishedWork;
                                        _offscreenInstance.isHidden = _isHidden;
                                        {
                                            if (_isHidden) {
                                                if (!_wasHidden) {
                                                    if ((offscreenBoundary.mode & ConcurrentMode) !== NoMode) {
                                                        nextEffect = offscreenBoundary;
                                                        var offscreenChild = offscreenBoundary.child;
                                                        while (offscreenChild !== null) {
                                                            nextEffect = offscreenChild;
                                                            disappearLayoutEffects_begin(offscreenChild);
                                                            offscreenChild = offscreenChild.sibling;
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        {
                                            hideOrUnhideAllChildren(offscreenBoundary, _isHidden);
                                        }
                                    }
                                    return;
                                }
                                case SuspenseListComponent: {
                                    recursivelyTraverseMutationEffects(root2, finishedWork);
                                    commitReconciliationEffects(finishedWork);
                                    if (flags & Update) {
                                        attachSuspenseRetryListeners(finishedWork);
                                    }
                                    return;
                                }
                                case ScopeComponent: {
                                    return;
                                }
                                default: {
                                    recursivelyTraverseMutationEffects(root2, finishedWork);
                                    commitReconciliationEffects(finishedWork);
                                    return;
                                }
                            }
                        }
                        function commitReconciliationEffects(finishedWork) {
                            var flags = finishedWork.flags;
                            if (flags & Placement) {
                                try {
                                    commitPlacement(finishedWork);
                                } catch (error2) {
                                    captureCommitPhaseError(finishedWork, finishedWork.return, error2);
                                }
                                finishedWork.flags &= ~Placement;
                            }
                            if (flags & Hydrating) {
                                finishedWork.flags &= ~Hydrating;
                            }
                        }
                        function commitLayoutEffects(finishedWork, root2, committedLanes) {
                            inProgressLanes = committedLanes;
                            inProgressRoot = root2;
                            nextEffect = finishedWork;
                            commitLayoutEffects_begin(finishedWork, root2, committedLanes);
                            inProgressLanes = null;
                            inProgressRoot = null;
                        }
                        function commitLayoutEffects_begin(subtreeRoot, root2, committedLanes) {
                            var isModernRoot = (subtreeRoot.mode & ConcurrentMode) !== NoMode;
                            while (nextEffect !== null) {
                                var fiber = nextEffect;
                                var firstChild = fiber.child;
                                if (fiber.tag === OffscreenComponent && isModernRoot) {
                                    var isHidden = fiber.memoizedState !== null;
                                    var newOffscreenSubtreeIsHidden = isHidden || offscreenSubtreeIsHidden;
                                    if (newOffscreenSubtreeIsHidden) {
                                        commitLayoutMountEffects_complete(subtreeRoot, root2, committedLanes);
                                        continue;
                                    } else {
                                        var current2 = fiber.alternate;
                                        var wasHidden = current2 !== null && current2.memoizedState !== null;
                                        var newOffscreenSubtreeWasHidden = wasHidden || offscreenSubtreeWasHidden;
                                        var prevOffscreenSubtreeIsHidden = offscreenSubtreeIsHidden;
                                        var prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;
                                        offscreenSubtreeIsHidden = newOffscreenSubtreeIsHidden;
                                        offscreenSubtreeWasHidden = newOffscreenSubtreeWasHidden;
                                        if (offscreenSubtreeWasHidden && !prevOffscreenSubtreeWasHidden) {
                                            nextEffect = fiber;
                                            reappearLayoutEffects_begin(fiber);
                                        }
                                        var child = firstChild;
                                        while (child !== null) {
                                            nextEffect = child;
                                            commitLayoutEffects_begin(
                                                child,
                                                // New root; bubble back up to here and stop.
                                                root2,
                                                committedLanes
                                            );
                                            child = child.sibling;
                                        }
                                        nextEffect = fiber;
                                        offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden;
                                        offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;
                                        commitLayoutMountEffects_complete(subtreeRoot, root2, committedLanes);
                                        continue;
                                    }
                                }
                                if ((fiber.subtreeFlags & LayoutMask) !== NoFlags && firstChild !== null) {
                                    firstChild.return = fiber;
                                    nextEffect = firstChild;
                                } else {
                                    commitLayoutMountEffects_complete(subtreeRoot, root2, committedLanes);
                                }
                            }
                        }
                        function commitLayoutMountEffects_complete(subtreeRoot, root2, committedLanes) {
                            while (nextEffect !== null) {
                                var fiber = nextEffect;
                                if ((fiber.flags & LayoutMask) !== NoFlags) {
                                    var current2 = fiber.alternate;
                                    setCurrentFiber(fiber);
                                    try {
                                        commitLayoutEffectOnFiber(root2, current2, fiber, committedLanes);
                                    } catch (error2) {
                                        captureCommitPhaseError(fiber, fiber.return, error2);
                                    }
                                    resetCurrentFiber();
                                }
                                if (fiber === subtreeRoot) {
                                    nextEffect = null;
                                    return;
                                }
                                var sibling = fiber.sibling;
                                if (sibling !== null) {
                                    sibling.return = fiber.return;
                                    nextEffect = sibling;
                                    return;
                                }
                                nextEffect = fiber.return;
                            }
                        }
                        function disappearLayoutEffects_begin(subtreeRoot) {
                            while (nextEffect !== null) {
                                var fiber = nextEffect;
                                var firstChild = fiber.child;
                                switch (fiber.tag) {
                                    case FunctionComponent:
                                    case ForwardRef:
                                    case MemoComponent:
                                    case SimpleMemoComponent: {
                                        if (fiber.mode & ProfileMode) {
                                            try {
                                                startLayoutEffectTimer();
                                                commitHookEffectListUnmount(Layout, fiber, fiber.return);
                                            } finally {
                                                recordLayoutEffectDuration(fiber);
                                            }
                                        } else {
                                            commitHookEffectListUnmount(Layout, fiber, fiber.return);
                                        }
                                        break;
                                    }
                                    case ClassComponent: {
                                        safelyDetachRef(fiber, fiber.return);
                                        var instance2 = fiber.stateNode;
                                        if (typeof instance2.componentWillUnmount === "function") {
                                            safelyCallComponentWillUnmount(fiber, fiber.return, instance2);
                                        }
                                        break;
                                    }
                                    case HostComponent: {
                                        safelyDetachRef(fiber, fiber.return);
                                        break;
                                    }
                                    case OffscreenComponent: {
                                        var isHidden = fiber.memoizedState !== null;
                                        if (isHidden) {
                                            disappearLayoutEffects_complete(subtreeRoot);
                                            continue;
                                        }
                                        break;
                                    }
                                }
                                if (firstChild !== null) {
                                    firstChild.return = fiber;
                                    nextEffect = firstChild;
                                } else {
                                    disappearLayoutEffects_complete(subtreeRoot);
                                }
                            }
                        }
                        function disappearLayoutEffects_complete(subtreeRoot) {
                            while (nextEffect !== null) {
                                var fiber = nextEffect;
                                if (fiber === subtreeRoot) {
                                    nextEffect = null;
                                    return;
                                }
                                var sibling = fiber.sibling;
                                if (sibling !== null) {
                                    sibling.return = fiber.return;
                                    nextEffect = sibling;
                                    return;
                                }
                                nextEffect = fiber.return;
                            }
                        }
                        function reappearLayoutEffects_begin(subtreeRoot) {
                            while (nextEffect !== null) {
                                var fiber = nextEffect;
                                var firstChild = fiber.child;
                                if (fiber.tag === OffscreenComponent) {
                                    var isHidden = fiber.memoizedState !== null;
                                    if (isHidden) {
                                        reappearLayoutEffects_complete(subtreeRoot);
                                        continue;
                                    }
                                }
                                if (firstChild !== null) {
                                    firstChild.return = fiber;
                                    nextEffect = firstChild;
                                } else {
                                    reappearLayoutEffects_complete(subtreeRoot);
                                }
                            }
                        }
                        function reappearLayoutEffects_complete(subtreeRoot) {
                            while (nextEffect !== null) {
                                var fiber = nextEffect;
                                setCurrentFiber(fiber);
                                try {
                                    reappearLayoutEffectsOnFiber(fiber);
                                } catch (error2) {
                                    captureCommitPhaseError(fiber, fiber.return, error2);
                                }
                                resetCurrentFiber();
                                if (fiber === subtreeRoot) {
                                    nextEffect = null;
                                    return;
                                }
                                var sibling = fiber.sibling;
                                if (sibling !== null) {
                                    sibling.return = fiber.return;
                                    nextEffect = sibling;
                                    return;
                                }
                                nextEffect = fiber.return;
                            }
                        }
                        function commitPassiveMountEffects(root2, finishedWork, committedLanes, committedTransitions) {
                            nextEffect = finishedWork;
                            commitPassiveMountEffects_begin(finishedWork, root2, committedLanes, committedTransitions);
                        }
                        function commitPassiveMountEffects_begin(subtreeRoot, root2, committedLanes, committedTransitions) {
                            while (nextEffect !== null) {
                                var fiber = nextEffect;
                                var firstChild = fiber.child;
                                if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && firstChild !== null) {
                                    firstChild.return = fiber;
                                    nextEffect = firstChild;
                                } else {
                                    commitPassiveMountEffects_complete(subtreeRoot, root2, committedLanes, committedTransitions);
                                }
                            }
                        }
                        function commitPassiveMountEffects_complete(subtreeRoot, root2, committedLanes, committedTransitions) {
                            while (nextEffect !== null) {
                                var fiber = nextEffect;
                                if ((fiber.flags & Passive) !== NoFlags) {
                                    setCurrentFiber(fiber);
                                    try {
                                        commitPassiveMountOnFiber(root2, fiber, committedLanes, committedTransitions);
                                    } catch (error2) {
                                        captureCommitPhaseError(fiber, fiber.return, error2);
                                    }
                                    resetCurrentFiber();
                                }
                                if (fiber === subtreeRoot) {
                                    nextEffect = null;
                                    return;
                                }
                                var sibling = fiber.sibling;
                                if (sibling !== null) {
                                    sibling.return = fiber.return;
                                    nextEffect = sibling;
                                    return;
                                }
                                nextEffect = fiber.return;
                            }
                        }
                        function commitPassiveMountOnFiber(finishedRoot, finishedWork, committedLanes, committedTransitions) {
                            switch (finishedWork.tag) {
                                case FunctionComponent:
                                case ForwardRef:
                                case SimpleMemoComponent: {
                                    if (finishedWork.mode & ProfileMode) {
                                        startPassiveEffectTimer();
                                        try {
                                            commitHookEffectListMount(Passive$1 | HasEffect, finishedWork);
                                        } finally {
                                            recordPassiveEffectDuration(finishedWork);
                                        }
                                    } else {
                                        commitHookEffectListMount(Passive$1 | HasEffect, finishedWork);
                                    }
                                    break;
                                }
                            }
                        }
                        function commitPassiveUnmountEffects(firstChild) {
                            nextEffect = firstChild;
                            commitPassiveUnmountEffects_begin();
                        }
                        function commitPassiveUnmountEffects_begin() {
                            while (nextEffect !== null) {
                                var fiber = nextEffect;
                                var child = fiber.child;
                                if ((nextEffect.flags & ChildDeletion) !== NoFlags) {
                                    var deletions = fiber.deletions;
                                    if (deletions !== null) {
                                        for (var i = 0; i < deletions.length; i++) {
                                            var fiberToDelete = deletions[i];
                                            nextEffect = fiberToDelete;
                                            commitPassiveUnmountEffectsInsideOfDeletedTree_begin(fiberToDelete, fiber);
                                        }
                                        {
                                            var previousFiber = fiber.alternate;
                                            if (previousFiber !== null) {
                                                var detachedChild = previousFiber.child;
                                                if (detachedChild !== null) {
                                                    previousFiber.child = null;
                                                    do {
                                                        var detachedSibling = detachedChild.sibling;
                                                        detachedChild.sibling = null;
                                                        detachedChild = detachedSibling;
                                                    } while (detachedChild !== null);
                                                }
                                            }
                                        }
                                        nextEffect = fiber;
                                    }
                                }
                                if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && child !== null) {
                                    child.return = fiber;
                                    nextEffect = child;
                                } else {
                                    commitPassiveUnmountEffects_complete();
                                }
                            }
                        }
                        function commitPassiveUnmountEffects_complete() {
                            while (nextEffect !== null) {
                                var fiber = nextEffect;
                                if ((fiber.flags & Passive) !== NoFlags) {
                                    setCurrentFiber(fiber);
                                    commitPassiveUnmountOnFiber(fiber);
                                    resetCurrentFiber();
                                }
                                var sibling = fiber.sibling;
                                if (sibling !== null) {
                                    sibling.return = fiber.return;
                                    nextEffect = sibling;
                                    return;
                                }
                                nextEffect = fiber.return;
                            }
                        }
                        function commitPassiveUnmountOnFiber(finishedWork) {
                            switch (finishedWork.tag) {
                                case FunctionComponent:
                                case ForwardRef:
                                case SimpleMemoComponent: {
                                    if (finishedWork.mode & ProfileMode) {
                                        startPassiveEffectTimer();
                                        commitHookEffectListUnmount(Passive$1 | HasEffect, finishedWork, finishedWork.return);
                                        recordPassiveEffectDuration(finishedWork);
                                    } else {
                                        commitHookEffectListUnmount(Passive$1 | HasEffect, finishedWork, finishedWork.return);
                                    }
                                    break;
                                }
                            }
                        }
                        function commitPassiveUnmountEffectsInsideOfDeletedTree_begin(deletedSubtreeRoot, nearestMountedAncestor) {
                            while (nextEffect !== null) {
                                var fiber = nextEffect;
                                setCurrentFiber(fiber);
                                commitPassiveUnmountInsideDeletedTreeOnFiber(fiber, nearestMountedAncestor);
                                resetCurrentFiber();
                                var child = fiber.child;
                                if (child !== null) {
                                    child.return = fiber;
                                    nextEffect = child;
                                } else {
                                    commitPassiveUnmountEffectsInsideOfDeletedTree_complete(deletedSubtreeRoot);
                                }
                            }
                        }
                        function commitPassiveUnmountEffectsInsideOfDeletedTree_complete(deletedSubtreeRoot) {
                            while (nextEffect !== null) {
                                var fiber = nextEffect;
                                var sibling = fiber.sibling;
                                var returnFiber = fiber.return;
                                {
                                    detachFiberAfterEffects(fiber);
                                    if (fiber === deletedSubtreeRoot) {
                                        nextEffect = null;
                                        return;
                                    }
                                }
                                if (sibling !== null) {
                                    sibling.return = returnFiber;
                                    nextEffect = sibling;
                                    return;
                                }
                                nextEffect = returnFiber;
                            }
                        }
                        function commitPassiveUnmountInsideDeletedTreeOnFiber(current2, nearestMountedAncestor) {
                            switch (current2.tag) {
                                case FunctionComponent:
                                case ForwardRef:
                                case SimpleMemoComponent: {
                                    if (current2.mode & ProfileMode) {
                                        startPassiveEffectTimer();
                                        commitHookEffectListUnmount(Passive$1, current2, nearestMountedAncestor);
                                        recordPassiveEffectDuration(current2);
                                    } else {
                                        commitHookEffectListUnmount(Passive$1, current2, nearestMountedAncestor);
                                    }
                                    break;
                                }
                            }
                        }
                        function invokeLayoutEffectMountInDEV(fiber) {
                            {
                                switch (fiber.tag) {
                                    case FunctionComponent:
                                    case ForwardRef:
                                    case SimpleMemoComponent: {
                                        try {
                                            commitHookEffectListMount(Layout | HasEffect, fiber);
                                        } catch (error2) {
                                            captureCommitPhaseError(fiber, fiber.return, error2);
                                        }
                                        break;
                                    }
                                    case ClassComponent: {
                                        var instance2 = fiber.stateNode;
                                        try {
                                            instance2.componentDidMount();
                                        } catch (error2) {
                                            captureCommitPhaseError(fiber, fiber.return, error2);
                                        }
                                        break;
                                    }
                                }
                            }
                        }
                        function invokePassiveEffectMountInDEV(fiber) {
                            {
                                switch (fiber.tag) {
                                    case FunctionComponent:
                                    case ForwardRef:
                                    case SimpleMemoComponent: {
                                        try {
                                            commitHookEffectListMount(Passive$1 | HasEffect, fiber);
                                        } catch (error2) {
                                            captureCommitPhaseError(fiber, fiber.return, error2);
                                        }
                                        break;
                                    }
                                }
                            }
                        }
                        function invokeLayoutEffectUnmountInDEV(fiber) {
                            {
                                switch (fiber.tag) {
                                    case FunctionComponent:
                                    case ForwardRef:
                                    case SimpleMemoComponent: {
                                        try {
                                            commitHookEffectListUnmount(Layout | HasEffect, fiber, fiber.return);
                                        } catch (error2) {
                                            captureCommitPhaseError(fiber, fiber.return, error2);
                                        }
                                        break;
                                    }
                                    case ClassComponent: {
                                        var instance2 = fiber.stateNode;
                                        if (typeof instance2.componentWillUnmount === "function") {
                                            safelyCallComponentWillUnmount(fiber, fiber.return, instance2);
                                        }
                                        break;
                                    }
                                }
                            }
                        }
                        function invokePassiveEffectUnmountInDEV(fiber) {
                            {
                                switch (fiber.tag) {
                                    case FunctionComponent:
                                    case ForwardRef:
                                    case SimpleMemoComponent: {
                                        try {
                                            commitHookEffectListUnmount(Passive$1 | HasEffect, fiber, fiber.return);
                                        } catch (error2) {
                                            captureCommitPhaseError(fiber, fiber.return, error2);
                                        }
                                    }
                                }
                            }
                        }
                        var COMPONENT_TYPE = 0;
                        var HAS_PSEUDO_CLASS_TYPE = 1;
                        var ROLE_TYPE = 2;
                        var TEST_NAME_TYPE = 3;
                        var TEXT_TYPE = 4;
                        if (typeof Symbol === "function" && Symbol.for) {
                            var symbolFor = Symbol.for;
                            COMPONENT_TYPE = symbolFor("selector.component");
                            HAS_PSEUDO_CLASS_TYPE = symbolFor("selector.has_pseudo_class");
                            ROLE_TYPE = symbolFor("selector.role");
                            TEST_NAME_TYPE = symbolFor("selector.test_id");
                            TEXT_TYPE = symbolFor("selector.text");
                        }
                        var commitHooks = [];
                        function onCommitRoot$1() {
                            {
                                commitHooks.forEach(function(commitHook) {
                                    return commitHook();
                                });
                            }
                        }
                        var ReactCurrentActQueue = ReactSharedInternals.ReactCurrentActQueue;
                        function isLegacyActEnvironment(fiber) {
                            {
                                var isReactActEnvironmentGlobal = (
                                    // $FlowExpectedError – Flow doesn't know about IS_REACT_ACT_ENVIRONMENT global
                                    typeof IS_REACT_ACT_ENVIRONMENT !== "undefined" ? IS_REACT_ACT_ENVIRONMENT : void 0
                                );
                                var jestIsDefined = typeof jest !== "undefined";
                                return jestIsDefined && isReactActEnvironmentGlobal !== false;
                            }
                        }
                        function isConcurrentActEnvironment() {
                            {
                                var isReactActEnvironmentGlobal = (
                                    // $FlowExpectedError – Flow doesn't know about IS_REACT_ACT_ENVIRONMENT global
                                    typeof IS_REACT_ACT_ENVIRONMENT !== "undefined" ? IS_REACT_ACT_ENVIRONMENT : void 0
                                );
                                if (!isReactActEnvironmentGlobal && ReactCurrentActQueue.current !== null) {
                                    error("The current testing environment is not configured to support act(...)");
                                }
                                return isReactActEnvironmentGlobal;
                            }
                        }
                        var ceil = Math.ceil;
                        var ReactCurrentDispatcher$2 = ReactSharedInternals.ReactCurrentDispatcher, ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner, ReactCurrentBatchConfig$3 = ReactSharedInternals.ReactCurrentBatchConfig, ReactCurrentActQueue$1 = ReactSharedInternals.ReactCurrentActQueue;
                        var NoContext = (
                            /*             */
                            0
                        );
                        var BatchedContext = (
                            /*               */
                            1
                        );
                        var RenderContext = (
                            /*                */
                            2
                        );
                        var CommitContext = (
                            /*                */
                            4
                        );
                        var RootInProgress = 0;
                        var RootFatalErrored = 1;
                        var RootErrored = 2;
                        var RootSuspended = 3;
                        var RootSuspendedWithDelay = 4;
                        var RootCompleted = 5;
                        var RootDidNotComplete = 6;
                        var executionContext = NoContext;
                        var workInProgressRoot = null;
                        var workInProgress = null;
                        var workInProgressRootRenderLanes = NoLanes;
                        var subtreeRenderLanes = NoLanes;
                        var subtreeRenderLanesCursor = createCursor(NoLanes);
                        var workInProgressRootExitStatus = RootInProgress;
                        var workInProgressRootFatalError = null;
                        var workInProgressRootIncludedLanes = NoLanes;
                        var workInProgressRootSkippedLanes = NoLanes;
                        var workInProgressRootInterleavedUpdatedLanes = NoLanes;
                        var workInProgressRootPingedLanes = NoLanes;
                        var workInProgressRootConcurrentErrors = null;
                        var workInProgressRootRecoverableErrors = null;
                        var globalMostRecentFallbackTime = 0;
                        var FALLBACK_THROTTLE_MS = 500;
                        var workInProgressRootRenderTargetTime = Infinity;
                        var RENDER_TIMEOUT_MS = 500;
                        var workInProgressTransitions = null;
                        function resetRenderTimer() {
                            workInProgressRootRenderTargetTime = now() + RENDER_TIMEOUT_MS;
                        }
                        function getRenderTargetTime() {
                            return workInProgressRootRenderTargetTime;
                        }
                        var hasUncaughtError = false;
                        var firstUncaughtError = null;
                        var legacyErrorBoundariesThatAlreadyFailed = null;
                        var rootDoesHavePassiveEffects = false;
                        var rootWithPendingPassiveEffects = null;
                        var pendingPassiveEffectsLanes = NoLanes;
                        var pendingPassiveProfilerEffects = [];
                        var pendingPassiveTransitions = null;
                        var NESTED_UPDATE_LIMIT = 50;
                        var nestedUpdateCount = 0;
                        var rootWithNestedUpdates = null;
                        var isFlushingPassiveEffects = false;
                        var didScheduleUpdateDuringPassiveEffects = false;
                        var NESTED_PASSIVE_UPDATE_LIMIT = 50;
                        var nestedPassiveUpdateCount = 0;
                        var rootWithPassiveNestedUpdates = null;
                        var currentEventTime = NoTimestamp;
                        var currentEventTransitionLane = NoLanes;
                        var isRunningInsertionEffect = false;
                        function getWorkInProgressRoot() {
                            return workInProgressRoot;
                        }
                        function requestEventTime() {
                            if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
                                return now();
                            }
                            if (currentEventTime !== NoTimestamp) {
                                return currentEventTime;
                            }
                            currentEventTime = now();
                            return currentEventTime;
                        }
                        function requestUpdateLane(fiber) {
                            var mode = fiber.mode;
                            if ((mode & ConcurrentMode) === NoMode) {
                                return SyncLane;
                            } else if ((executionContext & RenderContext) !== NoContext && workInProgressRootRenderLanes !== NoLanes) {
                                return pickArbitraryLane(workInProgressRootRenderLanes);
                            }
                            var isTransition = requestCurrentTransition() !== NoTransition;
                            if (isTransition) {
                                if (ReactCurrentBatchConfig$3.transition !== null) {
                                    var transition = ReactCurrentBatchConfig$3.transition;
                                    if (!transition._updatedFibers) {
                                        transition._updatedFibers = /* @__PURE__ */ new Set();
                                    }
                                    transition._updatedFibers.add(fiber);
                                }
                                if (currentEventTransitionLane === NoLane) {
                                    currentEventTransitionLane = claimNextTransitionLane();
                                }
                                return currentEventTransitionLane;
                            }
                            var updateLane = getCurrentUpdatePriority();
                            if (updateLane !== NoLane) {
                                return updateLane;
                            }
                            var eventLane = getCurrentEventPriority();
                            return eventLane;
                        }
                        function requestRetryLane(fiber) {
                            var mode = fiber.mode;
                            if ((mode & ConcurrentMode) === NoMode) {
                                return SyncLane;
                            }
                            return claimNextRetryLane();
                        }
                        function scheduleUpdateOnFiber(root2, fiber, lane, eventTime) {
                            checkForNestedUpdates();
                            {
                                if (isRunningInsertionEffect) {
                                    error("useInsertionEffect must not schedule updates.");
                                }
                            }
                            {
                                if (isFlushingPassiveEffects) {
                                    didScheduleUpdateDuringPassiveEffects = true;
                                }
                            }
                            markRootUpdated(root2, lane, eventTime);
                            if ((executionContext & RenderContext) !== NoLanes && root2 === workInProgressRoot) {
                                warnAboutRenderPhaseUpdatesInDEV(fiber);
                            } else {
                                {
                                    if (isDevToolsPresent) {
                                        addFiberToLanesMap(root2, fiber, lane);
                                    }
                                }
                                warnIfUpdatesNotWrappedWithActDEV(fiber);
                                if (root2 === workInProgressRoot) {
                                    if ((executionContext & RenderContext) === NoContext) {
                                        workInProgressRootInterleavedUpdatedLanes = mergeLanes(workInProgressRootInterleavedUpdatedLanes, lane);
                                    }
                                    if (workInProgressRootExitStatus === RootSuspendedWithDelay) {
                                        markRootSuspended$1(root2, workInProgressRootRenderLanes);
                                    }
                                }
                                ensureRootIsScheduled(root2, eventTime);
                                if (lane === SyncLane && executionContext === NoContext && (fiber.mode & ConcurrentMode) === NoMode && // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.
                                    !ReactCurrentActQueue$1.isBatchingLegacy) {
                                    resetRenderTimer();
                                    flushSyncCallbacksOnlyInLegacyMode();
                                }
                            }
                        }
                        function scheduleInitialHydrationOnRoot(root2, lane, eventTime) {
                            var current2 = root2.current;
                            current2.lanes = lane;
                            markRootUpdated(root2, lane, eventTime);
                            ensureRootIsScheduled(root2, eventTime);
                        }
                        function isUnsafeClassRenderPhaseUpdate(fiber) {
                            return (
                                // TODO: Remove outdated deferRenderPhaseUpdateToNextBatch experiment. We
                                // decided not to enable it.
                                (executionContext & RenderContext) !== NoContext
                            );
                        }
                        function ensureRootIsScheduled(root2, currentTime) {
                            var existingCallbackNode = root2.callbackNode;
                            markStarvedLanesAsExpired(root2, currentTime);
                            var nextLanes = getNextLanes(root2, root2 === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);
                            if (nextLanes === NoLanes) {
                                if (existingCallbackNode !== null) {
                                    cancelCallback$1(existingCallbackNode);
                                }
                                root2.callbackNode = null;
                                root2.callbackPriority = NoLane;
                                return;
                            }
                            var newCallbackPriority = getHighestPriorityLane(nextLanes);
                            var existingCallbackPriority = root2.callbackPriority;
                            if (existingCallbackPriority === newCallbackPriority && // Special case related to `act`. If the currently scheduled task is a
                                // Scheduler task, rather than an `act` task, cancel it and re-scheduled
                                // on the `act` queue.
                                !(ReactCurrentActQueue$1.current !== null && existingCallbackNode !== fakeActCallbackNode)) {
                                {
                                    if (existingCallbackNode == null && existingCallbackPriority !== SyncLane) {
                                        error("Expected scheduled callback to exist. This error is likely caused by a bug in React. Please file an issue.");
                                    }
                                }
                                return;
                            }
                            if (existingCallbackNode != null) {
                                cancelCallback$1(existingCallbackNode);
                            }
                            var newCallbackNode;
                            if (newCallbackPriority === SyncLane) {
                                if (root2.tag === LegacyRoot) {
                                    if (ReactCurrentActQueue$1.isBatchingLegacy !== null) {
                                        ReactCurrentActQueue$1.didScheduleLegacyUpdate = true;
                                    }
                                    scheduleLegacySyncCallback(performSyncWorkOnRoot.bind(null, root2));
                                } else {
                                    scheduleSyncCallback(performSyncWorkOnRoot.bind(null, root2));
                                }
                                {
                                    if (ReactCurrentActQueue$1.current !== null) {
                                        ReactCurrentActQueue$1.current.push(flushSyncCallbacks);
                                    } else {
                                        scheduleMicrotask(function() {
                                            if ((executionContext & (RenderContext | CommitContext)) === NoContext) {
                                                flushSyncCallbacks();
                                            }
                                        });
                                    }
                                }
                                newCallbackNode = null;
                            } else {
                                var schedulerPriorityLevel;
                                switch (lanesToEventPriority(nextLanes)) {
                                    case DiscreteEventPriority:
                                        schedulerPriorityLevel = ImmediatePriority;
                                        break;
                                    case ContinuousEventPriority:
                                        schedulerPriorityLevel = UserBlockingPriority;
                                        break;
                                    case DefaultEventPriority:
                                        schedulerPriorityLevel = NormalPriority;
                                        break;
                                    case IdleEventPriority:
                                        schedulerPriorityLevel = IdlePriority;
                                        break;
                                    default:
                                        schedulerPriorityLevel = NormalPriority;
                                        break;
                                }
                                newCallbackNode = scheduleCallback$1(schedulerPriorityLevel, performConcurrentWorkOnRoot.bind(null, root2));
                            }
                            root2.callbackPriority = newCallbackPriority;
                            root2.callbackNode = newCallbackNode;
                        }
                        function performConcurrentWorkOnRoot(root2, didTimeout) {
                            {
                                resetNestedUpdateFlag();
                            }
                            currentEventTime = NoTimestamp;
                            currentEventTransitionLane = NoLanes;
                            if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
                                throw new Error("Should not already be working.");
                            }
                            var originalCallbackNode = root2.callbackNode;
                            var didFlushPassiveEffects = flushPassiveEffects();
                            if (didFlushPassiveEffects) {
                                if (root2.callbackNode !== originalCallbackNode) {
                                    return null;
                                }
                            }
                            var lanes = getNextLanes(root2, root2 === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes);
                            if (lanes === NoLanes) {
                                return null;
                            }
                            var shouldTimeSlice = !includesBlockingLane(root2, lanes) && !includesExpiredLane(root2, lanes) && !didTimeout;
                            var exitStatus = shouldTimeSlice ? renderRootConcurrent(root2, lanes) : renderRootSync(root2, lanes);
                            if (exitStatus !== RootInProgress) {
                                if (exitStatus === RootErrored) {
                                    var errorRetryLanes = getLanesToRetrySynchronouslyOnError(root2);
                                    if (errorRetryLanes !== NoLanes) {
                                        lanes = errorRetryLanes;
                                        exitStatus = recoverFromConcurrentError(root2, errorRetryLanes);
                                    }
                                }
                                if (exitStatus === RootFatalErrored) {
                                    var fatalError = workInProgressRootFatalError;
                                    prepareFreshStack(root2, NoLanes);
                                    markRootSuspended$1(root2, lanes);
                                    ensureRootIsScheduled(root2, now());
                                    throw fatalError;
                                }
                                if (exitStatus === RootDidNotComplete) {
                                    markRootSuspended$1(root2, lanes);
                                } else {
                                    var renderWasConcurrent = !includesBlockingLane(root2, lanes);
                                    var finishedWork = root2.current.alternate;
                                    if (renderWasConcurrent && !isRenderConsistentWithExternalStores(finishedWork)) {
                                        exitStatus = renderRootSync(root2, lanes);
                                        if (exitStatus === RootErrored) {
                                            var _errorRetryLanes = getLanesToRetrySynchronouslyOnError(root2);
                                            if (_errorRetryLanes !== NoLanes) {
                                                lanes = _errorRetryLanes;
                                                exitStatus = recoverFromConcurrentError(root2, _errorRetryLanes);
                                            }
                                        }
                                        if (exitStatus === RootFatalErrored) {
                                            var _fatalError = workInProgressRootFatalError;
                                            prepareFreshStack(root2, NoLanes);
                                            markRootSuspended$1(root2, lanes);
                                            ensureRootIsScheduled(root2, now());
                                            throw _fatalError;
                                        }
                                    }
                                    root2.finishedWork = finishedWork;
                                    root2.finishedLanes = lanes;
                                    finishConcurrentRender(root2, exitStatus, lanes);
                                }
                            }
                            ensureRootIsScheduled(root2, now());
                            if (root2.callbackNode === originalCallbackNode) {
                                return performConcurrentWorkOnRoot.bind(null, root2);
                            }
                            return null;
                        }
                        function recoverFromConcurrentError(root2, errorRetryLanes) {
                            var errorsFromFirstAttempt = workInProgressRootConcurrentErrors;
                            if (isRootDehydrated(root2)) {
                                var rootWorkInProgress = prepareFreshStack(root2, errorRetryLanes);
                                rootWorkInProgress.flags |= ForceClientRender;
                                {
                                    errorHydratingContainer(root2.containerInfo);
                                }
                            }
                            var exitStatus = renderRootSync(root2, errorRetryLanes);
                            if (exitStatus !== RootErrored) {
                                var errorsFromSecondAttempt = workInProgressRootRecoverableErrors;
                                workInProgressRootRecoverableErrors = errorsFromFirstAttempt;
                                if (errorsFromSecondAttempt !== null) {
                                    queueRecoverableErrors(errorsFromSecondAttempt);
                                }
                            }
                            return exitStatus;
                        }
                        function queueRecoverableErrors(errors) {
                            if (workInProgressRootRecoverableErrors === null) {
                                workInProgressRootRecoverableErrors = errors;
                            } else {
                                workInProgressRootRecoverableErrors.push.apply(workInProgressRootRecoverableErrors, errors);
                            }
                        }
                        function finishConcurrentRender(root2, exitStatus, lanes) {
                            switch (exitStatus) {
                                case RootInProgress:
                                case RootFatalErrored: {
                                    throw new Error("Root did not complete. This is a bug in React.");
                                }
                                case RootErrored: {
                                    commitRoot(root2, workInProgressRootRecoverableErrors, workInProgressTransitions);
                                    break;
                                }
                                case RootSuspended: {
                                    markRootSuspended$1(root2, lanes);
                                    if (includesOnlyRetries(lanes) && // do not delay if we're inside an act() scope
                                        !shouldForceFlushFallbacksInDEV()) {
                                        var msUntilTimeout = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now();
                                        if (msUntilTimeout > 10) {
                                            var nextLanes = getNextLanes(root2, NoLanes);
                                            if (nextLanes !== NoLanes) {
                                                break;
                                            }
                                            var suspendedLanes = root2.suspendedLanes;
                                            if (!isSubsetOfLanes(suspendedLanes, lanes)) {
                                                var eventTime = requestEventTime();
                                                markRootPinged(root2, suspendedLanes);
                                                break;
                                            }
                                            root2.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root2, workInProgressRootRecoverableErrors, workInProgressTransitions), msUntilTimeout);
                                            break;
                                        }
                                    }
                                    commitRoot(root2, workInProgressRootRecoverableErrors, workInProgressTransitions);
                                    break;
                                }
                                case RootSuspendedWithDelay: {
                                    markRootSuspended$1(root2, lanes);
                                    if (includesOnlyTransitions(lanes)) {
                                        break;
                                    }
                                    if (!shouldForceFlushFallbacksInDEV()) {
                                        var mostRecentEventTime = getMostRecentEventTime(root2, lanes);
                                        var eventTimeMs = mostRecentEventTime;
                                        var timeElapsedMs = now() - eventTimeMs;
                                        var _msUntilTimeout = jnd(timeElapsedMs) - timeElapsedMs;
                                        if (_msUntilTimeout > 10) {
                                            root2.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root2, workInProgressRootRecoverableErrors, workInProgressTransitions), _msUntilTimeout);
                                            break;
                                        }
                                    }
                                    commitRoot(root2, workInProgressRootRecoverableErrors, workInProgressTransitions);
                                    break;
                                }
                                case RootCompleted: {
                                    commitRoot(root2, workInProgressRootRecoverableErrors, workInProgressTransitions);
                                    break;
                                }
                                default: {
                                    throw new Error("Unknown root exit status.");
                                }
                            }
                        }
                        function isRenderConsistentWithExternalStores(finishedWork) {
                            var node = finishedWork;
                            while (true) {
                                if (node.flags & StoreConsistency) {
                                    var updateQueue = node.updateQueue;
                                    if (updateQueue !== null) {
                                        var checks = updateQueue.stores;
                                        if (checks !== null) {
                                            for (var i = 0; i < checks.length; i++) {
                                                var check = checks[i];
                                                var getSnapshot = check.getSnapshot;
                                                var renderedValue = check.value;
                                                try {
                                                    if (!objectIs(getSnapshot(), renderedValue)) {
                                                        return false;
                                                    }
                                                } catch (error2) {
                                                    return false;
                                                }
                                            }
                                        }
                                    }
                                }
                                var child = node.child;
                                if (node.subtreeFlags & StoreConsistency && child !== null) {
                                    child.return = node;
                                    node = child;
                                    continue;
                                }
                                if (node === finishedWork) {
                                    return true;
                                }
                                while (node.sibling === null) {
                                    if (node.return === null || node.return === finishedWork) {
                                        return true;
                                    }
                                    node = node.return;
                                }
                                node.sibling.return = node.return;
                                node = node.sibling;
                            }
                            return true;
                        }
                        function markRootSuspended$1(root2, suspendedLanes) {
                            suspendedLanes = removeLanes(suspendedLanes, workInProgressRootPingedLanes);
                            suspendedLanes = removeLanes(suspendedLanes, workInProgressRootInterleavedUpdatedLanes);
                            markRootSuspended(root2, suspendedLanes);
                        }
                        function performSyncWorkOnRoot(root2) {
                            {
                                syncNestedUpdateFlag();
                            }
                            if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
                                throw new Error("Should not already be working.");
                            }
                            flushPassiveEffects();
                            var lanes = getNextLanes(root2, NoLanes);
                            if (!includesSomeLane(lanes, SyncLane)) {
                                ensureRootIsScheduled(root2, now());
                                return null;
                            }
                            var exitStatus = renderRootSync(root2, lanes);
                            if (root2.tag !== LegacyRoot && exitStatus === RootErrored) {
                                var errorRetryLanes = getLanesToRetrySynchronouslyOnError(root2);
                                if (errorRetryLanes !== NoLanes) {
                                    lanes = errorRetryLanes;
                                    exitStatus = recoverFromConcurrentError(root2, errorRetryLanes);
                                }
                            }
                            if (exitStatus === RootFatalErrored) {
                                var fatalError = workInProgressRootFatalError;
                                prepareFreshStack(root2, NoLanes);
                                markRootSuspended$1(root2, lanes);
                                ensureRootIsScheduled(root2, now());
                                throw fatalError;
                            }
                            if (exitStatus === RootDidNotComplete) {
                                throw new Error("Root did not complete. This is a bug in React.");
                            }
                            var finishedWork = root2.current.alternate;
                            root2.finishedWork = finishedWork;
                            root2.finishedLanes = lanes;
                            commitRoot(root2, workInProgressRootRecoverableErrors, workInProgressTransitions);
                            ensureRootIsScheduled(root2, now());
                            return null;
                        }
                        function flushRoot(root2, lanes) {
                            if (lanes !== NoLanes) {
                                markRootEntangled(root2, mergeLanes(lanes, SyncLane));
                                ensureRootIsScheduled(root2, now());
                                if ((executionContext & (RenderContext | CommitContext)) === NoContext) {
                                    resetRenderTimer();
                                    flushSyncCallbacks();
                                }
                            }
                        }
                        function batchedUpdates$1(fn, a) {
                            var prevExecutionContext = executionContext;
                            executionContext |= BatchedContext;
                            try {
                                return fn(a);
                            } finally {
                                executionContext = prevExecutionContext;
                                if (executionContext === NoContext && // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.
                                    !ReactCurrentActQueue$1.isBatchingLegacy) {
                                    resetRenderTimer();
                                    flushSyncCallbacksOnlyInLegacyMode();
                                }
                            }
                        }
                        function discreteUpdates(fn, a, b, c, d) {
                            var previousPriority = getCurrentUpdatePriority();
                            var prevTransition = ReactCurrentBatchConfig$3.transition;
                            try {
                                ReactCurrentBatchConfig$3.transition = null;
                                setCurrentUpdatePriority(DiscreteEventPriority);
                                return fn(a, b, c, d);
                            } finally {
                                setCurrentUpdatePriority(previousPriority);
                                ReactCurrentBatchConfig$3.transition = prevTransition;
                                if (executionContext === NoContext) {
                                    resetRenderTimer();
                                }
                            }
                        }
                        function flushSync(fn) {
                            if (rootWithPendingPassiveEffects !== null && rootWithPendingPassiveEffects.tag === LegacyRoot && (executionContext & (RenderContext | CommitContext)) === NoContext) {
                                flushPassiveEffects();
                            }
                            var prevExecutionContext = executionContext;
                            executionContext |= BatchedContext;
                            var prevTransition = ReactCurrentBatchConfig$3.transition;
                            var previousPriority = getCurrentUpdatePriority();
                            try {
                                ReactCurrentBatchConfig$3.transition = null;
                                setCurrentUpdatePriority(DiscreteEventPriority);
                                if (fn) {
                                    return fn();
                                } else {
                                    return void 0;
                                }
                            } finally {
                                setCurrentUpdatePriority(previousPriority);
                                ReactCurrentBatchConfig$3.transition = prevTransition;
                                executionContext = prevExecutionContext;
                                if ((executionContext & (RenderContext | CommitContext)) === NoContext) {
                                    flushSyncCallbacks();
                                }
                            }
                        }
                        function isAlreadyRendering() {
                            return (executionContext & (RenderContext | CommitContext)) !== NoContext;
                        }
                        function pushRenderLanes(fiber, lanes) {
                            push(subtreeRenderLanesCursor, subtreeRenderLanes, fiber);
                            subtreeRenderLanes = mergeLanes(subtreeRenderLanes, lanes);
                            workInProgressRootIncludedLanes = mergeLanes(workInProgressRootIncludedLanes, lanes);
                        }
                        function popRenderLanes(fiber) {
                            subtreeRenderLanes = subtreeRenderLanesCursor.current;
                            pop(subtreeRenderLanesCursor, fiber);
                        }
                        function prepareFreshStack(root2, lanes) {
                            root2.finishedWork = null;
                            root2.finishedLanes = NoLanes;
                            var timeoutHandle = root2.timeoutHandle;
                            if (timeoutHandle !== noTimeout) {
                                root2.timeoutHandle = noTimeout;
                                cancelTimeout(timeoutHandle);
                            }
                            if (workInProgress !== null) {
                                var interruptedWork = workInProgress.return;
                                while (interruptedWork !== null) {
                                    var current2 = interruptedWork.alternate;
                                    unwindInterruptedWork(current2, interruptedWork);
                                    interruptedWork = interruptedWork.return;
                                }
                            }
                            workInProgressRoot = root2;
                            var rootWorkInProgress = createWorkInProgress(root2.current, null);
                            workInProgress = rootWorkInProgress;
                            workInProgressRootRenderLanes = subtreeRenderLanes = workInProgressRootIncludedLanes = lanes;
                            workInProgressRootExitStatus = RootInProgress;
                            workInProgressRootFatalError = null;
                            workInProgressRootSkippedLanes = NoLanes;
                            workInProgressRootInterleavedUpdatedLanes = NoLanes;
                            workInProgressRootPingedLanes = NoLanes;
                            workInProgressRootConcurrentErrors = null;
                            workInProgressRootRecoverableErrors = null;
                            finishQueueingConcurrentUpdates();
                            {
                                ReactStrictModeWarnings.discardPendingWarnings();
                            }
                            return rootWorkInProgress;
                        }
                        function handleError(root2, thrownValue) {
                            do {
                                var erroredWork = workInProgress;
                                try {
                                    resetContextDependencies();
                                    resetHooksAfterThrow();
                                    resetCurrentFiber();
                                    ReactCurrentOwner$2.current = null;
                                    if (erroredWork === null || erroredWork.return === null) {
                                        workInProgressRootExitStatus = RootFatalErrored;
                                        workInProgressRootFatalError = thrownValue;
                                        workInProgress = null;
                                        return;
                                    }
                                    if (enableProfilerTimer && erroredWork.mode & ProfileMode) {
                                        stopProfilerTimerIfRunningAndRecordDelta(erroredWork, true);
                                    }
                                    if (enableSchedulingProfiler) {
                                        markComponentRenderStopped();
                                        if (thrownValue !== null && typeof thrownValue === "object" && typeof thrownValue.then === "function") {
                                            var wakeable = thrownValue;
                                            markComponentSuspended(erroredWork, wakeable, workInProgressRootRenderLanes);
                                        } else {
                                            markComponentErrored(erroredWork, thrownValue, workInProgressRootRenderLanes);
                                        }
                                    }
                                    throwException(root2, erroredWork.return, erroredWork, thrownValue, workInProgressRootRenderLanes);
                                    completeUnitOfWork(erroredWork);
                                } catch (yetAnotherThrownValue) {
                                    thrownValue = yetAnotherThrownValue;
                                    if (workInProgress === erroredWork && erroredWork !== null) {
                                        erroredWork = erroredWork.return;
                                        workInProgress = erroredWork;
                                    } else {
                                        erroredWork = workInProgress;
                                    }
                                    continue;
                                }
                                return;
                            } while (true);
                        }
                        function pushDispatcher() {
                            var prevDispatcher = ReactCurrentDispatcher$2.current;
                            ReactCurrentDispatcher$2.current = ContextOnlyDispatcher;
                            if (prevDispatcher === null) {
                                return ContextOnlyDispatcher;
                            } else {
                                return prevDispatcher;
                            }
                        }
                        function popDispatcher(prevDispatcher) {
                            ReactCurrentDispatcher$2.current = prevDispatcher;
                        }
                        function markCommitTimeOfFallback() {
                            globalMostRecentFallbackTime = now();
                        }
                        function markSkippedUpdateLanes(lane) {
                            workInProgressRootSkippedLanes = mergeLanes(lane, workInProgressRootSkippedLanes);
                        }
                        function renderDidSuspend() {
                            if (workInProgressRootExitStatus === RootInProgress) {
                                workInProgressRootExitStatus = RootSuspended;
                            }
                        }
                        function renderDidSuspendDelayIfPossible() {
                            if (workInProgressRootExitStatus === RootInProgress || workInProgressRootExitStatus === RootSuspended || workInProgressRootExitStatus === RootErrored) {
                                workInProgressRootExitStatus = RootSuspendedWithDelay;
                            }
                            if (workInProgressRoot !== null && (includesNonIdleWork(workInProgressRootSkippedLanes) || includesNonIdleWork(workInProgressRootInterleavedUpdatedLanes))) {
                                markRootSuspended$1(workInProgressRoot, workInProgressRootRenderLanes);
                            }
                        }
                        function renderDidError(error2) {
                            if (workInProgressRootExitStatus !== RootSuspendedWithDelay) {
                                workInProgressRootExitStatus = RootErrored;
                            }
                            if (workInProgressRootConcurrentErrors === null) {
                                workInProgressRootConcurrentErrors = [error2];
                            } else {
                                workInProgressRootConcurrentErrors.push(error2);
                            }
                        }
                        function renderHasNotSuspendedYet() {
                            return workInProgressRootExitStatus === RootInProgress;
                        }
                        function renderRootSync(root2, lanes) {
                            var prevExecutionContext = executionContext;
                            executionContext |= RenderContext;
                            var prevDispatcher = pushDispatcher();
                            if (workInProgressRoot !== root2 || workInProgressRootRenderLanes !== lanes) {
                                {
                                    if (isDevToolsPresent) {
                                        var memoizedUpdaters = root2.memoizedUpdaters;
                                        if (memoizedUpdaters.size > 0) {
                                            restorePendingUpdaters(root2, workInProgressRootRenderLanes);
                                            memoizedUpdaters.clear();
                                        }
                                        movePendingFibersToMemoized(root2, lanes);
                                    }
                                }
                                workInProgressTransitions = getTransitionsForLanes();
                                prepareFreshStack(root2, lanes);
                            }
                            {
                                markRenderStarted(lanes);
                            }
                            do {
                                try {
                                    workLoopSync();
                                    break;
                                } catch (thrownValue) {
                                    handleError(root2, thrownValue);
                                }
                            } while (true);
                            resetContextDependencies();
                            executionContext = prevExecutionContext;
                            popDispatcher(prevDispatcher);
                            if (workInProgress !== null) {
                                throw new Error("Cannot commit an incomplete root. This error is likely caused by a bug in React. Please file an issue.");
                            }
                            {
                                markRenderStopped();
                            }
                            workInProgressRoot = null;
                            workInProgressRootRenderLanes = NoLanes;
                            return workInProgressRootExitStatus;
                        }
                        function workLoopSync() {
                            while (workInProgress !== null) {
                                performUnitOfWork(workInProgress);
                            }
                        }
                        function renderRootConcurrent(root2, lanes) {
                            var prevExecutionContext = executionContext;
                            executionContext |= RenderContext;
                            var prevDispatcher = pushDispatcher();
                            if (workInProgressRoot !== root2 || workInProgressRootRenderLanes !== lanes) {
                                {
                                    if (isDevToolsPresent) {
                                        var memoizedUpdaters = root2.memoizedUpdaters;
                                        if (memoizedUpdaters.size > 0) {
                                            restorePendingUpdaters(root2, workInProgressRootRenderLanes);
                                            memoizedUpdaters.clear();
                                        }
                                        movePendingFibersToMemoized(root2, lanes);
                                    }
                                }
                                workInProgressTransitions = getTransitionsForLanes();
                                resetRenderTimer();
                                prepareFreshStack(root2, lanes);
                            }
                            {
                                markRenderStarted(lanes);
                            }
                            do {
                                try {
                                    workLoopConcurrent();
                                    break;
                                } catch (thrownValue) {
                                    handleError(root2, thrownValue);
                                }
                            } while (true);
                            resetContextDependencies();
                            popDispatcher(prevDispatcher);
                            executionContext = prevExecutionContext;
                            if (workInProgress !== null) {
                                {
                                    markRenderYielded();
                                }
                                return RootInProgress;
                            } else {
                                {
                                    markRenderStopped();
                                }
                                workInProgressRoot = null;
                                workInProgressRootRenderLanes = NoLanes;
                                return workInProgressRootExitStatus;
                            }
                        }
                        function workLoopConcurrent() {
                            while (workInProgress !== null && !shouldYield()) {
                                performUnitOfWork(workInProgress);
                            }
                        }
                        function performUnitOfWork(unitOfWork) {
                            var current2 = unitOfWork.alternate;
                            setCurrentFiber(unitOfWork);
                            var next;
                            if ((unitOfWork.mode & ProfileMode) !== NoMode) {
                                startProfilerTimer(unitOfWork);
                                next = beginWork$1(current2, unitOfWork, subtreeRenderLanes);
                                stopProfilerTimerIfRunningAndRecordDelta(unitOfWork, true);
                            } else {
                                next = beginWork$1(current2, unitOfWork, subtreeRenderLanes);
                            }
                            resetCurrentFiber();
                            unitOfWork.memoizedProps = unitOfWork.pendingProps;
                            if (next === null) {
                                completeUnitOfWork(unitOfWork);
                            } else {
                                workInProgress = next;
                            }
                            ReactCurrentOwner$2.current = null;
                        }
                        function completeUnitOfWork(unitOfWork) {
                            var completedWork = unitOfWork;
                            do {
                                var current2 = completedWork.alternate;
                                var returnFiber = completedWork.return;
                                if ((completedWork.flags & Incomplete) === NoFlags) {
                                    setCurrentFiber(completedWork);
                                    var next = void 0;
                                    if ((completedWork.mode & ProfileMode) === NoMode) {
                                        next = completeWork(current2, completedWork, subtreeRenderLanes);
                                    } else {
                                        startProfilerTimer(completedWork);
                                        next = completeWork(current2, completedWork, subtreeRenderLanes);
                                        stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);
                                    }
                                    resetCurrentFiber();
                                    if (next !== null) {
                                        workInProgress = next;
                                        return;
                                    }
                                } else {
                                    var _next = unwindWork(current2, completedWork);
                                    if (_next !== null) {
                                        _next.flags &= HostEffectMask;
                                        workInProgress = _next;
                                        return;
                                    }
                                    if ((completedWork.mode & ProfileMode) !== NoMode) {
                                        stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);
                                        var actualDuration = completedWork.actualDuration;
                                        var child = completedWork.child;
                                        while (child !== null) {
                                            actualDuration += child.actualDuration;
                                            child = child.sibling;
                                        }
                                        completedWork.actualDuration = actualDuration;
                                    }
                                    if (returnFiber !== null) {
                                        returnFiber.flags |= Incomplete;
                                        returnFiber.subtreeFlags = NoFlags;
                                        returnFiber.deletions = null;
                                    } else {
                                        workInProgressRootExitStatus = RootDidNotComplete;
                                        workInProgress = null;
                                        return;
                                    }
                                }
                                var siblingFiber = completedWork.sibling;
                                if (siblingFiber !== null) {
                                    workInProgress = siblingFiber;
                                    return;
                                }
                                completedWork = returnFiber;
                                workInProgress = completedWork;
                            } while (completedWork !== null);
                            if (workInProgressRootExitStatus === RootInProgress) {
                                workInProgressRootExitStatus = RootCompleted;
                            }
                        }
                        function commitRoot(root2, recoverableErrors, transitions) {
                            var previousUpdateLanePriority = getCurrentUpdatePriority();
                            var prevTransition = ReactCurrentBatchConfig$3.transition;
                            try {
                                ReactCurrentBatchConfig$3.transition = null;
                                setCurrentUpdatePriority(DiscreteEventPriority);
                                commitRootImpl(root2, recoverableErrors, transitions, previousUpdateLanePriority);
                            } finally {
                                ReactCurrentBatchConfig$3.transition = prevTransition;
                                setCurrentUpdatePriority(previousUpdateLanePriority);
                            }
                            return null;
                        }
                        function commitRootImpl(root2, recoverableErrors, transitions, renderPriorityLevel) {
                            do {
                                flushPassiveEffects();
                            } while (rootWithPendingPassiveEffects !== null);
                            flushRenderPhaseStrictModeWarningsInDEV();
                            if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
                                throw new Error("Should not already be working.");
                            }
                            var finishedWork = root2.finishedWork;
                            var lanes = root2.finishedLanes;
                            {
                                markCommitStarted(lanes);
                            }
                            if (finishedWork === null) {
                                {
                                    markCommitStopped();
                                }
                                return null;
                            } else {
                                {
                                    if (lanes === NoLanes) {
                                        error("root.finishedLanes should not be empty during a commit. This is a bug in React.");
                                    }
                                }
                            }
                            root2.finishedWork = null;
                            root2.finishedLanes = NoLanes;
                            if (finishedWork === root2.current) {
                                throw new Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue.");
                            }
                            root2.callbackNode = null;
                            root2.callbackPriority = NoLane;
                            var remainingLanes = mergeLanes(finishedWork.lanes, finishedWork.childLanes);
                            markRootFinished(root2, remainingLanes);
                            if (root2 === workInProgressRoot) {
                                workInProgressRoot = null;
                                workInProgress = null;
                                workInProgressRootRenderLanes = NoLanes;
                            }
                            if ((finishedWork.subtreeFlags & PassiveMask) !== NoFlags || (finishedWork.flags & PassiveMask) !== NoFlags) {
                                if (!rootDoesHavePassiveEffects) {
                                    rootDoesHavePassiveEffects = true;
                                    pendingPassiveTransitions = transitions;
                                    scheduleCallback$1(NormalPriority, function() {
                                        flushPassiveEffects();
                                        return null;
                                    });
                                }
                            }
                            var subtreeHasEffects = (finishedWork.subtreeFlags & (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !== NoFlags;
                            var rootHasEffect = (finishedWork.flags & (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !== NoFlags;
                            if (subtreeHasEffects || rootHasEffect) {
                                var prevTransition = ReactCurrentBatchConfig$3.transition;
                                ReactCurrentBatchConfig$3.transition = null;
                                var previousPriority = getCurrentUpdatePriority();
                                setCurrentUpdatePriority(DiscreteEventPriority);
                                var prevExecutionContext = executionContext;
                                executionContext |= CommitContext;
                                ReactCurrentOwner$2.current = null;
                                var shouldFireAfterActiveInstanceBlur2 = commitBeforeMutationEffects(root2, finishedWork);
                                {
                                    recordCommitTime();
                                }
                                commitMutationEffects(root2, finishedWork, lanes);
                                resetAfterCommit(root2.containerInfo);
                                root2.current = finishedWork;
                                {
                                    markLayoutEffectsStarted(lanes);
                                }
                                commitLayoutEffects(finishedWork, root2, lanes);
                                {
                                    markLayoutEffectsStopped();
                                }
                                requestPaint();
                                executionContext = prevExecutionContext;
                                setCurrentUpdatePriority(previousPriority);
                                ReactCurrentBatchConfig$3.transition = prevTransition;
                            } else {
                                root2.current = finishedWork;
                                {
                                    recordCommitTime();
                                }
                            }
                            var rootDidHavePassiveEffects = rootDoesHavePassiveEffects;
                            if (rootDoesHavePassiveEffects) {
                                rootDoesHavePassiveEffects = false;
                                rootWithPendingPassiveEffects = root2;
                                pendingPassiveEffectsLanes = lanes;
                            } else {
                                {
                                    nestedPassiveUpdateCount = 0;
                                    rootWithPassiveNestedUpdates = null;
                                }
                            }
                            remainingLanes = root2.pendingLanes;
                            if (remainingLanes === NoLanes) {
                                legacyErrorBoundariesThatAlreadyFailed = null;
                            }
                            {
                                if (!rootDidHavePassiveEffects) {
                                    commitDoubleInvokeEffectsInDEV(root2.current, false);
                                }
                            }
                            onCommitRoot(finishedWork.stateNode, renderPriorityLevel);
                            {
                                if (isDevToolsPresent) {
                                    root2.memoizedUpdaters.clear();
                                }
                            }
                            {
                                onCommitRoot$1();
                            }
                            ensureRootIsScheduled(root2, now());
                            if (recoverableErrors !== null) {
                                var onRecoverableError = root2.onRecoverableError;
                                for (var i = 0; i < recoverableErrors.length; i++) {
                                    var recoverableError = recoverableErrors[i];
                                    var componentStack = recoverableError.stack;
                                    var digest = recoverableError.digest;
                                    onRecoverableError(recoverableError.value, {
                                        componentStack,
                                        digest
                                    });
                                }
                            }
                            if (hasUncaughtError) {
                                hasUncaughtError = false;
                                var error$1 = firstUncaughtError;
                                firstUncaughtError = null;
                                throw error$1;
                            }
                            if (includesSomeLane(pendingPassiveEffectsLanes, SyncLane) && root2.tag !== LegacyRoot) {
                                flushPassiveEffects();
                            }
                            remainingLanes = root2.pendingLanes;
                            if (includesSomeLane(remainingLanes, SyncLane)) {
                                {
                                    markNestedUpdateScheduled();
                                }
                                if (root2 === rootWithNestedUpdates) {
                                    nestedUpdateCount++;
                                } else {
                                    nestedUpdateCount = 0;
                                    rootWithNestedUpdates = root2;
                                }
                            } else {
                                nestedUpdateCount = 0;
                            }
                            flushSyncCallbacks();
                            {
                                markCommitStopped();
                            }
                            return null;
                        }
                        function flushPassiveEffects() {
                            if (rootWithPendingPassiveEffects !== null) {
                                var renderPriority = lanesToEventPriority(pendingPassiveEffectsLanes);
                                var priority = lowerEventPriority(DefaultEventPriority, renderPriority);
                                var prevTransition = ReactCurrentBatchConfig$3.transition;
                                var previousPriority = getCurrentUpdatePriority();
                                try {
                                    ReactCurrentBatchConfig$3.transition = null;
                                    setCurrentUpdatePriority(priority);
                                    return flushPassiveEffectsImpl();
                                } finally {
                                    setCurrentUpdatePriority(previousPriority);
                                    ReactCurrentBatchConfig$3.transition = prevTransition;
                                }
                            }
                            return false;
                        }
                        function enqueuePendingPassiveProfilerEffect(fiber) {
                            {
                                pendingPassiveProfilerEffects.push(fiber);
                                if (!rootDoesHavePassiveEffects) {
                                    rootDoesHavePassiveEffects = true;
                                    scheduleCallback$1(NormalPriority, function() {
                                        flushPassiveEffects();
                                        return null;
                                    });
                                }
                            }
                        }
                        function flushPassiveEffectsImpl() {
                            if (rootWithPendingPassiveEffects === null) {
                                return false;
                            }
                            var transitions = pendingPassiveTransitions;
                            pendingPassiveTransitions = null;
                            var root2 = rootWithPendingPassiveEffects;
                            var lanes = pendingPassiveEffectsLanes;
                            rootWithPendingPassiveEffects = null;
                            pendingPassiveEffectsLanes = NoLanes;
                            if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
                                throw new Error("Cannot flush passive effects while already rendering.");
                            }
                            {
                                isFlushingPassiveEffects = true;
                                didScheduleUpdateDuringPassiveEffects = false;
                            }
                            {
                                markPassiveEffectsStarted(lanes);
                            }
                            var prevExecutionContext = executionContext;
                            executionContext |= CommitContext;
                            commitPassiveUnmountEffects(root2.current);
                            commitPassiveMountEffects(root2, root2.current, lanes, transitions);
                            {
                                var profilerEffects = pendingPassiveProfilerEffects;
                                pendingPassiveProfilerEffects = [];
                                for (var i = 0; i < profilerEffects.length; i++) {
                                    var _fiber = profilerEffects[i];
                                    commitPassiveEffectDurations(root2, _fiber);
                                }
                            }
                            {
                                markPassiveEffectsStopped();
                            }
                            {
                                commitDoubleInvokeEffectsInDEV(root2.current, true);
                            }
                            executionContext = prevExecutionContext;
                            flushSyncCallbacks();
                            {
                                if (didScheduleUpdateDuringPassiveEffects) {
                                    if (root2 === rootWithPassiveNestedUpdates) {
                                        nestedPassiveUpdateCount++;
                                    } else {
                                        nestedPassiveUpdateCount = 0;
                                        rootWithPassiveNestedUpdates = root2;
                                    }
                                } else {
                                    nestedPassiveUpdateCount = 0;
                                }
                                isFlushingPassiveEffects = false;
                                didScheduleUpdateDuringPassiveEffects = false;
                            }
                            onPostCommitRoot(root2);
                            {
                                var stateNode = root2.current.stateNode;
                                stateNode.effectDuration = 0;
                                stateNode.passiveEffectDuration = 0;
                            }
                            return true;
                        }
                        function isAlreadyFailedLegacyErrorBoundary(instance2) {
                            return legacyErrorBoundariesThatAlreadyFailed !== null && legacyErrorBoundariesThatAlreadyFailed.has(instance2);
                        }
                        function markLegacyErrorBoundaryAsFailed(instance2) {
                            if (legacyErrorBoundariesThatAlreadyFailed === null) {
                                legacyErrorBoundariesThatAlreadyFailed = /* @__PURE__ */ new Set([instance2]);
                            } else {
                                legacyErrorBoundariesThatAlreadyFailed.add(instance2);
                            }
                        }
                        function prepareToThrowUncaughtError(error2) {
                            if (!hasUncaughtError) {
                                hasUncaughtError = true;
                                firstUncaughtError = error2;
                            }
                        }
                        var onUncaughtError = prepareToThrowUncaughtError;
                        function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error2) {
                            var errorInfo = createCapturedValueAtFiber(error2, sourceFiber);
                            var update = createRootErrorUpdate(rootFiber, errorInfo, SyncLane);
                            var root2 = enqueueUpdate(rootFiber, update, SyncLane);
                            var eventTime = requestEventTime();
                            if (root2 !== null) {
                                markRootUpdated(root2, SyncLane, eventTime);
                                ensureRootIsScheduled(root2, eventTime);
                            }
                        }
                        function captureCommitPhaseError(sourceFiber, nearestMountedAncestor, error$1) {
                            {
                                reportUncaughtErrorInDEV(error$1);
                                setIsRunningInsertionEffect(false);
                            }
                            if (sourceFiber.tag === HostRoot) {
                                captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error$1);
                                return;
                            }
                            var fiber = null;
                            {
                                fiber = nearestMountedAncestor;
                            }
                            while (fiber !== null) {
                                if (fiber.tag === HostRoot) {
                                    captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error$1);
                                    return;
                                } else if (fiber.tag === ClassComponent) {
                                    var ctor = fiber.type;
                                    var instance2 = fiber.stateNode;
                                    if (typeof ctor.getDerivedStateFromError === "function" || typeof instance2.componentDidCatch === "function" && !isAlreadyFailedLegacyErrorBoundary(instance2)) {
                                        var errorInfo = createCapturedValueAtFiber(error$1, sourceFiber);
                                        var update = createClassErrorUpdate(fiber, errorInfo, SyncLane);
                                        var root2 = enqueueUpdate(fiber, update, SyncLane);
                                        var eventTime = requestEventTime();
                                        if (root2 !== null) {
                                            markRootUpdated(root2, SyncLane, eventTime);
                                            ensureRootIsScheduled(root2, eventTime);
                                        }
                                        return;
                                    }
                                }
                                fiber = fiber.return;
                            }
                            {
                                error("Internal React error: Attempted to capture a commit phase error inside a detached tree. This indicates a bug in React. Likely causes include deleting the same fiber more than once, committing an already-finished tree, or an inconsistent return pointer.\n\nError message:\n\n%s", error$1);
                            }
                        }
                        function pingSuspendedRoot(root2, wakeable, pingedLanes) {
                            var pingCache = root2.pingCache;
                            if (pingCache !== null) {
                                pingCache.delete(wakeable);
                            }
                            var eventTime = requestEventTime();
                            markRootPinged(root2, pingedLanes);
                            warnIfSuspenseResolutionNotWrappedWithActDEV(root2);
                            if (workInProgressRoot === root2 && isSubsetOfLanes(workInProgressRootRenderLanes, pingedLanes)) {
                                if (workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && includesOnlyRetries(workInProgressRootRenderLanes) && now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS) {
                                    prepareFreshStack(root2, NoLanes);
                                } else {
                                    workInProgressRootPingedLanes = mergeLanes(workInProgressRootPingedLanes, pingedLanes);
                                }
                            }
                            ensureRootIsScheduled(root2, eventTime);
                        }
                        function retryTimedOutBoundary(boundaryFiber, retryLane) {
                            if (retryLane === NoLane) {
                                retryLane = requestRetryLane(boundaryFiber);
                            }
                            var eventTime = requestEventTime();
                            var root2 = enqueueConcurrentRenderForLane(boundaryFiber, retryLane);
                            if (root2 !== null) {
                                markRootUpdated(root2, retryLane, eventTime);
                                ensureRootIsScheduled(root2, eventTime);
                            }
                        }
                        function retryDehydratedSuspenseBoundary(boundaryFiber) {
                            var suspenseState = boundaryFiber.memoizedState;
                            var retryLane = NoLane;
                            if (suspenseState !== null) {
                                retryLane = suspenseState.retryLane;
                            }
                            retryTimedOutBoundary(boundaryFiber, retryLane);
                        }
                        function resolveRetryWakeable(boundaryFiber, wakeable) {
                            var retryLane = NoLane;
                            var retryCache;
                            switch (boundaryFiber.tag) {
                                case SuspenseComponent:
                                    retryCache = boundaryFiber.stateNode;
                                    var suspenseState = boundaryFiber.memoizedState;
                                    if (suspenseState !== null) {
                                        retryLane = suspenseState.retryLane;
                                    }
                                    break;
                                case SuspenseListComponent:
                                    retryCache = boundaryFiber.stateNode;
                                    break;
                                default:
                                    throw new Error("Pinged unknown suspense boundary type. This is probably a bug in React.");
                            }
                            if (retryCache !== null) {
                                retryCache.delete(wakeable);
                            }
                            retryTimedOutBoundary(boundaryFiber, retryLane);
                        }
                        function jnd(timeElapsed) {
                            return timeElapsed < 120 ? 120 : timeElapsed < 480 ? 480 : timeElapsed < 1080 ? 1080 : timeElapsed < 1920 ? 1920 : timeElapsed < 3e3 ? 3e3 : timeElapsed < 4320 ? 4320 : ceil(timeElapsed / 1960) * 1960;
                        }
                        function checkForNestedUpdates() {
                            if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {
                                nestedUpdateCount = 0;
                                rootWithNestedUpdates = null;
                                throw new Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.");
                            }
                            {
                                if (nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT) {
                                    nestedPassiveUpdateCount = 0;
                                    rootWithPassiveNestedUpdates = null;
                                    error("Maximum update depth exceeded. This can happen when a component calls setState inside useEffect, but useEffect either doesn't have a dependency array, or one of the dependencies changes on every render.");
                                }
                            }
                        }
                        function flushRenderPhaseStrictModeWarningsInDEV() {
                            {
                                ReactStrictModeWarnings.flushLegacyContextWarning();
                                {
                                    ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();
                                }
                            }
                        }
                        function commitDoubleInvokeEffectsInDEV(fiber, hasPassiveEffects) {
                            {
                                setCurrentFiber(fiber);
                                invokeEffectsInDev(fiber, MountLayoutDev, invokeLayoutEffectUnmountInDEV);
                                if (hasPassiveEffects) {
                                    invokeEffectsInDev(fiber, MountPassiveDev, invokePassiveEffectUnmountInDEV);
                                }
                                invokeEffectsInDev(fiber, MountLayoutDev, invokeLayoutEffectMountInDEV);
                                if (hasPassiveEffects) {
                                    invokeEffectsInDev(fiber, MountPassiveDev, invokePassiveEffectMountInDEV);
                                }
                                resetCurrentFiber();
                            }
                        }
                        function invokeEffectsInDev(firstChild, fiberFlags, invokeEffectFn) {
                            {
                                var current2 = firstChild;
                                var subtreeRoot = null;
                                while (current2 !== null) {
                                    var primarySubtreeFlag = current2.subtreeFlags & fiberFlags;
                                    if (current2 !== subtreeRoot && current2.child !== null && primarySubtreeFlag !== NoFlags) {
                                        current2 = current2.child;
                                    } else {
                                        if ((current2.flags & fiberFlags) !== NoFlags) {
                                            invokeEffectFn(current2);
                                        }
                                        if (current2.sibling !== null) {
                                            current2 = current2.sibling;
                                        } else {
                                            current2 = subtreeRoot = current2.return;
                                        }
                                    }
                                }
                            }
                        }
                        var didWarnStateUpdateForNotYetMountedComponent = null;
                        function warnAboutUpdateOnNotYetMountedFiberInDEV(fiber) {
                            {
                                if ((executionContext & RenderContext) !== NoContext) {
                                    return;
                                }
                                if (!(fiber.mode & ConcurrentMode)) {
                                    return;
                                }
                                var tag = fiber.tag;
                                if (tag !== IndeterminateComponent && tag !== HostRoot && tag !== ClassComponent && tag !== FunctionComponent && tag !== ForwardRef && tag !== MemoComponent && tag !== SimpleMemoComponent) {
                                    return;
                                }
                                var componentName = getComponentNameFromFiber(fiber) || "ReactComponent";
                                if (didWarnStateUpdateForNotYetMountedComponent !== null) {
                                    if (didWarnStateUpdateForNotYetMountedComponent.has(componentName)) {
                                        return;
                                    }
                                    didWarnStateUpdateForNotYetMountedComponent.add(componentName);
                                } else {
                                    didWarnStateUpdateForNotYetMountedComponent = /* @__PURE__ */ new Set([componentName]);
                                }
                                var previousFiber = current;
                                try {
                                    setCurrentFiber(fiber);
                                    error("Can't perform a React state update on a component that hasn't mounted yet. This indicates that you have a side-effect in your render function that asynchronously later calls tries to update the component. Move this work to useEffect instead.");
                                } finally {
                                    if (previousFiber) {
                                        setCurrentFiber(fiber);
                                    } else {
                                        resetCurrentFiber();
                                    }
                                }
                            }
                        }
                        var beginWork$1;
                        {
                            var dummyFiber = null;
                            beginWork$1 = function(current2, unitOfWork, lanes) {
                                var originalWorkInProgressCopy = assignFiberPropertiesInDEV(dummyFiber, unitOfWork);
                                try {
                                    return beginWork(current2, unitOfWork, lanes);
                                } catch (originalError) {
                                    if (didSuspendOrErrorWhileHydratingDEV() || originalError !== null && typeof originalError === "object" && typeof originalError.then === "function") {
                                        throw originalError;
                                    }
                                    resetContextDependencies();
                                    resetHooksAfterThrow();
                                    unwindInterruptedWork(current2, unitOfWork);
                                    assignFiberPropertiesInDEV(unitOfWork, originalWorkInProgressCopy);
                                    if (unitOfWork.mode & ProfileMode) {
                                        startProfilerTimer(unitOfWork);
                                    }
                                    invokeGuardedCallback(null, beginWork, null, current2, unitOfWork, lanes);
                                    if (hasCaughtError()) {
                                        var replayError = clearCaughtError();
                                        if (typeof replayError === "object" && replayError !== null && replayError._suppressLogging && typeof originalError === "object" && originalError !== null && !originalError._suppressLogging) {
                                            originalError._suppressLogging = true;
                                        }
                                    }
                                    throw originalError;
                                }
                            };
                        }
                        var didWarnAboutUpdateInRender = false;
                        var didWarnAboutUpdateInRenderForAnotherComponent;
                        {
                            didWarnAboutUpdateInRenderForAnotherComponent = /* @__PURE__ */ new Set();
                        }
                        function warnAboutRenderPhaseUpdatesInDEV(fiber) {
                            {
                                if (isRendering && !getIsUpdatingOpaqueValueInRenderPhaseInDEV()) {
                                    switch (fiber.tag) {
                                        case FunctionComponent:
                                        case ForwardRef:
                                        case SimpleMemoComponent: {
                                            var renderingComponentName = workInProgress && getComponentNameFromFiber(workInProgress) || "Unknown";
                                            var dedupeKey = renderingComponentName;
                                            if (!didWarnAboutUpdateInRenderForAnotherComponent.has(dedupeKey)) {
                                                didWarnAboutUpdateInRenderForAnotherComponent.add(dedupeKey);
                                                var setStateComponentName = getComponentNameFromFiber(fiber) || "Unknown";
                                                error("Cannot update a component (`%s`) while rendering a different component (`%s`). To locate the bad setState() call inside `%s`, follow the stack trace as described in https://reactjs.org/link/setstate-in-render", setStateComponentName, renderingComponentName, renderingComponentName);
                                            }
                                            break;
                                        }
                                        case ClassComponent: {
                                            if (!didWarnAboutUpdateInRender) {
                                                error("Cannot update during an existing state transition (such as within `render`). Render methods should be a pure function of props and state.");
                                                didWarnAboutUpdateInRender = true;
                                            }
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        function restorePendingUpdaters(root2, lanes) {
                            {
                                if (isDevToolsPresent) {
                                    var memoizedUpdaters = root2.memoizedUpdaters;
                                    memoizedUpdaters.forEach(function(schedulingFiber) {
                                        addFiberToLanesMap(root2, schedulingFiber, lanes);
                                    });
                                }
                            }
                        }
                        var fakeActCallbackNode = {};
                        function scheduleCallback$1(priorityLevel, callback) {
                            {
                                var actQueue = ReactCurrentActQueue$1.current;
                                if (actQueue !== null) {
                                    actQueue.push(callback);
                                    return fakeActCallbackNode;
                                } else {
                                    return scheduleCallback(priorityLevel, callback);
                                }
                            }
                        }
                        function cancelCallback$1(callbackNode) {
                            if (callbackNode === fakeActCallbackNode) {
                                return;
                            }
                            return cancelCallback(callbackNode);
                        }
                        function shouldForceFlushFallbacksInDEV() {
                            return ReactCurrentActQueue$1.current !== null;
                        }
                        function warnIfUpdatesNotWrappedWithActDEV(fiber) {
                            {
                                if (fiber.mode & ConcurrentMode) {
                                    if (!isConcurrentActEnvironment()) {
                                        return;
                                    }
                                } else {
                                    if (!isLegacyActEnvironment()) {
                                        return;
                                    }
                                    if (executionContext !== NoContext) {
                                        return;
                                    }
                                    if (fiber.tag !== FunctionComponent && fiber.tag !== ForwardRef && fiber.tag !== SimpleMemoComponent) {
                                        return;
                                    }
                                }
                                if (ReactCurrentActQueue$1.current === null) {
                                    var previousFiber = current;
                                    try {
                                        setCurrentFiber(fiber);
                                        error("An update to %s inside a test was not wrapped in act(...).\n\nWhen testing, code that causes React state updates should be wrapped into act(...):\n\nact(() => {\n  /* fire events that update state */\n});\n/* assert on the output */\n\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act", getComponentNameFromFiber(fiber));
                                    } finally {
                                        if (previousFiber) {
                                            setCurrentFiber(fiber);
                                        } else {
                                            resetCurrentFiber();
                                        }
                                    }
                                }
                            }
                        }
                        function warnIfSuspenseResolutionNotWrappedWithActDEV(root2) {
                            {
                                if (root2.tag !== LegacyRoot && isConcurrentActEnvironment() && ReactCurrentActQueue$1.current === null) {
                                    error("A suspended resource finished loading inside a test, but the event was not wrapped in act(...).\n\nWhen testing, code that resolves suspended data should be wrapped into act(...):\n\nact(() => {\n  /* finish loading suspended data */\n});\n/* assert on the output */\n\nThis ensures that you're testing the behavior the user would see in the browser. Learn more at https://reactjs.org/link/wrap-tests-with-act");
                                }
                            }
                        }
                        function setIsRunningInsertionEffect(isRunning) {
                            {
                                isRunningInsertionEffect = isRunning;
                            }
                        }
                        var resolveFamily = null;
                        var failedBoundaries = null;
                        var setRefreshHandler = function(handler) {
                            {
                                resolveFamily = handler;
                            }
                        };
                        function resolveFunctionForHotReloading(type) {
                            {
                                if (resolveFamily === null) {
                                    return type;
                                }
                                var family = resolveFamily(type);
                                if (family === void 0) {
                                    return type;
                                }
                                return family.current;
                            }
                        }
                        function resolveClassForHotReloading(type) {
                            return resolveFunctionForHotReloading(type);
                        }
                        function resolveForwardRefForHotReloading(type) {
                            {
                                if (resolveFamily === null) {
                                    return type;
                                }
                                var family = resolveFamily(type);
                                if (family === void 0) {
                                    if (type !== null && type !== void 0 && typeof type.render === "function") {
                                        var currentRender = resolveFunctionForHotReloading(type.render);
                                        if (type.render !== currentRender) {
                                            var syntheticType = {
                                                $$typeof: REACT_FORWARD_REF_TYPE,
                                                render: currentRender
                                            };
                                            if (type.displayName !== void 0) {
                                                syntheticType.displayName = type.displayName;
                                            }
                                            return syntheticType;
                                        }
                                    }
                                    return type;
                                }
                                return family.current;
                            }
                        }
                        function isCompatibleFamilyForHotReloading(fiber, element) {
                            {
                                if (resolveFamily === null) {
                                    return false;
                                }
                                var prevType = fiber.elementType;
                                var nextType = element.type;
                                var needsCompareFamilies = false;
                                var $$typeofNextType = typeof nextType === "object" && nextType !== null ? nextType.$$typeof : null;
                                switch (fiber.tag) {
                                    case ClassComponent: {
                                        if (typeof nextType === "function") {
                                            needsCompareFamilies = true;
                                        }
                                        break;
                                    }
                                    case FunctionComponent: {
                                        if (typeof nextType === "function") {
                                            needsCompareFamilies = true;
                                        } else if ($$typeofNextType === REACT_LAZY_TYPE) {
                                            needsCompareFamilies = true;
                                        }
                                        break;
                                    }
                                    case ForwardRef: {
                                        if ($$typeofNextType === REACT_FORWARD_REF_TYPE) {
                                            needsCompareFamilies = true;
                                        } else if ($$typeofNextType === REACT_LAZY_TYPE) {
                                            needsCompareFamilies = true;
                                        }
                                        break;
                                    }
                                    case MemoComponent:
                                    case SimpleMemoComponent: {
                                        if ($$typeofNextType === REACT_MEMO_TYPE) {
                                            needsCompareFamilies = true;
                                        } else if ($$typeofNextType === REACT_LAZY_TYPE) {
                                            needsCompareFamilies = true;
                                        }
                                        break;
                                    }
                                    default:
                                        return false;
                                }
                                if (needsCompareFamilies) {
                                    var prevFamily = resolveFamily(prevType);
                                    if (prevFamily !== void 0 && prevFamily === resolveFamily(nextType)) {
                                        return true;
                                    }
                                }
                                return false;
                            }
                        }
                        function markFailedErrorBoundaryForHotReloading(fiber) {
                            {
                                if (resolveFamily === null) {
                                    return;
                                }
                                if (typeof WeakSet !== "function") {
                                    return;
                                }
                                if (failedBoundaries === null) {
                                    failedBoundaries = /* @__PURE__ */ new WeakSet();
                                }
                                failedBoundaries.add(fiber);
                            }
                        }
                        var scheduleRefresh = function(root2, update) {
                            {
                                if (resolveFamily === null) {
                                    return;
                                }
                                var staleFamilies = update.staleFamilies, updatedFamilies = update.updatedFamilies;
                                flushPassiveEffects();
                                flushSync(function() {
                                    scheduleFibersWithFamiliesRecursively(root2.current, updatedFamilies, staleFamilies);
                                });
                            }
                        };
                        var scheduleRoot = function(root2, element) {
                            {
                                if (root2.context !== emptyContextObject) {
                                    return;
                                }
                                flushPassiveEffects();
                                flushSync(function() {
                                    updateContainer(element, root2, null, null);
                                });
                            }
                        };
                        function scheduleFibersWithFamiliesRecursively(fiber, updatedFamilies, staleFamilies) {
                            {
                                var alternate = fiber.alternate, child = fiber.child, sibling = fiber.sibling, tag = fiber.tag, type = fiber.type;
                                var candidateType = null;
                                switch (tag) {
                                    case FunctionComponent:
                                    case SimpleMemoComponent:
                                    case ClassComponent:
                                        candidateType = type;
                                        break;
                                    case ForwardRef:
                                        candidateType = type.render;
                                        break;
                                }
                                if (resolveFamily === null) {
                                    throw new Error("Expected resolveFamily to be set during hot reload.");
                                }
                                var needsRender = false;
                                var needsRemount = false;
                                if (candidateType !== null) {
                                    var family = resolveFamily(candidateType);
                                    if (family !== void 0) {
                                        if (staleFamilies.has(family)) {
                                            needsRemount = true;
                                        } else if (updatedFamilies.has(family)) {
                                            if (tag === ClassComponent) {
                                                needsRemount = true;
                                            } else {
                                                needsRender = true;
                                            }
                                        }
                                    }
                                }
                                if (failedBoundaries !== null) {
                                    if (failedBoundaries.has(fiber) || alternate !== null && failedBoundaries.has(alternate)) {
                                        needsRemount = true;
                                    }
                                }
                                if (needsRemount) {
                                    fiber._debugNeedsRemount = true;
                                }
                                if (needsRemount || needsRender) {
                                    var _root = enqueueConcurrentRenderForLane(fiber, SyncLane);
                                    if (_root !== null) {
                                        scheduleUpdateOnFiber(_root, fiber, SyncLane, NoTimestamp);
                                    }
                                }
                                if (child !== null && !needsRemount) {
                                    scheduleFibersWithFamiliesRecursively(child, updatedFamilies, staleFamilies);
                                }
                                if (sibling !== null) {
                                    scheduleFibersWithFamiliesRecursively(sibling, updatedFamilies, staleFamilies);
                                }
                            }
                        }
                        var findHostInstancesForRefresh = function(root2, families) {
                            {
                                var hostInstances = /* @__PURE__ */ new Set();
                                var types = new Set(families.map(function(family) {
                                    return family.current;
                                }));
                                findHostInstancesForMatchingFibersRecursively(root2.current, types, hostInstances);
                                return hostInstances;
                            }
                        };
                        function findHostInstancesForMatchingFibersRecursively(fiber, types, hostInstances) {
                            {
                                var child = fiber.child, sibling = fiber.sibling, tag = fiber.tag, type = fiber.type;
                                var candidateType = null;
                                switch (tag) {
                                    case FunctionComponent:
                                    case SimpleMemoComponent:
                                    case ClassComponent:
                                        candidateType = type;
                                        break;
                                    case ForwardRef:
                                        candidateType = type.render;
                                        break;
                                }
                                var didMatch = false;
                                if (candidateType !== null) {
                                    if (types.has(candidateType)) {
                                        didMatch = true;
                                    }
                                }
                                if (didMatch) {
                                    findHostInstancesForFiberShallowly(fiber, hostInstances);
                                } else {
                                    if (child !== null) {
                                        findHostInstancesForMatchingFibersRecursively(child, types, hostInstances);
                                    }
                                }
                                if (sibling !== null) {
                                    findHostInstancesForMatchingFibersRecursively(sibling, types, hostInstances);
                                }
                            }
                        }
                        function findHostInstancesForFiberShallowly(fiber, hostInstances) {
                            {
                                var foundHostInstances = findChildHostInstancesForFiberShallowly(fiber, hostInstances);
                                if (foundHostInstances) {
                                    return;
                                }
                                var node = fiber;
                                while (true) {
                                    switch (node.tag) {
                                        case HostComponent:
                                            hostInstances.add(node.stateNode);
                                            return;
                                        case HostPortal:
                                            hostInstances.add(node.stateNode.containerInfo);
                                            return;
                                        case HostRoot:
                                            hostInstances.add(node.stateNode.containerInfo);
                                            return;
                                    }
                                    if (node.return === null) {
                                        throw new Error("Expected to reach root first.");
                                    }
                                    node = node.return;
                                }
                            }
                        }
                        function findChildHostInstancesForFiberShallowly(fiber, hostInstances) {
                            {
                                var node = fiber;
                                var foundHostInstances = false;
                                while (true) {
                                    if (node.tag === HostComponent) {
                                        foundHostInstances = true;
                                        hostInstances.add(node.stateNode);
                                    } else if (node.child !== null) {
                                        node.child.return = node;
                                        node = node.child;
                                        continue;
                                    }
                                    if (node === fiber) {
                                        return foundHostInstances;
                                    }
                                    while (node.sibling === null) {
                                        if (node.return === null || node.return === fiber) {
                                            return foundHostInstances;
                                        }
                                        node = node.return;
                                    }
                                    node.sibling.return = node.return;
                                    node = node.sibling;
                                }
                            }
                            return false;
                        }
                        var hasBadMapPolyfill;
                        {
                            hasBadMapPolyfill = false;
                            try {
                                var nonExtensibleObject = Object.preventExtensions({});
                                /* @__PURE__ */ new Map([[nonExtensibleObject, null]]);
                                /* @__PURE__ */ new Set([nonExtensibleObject]);
                            } catch (e) {
                                hasBadMapPolyfill = true;
                            }
                        }
                        function FiberNode(tag, pendingProps, key, mode) {
                            this.tag = tag;
                            this.key = key;
                            this.elementType = null;
                            this.type = null;
                            this.stateNode = null;
                            this.return = null;
                            this.child = null;
                            this.sibling = null;
                            this.index = 0;
                            this.ref = null;
                            this.pendingProps = pendingProps;
                            this.memoizedProps = null;
                            this.updateQueue = null;
                            this.memoizedState = null;
                            this.dependencies = null;
                            this.mode = mode;
                            this.flags = NoFlags;
                            this.subtreeFlags = NoFlags;
                            this.deletions = null;
                            this.lanes = NoLanes;
                            this.childLanes = NoLanes;
                            this.alternate = null;
                            {
                                this.actualDuration = Number.NaN;
                                this.actualStartTime = Number.NaN;
                                this.selfBaseDuration = Number.NaN;
                                this.treeBaseDuration = Number.NaN;
                                this.actualDuration = 0;
                                this.actualStartTime = -1;
                                this.selfBaseDuration = 0;
                                this.treeBaseDuration = 0;
                            }
                            {
                                this._debugSource = null;
                                this._debugOwner = null;
                                this._debugNeedsRemount = false;
                                this._debugHookTypes = null;
                                if (!hasBadMapPolyfill && typeof Object.preventExtensions === "function") {
                                    Object.preventExtensions(this);
                                }
                            }
                        }
                        var createFiber = function(tag, pendingProps, key, mode) {
                            return new FiberNode(tag, pendingProps, key, mode);
                        };
                        function shouldConstruct$1(Component) {
                            var prototype = Component.prototype;
                            return !!(prototype && prototype.isReactComponent);
                        }
                        function isSimpleFunctionComponent(type) {
                            return typeof type === "function" && !shouldConstruct$1(type) && type.defaultProps === void 0;
                        }
                        function resolveLazyComponentTag(Component) {
                            if (typeof Component === "function") {
                                return shouldConstruct$1(Component) ? ClassComponent : FunctionComponent;
                            } else if (Component !== void 0 && Component !== null) {
                                var $$typeof = Component.$$typeof;
                                if ($$typeof === REACT_FORWARD_REF_TYPE) {
                                    return ForwardRef;
                                }
                                if ($$typeof === REACT_MEMO_TYPE) {
                                    return MemoComponent;
                                }
                            }
                            return IndeterminateComponent;
                        }
                        function createWorkInProgress(current2, pendingProps) {
                            var workInProgress2 = current2.alternate;
                            if (workInProgress2 === null) {
                                workInProgress2 = createFiber(current2.tag, pendingProps, current2.key, current2.mode);
                                workInProgress2.elementType = current2.elementType;
                                workInProgress2.type = current2.type;
                                workInProgress2.stateNode = current2.stateNode;
                                {
                                    workInProgress2._debugSource = current2._debugSource;
                                    workInProgress2._debugOwner = current2._debugOwner;
                                    workInProgress2._debugHookTypes = current2._debugHookTypes;
                                }
                                workInProgress2.alternate = current2;
                                current2.alternate = workInProgress2;
                            } else {
                                workInProgress2.pendingProps = pendingProps;
                                workInProgress2.type = current2.type;
                                workInProgress2.flags = NoFlags;
                                workInProgress2.subtreeFlags = NoFlags;
                                workInProgress2.deletions = null;
                                {
                                    workInProgress2.actualDuration = 0;
                                    workInProgress2.actualStartTime = -1;
                                }
                            }
                            workInProgress2.flags = current2.flags & StaticMask;
                            workInProgress2.childLanes = current2.childLanes;
                            workInProgress2.lanes = current2.lanes;
                            workInProgress2.child = current2.child;
                            workInProgress2.memoizedProps = current2.memoizedProps;
                            workInProgress2.memoizedState = current2.memoizedState;
                            workInProgress2.updateQueue = current2.updateQueue;
                            var currentDependencies = current2.dependencies;
                            workInProgress2.dependencies = currentDependencies === null ? null : {
                                lanes: currentDependencies.lanes,
                                firstContext: currentDependencies.firstContext
                            };
                            workInProgress2.sibling = current2.sibling;
                            workInProgress2.index = current2.index;
                            workInProgress2.ref = current2.ref;
                            {
                                workInProgress2.selfBaseDuration = current2.selfBaseDuration;
                                workInProgress2.treeBaseDuration = current2.treeBaseDuration;
                            }
                            {
                                workInProgress2._debugNeedsRemount = current2._debugNeedsRemount;
                                switch (workInProgress2.tag) {
                                    case IndeterminateComponent:
                                    case FunctionComponent:
                                    case SimpleMemoComponent:
                                        workInProgress2.type = resolveFunctionForHotReloading(current2.type);
                                        break;
                                    case ClassComponent:
                                        workInProgress2.type = resolveClassForHotReloading(current2.type);
                                        break;
                                    case ForwardRef:
                                        workInProgress2.type = resolveForwardRefForHotReloading(current2.type);
                                        break;
                                }
                            }
                            return workInProgress2;
                        }
                        function resetWorkInProgress(workInProgress2, renderLanes2) {
                            workInProgress2.flags &= StaticMask | Placement;
                            var current2 = workInProgress2.alternate;
                            if (current2 === null) {
                                workInProgress2.childLanes = NoLanes;
                                workInProgress2.lanes = renderLanes2;
                                workInProgress2.child = null;
                                workInProgress2.subtreeFlags = NoFlags;
                                workInProgress2.memoizedProps = null;
                                workInProgress2.memoizedState = null;
                                workInProgress2.updateQueue = null;
                                workInProgress2.dependencies = null;
                                workInProgress2.stateNode = null;
                                {
                                    workInProgress2.selfBaseDuration = 0;
                                    workInProgress2.treeBaseDuration = 0;
                                }
                            } else {
                                workInProgress2.childLanes = current2.childLanes;
                                workInProgress2.lanes = current2.lanes;
                                workInProgress2.child = current2.child;
                                workInProgress2.subtreeFlags = NoFlags;
                                workInProgress2.deletions = null;
                                workInProgress2.memoizedProps = current2.memoizedProps;
                                workInProgress2.memoizedState = current2.memoizedState;
                                workInProgress2.updateQueue = current2.updateQueue;
                                workInProgress2.type = current2.type;
                                var currentDependencies = current2.dependencies;
                                workInProgress2.dependencies = currentDependencies === null ? null : {
                                    lanes: currentDependencies.lanes,
                                    firstContext: currentDependencies.firstContext
                                };
                                {
                                    workInProgress2.selfBaseDuration = current2.selfBaseDuration;
                                    workInProgress2.treeBaseDuration = current2.treeBaseDuration;
                                }
                            }
                            return workInProgress2;
                        }
                        function createHostRootFiber(tag, isStrictMode, concurrentUpdatesByDefaultOverride) {
                            var mode;
                            if (tag === ConcurrentRoot) {
                                mode = ConcurrentMode;
                                if (isStrictMode === true) {
                                    mode |= StrictLegacyMode;
                                    {
                                        mode |= StrictEffectsMode;
                                    }
                                }
                            } else {
                                mode = NoMode;
                            }
                            if (isDevToolsPresent) {
                                mode |= ProfileMode;
                            }
                            return createFiber(HostRoot, null, null, mode);
                        }
                        function createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes) {
                            var fiberTag = IndeterminateComponent;
                            var resolvedType = type;
                            if (typeof type === "function") {
                                if (shouldConstruct$1(type)) {
                                    fiberTag = ClassComponent;
                                    {
                                        resolvedType = resolveClassForHotReloading(resolvedType);
                                    }
                                } else {
                                    {
                                        resolvedType = resolveFunctionForHotReloading(resolvedType);
                                    }
                                }
                            } else if (typeof type === "string") {
                                fiberTag = HostComponent;
                            } else {
                                getTag:
                                    switch (type) {
                                        case REACT_FRAGMENT_TYPE:
                                            return createFiberFromFragment(pendingProps.children, mode, lanes, key);
                                        case REACT_STRICT_MODE_TYPE:
                                            fiberTag = Mode;
                                            mode |= StrictLegacyMode;
                                            if ((mode & ConcurrentMode) !== NoMode) {
                                                mode |= StrictEffectsMode;
                                            }
                                            break;
                                        case REACT_PROFILER_TYPE:
                                            return createFiberFromProfiler(pendingProps, mode, lanes, key);
                                        case REACT_SUSPENSE_TYPE:
                                            return createFiberFromSuspense(pendingProps, mode, lanes, key);
                                        case REACT_SUSPENSE_LIST_TYPE:
                                            return createFiberFromSuspenseList(pendingProps, mode, lanes, key);
                                        case REACT_OFFSCREEN_TYPE:
                                            return createFiberFromOffscreen(pendingProps, mode, lanes, key);
                                        case REACT_LEGACY_HIDDEN_TYPE:
                                        case REACT_SCOPE_TYPE:
                                        case REACT_CACHE_TYPE:
                                        case REACT_TRACING_MARKER_TYPE:
                                        case REACT_DEBUG_TRACING_MODE_TYPE:
                                        default: {
                                            if (typeof type === "object" && type !== null) {
                                                switch (type.$$typeof) {
                                                    case REACT_PROVIDER_TYPE:
                                                        fiberTag = ContextProvider;
                                                        break getTag;
                                                    case REACT_CONTEXT_TYPE:
                                                        fiberTag = ContextConsumer;
                                                        break getTag;
                                                    case REACT_FORWARD_REF_TYPE:
                                                        fiberTag = ForwardRef;
                                                    {
                                                        resolvedType = resolveForwardRefForHotReloading(resolvedType);
                                                    }
                                                        break getTag;
                                                    case REACT_MEMO_TYPE:
                                                        fiberTag = MemoComponent;
                                                        break getTag;
                                                    case REACT_LAZY_TYPE:
                                                        fiberTag = LazyComponent;
                                                        resolvedType = null;
                                                        break getTag;
                                                }
                                            }
                                            var info = "";
                                            {
                                                if (type === void 0 || typeof type === "object" && type !== null && Object.keys(type).length === 0) {
                                                    info += " You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.";
                                                }
                                                var ownerName = owner ? getComponentNameFromFiber(owner) : null;
                                                if (ownerName) {
                                                    info += "\n\nCheck the render method of `" + ownerName + "`.";
                                                }
                                            }
                                            throw new Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) " + ("but got: " + (type == null ? type : typeof type) + "." + info));
                                        }
                                    }
                            }
                            var fiber = createFiber(fiberTag, pendingProps, key, mode);
                            fiber.elementType = type;
                            fiber.type = resolvedType;
                            fiber.lanes = lanes;
                            {
                                fiber._debugOwner = owner;
                            }
                            return fiber;
                        }
                        function createFiberFromElement(element, mode, lanes) {
                            var owner = null;
                            {
                                owner = element._owner;
                            }
                            var type = element.type;
                            var key = element.key;
                            var pendingProps = element.props;
                            var fiber = createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, lanes);
                            {
                                fiber._debugSource = element._source;
                                fiber._debugOwner = element._owner;
                            }
                            return fiber;
                        }
                        function createFiberFromFragment(elements, mode, lanes, key) {
                            var fiber = createFiber(Fragment, elements, key, mode);
                            fiber.lanes = lanes;
                            return fiber;
                        }
                        function createFiberFromProfiler(pendingProps, mode, lanes, key) {
                            {
                                if (typeof pendingProps.id !== "string") {
                                    error('Profiler must specify an "id" of type `string` as a prop. Received the type `%s` instead.', typeof pendingProps.id);
                                }
                            }
                            var fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode);
                            fiber.elementType = REACT_PROFILER_TYPE;
                            fiber.lanes = lanes;
                            {
                                fiber.stateNode = {
                                    effectDuration: 0,
                                    passiveEffectDuration: 0
                                };
                            }
                            return fiber;
                        }
                        function createFiberFromSuspense(pendingProps, mode, lanes, key) {
                            var fiber = createFiber(SuspenseComponent, pendingProps, key, mode);
                            fiber.elementType = REACT_SUSPENSE_TYPE;
                            fiber.lanes = lanes;
                            return fiber;
                        }
                        function createFiberFromSuspenseList(pendingProps, mode, lanes, key) {
                            var fiber = createFiber(SuspenseListComponent, pendingProps, key, mode);
                            fiber.elementType = REACT_SUSPENSE_LIST_TYPE;
                            fiber.lanes = lanes;
                            return fiber;
                        }
                        function createFiberFromOffscreen(pendingProps, mode, lanes, key) {
                            var fiber = createFiber(OffscreenComponent, pendingProps, key, mode);
                            fiber.elementType = REACT_OFFSCREEN_TYPE;
                            fiber.lanes = lanes;
                            var primaryChildInstance = {
                                isHidden: false
                            };
                            fiber.stateNode = primaryChildInstance;
                            return fiber;
                        }
                        function createFiberFromText(content, mode, lanes) {
                            var fiber = createFiber(HostText, content, null, mode);
                            fiber.lanes = lanes;
                            return fiber;
                        }
                        function createFiberFromHostInstanceForDeletion() {
                            var fiber = createFiber(HostComponent, null, null, NoMode);
                            fiber.elementType = "DELETED";
                            return fiber;
                        }
                        function createFiberFromDehydratedFragment(dehydratedNode) {
                            var fiber = createFiber(DehydratedFragment, null, null, NoMode);
                            fiber.stateNode = dehydratedNode;
                            return fiber;
                        }
                        function createFiberFromPortal(portal, mode, lanes) {
                            var pendingProps = portal.children !== null ? portal.children : [];
                            var fiber = createFiber(HostPortal, pendingProps, portal.key, mode);
                            fiber.lanes = lanes;
                            fiber.stateNode = {
                                containerInfo: portal.containerInfo,
                                pendingChildren: null,
                                // Used by persistent updates
                                implementation: portal.implementation
                            };
                            return fiber;
                        }
                        function assignFiberPropertiesInDEV(target2, source) {
                            if (target2 === null) {
                                target2 = createFiber(IndeterminateComponent, null, null, NoMode);
                            }
                            target2.tag = source.tag;
                            target2.key = source.key;
                            target2.elementType = source.elementType;
                            target2.type = source.type;
                            target2.stateNode = source.stateNode;
                            target2.return = source.return;
                            target2.child = source.child;
                            target2.sibling = source.sibling;
                            target2.index = source.index;
                            target2.ref = source.ref;
                            target2.pendingProps = source.pendingProps;
                            target2.memoizedProps = source.memoizedProps;
                            target2.updateQueue = source.updateQueue;
                            target2.memoizedState = source.memoizedState;
                            target2.dependencies = source.dependencies;
                            target2.mode = source.mode;
                            target2.flags = source.flags;
                            target2.subtreeFlags = source.subtreeFlags;
                            target2.deletions = source.deletions;
                            target2.lanes = source.lanes;
                            target2.childLanes = source.childLanes;
                            target2.alternate = source.alternate;
                            {
                                target2.actualDuration = source.actualDuration;
                                target2.actualStartTime = source.actualStartTime;
                                target2.selfBaseDuration = source.selfBaseDuration;
                                target2.treeBaseDuration = source.treeBaseDuration;
                            }
                            target2._debugSource = source._debugSource;
                            target2._debugOwner = source._debugOwner;
                            target2._debugNeedsRemount = source._debugNeedsRemount;
                            target2._debugHookTypes = source._debugHookTypes;
                            return target2;
                        }
                        function FiberRootNode(containerInfo, tag, hydrate2, identifierPrefix, onRecoverableError) {
                            this.tag = tag;
                            this.containerInfo = containerInfo;
                            this.pendingChildren = null;
                            this.current = null;
                            this.pingCache = null;
                            this.finishedWork = null;
                            this.timeoutHandle = noTimeout;
                            this.context = null;
                            this.pendingContext = null;
                            this.callbackNode = null;
                            this.callbackPriority = NoLane;
                            this.eventTimes = createLaneMap(NoLanes);
                            this.expirationTimes = createLaneMap(NoTimestamp);
                            this.pendingLanes = NoLanes;
                            this.suspendedLanes = NoLanes;
                            this.pingedLanes = NoLanes;
                            this.expiredLanes = NoLanes;
                            this.mutableReadLanes = NoLanes;
                            this.finishedLanes = NoLanes;
                            this.entangledLanes = NoLanes;
                            this.entanglements = createLaneMap(NoLanes);
                            this.identifierPrefix = identifierPrefix;
                            this.onRecoverableError = onRecoverableError;
                            {
                                this.mutableSourceEagerHydrationData = null;
                            }
                            {
                                this.effectDuration = 0;
                                this.passiveEffectDuration = 0;
                            }
                            {
                                this.memoizedUpdaters = /* @__PURE__ */ new Set();
                                var pendingUpdatersLaneMap = this.pendingUpdatersLaneMap = [];
                                for (var _i = 0; _i < TotalLanes; _i++) {
                                    pendingUpdatersLaneMap.push(/* @__PURE__ */ new Set());
                                }
                            }
                            {
                                switch (tag) {
                                    case ConcurrentRoot:
                                        this._debugRootType = hydrate2 ? "hydrateRoot()" : "createRoot()";
                                        break;
                                    case LegacyRoot:
                                        this._debugRootType = hydrate2 ? "hydrate()" : "render()";
                                        break;
                                }
                            }
                        }
                        function createFiberRoot(containerInfo, tag, hydrate2, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError, transitionCallbacks) {
                            var root2 = new FiberRootNode(containerInfo, tag, hydrate2, identifierPrefix, onRecoverableError);
                            var uninitializedFiber = createHostRootFiber(tag, isStrictMode);
                            root2.current = uninitializedFiber;
                            uninitializedFiber.stateNode = root2;
                            {
                                var _initialState = {
                                    element: initialChildren,
                                    isDehydrated: hydrate2,
                                    cache: null,
                                    // not enabled yet
                                    transitions: null,
                                    pendingSuspenseBoundaries: null
                                };
                                uninitializedFiber.memoizedState = _initialState;
                            }
                            initializeUpdateQueue(uninitializedFiber);
                            return root2;
                        }
                        var ReactVersion = "18.2.0";
                        function createPortal(children, containerInfo, implementation) {
                            var key = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null;
                            {
                                checkKeyStringCoercion(key);
                            }
                            return {
                                // This tag allow us to uniquely identify this as a React Portal
                                $$typeof: REACT_PORTAL_TYPE,
                                key: key == null ? null : "" + key,
                                children,
                                containerInfo,
                                implementation
                            };
                        }
                        var didWarnAboutNestedUpdates;
                        var didWarnAboutFindNodeInStrictMode;
                        {
                            didWarnAboutNestedUpdates = false;
                            didWarnAboutFindNodeInStrictMode = {};
                        }
                        function getContextForSubtree(parentComponent) {
                            if (!parentComponent) {
                                return emptyContextObject;
                            }
                            var fiber = get(parentComponent);
                            var parentContext = findCurrentUnmaskedContext(fiber);
                            if (fiber.tag === ClassComponent) {
                                var Component = fiber.type;
                                if (isContextProvider(Component)) {
                                    return processChildContext(fiber, Component, parentContext);
                                }
                            }
                            return parentContext;
                        }
                        function findHostInstanceWithWarning(component, methodName) {
                            {
                                var fiber = get(component);
                                if (fiber === void 0) {
                                    if (typeof component.render === "function") {
                                        throw new Error("Unable to find node on an unmounted component.");
                                    } else {
                                        var keys = Object.keys(component).join(",");
                                        throw new Error("Argument appears to not be a ReactComponent. Keys: " + keys);
                                    }
                                }
                                var hostFiber = findCurrentHostFiber(fiber);
                                if (hostFiber === null) {
                                    return null;
                                }
                                if (hostFiber.mode & StrictLegacyMode) {
                                    var componentName = getComponentNameFromFiber(fiber) || "Component";
                                    if (!didWarnAboutFindNodeInStrictMode[componentName]) {
                                        didWarnAboutFindNodeInStrictMode[componentName] = true;
                                        var previousFiber = current;
                                        try {
                                            setCurrentFiber(hostFiber);
                                            if (fiber.mode & StrictLegacyMode) {
                                                error("%s is deprecated in StrictMode. %s was passed an instance of %s which is inside StrictMode. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", methodName, methodName, componentName);
                                            } else {
                                                error("%s is deprecated in StrictMode. %s was passed an instance of %s which renders StrictMode children. Instead, add a ref directly to the element you want to reference. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node", methodName, methodName, componentName);
                                            }
                                        } finally {
                                            if (previousFiber) {
                                                setCurrentFiber(previousFiber);
                                            } else {
                                                resetCurrentFiber();
                                            }
                                        }
                                    }
                                }
                                return hostFiber.stateNode;
                            }
                        }
                        function createContainer(containerInfo, tag, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError, transitionCallbacks) {
                            var hydrate2 = false;
                            var initialChildren = null;
                            return createFiberRoot(containerInfo, tag, hydrate2, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);
                        }
                        function createHydrationContainer(initialChildren, callback, containerInfo, tag, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError, transitionCallbacks) {
                            var hydrate2 = true;
                            var root2 = createFiberRoot(containerInfo, tag, hydrate2, initialChildren, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);
                            root2.context = getContextForSubtree(null);
                            var current2 = root2.current;
                            var eventTime = requestEventTime();
                            var lane = requestUpdateLane(current2);
                            var update = createUpdate(eventTime, lane);
                            update.callback = callback !== void 0 && callback !== null ? callback : null;
                            enqueueUpdate(current2, update, lane);
                            scheduleInitialHydrationOnRoot(root2, lane, eventTime);
                            return root2;
                        }
                        function updateContainer(element, container, parentComponent, callback) {
                            {
                                onScheduleRoot(container, element);
                            }
                            var current$1 = container.current;
                            var eventTime = requestEventTime();
                            var lane = requestUpdateLane(current$1);
                            {
                                markRenderScheduled(lane);
                            }
                            var context = getContextForSubtree(parentComponent);
                            if (container.context === null) {
                                container.context = context;
                            } else {
                                container.pendingContext = context;
                            }
                            {
                                if (isRendering && current !== null && !didWarnAboutNestedUpdates) {
                                    didWarnAboutNestedUpdates = true;
                                    error("Render methods should be a pure function of props and state; triggering nested component updates from render is not allowed. If necessary, trigger nested updates in componentDidUpdate.\n\nCheck the render method of %s.", getComponentNameFromFiber(current) || "Unknown");
                                }
                            }
                            var update = createUpdate(eventTime, lane);
                            update.payload = {
                                element
                            };
                            callback = callback === void 0 ? null : callback;
                            if (callback !== null) {
                                {
                                    if (typeof callback !== "function") {
                                        error("render(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callback);
                                    }
                                }
                                update.callback = callback;
                            }
                            var root2 = enqueueUpdate(current$1, update, lane);
                            if (root2 !== null) {
                                scheduleUpdateOnFiber(root2, current$1, lane, eventTime);
                                entangleTransitions(root2, current$1, lane);
                            }
                            return lane;
                        }
                        function getPublicRootInstance(container) {
                            var containerFiber = container.current;
                            if (!containerFiber.child) {
                                return null;
                            }
                            switch (containerFiber.child.tag) {
                                case HostComponent:
                                    return getPublicInstance(containerFiber.child.stateNode);
                                default:
                                    return containerFiber.child.stateNode;
                            }
                        }
                        function attemptSynchronousHydration$1(fiber) {
                            switch (fiber.tag) {
                                case HostRoot: {
                                    var root2 = fiber.stateNode;
                                    if (isRootDehydrated(root2)) {
                                        var lanes = getHighestPriorityPendingLanes(root2);
                                        flushRoot(root2, lanes);
                                    }
                                    break;
                                }
                                case SuspenseComponent: {
                                    flushSync(function() {
                                        var root3 = enqueueConcurrentRenderForLane(fiber, SyncLane);
                                        if (root3 !== null) {
                                            var eventTime = requestEventTime();
                                            scheduleUpdateOnFiber(root3, fiber, SyncLane, eventTime);
                                        }
                                    });
                                    var retryLane = SyncLane;
                                    markRetryLaneIfNotHydrated(fiber, retryLane);
                                    break;
                                }
                            }
                        }
                        function markRetryLaneImpl(fiber, retryLane) {
                            var suspenseState = fiber.memoizedState;
                            if (suspenseState !== null && suspenseState.dehydrated !== null) {
                                suspenseState.retryLane = higherPriorityLane(suspenseState.retryLane, retryLane);
                            }
                        }
                        function markRetryLaneIfNotHydrated(fiber, retryLane) {
                            markRetryLaneImpl(fiber, retryLane);
                            var alternate = fiber.alternate;
                            if (alternate) {
                                markRetryLaneImpl(alternate, retryLane);
                            }
                        }
                        function attemptContinuousHydration$1(fiber) {
                            if (fiber.tag !== SuspenseComponent) {
                                return;
                            }
                            var lane = SelectiveHydrationLane;
                            var root2 = enqueueConcurrentRenderForLane(fiber, lane);
                            if (root2 !== null) {
                                var eventTime = requestEventTime();
                                scheduleUpdateOnFiber(root2, fiber, lane, eventTime);
                            }
                            markRetryLaneIfNotHydrated(fiber, lane);
                        }
                        function attemptHydrationAtCurrentPriority$1(fiber) {
                            if (fiber.tag !== SuspenseComponent) {
                                return;
                            }
                            var lane = requestUpdateLane(fiber);
                            var root2 = enqueueConcurrentRenderForLane(fiber, lane);
                            if (root2 !== null) {
                                var eventTime = requestEventTime();
                                scheduleUpdateOnFiber(root2, fiber, lane, eventTime);
                            }
                            markRetryLaneIfNotHydrated(fiber, lane);
                        }
                        function findHostInstanceWithNoPortals(fiber) {
                            var hostFiber = findCurrentHostFiberWithNoPortals(fiber);
                            if (hostFiber === null) {
                                return null;
                            }
                            return hostFiber.stateNode;
                        }
                        var shouldErrorImpl = function(fiber) {
                            return null;
                        };
                        function shouldError(fiber) {
                            return shouldErrorImpl(fiber);
                        }
                        var shouldSuspendImpl = function(fiber) {
                            return false;
                        };
                        function shouldSuspend(fiber) {
                            return shouldSuspendImpl(fiber);
                        }
                        var overrideHookState = null;
                        var overrideHookStateDeletePath = null;
                        var overrideHookStateRenamePath = null;
                        var overrideProps = null;
                        var overridePropsDeletePath = null;
                        var overridePropsRenamePath = null;
                        var scheduleUpdate = null;
                        var setErrorHandler = null;
                        var setSuspenseHandler = null;
                        {
                            var copyWithDeleteImpl = function(obj, path, index2) {
                                var key = path[index2];
                                var updated = isArray(obj) ? obj.slice() : assign({}, obj);
                                if (index2 + 1 === path.length) {
                                    if (isArray(updated)) {
                                        updated.splice(key, 1);
                                    } else {
                                        delete updated[key];
                                    }
                                    return updated;
                                }
                                updated[key] = copyWithDeleteImpl(obj[key], path, index2 + 1);
                                return updated;
                            };
                            var copyWithDelete = function(obj, path) {
                                return copyWithDeleteImpl(obj, path, 0);
                            };
                            var copyWithRenameImpl = function(obj, oldPath, newPath, index2) {
                                var oldKey = oldPath[index2];
                                var updated = isArray(obj) ? obj.slice() : assign({}, obj);
                                if (index2 + 1 === oldPath.length) {
                                    var newKey = newPath[index2];
                                    updated[newKey] = updated[oldKey];
                                    if (isArray(updated)) {
                                        updated.splice(oldKey, 1);
                                    } else {
                                        delete updated[oldKey];
                                    }
                                } else {
                                    updated[oldKey] = copyWithRenameImpl(
                                        // $FlowFixMe number or string is fine here
                                        obj[oldKey],
                                        oldPath,
                                        newPath,
                                        index2 + 1
                                    );
                                }
                                return updated;
                            };
                            var copyWithRename = function(obj, oldPath, newPath) {
                                if (oldPath.length !== newPath.length) {
                                    warn("copyWithRename() expects paths of the same length");
                                    return;
                                } else {
                                    for (var i = 0; i < newPath.length - 1; i++) {
                                        if (oldPath[i] !== newPath[i]) {
                                            warn("copyWithRename() expects paths to be the same except for the deepest key");
                                            return;
                                        }
                                    }
                                }
                                return copyWithRenameImpl(obj, oldPath, newPath, 0);
                            };
                            var copyWithSetImpl = function(obj, path, index2, value) {
                                if (index2 >= path.length) {
                                    return value;
                                }
                                var key = path[index2];
                                var updated = isArray(obj) ? obj.slice() : assign({}, obj);
                                updated[key] = copyWithSetImpl(obj[key], path, index2 + 1, value);
                                return updated;
                            };
                            var copyWithSet = function(obj, path, value) {
                                return copyWithSetImpl(obj, path, 0, value);
                            };
                            var findHook = function(fiber, id) {
                                var currentHook2 = fiber.memoizedState;
                                while (currentHook2 !== null && id > 0) {
                                    currentHook2 = currentHook2.next;
                                    id--;
                                }
                                return currentHook2;
                            };
                            overrideHookState = function(fiber, id, path, value) {
                                var hook = findHook(fiber, id);
                                if (hook !== null) {
                                    var newState = copyWithSet(hook.memoizedState, path, value);
                                    hook.memoizedState = newState;
                                    hook.baseState = newState;
                                    fiber.memoizedProps = assign({}, fiber.memoizedProps);
                                    var root2 = enqueueConcurrentRenderForLane(fiber, SyncLane);
                                    if (root2 !== null) {
                                        scheduleUpdateOnFiber(root2, fiber, SyncLane, NoTimestamp);
                                    }
                                }
                            };
                            overrideHookStateDeletePath = function(fiber, id, path) {
                                var hook = findHook(fiber, id);
                                if (hook !== null) {
                                    var newState = copyWithDelete(hook.memoizedState, path);
                                    hook.memoizedState = newState;
                                    hook.baseState = newState;
                                    fiber.memoizedProps = assign({}, fiber.memoizedProps);
                                    var root2 = enqueueConcurrentRenderForLane(fiber, SyncLane);
                                    if (root2 !== null) {
                                        scheduleUpdateOnFiber(root2, fiber, SyncLane, NoTimestamp);
                                    }
                                }
                            };
                            overrideHookStateRenamePath = function(fiber, id, oldPath, newPath) {
                                var hook = findHook(fiber, id);
                                if (hook !== null) {
                                    var newState = copyWithRename(hook.memoizedState, oldPath, newPath);
                                    hook.memoizedState = newState;
                                    hook.baseState = newState;
                                    fiber.memoizedProps = assign({}, fiber.memoizedProps);
                                    var root2 = enqueueConcurrentRenderForLane(fiber, SyncLane);
                                    if (root2 !== null) {
                                        scheduleUpdateOnFiber(root2, fiber, SyncLane, NoTimestamp);
                                    }
                                }
                            };
                            overrideProps = function(fiber, path, value) {
                                fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);
                                if (fiber.alternate) {
                                    fiber.alternate.pendingProps = fiber.pendingProps;
                                }
                                var root2 = enqueueConcurrentRenderForLane(fiber, SyncLane);
                                if (root2 !== null) {
                                    scheduleUpdateOnFiber(root2, fiber, SyncLane, NoTimestamp);
                                }
                            };
                            overridePropsDeletePath = function(fiber, path) {
                                fiber.pendingProps = copyWithDelete(fiber.memoizedProps, path);
                                if (fiber.alternate) {
                                    fiber.alternate.pendingProps = fiber.pendingProps;
                                }
                                var root2 = enqueueConcurrentRenderForLane(fiber, SyncLane);
                                if (root2 !== null) {
                                    scheduleUpdateOnFiber(root2, fiber, SyncLane, NoTimestamp);
                                }
                            };
                            overridePropsRenamePath = function(fiber, oldPath, newPath) {
                                fiber.pendingProps = copyWithRename(fiber.memoizedProps, oldPath, newPath);
                                if (fiber.alternate) {
                                    fiber.alternate.pendingProps = fiber.pendingProps;
                                }
                                var root2 = enqueueConcurrentRenderForLane(fiber, SyncLane);
                                if (root2 !== null) {
                                    scheduleUpdateOnFiber(root2, fiber, SyncLane, NoTimestamp);
                                }
                            };
                            scheduleUpdate = function(fiber) {
                                var root2 = enqueueConcurrentRenderForLane(fiber, SyncLane);
                                if (root2 !== null) {
                                    scheduleUpdateOnFiber(root2, fiber, SyncLane, NoTimestamp);
                                }
                            };
                            setErrorHandler = function(newShouldErrorImpl) {
                                shouldErrorImpl = newShouldErrorImpl;
                            };
                            setSuspenseHandler = function(newShouldSuspendImpl) {
                                shouldSuspendImpl = newShouldSuspendImpl;
                            };
                        }
                        function findHostInstanceByFiber(fiber) {
                            var hostFiber = findCurrentHostFiber(fiber);
                            if (hostFiber === null) {
                                return null;
                            }
                            return hostFiber.stateNode;
                        }
                        function emptyFindFiberByHostInstance(instance2) {
                            return null;
                        }
                        function getCurrentFiberForDevTools() {
                            return current;
                        }
                        function injectIntoDevTools(devToolsConfig) {
                            var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;
                            var ReactCurrentDispatcher2 = ReactSharedInternals.ReactCurrentDispatcher;
                            return injectInternals({
                                bundleType: devToolsConfig.bundleType,
                                version: devToolsConfig.version,
                                rendererPackageName: devToolsConfig.rendererPackageName,
                                rendererConfig: devToolsConfig.rendererConfig,
                                overrideHookState,
                                overrideHookStateDeletePath,
                                overrideHookStateRenamePath,
                                overrideProps,
                                overridePropsDeletePath,
                                overridePropsRenamePath,
                                setErrorHandler,
                                setSuspenseHandler,
                                scheduleUpdate,
                                currentDispatcherRef: ReactCurrentDispatcher2,
                                findHostInstanceByFiber,
                                findFiberByHostInstance: findFiberByHostInstance || emptyFindFiberByHostInstance,
                                // React Refresh
                                findHostInstancesForRefresh,
                                scheduleRefresh,
                                scheduleRoot,
                                setRefreshHandler,
                                // Enables DevTools to append owner stacks to error messages in DEV mode.
                                getCurrentFiber: getCurrentFiberForDevTools,
                                // Enables DevTools to detect reconciler version rather than renderer version
                                // which may not match for third party renderers.
                                reconcilerVersion: ReactVersion
                            });
                        }
                        var defaultOnRecoverableError = typeof reportError === "function" ? (
                            // In modern browsers, reportError will dispatch an error event,
                            // emulating an uncaught JavaScript error.
                            reportError
                        ) : function(error2) {
                            console["error"](error2);
                        };
                        function ReactDOMRoot(internalRoot) {
                            this._internalRoot = internalRoot;
                        }
                        ReactDOMHydrationRoot.prototype.render = ReactDOMRoot.prototype.render = function(children) {
                            var root2 = this._internalRoot;
                            if (root2 === null) {
                                throw new Error("Cannot update an unmounted root.");
                            }
                            {
                                if (typeof arguments[1] === "function") {
                                    error("render(...): does not support the second callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().");
                                } else if (isValidContainer(arguments[1])) {
                                    error("You passed a container to the second argument of root.render(...). You don't need to pass it again since you already passed it to create the root.");
                                } else if (typeof arguments[1] !== "undefined") {
                                    error("You passed a second argument to root.render(...) but it only accepts one argument.");
                                }
                                var container = root2.containerInfo;
                                if (container.nodeType !== COMMENT_NODE) {
                                    var hostInstance = findHostInstanceWithNoPortals(root2.current);
                                    if (hostInstance) {
                                        if (hostInstance.parentNode !== container) {
                                            error("render(...): It looks like the React-rendered content of the root container was removed without using React. This is not supported and will cause errors. Instead, call root.unmount() to empty a root's container.");
                                        }
                                    }
                                }
                            }
                            updateContainer(children, root2, null, null);
                        };
                        ReactDOMHydrationRoot.prototype.unmount = ReactDOMRoot.prototype.unmount = function() {
                            {
                                if (typeof arguments[0] === "function") {
                                    error("unmount(...): does not support a callback argument. To execute a side effect after rendering, declare it in a component body with useEffect().");
                                }
                            }
                            var root2 = this._internalRoot;
                            if (root2 !== null) {
                                this._internalRoot = null;
                                var container = root2.containerInfo;
                                {
                                    if (isAlreadyRendering()) {
                                        error("Attempted to synchronously unmount a root while React was already rendering. React cannot finish unmounting the root until the current render has completed, which may lead to a race condition.");
                                    }
                                }
                                flushSync(function() {
                                    updateContainer(null, root2, null, null);
                                });
                                unmarkContainerAsRoot(container);
                            }
                        };
                        function createRoot2(container, options2) {
                            if (!isValidContainer(container)) {
                                throw new Error("createRoot(...): Target container is not a DOM element.");
                            }
                            warnIfReactDOMContainerInDEV(container);
                            var isStrictMode = false;
                            var concurrentUpdatesByDefaultOverride = false;
                            var identifierPrefix = "";
                            var onRecoverableError = defaultOnRecoverableError;
                            var transitionCallbacks = null;
                            if (options2 !== null && options2 !== void 0) {
                                {
                                    if (options2.hydrate) {
                                        warn("hydrate through createRoot is deprecated. Use ReactDOMClient.hydrateRoot(container, <App />) instead.");
                                    } else {
                                        if (typeof options2 === "object" && options2 !== null && options2.$$typeof === REACT_ELEMENT_TYPE) {
                                            error("You passed a JSX element to createRoot. You probably meant to call root.render instead. Example usage:\n\n  let root = createRoot(domContainer);\n  root.render(<App />);");
                                        }
                                    }
                                }
                                if (options2.unstable_strictMode === true) {
                                    isStrictMode = true;
                                }
                                if (options2.identifierPrefix !== void 0) {
                                    identifierPrefix = options2.identifierPrefix;
                                }
                                if (options2.onRecoverableError !== void 0) {
                                    onRecoverableError = options2.onRecoverableError;
                                }
                                if (options2.transitionCallbacks !== void 0) {
                                    transitionCallbacks = options2.transitionCallbacks;
                                }
                            }
                            var root2 = createContainer(container, ConcurrentRoot, null, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);
                            markContainerAsRoot(root2.current, container);
                            var rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;
                            listenToAllSupportedEvents(rootContainerElement);
                            return new ReactDOMRoot(root2);
                        }
                        function ReactDOMHydrationRoot(internalRoot) {
                            this._internalRoot = internalRoot;
                        }
                        function scheduleHydration(target2) {
                            if (target2) {
                                queueExplicitHydrationTarget(target2);
                            }
                        }
                        ReactDOMHydrationRoot.prototype.unstable_scheduleHydration = scheduleHydration;
                        function hydrateRoot(container, initialChildren, options2) {
                            if (!isValidContainer(container)) {
                                throw new Error("hydrateRoot(...): Target container is not a DOM element.");
                            }
                            warnIfReactDOMContainerInDEV(container);
                            {
                                if (initialChildren === void 0) {
                                    error("Must provide initial children as second argument to hydrateRoot. Example usage: hydrateRoot(domContainer, <App />)");
                                }
                            }
                            var hydrationCallbacks = options2 != null ? options2 : null;
                            var mutableSources = options2 != null && options2.hydratedSources || null;
                            var isStrictMode = false;
                            var concurrentUpdatesByDefaultOverride = false;
                            var identifierPrefix = "";
                            var onRecoverableError = defaultOnRecoverableError;
                            if (options2 !== null && options2 !== void 0) {
                                if (options2.unstable_strictMode === true) {
                                    isStrictMode = true;
                                }
                                if (options2.identifierPrefix !== void 0) {
                                    identifierPrefix = options2.identifierPrefix;
                                }
                                if (options2.onRecoverableError !== void 0) {
                                    onRecoverableError = options2.onRecoverableError;
                                }
                            }
                            var root2 = createHydrationContainer(initialChildren, null, container, ConcurrentRoot, hydrationCallbacks, isStrictMode, concurrentUpdatesByDefaultOverride, identifierPrefix, onRecoverableError);
                            markContainerAsRoot(root2.current, container);
                            listenToAllSupportedEvents(container);
                            if (mutableSources) {
                                for (var i = 0; i < mutableSources.length; i++) {
                                    var mutableSource = mutableSources[i];
                                    registerMutableSourceForHydration(root2, mutableSource);
                                }
                            }
                            return new ReactDOMHydrationRoot(root2);
                        }
                        function isValidContainer(node) {
                            return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || !disableCommentsAsDOMContainers));
                        }
                        function isValidContainerLegacy(node) {
                            return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || node.nodeType === COMMENT_NODE && node.nodeValue === " react-mount-point-unstable "));
                        }
                        function warnIfReactDOMContainerInDEV(container) {
                            {
                                if (container.nodeType === ELEMENT_NODE && container.tagName && container.tagName.toUpperCase() === "BODY") {
                                    error("createRoot(): Creating roots directly with document.body is discouraged, since its children are often manipulated by third-party scripts and browser extensions. This may lead to subtle reconciliation issues. Try using a container element created for your app.");
                                }
                                if (isContainerMarkedAsRoot(container)) {
                                    if (container._reactRootContainer) {
                                        error("You are calling ReactDOMClient.createRoot() on a container that was previously passed to ReactDOM.render(). This is not supported.");
                                    } else {
                                        error("You are calling ReactDOMClient.createRoot() on a container that has already been passed to createRoot() before. Instead, call root.render() on the existing root instead if you want to update it.");
                                    }
                                }
                            }
                        }
                        var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner;
                        var topLevelUpdateWarnings;
                        {
                            topLevelUpdateWarnings = function(container) {
                                if (container._reactRootContainer && container.nodeType !== COMMENT_NODE) {
                                    var hostInstance = findHostInstanceWithNoPortals(container._reactRootContainer.current);
                                    if (hostInstance) {
                                        if (hostInstance.parentNode !== container) {
                                            error("render(...): It looks like the React-rendered content of this container was removed without using React. This is not supported and will cause errors. Instead, call ReactDOM.unmountComponentAtNode to empty a container.");
                                        }
                                    }
                                }
                                var isRootRenderedBySomeReact = !!container._reactRootContainer;
                                var rootEl = getReactRootElementInContainer(container);
                                var hasNonRootReactChild = !!(rootEl && getInstanceFromNode(rootEl));
                                if (hasNonRootReactChild && !isRootRenderedBySomeReact) {
                                    error("render(...): Replacing React-rendered children with a new root component. If you intended to update the children of this node, you should instead have the existing children update their state and render the new components instead of calling ReactDOM.render.");
                                }
                                if (container.nodeType === ELEMENT_NODE && container.tagName && container.tagName.toUpperCase() === "BODY") {
                                    error("render(): Rendering components directly into document.body is discouraged, since its children are often manipulated by third-party scripts and browser extensions. This may lead to subtle reconciliation issues. Try rendering into a container element created for your app.");
                                }
                            };
                        }
                        function getReactRootElementInContainer(container) {
                            if (!container) {
                                return null;
                            }
                            if (container.nodeType === DOCUMENT_NODE) {
                                return container.documentElement;
                            } else {
                                return container.firstChild;
                            }
                        }
                        function noopOnRecoverableError() {
                        }
                        function legacyCreateRootFromDOMContainer(container, initialChildren, parentComponent, callback, isHydrationContainer) {
                            if (isHydrationContainer) {
                                if (typeof callback === "function") {
                                    var originalCallback = callback;
                                    callback = function() {
                                        var instance2 = getPublicRootInstance(root2);
                                        originalCallback.call(instance2);
                                    };
                                }
                                var root2 = createHydrationContainer(
                                    initialChildren,
                                    callback,
                                    container,
                                    LegacyRoot,
                                    null,
                                    // hydrationCallbacks
                                    false,
                                    // isStrictMode
                                    false,
                                    // concurrentUpdatesByDefaultOverride,
                                    "",
                                    // identifierPrefix
                                    noopOnRecoverableError
                                );
                                container._reactRootContainer = root2;
                                markContainerAsRoot(root2.current, container);
                                var rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;
                                listenToAllSupportedEvents(rootContainerElement);
                                flushSync();
                                return root2;
                            } else {
                                var rootSibling;
                                while (rootSibling = container.lastChild) {
                                    container.removeChild(rootSibling);
                                }
                                if (typeof callback === "function") {
                                    var _originalCallback = callback;
                                    callback = function() {
                                        var instance2 = getPublicRootInstance(_root);
                                        _originalCallback.call(instance2);
                                    };
                                }
                                var _root = createContainer(
                                    container,
                                    LegacyRoot,
                                    null,
                                    // hydrationCallbacks
                                    false,
                                    // isStrictMode
                                    false,
                                    // concurrentUpdatesByDefaultOverride,
                                    "",
                                    // identifierPrefix
                                    noopOnRecoverableError
                                );
                                container._reactRootContainer = _root;
                                markContainerAsRoot(_root.current, container);
                                var _rootContainerElement = container.nodeType === COMMENT_NODE ? container.parentNode : container;
                                listenToAllSupportedEvents(_rootContainerElement);
                                flushSync(function() {
                                    updateContainer(initialChildren, _root, parentComponent, callback);
                                });
                                return _root;
                            }
                        }
                        function warnOnInvalidCallback$1(callback, callerName) {
                            {
                                if (callback !== null && typeof callback !== "function") {
                                    error("%s(...): Expected the last optional `callback` argument to be a function. Instead received: %s.", callerName, callback);
                                }
                            }
                        }
                        function legacyRenderSubtreeIntoContainer(parentComponent, children, container, forceHydrate, callback) {
                            {
                                topLevelUpdateWarnings(container);
                                warnOnInvalidCallback$1(callback === void 0 ? null : callback, "render");
                            }
                            var maybeRoot = container._reactRootContainer;
                            var root2;
                            if (!maybeRoot) {
                                root2 = legacyCreateRootFromDOMContainer(container, children, parentComponent, callback, forceHydrate);
                            } else {
                                root2 = maybeRoot;
                                if (typeof callback === "function") {
                                    var originalCallback = callback;
                                    callback = function() {
                                        var instance2 = getPublicRootInstance(root2);
                                        originalCallback.call(instance2);
                                    };
                                }
                                updateContainer(children, root2, parentComponent, callback);
                            }
                            return getPublicRootInstance(root2);
                        }
                        function findDOMNode(componentOrElement) {
                            {
                                var owner = ReactCurrentOwner$3.current;
                                if (owner !== null && owner.stateNode !== null) {
                                    var warnedAboutRefsInRender = owner.stateNode._warnedAboutRefsInRender;
                                    if (!warnedAboutRefsInRender) {
                                        error("%s is accessing findDOMNode inside its render(). render() should be a pure function of props and state. It should never access something that requires stale data from the previous render, such as refs. Move this logic to componentDidMount and componentDidUpdate instead.", getComponentNameFromType(owner.type) || "A component");
                                    }
                                    owner.stateNode._warnedAboutRefsInRender = true;
                                }
                            }
                            if (componentOrElement == null) {
                                return null;
                            }
                            if (componentOrElement.nodeType === ELEMENT_NODE) {
                                return componentOrElement;
                            }
                            {
                                return findHostInstanceWithWarning(componentOrElement, "findDOMNode");
                            }
                        }
                        function hydrate(element, container, callback) {
                            {
                                error("ReactDOM.hydrate is no longer supported in React 18. Use hydrateRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot");
                            }
                            if (!isValidContainerLegacy(container)) {
                                throw new Error("Target container is not a DOM element.");
                            }
                            {
                                var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === void 0;
                                if (isModernRoot) {
                                    error("You are calling ReactDOM.hydrate() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call hydrateRoot(container, element)?");
                                }
                            }
                            return legacyRenderSubtreeIntoContainer(null, element, container, true, callback);
                        }
                        function render(element, container, callback) {
                            {
                                error("ReactDOM.render is no longer supported in React 18. Use createRoot instead. Until you switch to the new API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot");
                            }
                            if (!isValidContainerLegacy(container)) {
                                throw new Error("Target container is not a DOM element.");
                            }
                            {
                                var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === void 0;
                                if (isModernRoot) {
                                    error("You are calling ReactDOM.render() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call root.render(element)?");
                                }
                            }
                            return legacyRenderSubtreeIntoContainer(null, element, container, false, callback);
                        }
                        function unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {
                            {
                                error("ReactDOM.unstable_renderSubtreeIntoContainer() is no longer supported in React 18. Consider using a portal instead. Until you switch to the createRoot API, your app will behave as if it's running React 17. Learn more: https://reactjs.org/link/switch-to-createroot");
                            }
                            if (!isValidContainerLegacy(containerNode)) {
                                throw new Error("Target container is not a DOM element.");
                            }
                            if (parentComponent == null || !has(parentComponent)) {
                                throw new Error("parentComponent must be a valid React Component");
                            }
                            return legacyRenderSubtreeIntoContainer(parentComponent, element, containerNode, false, callback);
                        }
                        function unmountComponentAtNode(container) {
                            if (!isValidContainerLegacy(container)) {
                                throw new Error("unmountComponentAtNode(...): Target container is not a DOM element.");
                            }
                            {
                                var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === void 0;
                                if (isModernRoot) {
                                    error("You are calling ReactDOM.unmountComponentAtNode() on a container that was previously passed to ReactDOMClient.createRoot(). This is not supported. Did you mean to call root.unmount()?");
                                }
                            }
                            if (container._reactRootContainer) {
                                {
                                    var rootEl = getReactRootElementInContainer(container);
                                    var renderedByDifferentReact = rootEl && !getInstanceFromNode(rootEl);
                                    if (renderedByDifferentReact) {
                                        error("unmountComponentAtNode(): The node you're attempting to unmount was rendered by another copy of React.");
                                    }
                                }
                                flushSync(function() {
                                    legacyRenderSubtreeIntoContainer(null, null, container, false, function() {
                                        container._reactRootContainer = null;
                                        unmarkContainerAsRoot(container);
                                    });
                                });
                                return true;
                            } else {
                                {
                                    var _rootEl = getReactRootElementInContainer(container);
                                    var hasNonRootReactChild = !!(_rootEl && getInstanceFromNode(_rootEl));
                                    var isContainerReactRoot = container.nodeType === ELEMENT_NODE && isValidContainerLegacy(container.parentNode) && !!container.parentNode._reactRootContainer;
                                    if (hasNonRootReactChild) {
                                        error("unmountComponentAtNode(): The node you're attempting to unmount was rendered by React and is not a top-level container. %s", isContainerReactRoot ? "You may have accidentally passed in a React root node instead of its container." : "Instead, have the parent component update its state and rerender in order to remove this component.");
                                    }
                                }
                                return false;
                            }
                        }
                        setAttemptSynchronousHydration(attemptSynchronousHydration$1);
                        setAttemptContinuousHydration(attemptContinuousHydration$1);
                        setAttemptHydrationAtCurrentPriority(attemptHydrationAtCurrentPriority$1);
                        setGetCurrentUpdatePriority(getCurrentUpdatePriority);
                        setAttemptHydrationAtPriority(runWithPriority);
                        {
                            if (typeof Map !== "function" || // $FlowIssue Flow incorrectly thinks Map has no prototype
                                Map.prototype == null || typeof Map.prototype.forEach !== "function" || typeof Set !== "function" || // $FlowIssue Flow incorrectly thinks Set has no prototype
                                Set.prototype == null || typeof Set.prototype.clear !== "function" || typeof Set.prototype.forEach !== "function") {
                                error("React depends on Map and Set built-in types. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills");
                            }
                        }
                        setRestoreImplementation(restoreControlledState$3);
                        setBatchingImplementation(batchedUpdates$1, discreteUpdates, flushSync);
                        function createPortal$1(children, container) {
                            var key = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
                            if (!isValidContainer(container)) {
                                throw new Error("Target container is not a DOM element.");
                            }
                            return createPortal(children, container, null, key);
                        }
                        function renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {
                            return unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback);
                        }
                        var Internals = {
                            usingClientEntryPoint: false,
                            // Keep in sync with ReactTestUtils.js.
                            // This is an array for better minification.
                            Events: [getInstanceFromNode, getNodeFromInstance, getFiberCurrentPropsFromNode, enqueueStateRestore, restoreStateIfNeeded, batchedUpdates$1]
                        };
                        function createRoot$1(container, options2) {
                            {
                                if (!Internals.usingClientEntryPoint && true) {
                                    error('You are importing createRoot from "react-dom" which is not supported. You should instead import it from "react-dom/client".');
                                }
                            }
                            return createRoot2(container, options2);
                        }
                        function hydrateRoot$1(container, initialChildren, options2) {
                            {
                                if (!Internals.usingClientEntryPoint && true) {
                                    error('You are importing hydrateRoot from "react-dom" which is not supported. You should instead import it from "react-dom/client".');
                                }
                            }
                            return hydrateRoot(container, initialChildren, options2);
                        }
                        function flushSync$1(fn) {
                            {
                                if (isAlreadyRendering()) {
                                    error("flushSync was called from inside a lifecycle method. React cannot flush when React is already rendering. Consider moving this call to a scheduler task or micro task.");
                                }
                            }
                            return flushSync(fn);
                        }
                        var foundDevTools = injectIntoDevTools({
                            findFiberByHostInstance: getClosestInstanceFromNode,
                            bundleType: 1,
                            version: ReactVersion,
                            rendererPackageName: "react-dom"
                        });
                        {
                            if (!foundDevTools && canUseDOM && window.top === window.self) {
                                if (navigator.userAgent.indexOf("Chrome") > -1 && navigator.userAgent.indexOf("Edge") === -1 || navigator.userAgent.indexOf("Firefox") > -1) {
                                    var protocol = window.location.protocol;
                                    if (/^(https?|file):$/.test(protocol)) {
                                        console.info("%cDownload the React DevTools for a better development experience: https://reactjs.org/link/react-devtools" + (protocol === "file:" ? "\nYou might need to use a local HTTP server (instead of file://): https://reactjs.org/link/react-devtools-faq" : ""), "font-weight:bold");
                                    }
                                }
                            }
                        }
                        exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Internals;
                        exports.createPortal = createPortal$1;
                        exports.createRoot = createRoot$1;
                        exports.findDOMNode = findDOMNode;
                        exports.flushSync = flushSync$1;
                        exports.hydrate = hydrate;
                        exports.hydrateRoot = hydrateRoot$1;
                        exports.render = render;
                        exports.unmountComponentAtNode = unmountComponentAtNode;
                        exports.unstable_batchedUpdates = batchedUpdates$1;
                        exports.unstable_renderSubtreeIntoContainer = renderSubtreeIntoContainer;
                        exports.version = ReactVersion;
                        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== "undefined" && typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop === "function") {
                            __REACT_DEVTOOLS_GLOBAL_HOOK__.registerInternalModuleStop(new Error());
                        }
                    })();
                }
            }
        });

        // node_modules/react-dom/index.js
        var require_react_dom = __commonJS({
            "node_modules/react-dom/index.js"(exports, module) {
                "use strict";
                if (false) {
                    checkDCE();
                    module.exports = null;
                } else {
                    module.exports = require_react_dom_development();
                }
            }
        });

        // node_modules/react-dom/client.js
        var require_client = __commonJS({
            "node_modules/react-dom/client.js"(exports) {
                "use strict";
                var m = require_react_dom();
                if (false) {
                    exports.createRoot = m.createRoot;
                    exports.hydrateRoot = m.hydrateRoot;
                } else {
                    i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
                    exports.createRoot = function(c, o) {
                        i.usingClientEntryPoint = true;
                        try {
                            return m.createRoot(c, o);
                        } finally {
                            i.usingClientEntryPoint = false;
                        }
                    };
                    exports.hydrateRoot = function(c, h, o) {
                        i.usingClientEntryPoint = true;
                        try {
                            return m.hydrateRoot(c, h, o);
                        } finally {
                            i.usingClientEntryPoint = false;
                        }
                    };
                }
                var i;
            }
        });

        // node_modules/@heroicons/react/20/solid/AcademicCapIcon.js
        var require_AcademicCapIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/AcademicCapIcon.js"(exports, module) {
                var React2 = require_react();
                function AcademicCapIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M9.664 1.319a.75.75 0 01.672 0 41.059 41.059 0 018.198 5.424.75.75 0 01-.254 1.285 31.372 31.372 0 00-7.86 3.83.75.75 0 01-.84 0 31.508 31.508 0 00-2.08-1.287V9.394c0-.244.116-.463.302-.592a35.504 35.504 0 013.305-2.033.75.75 0 00-.714-1.319 37 37 0 00-3.446 2.12A2.216 2.216 0 006 9.393v.38a31.293 31.293 0 00-4.28-1.746.75.75 0 01-.254-1.285 41.059 41.059 0 018.198-5.424zM6 11.459a29.848 29.848 0 00-2.455-1.158 41.029 41.029 0 00-.39 3.114.75.75 0 00.419.74c.528.256 1.046.53 1.554.82-.21.324-.455.63-.739.914a.75.75 0 101.06 1.06c.37-.369.69-.77.96-1.193a26.61 26.61 0 013.095 2.348.75.75 0 00.992 0 26.547 26.547 0 015.93-3.95.75.75 0 00.42-.739 41.053 41.053 0 00-.39-3.114 29.925 29.925 0 00-5.199 2.801 2.25 2.25 0 01-2.514 0c-.41-.275-.826-.541-1.25-.797a6.985 6.985 0 01-1.084 3.45 26.503 26.503 0 00-1.281-.78A5.487 5.487 0 006 12v-.54z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(AcademicCapIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/AdjustmentsHorizontalIcon.js
        var require_AdjustmentsHorizontalIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/AdjustmentsHorizontalIcon.js"(exports, module) {
                var React2 = require_react();
                function AdjustmentsHorizontalIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M10 3.75a2 2 0 10-4 0 2 2 0 004 0zM17.25 4.5a.75.75 0 000-1.5h-5.5a.75.75 0 000 1.5h5.5zM5 3.75a.75.75 0 01-.75.75h-1.5a.75.75 0 010-1.5h1.5a.75.75 0 01.75.75zM4.25 17a.75.75 0 000-1.5h-1.5a.75.75 0 000 1.5h1.5zM17.25 17a.75.75 0 000-1.5h-5.5a.75.75 0 000 1.5h5.5zM9 10a.75.75 0 01-.75.75h-5.5a.75.75 0 010-1.5h5.5A.75.75 0 019 10zM17.25 10.75a.75.75 0 000-1.5h-1.5a.75.75 0 000 1.5h1.5zM14 10a2 2 0 10-4 0 2 2 0 004 0zM10 16.25a2 2 0 10-4 0 2 2 0 004 0z"
                    }));
                }
                var ForwardRef = React2.forwardRef(AdjustmentsHorizontalIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/AdjustmentsVerticalIcon.js
        var require_AdjustmentsVerticalIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/AdjustmentsVerticalIcon.js"(exports, module) {
                var React2 = require_react();
                function AdjustmentsVerticalIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M17 2.75a.75.75 0 00-1.5 0v5.5a.75.75 0 001.5 0v-5.5zM17 15.75a.75.75 0 00-1.5 0v1.5a.75.75 0 001.5 0v-1.5zM3.75 15a.75.75 0 01.75.75v1.5a.75.75 0 01-1.5 0v-1.5a.75.75 0 01.75-.75zM4.5 2.75a.75.75 0 00-1.5 0v5.5a.75.75 0 001.5 0v-5.5zM10 11a.75.75 0 01.75.75v5.5a.75.75 0 01-1.5 0v-5.5A.75.75 0 0110 11zM10.75 2.75a.75.75 0 00-1.5 0v1.5a.75.75 0 001.5 0v-1.5zM10 6a2 2 0 100 4 2 2 0 000-4zM3.75 10a2 2 0 100 4 2 2 0 000-4zM16.25 10a2 2 0 100 4 2 2 0 000-4z"
                    }));
                }
                var ForwardRef = React2.forwardRef(AdjustmentsVerticalIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ArchiveBoxArrowDownIcon.js
        var require_ArchiveBoxArrowDownIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ArchiveBoxArrowDownIcon.js"(exports, module) {
                var React2 = require_react();
                function ArchiveBoxArrowDownIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M2 3a1 1 0 00-1 1v1a1 1 0 001 1h16a1 1 0 001-1V4a1 1 0 00-1-1H2zm0 4.5h16l-.811 7.71a2 2 0 01-1.99 1.79H4.802a2 2 0 01-1.99-1.79L2 7.5zM10 9a.75.75 0 01.75.75v2.546l.943-1.048a.75.75 0 111.114 1.004l-2.25 2.5a.75.75 0 01-1.114 0l-2.25-2.5a.75.75 0 111.114-1.004l.943 1.048V9.75A.75.75 0 0110 9z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArchiveBoxArrowDownIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ArchiveBoxXMarkIcon.js
        var require_ArchiveBoxXMarkIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ArchiveBoxXMarkIcon.js"(exports, module) {
                var React2 = require_react();
                function ArchiveBoxXMarkIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M2 3a1 1 0 00-1 1v1a1 1 0 001 1h16a1 1 0 001-1V4a1 1 0 00-1-1H2z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M2 7.5h16l-.811 7.71a2 2 0 01-1.99 1.79H4.802a2 2 0 01-1.99-1.79L2 7.5zm5.22 1.72a.75.75 0 011.06 0L10 10.94l1.72-1.72a.75.75 0 111.06 1.06L11.06 12l1.72 1.72a.75.75 0 11-1.06 1.06L10 13.06l-1.72 1.72a.75.75 0 01-1.06-1.06L8.94 12l-1.72-1.72a.75.75 0 010-1.06z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArchiveBoxXMarkIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ArchiveBoxIcon.js
        var require_ArchiveBoxIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ArchiveBoxIcon.js"(exports, module) {
                var React2 = require_react();
                function ArchiveBoxIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M2 3a1 1 0 00-1 1v1a1 1 0 001 1h16a1 1 0 001-1V4a1 1 0 00-1-1H2z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M2 7.5h16l-.811 7.71a2 2 0 01-1.99 1.79H4.802a2 2 0 01-1.99-1.79L2 7.5zM7 11a1 1 0 011-1h4a1 1 0 110 2H8a1 1 0 01-1-1z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArchiveBoxIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ArrowDownCircleIcon.js
        var require_ArrowDownCircleIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ArrowDownCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowDownCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10 18a8 8 0 100-16 8 8 0 000 16zm.75-11.25a.75.75 0 00-1.5 0v4.59L7.3 9.24a.75.75 0 00-1.1 1.02l3.25 3.5a.75.75 0 001.1 0l3.25-3.5a.75.75 0 10-1.1-1.02l-1.95 2.1V6.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowDownCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ArrowDownLeftIcon.js
        var require_ArrowDownLeftIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ArrowDownLeftIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowDownLeftIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M14.78 5.22a.75.75 0 00-1.06 0L6.5 12.44V6.75a.75.75 0 00-1.5 0v7.5c0 .414.336.75.75.75h7.5a.75.75 0 000-1.5H7.56l7.22-7.22a.75.75 0 000-1.06z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowDownLeftIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ArrowDownOnSquareStackIcon.js
        var require_ArrowDownOnSquareStackIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ArrowDownOnSquareStackIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowDownOnSquareStackIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M8 1a.75.75 0 01.75.75V6h-1.5V1.75A.75.75 0 018 1zm-.75 5v3.296l-.943-1.048a.75.75 0 10-1.114 1.004l2.25 2.5a.75.75 0 001.114 0l2.25-2.5a.75.75 0 00-1.114-1.004L8.75 9.296V6h2A2.25 2.25 0 0113 8.25v4.5A2.25 2.25 0 0110.75 15h-5.5A2.25 2.25 0 013 12.75v-4.5A2.25 2.25 0 015.25 6h2zM7 16.75v-.25h3.75a3.75 3.75 0 003.75-3.75V10h.25A2.25 2.25 0 0117 12.25v4.5A2.25 2.25 0 0114.75 19h-5.5A2.25 2.25 0 017 16.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowDownOnSquareStackIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ArrowDownOnSquareIcon.js
        var require_ArrowDownOnSquareIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ArrowDownOnSquareIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowDownOnSquareIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M13.75 7h-3v5.296l1.943-2.048a.75.75 0 011.114 1.004l-3.25 3.5a.75.75 0 01-1.114 0l-3.25-3.5a.75.75 0 111.114-1.004l1.943 2.048V7h1.5V1.75a.75.75 0 00-1.5 0V7h-3A2.25 2.25 0 004 9.25v7.5A2.25 2.25 0 006.25 19h7.5A2.25 2.25 0 0016 16.75v-7.5A2.25 2.25 0 0013.75 7z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowDownOnSquareIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ArrowDownRightIcon.js
        var require_ArrowDownRightIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ArrowDownRightIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowDownRightIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M6.28 5.22a.75.75 0 00-1.06 1.06l7.22 7.22H6.75a.75.75 0 000 1.5h7.5a.747.747 0 00.75-.75v-7.5a.75.75 0 00-1.5 0v5.69L6.28 5.22z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowDownRightIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ArrowDownTrayIcon.js
        var require_ArrowDownTrayIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ArrowDownTrayIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowDownTrayIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M10.75 2.75a.75.75 0 00-1.5 0v8.614L6.295 8.235a.75.75 0 10-1.09 1.03l4.25 4.5a.75.75 0 001.09 0l4.25-4.5a.75.75 0 00-1.09-1.03l-2.955 3.129V2.75z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M3.5 12.75a.75.75 0 00-1.5 0v2.5A2.75 2.75 0 004.75 18h10.5A2.75 2.75 0 0018 15.25v-2.5a.75.75 0 00-1.5 0v2.5c0 .69-.56 1.25-1.25 1.25H4.75c-.69 0-1.25-.56-1.25-1.25v-2.5z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowDownTrayIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ArrowDownIcon.js
        var require_ArrowDownIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ArrowDownIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowDownIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10 3a.75.75 0 01.75.75v10.638l3.96-4.158a.75.75 0 111.08 1.04l-5.25 5.5a.75.75 0 01-1.08 0l-5.25-5.5a.75.75 0 111.08-1.04l3.96 4.158V3.75A.75.75 0 0110 3z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowDownIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ArrowLeftCircleIcon.js
        var require_ArrowLeftCircleIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ArrowLeftCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowLeftCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("g", {
                        clipPath: "url(#clip0_9_2121)"
                    }, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10 18a8 8 0 100-16 8 8 0 000 16zm3.25-7.25a.75.75 0 000-1.5H8.66l2.1-1.95a.75.75 0 10-1.02-1.1l-3.5 3.25a.75.75 0 000 1.1l3.5 3.25a.75.75 0 001.02-1.1l-2.1-1.95h4.59z",
                        clipRule: "evenodd"
                    })), /* @__PURE__ */ React2.createElement("defs", null, /* @__PURE__ */ React2.createElement("clipPath", {
                        id: "clip0_9_2121"
                    }, /* @__PURE__ */ React2.createElement("path", {
                        d: "M0 0h20v20H0z"
                    }))));
                }
                var ForwardRef = React2.forwardRef(ArrowLeftCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ArrowLeftOnRectangleIcon.js
        var require_ArrowLeftOnRectangleIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ArrowLeftOnRectangleIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowLeftOnRectangleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M3 4.25A2.25 2.25 0 015.25 2h5.5A2.25 2.25 0 0113 4.25v2a.75.75 0 01-1.5 0v-2a.75.75 0 00-.75-.75h-5.5a.75.75 0 00-.75.75v11.5c0 .414.336.75.75.75h5.5a.75.75 0 00.75-.75v-2a.75.75 0 011.5 0v2A2.25 2.25 0 0110.75 18h-5.5A2.25 2.25 0 013 15.75V4.25z",
                        clipRule: "evenodd"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M19 10a.75.75 0 00-.75-.75H8.704l1.048-.943a.75.75 0 10-1.004-1.114l-2.5 2.25a.75.75 0 000 1.114l2.5 2.25a.75.75 0 101.004-1.114l-1.048-.943h9.546A.75.75 0 0019 10z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowLeftOnRectangleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ArrowLeftIcon.js
        var require_ArrowLeftIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ArrowLeftIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowLeftIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M17 10a.75.75 0 01-.75.75H5.612l4.158 3.96a.75.75 0 11-1.04 1.08l-5.5-5.25a.75.75 0 010-1.08l5.5-5.25a.75.75 0 111.04 1.08L5.612 9.25H16.25A.75.75 0 0117 10z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowLeftIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ArrowLongDownIcon.js
        var require_ArrowLongDownIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ArrowLongDownIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowLongDownIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10 2a.75.75 0 01.75.75v12.59l1.95-2.1a.75.75 0 111.1 1.02l-3.25 3.5a.75.75 0 01-1.1 0l-3.25-3.5a.75.75 0 111.1-1.02l1.95 2.1V2.75A.75.75 0 0110 2z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowLongDownIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ArrowLongLeftIcon.js
        var require_ArrowLongLeftIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ArrowLongLeftIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowLongLeftIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M18 10a.75.75 0 01-.75.75H4.66l2.1 1.95a.75.75 0 11-1.02 1.1l-3.5-3.25a.75.75 0 010-1.1l3.5-3.25a.75.75 0 111.02 1.1l-2.1 1.95h12.59A.75.75 0 0118 10z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowLongLeftIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ArrowLongRightIcon.js
        var require_ArrowLongRightIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ArrowLongRightIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowLongRightIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M2 10a.75.75 0 01.75-.75h12.59l-2.1-1.95a.75.75 0 111.02-1.1l3.5 3.25a.75.75 0 010 1.1l-3.5 3.25a.75.75 0 11-1.02-1.1l2.1-1.95H2.75A.75.75 0 012 10z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowLongRightIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ArrowLongUpIcon.js
        var require_ArrowLongUpIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ArrowLongUpIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowLongUpIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10 18a.75.75 0 01-.75-.75V4.66L7.3 6.76a.75.75 0 11-1.1-1.02l3.25-3.5a.75.75 0 011.1 0l3.25 3.5a.75.75 0 01-1.1 1.02l-1.95-2.1v12.59A.75.75 0 0110 18z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowLongUpIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ArrowPathRoundedSquareIcon.js
        var require_ArrowPathRoundedSquareIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ArrowPathRoundedSquareIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowPathRoundedSquareIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10 4.5c1.215 0 2.417.055 3.604.162a.68.68 0 01.615.597c.124 1.038.208 2.088.25 3.15l-1.689-1.69a.75.75 0 00-1.06 1.061l2.999 3a.75.75 0 001.06 0l3.001-3a.75.75 0 10-1.06-1.06l-1.748 1.747a41.31 41.31 0 00-.264-3.386 2.18 2.18 0 00-1.97-1.913 41.512 41.512 0 00-7.477 0 2.18 2.18 0 00-1.969 1.913 41.16 41.16 0 00-.16 1.61.75.75 0 101.495.12c.041-.52.093-1.038.154-1.552a.68.68 0 01.615-.597A40.012 40.012 0 0110 4.5zM5.281 9.22a.75.75 0 00-1.06 0l-3.001 3a.75.75 0 101.06 1.06l1.748-1.747c.042 1.141.13 2.27.264 3.386a2.18 2.18 0 001.97 1.913 41.533 41.533 0 007.477 0 2.18 2.18 0 001.969-1.913c.064-.534.117-1.071.16-1.61a.75.75 0 10-1.495-.12c-.041.52-.093 1.037-.154 1.552a.68.68 0 01-.615.597 40.013 40.013 0 01-7.208 0 .68.68 0 01-.615-.597 39.785 39.785 0 01-.25-3.15l1.689 1.69a.75.75 0 001.06-1.061l-2.999-3z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowPathRoundedSquareIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ArrowPathIcon.js
        var require_ArrowPathIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ArrowPathIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowPathIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M15.312 11.424a5.5 5.5 0 01-9.201 2.466l-.312-.311h2.433a.75.75 0 000-1.5H3.989a.75.75 0 00-.75.75v4.242a.75.75 0 001.5 0v-2.43l.31.31a7 7 0 0011.712-3.138.75.75 0 00-1.449-.39zm1.23-3.723a.75.75 0 00.219-.53V2.929a.75.75 0 00-1.5 0V5.36l-.31-.31A7 7 0 003.239 8.188a.75.75 0 101.448.389A5.5 5.5 0 0113.89 6.11l.311.31h-2.432a.75.75 0 000 1.5h4.243a.75.75 0 00.53-.219z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowPathIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ArrowRightCircleIcon.js
        var require_ArrowRightCircleIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ArrowRightCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowRightCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10 18a8 8 0 100-16 8 8 0 000 16zM6.75 9.25a.75.75 0 000 1.5h4.59l-2.1 1.95a.75.75 0 001.02 1.1l3.5-3.25a.75.75 0 000-1.1l-3.5-3.25a.75.75 0 10-1.02 1.1l2.1 1.95H6.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowRightCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ArrowRightOnRectangleIcon.js
        var require_ArrowRightOnRectangleIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ArrowRightOnRectangleIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowRightOnRectangleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M3 4.25A2.25 2.25 0 015.25 2h5.5A2.25 2.25 0 0113 4.25v2a.75.75 0 01-1.5 0v-2a.75.75 0 00-.75-.75h-5.5a.75.75 0 00-.75.75v11.5c0 .414.336.75.75.75h5.5a.75.75 0 00.75-.75v-2a.75.75 0 011.5 0v2A2.25 2.25 0 0110.75 18h-5.5A2.25 2.25 0 013 15.75V4.25z",
                        clipRule: "evenodd"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M6 10a.75.75 0 01.75-.75h9.546l-1.048-.943a.75.75 0 111.004-1.114l2.5 2.25a.75.75 0 010 1.114l-2.5 2.25a.75.75 0 11-1.004-1.114l1.048-.943H6.75A.75.75 0 016 10z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowRightOnRectangleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ArrowRightIcon.js
        var require_ArrowRightIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ArrowRightIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowRightIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M3 10a.75.75 0 01.75-.75h10.638L10.23 5.29a.75.75 0 111.04-1.08l5.5 5.25a.75.75 0 010 1.08l-5.5 5.25a.75.75 0 11-1.04-1.08l4.158-3.96H3.75A.75.75 0 013 10z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowRightIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ArrowSmallDownIcon.js
        var require_ArrowSmallDownIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ArrowSmallDownIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowSmallDownIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10 5a.75.75 0 01.75.75v6.638l1.96-2.158a.75.75 0 111.08 1.04l-3.25 3.5a.75.75 0 01-1.08 0l-3.25-3.5a.75.75 0 111.08-1.04l1.96 2.158V5.75A.75.75 0 0110 5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowSmallDownIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ArrowSmallLeftIcon.js
        var require_ArrowSmallLeftIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ArrowSmallLeftIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowSmallLeftIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M15 10a.75.75 0 01-.75.75H7.612l2.158 1.96a.75.75 0 11-1.04 1.08l-3.5-3.25a.75.75 0 010-1.08l3.5-3.25a.75.75 0 111.04 1.08L7.612 9.25h6.638A.75.75 0 0115 10z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowSmallLeftIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ArrowSmallRightIcon.js
        var require_ArrowSmallRightIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ArrowSmallRightIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowSmallRightIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M5 10a.75.75 0 01.75-.75h6.638L10.23 7.29a.75.75 0 111.04-1.08l3.5 3.25a.75.75 0 010 1.08l-3.5 3.25a.75.75 0 11-1.04-1.08l2.158-1.96H5.75A.75.75 0 015 10z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowSmallRightIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ArrowSmallUpIcon.js
        var require_ArrowSmallUpIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ArrowSmallUpIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowSmallUpIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10 15a.75.75 0 01-.75-.75V7.612L7.29 9.77a.75.75 0 01-1.08-1.04l3.25-3.5a.75.75 0 011.08 0l3.25 3.5a.75.75 0 11-1.08 1.04l-1.96-2.158v6.638A.75.75 0 0110 15z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowSmallUpIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ArrowTopRightOnSquareIcon.js
        var require_ArrowTopRightOnSquareIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ArrowTopRightOnSquareIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowTopRightOnSquareIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M4.25 5.5a.75.75 0 00-.75.75v8.5c0 .414.336.75.75.75h8.5a.75.75 0 00.75-.75v-4a.75.75 0 011.5 0v4A2.25 2.25 0 0112.75 17h-8.5A2.25 2.25 0 012 14.75v-8.5A2.25 2.25 0 014.25 4h5a.75.75 0 010 1.5h-5z",
                        clipRule: "evenodd"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M6.194 12.753a.75.75 0 001.06.053L16.5 4.44v2.81a.75.75 0 001.5 0v-4.5a.75.75 0 00-.75-.75h-4.5a.75.75 0 000 1.5h2.553l-9.056 8.194a.75.75 0 00-.053 1.06z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowTopRightOnSquareIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ArrowTrendingDownIcon.js
        var require_ArrowTrendingDownIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ArrowTrendingDownIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowTrendingDownIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M1.22 5.222a.75.75 0 011.06 0L7 9.942l3.768-3.769a.75.75 0 011.113.058 20.908 20.908 0 013.813 7.254l1.574-2.727a.75.75 0 011.3.75l-2.475 4.286a.75.75 0 01-1.025.275l-4.287-2.475a.75.75 0 01.75-1.3l2.71 1.565a19.422 19.422 0 00-3.013-6.024L7.53 11.533a.75.75 0 01-1.06 0l-5.25-5.25a.75.75 0 010-1.06z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowTrendingDownIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ArrowTrendingUpIcon.js
        var require_ArrowTrendingUpIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ArrowTrendingUpIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowTrendingUpIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M12.577 4.878a.75.75 0 01.919-.53l4.78 1.281a.75.75 0 01.531.919l-1.281 4.78a.75.75 0 01-1.449-.387l.81-3.022a19.407 19.407 0 00-5.594 5.203.75.75 0 01-1.139.093L7 10.06l-4.72 4.72a.75.75 0 01-1.06-1.061l5.25-5.25a.75.75 0 011.06 0l3.074 3.073a20.923 20.923 0 015.545-4.931l-3.042-.815a.75.75 0 01-.53-.919z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowTrendingUpIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ArrowUpCircleIcon.js
        var require_ArrowUpCircleIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ArrowUpCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowUpCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10 18a8 8 0 100-16 8 8 0 000 16zm-.75-4.75a.75.75 0 001.5 0V8.66l1.95 2.1a.75.75 0 101.1-1.02l-3.25-3.5a.75.75 0 00-1.1 0L6.2 9.74a.75.75 0 101.1 1.02l1.95-2.1v4.59z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowUpCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ArrowUpLeftIcon.js
        var require_ArrowUpLeftIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ArrowUpLeftIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowUpLeftIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M14.78 14.78a.75.75 0 01-1.06 0L6.5 7.56v5.69a.75.75 0 01-1.5 0v-7.5A.75.75 0 015.75 5h7.5a.75.75 0 010 1.5H7.56l7.22 7.22a.75.75 0 010 1.06z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowUpLeftIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ArrowUpOnSquareStackIcon.js
        var require_ArrowUpOnSquareStackIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ArrowUpOnSquareStackIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowUpOnSquareStackIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10.75 6h-2v4.25a.75.75 0 01-1.5 0V6h1.5V3.704l.943 1.048a.75.75 0 001.114-1.004l-2.25-2.5a.75.75 0 00-1.114 0l-2.25 2.5a.75.75 0 001.114 1.004l.943-1.048V6h-2A2.25 2.25 0 003 8.25v4.5A2.25 2.25 0 005.25 15h5.5A2.25 2.25 0 0013 12.75v-4.5A2.25 2.25 0 0010.75 6zM7 16.75v-.25h3.75a3.75 3.75 0 003.75-3.75V10h.25A2.25 2.25 0 0117 12.25v4.5A2.25 2.25 0 0114.75 19h-5.5A2.25 2.25 0 017 16.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowUpOnSquareStackIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ArrowUpOnSquareIcon.js
        var require_ArrowUpOnSquareIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ArrowUpOnSquareIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowUpOnSquareIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M13.75 7h-3V3.66l1.95 2.1a.75.75 0 101.1-1.02l-3.25-3.5a.75.75 0 00-1.1 0L6.2 4.74a.75.75 0 001.1 1.02l1.95-2.1V7h-3A2.25 2.25 0 004 9.25v7.5A2.25 2.25 0 006.25 19h7.5A2.25 2.25 0 0016 16.75v-7.5A2.25 2.25 0 0013.75 7zm-3 0h-1.5v5.25a.75.75 0 001.5 0V7z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowUpOnSquareIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ArrowUpRightIcon.js
        var require_ArrowUpRightIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ArrowUpRightIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowUpRightIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M5.22 14.78a.75.75 0 001.06 0l7.22-7.22v5.69a.75.75 0 001.5 0v-7.5a.75.75 0 00-.75-.75h-7.5a.75.75 0 000 1.5h5.69l-7.22 7.22a.75.75 0 000 1.06z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowUpRightIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ArrowUpTrayIcon.js
        var require_ArrowUpTrayIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ArrowUpTrayIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowUpTrayIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M9.25 13.25a.75.75 0 001.5 0V4.636l2.955 3.129a.75.75 0 001.09-1.03l-4.25-4.5a.75.75 0 00-1.09 0l-4.25 4.5a.75.75 0 101.09 1.03L9.25 4.636v8.614z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M3.5 12.75a.75.75 0 00-1.5 0v2.5A2.75 2.75 0 004.75 18h10.5A2.75 2.75 0 0018 15.25v-2.5a.75.75 0 00-1.5 0v2.5c0 .69-.56 1.25-1.25 1.25H4.75c-.69 0-1.25-.56-1.25-1.25v-2.5z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowUpTrayIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ArrowUpIcon.js
        var require_ArrowUpIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ArrowUpIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowUpIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10 17a.75.75 0 01-.75-.75V5.612L5.29 9.77a.75.75 0 01-1.08-1.04l5.25-5.5a.75.75 0 011.08 0l5.25 5.5a.75.75 0 11-1.08 1.04l-3.96-4.158V16.25A.75.75 0 0110 17z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowUpIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ArrowUturnDownIcon.js
        var require_ArrowUturnDownIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ArrowUturnDownIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowUturnDownIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M2.232 12.207a.75.75 0 011.06.025l3.958 4.146V6.375a5.375 5.375 0 0110.75 0V9.25a.75.75 0 01-1.5 0V6.375a3.875 3.875 0 00-7.75 0v10.003l3.957-4.146a.75.75 0 011.085 1.036l-5.25 5.5a.75.75 0 01-1.085 0l-5.25-5.5a.75.75 0 01.025-1.06z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowUturnDownIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ArrowUturnLeftIcon.js
        var require_ArrowUturnLeftIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ArrowUturnLeftIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowUturnLeftIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M7.793 2.232a.75.75 0 01-.025 1.06L3.622 7.25h10.003a5.375 5.375 0 010 10.75H10.75a.75.75 0 010-1.5h2.875a3.875 3.875 0 000-7.75H3.622l4.146 3.957a.75.75 0 01-1.036 1.085l-5.5-5.25a.75.75 0 010-1.085l5.5-5.25a.75.75 0 011.06.025z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowUturnLeftIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ArrowUturnRightIcon.js
        var require_ArrowUturnRightIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ArrowUturnRightIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowUturnRightIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M12.207 2.232a.75.75 0 00.025 1.06l4.146 3.958H6.375a5.375 5.375 0 000 10.75H9.25a.75.75 0 000-1.5H6.375a3.875 3.875 0 010-7.75h10.003l-4.146 3.957a.75.75 0 001.036 1.085l5.5-5.25a.75.75 0 000-1.085l-5.5-5.25a.75.75 0 00-1.06.025z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowUturnRightIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ArrowUturnUpIcon.js
        var require_ArrowUturnUpIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ArrowUturnUpIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowUturnUpIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M17.768 7.793a.75.75 0 01-1.06-.025L12.75 3.622v10.003a5.375 5.375 0 01-10.75 0V10.75a.75.75 0 011.5 0v2.875a3.875 3.875 0 007.75 0V3.622L7.293 7.768a.75.75 0 01-1.086-1.036l5.25-5.5a.75.75 0 011.085 0l5.25 5.5a.75.75 0 01-.024 1.06z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowUturnUpIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ArrowsPointingInIcon.js
        var require_ArrowsPointingInIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ArrowsPointingInIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowsPointingInIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M3.28 2.22a.75.75 0 00-1.06 1.06L5.44 6.5H2.75a.75.75 0 000 1.5h4.5A.75.75 0 008 7.25v-4.5a.75.75 0 00-1.5 0v2.69L3.28 2.22zM13.5 2.75a.75.75 0 00-1.5 0v4.5c0 .414.336.75.75.75h4.5a.75.75 0 000-1.5h-2.69l3.22-3.22a.75.75 0 00-1.06-1.06L13.5 5.44V2.75zM3.28 17.78l3.22-3.22v2.69a.75.75 0 001.5 0v-4.5a.75.75 0 00-.75-.75h-4.5a.75.75 0 000 1.5h2.69l-3.22 3.22a.75.75 0 101.06 1.06zM13.5 14.56l3.22 3.22a.75.75 0 101.06-1.06l-3.22-3.22h2.69a.75.75 0 000-1.5h-4.5a.75.75 0 00-.75.75v4.5a.75.75 0 001.5 0v-2.69z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowsPointingInIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ArrowsPointingOutIcon.js
        var require_ArrowsPointingOutIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ArrowsPointingOutIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowsPointingOutIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M13.28 7.78l3.22-3.22v2.69a.75.75 0 001.5 0v-4.5a.75.75 0 00-.75-.75h-4.5a.75.75 0 000 1.5h2.69l-3.22 3.22a.75.75 0 001.06 1.06zM2 17.25v-4.5a.75.75 0 011.5 0v2.69l3.22-3.22a.75.75 0 011.06 1.06L4.56 16.5h2.69a.75.75 0 010 1.5h-4.5a.747.747 0 01-.75-.75zM12.22 13.28l3.22 3.22h-2.69a.75.75 0 000 1.5h4.5a.747.747 0 00.75-.75v-4.5a.75.75 0 00-1.5 0v2.69l-3.22-3.22a.75.75 0 10-1.06 1.06zM3.5 4.56l3.22 3.22a.75.75 0 001.06-1.06L4.56 3.5h2.69a.75.75 0 000-1.5h-4.5a.75.75 0 00-.75.75v4.5a.75.75 0 001.5 0V4.56z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowsPointingOutIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ArrowsRightLeftIcon.js
        var require_ArrowsRightLeftIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ArrowsRightLeftIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowsRightLeftIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M13.2 2.24a.75.75 0 00.04 1.06l2.1 1.95H6.75a.75.75 0 000 1.5h8.59l-2.1 1.95a.75.75 0 101.02 1.1l3.5-3.25a.75.75 0 000-1.1l-3.5-3.25a.75.75 0 00-1.06.04zm-6.4 8a.75.75 0 00-1.06-.04l-3.5 3.25a.75.75 0 000 1.1l3.5 3.25a.75.75 0 101.02-1.1l-2.1-1.95h8.59a.75.75 0 000-1.5H4.66l2.1-1.95a.75.75 0 00.04-1.06z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowsRightLeftIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ArrowsUpDownIcon.js
        var require_ArrowsUpDownIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ArrowsUpDownIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowsUpDownIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M2.24 6.8a.75.75 0 001.06-.04l1.95-2.1v8.59a.75.75 0 001.5 0V4.66l1.95 2.1a.75.75 0 101.1-1.02l-3.25-3.5a.75.75 0 00-1.1 0L2.2 5.74a.75.75 0 00.04 1.06zm8 6.4a.75.75 0 00-.04 1.06l3.25 3.5a.75.75 0 001.1 0l3.25-3.5a.75.75 0 10-1.1-1.02l-1.95 2.1V6.75a.75.75 0 00-1.5 0v8.59l-1.95-2.1a.75.75 0 00-1.06-.04z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowsUpDownIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/AtSymbolIcon.js
        var require_AtSymbolIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/AtSymbolIcon.js"(exports, module) {
                var React2 = require_react();
                function AtSymbolIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M5.404 14.596A6.5 6.5 0 1116.5 10a1.25 1.25 0 01-2.5 0 4 4 0 10-.571 2.06A2.75 2.75 0 0018 10a8 8 0 10-2.343 5.657.75.75 0 00-1.06-1.06 6.5 6.5 0 01-9.193 0zM10 7.5a2.5 2.5 0 100 5 2.5 2.5 0 000-5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(AtSymbolIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/BackspaceIcon.js
        var require_BackspaceIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/BackspaceIcon.js"(exports, module) {
                var React2 = require_react();
                function BackspaceIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M7.22 3.22A.75.75 0 017.75 3h9A2.25 2.25 0 0119 5.25v9.5A2.25 2.25 0 0116.75 17h-9a.75.75 0 01-.53-.22L.97 10.53a.75.75 0 010-1.06l6.25-6.25zm3.06 4a.75.75 0 10-1.06 1.06L10.94 10l-1.72 1.72a.75.75 0 101.06 1.06L12 11.06l1.72 1.72a.75.75 0 101.06-1.06L13.06 10l1.72-1.72a.75.75 0 00-1.06-1.06L12 8.94l-1.72-1.72z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(BackspaceIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/BackwardIcon.js
        var require_BackwardIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/BackwardIcon.js"(exports, module) {
                var React2 = require_react();
                function BackwardIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M7.712 4.819A1.5 1.5 0 0110 6.095v2.973c.104-.131.234-.248.389-.344l6.323-3.905A1.5 1.5 0 0119 6.095v7.81a1.5 1.5 0 01-2.288 1.277l-6.323-3.905a1.505 1.505 0 01-.389-.344v2.973a1.5 1.5 0 01-2.288 1.276l-6.323-3.905a1.5 1.5 0 010-2.553L7.712 4.82z"
                    }));
                }
                var ForwardRef = React2.forwardRef(BackwardIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/BanknotesIcon.js
        var require_BanknotesIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/BanknotesIcon.js"(exports, module) {
                var React2 = require_react();
                function BanknotesIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M1 4a1 1 0 011-1h16a1 1 0 011 1v8a1 1 0 01-1 1H2a1 1 0 01-1-1V4zm12 4a3 3 0 11-6 0 3 3 0 016 0zM4 9a1 1 0 100-2 1 1 0 000 2zm13-1a1 1 0 11-2 0 1 1 0 012 0zM1.75 14.5a.75.75 0 000 1.5c4.417 0 8.693.603 12.749 1.73 1.111.309 2.251-.512 2.251-1.696v-.784a.75.75 0 00-1.5 0v.784a.272.272 0 01-.35.25A49.043 49.043 0 001.75 14.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(BanknotesIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/Bars2Icon.js
        var require_Bars2Icon = __commonJS({
            "node_modules/@heroicons/react/20/solid/Bars2Icon.js"(exports, module) {
                var React2 = require_react();
                function Bars2Icon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M2 6.75A.75.75 0 012.75 6h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 6.75zm0 6.5a.75.75 0 01.75-.75h14.5a.75.75 0 010 1.5H2.75a.75.75 0 01-.75-.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(Bars2Icon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/Bars3BottomLeftIcon.js
        var require_Bars3BottomLeftIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/Bars3BottomLeftIcon.js"(exports, module) {
                var React2 = require_react();
                function Bars3BottomLeftIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M2 4.75A.75.75 0 012.75 4h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 4.75zm0 10.5a.75.75 0 01.75-.75h7.5a.75.75 0 010 1.5h-7.5a.75.75 0 01-.75-.75zM2 10a.75.75 0 01.75-.75h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 10z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(Bars3BottomLeftIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/Bars3BottomRightIcon.js
        var require_Bars3BottomRightIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/Bars3BottomRightIcon.js"(exports, module) {
                var React2 = require_react();
                function Bars3BottomRightIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M2 4.75A.75.75 0 012.75 4h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 4.75zm7 10.5a.75.75 0 01.75-.75h7.5a.75.75 0 010 1.5h-7.5a.75.75 0 01-.75-.75zM2 10a.75.75 0 01.75-.75h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 10z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(Bars3BottomRightIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/Bars3CenterLeftIcon.js
        var require_Bars3CenterLeftIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/Bars3CenterLeftIcon.js"(exports, module) {
                var React2 = require_react();
                function Bars3CenterLeftIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M2 4.75A.75.75 0 012.75 4h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 4.75zm0 10.5a.75.75 0 01.75-.75h14.5a.75.75 0 010 1.5H2.75a.75.75 0 01-.75-.75zM2 10a.75.75 0 01.75-.75h7.5a.75.75 0 010 1.5h-7.5A.75.75 0 012 10z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(Bars3CenterLeftIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/Bars3Icon.js
        var require_Bars3Icon = __commonJS({
            "node_modules/@heroicons/react/20/solid/Bars3Icon.js"(exports, module) {
                var React2 = require_react();
                function Bars3Icon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M2 4.75A.75.75 0 012.75 4h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 4.75zM2 10a.75.75 0 01.75-.75h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 10zm0 5.25a.75.75 0 01.75-.75h14.5a.75.75 0 010 1.5H2.75a.75.75 0 01-.75-.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(Bars3Icon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/Bars4Icon.js
        var require_Bars4Icon = __commonJS({
            "node_modules/@heroicons/react/20/solid/Bars4Icon.js"(exports, module) {
                var React2 = require_react();
                function Bars4Icon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M2 3.75A.75.75 0 012.75 3h14.5a.75.75 0 010 1.5H2.75A.75.75 0 012 3.75zm0 4.167a.75.75 0 01.75-.75h14.5a.75.75 0 010 1.5H2.75a.75.75 0 01-.75-.75zm0 4.166a.75.75 0 01.75-.75h14.5a.75.75 0 010 1.5H2.75a.75.75 0 01-.75-.75zm0 4.167a.75.75 0 01.75-.75h14.5a.75.75 0 010 1.5H2.75a.75.75 0 01-.75-.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(Bars4Icon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/BarsArrowDownIcon.js
        var require_BarsArrowDownIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/BarsArrowDownIcon.js"(exports, module) {
                var React2 = require_react();
                function BarsArrowDownIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M2 3.75A.75.75 0 012.75 3h11.5a.75.75 0 010 1.5H2.75A.75.75 0 012 3.75zM2 7.5a.75.75 0 01.75-.75h7.508a.75.75 0 010 1.5H2.75A.75.75 0 012 7.5zM14 7a.75.75 0 01.75.75v6.59l1.95-2.1a.75.75 0 111.1 1.02l-3.25 3.5a.75.75 0 01-1.1 0l-3.25-3.5a.75.75 0 111.1-1.02l1.95 2.1V7.75A.75.75 0 0114 7zM2 11.25a.75.75 0 01.75-.75h4.562a.75.75 0 010 1.5H2.75a.75.75 0 01-.75-.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(BarsArrowDownIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/BarsArrowUpIcon.js
        var require_BarsArrowUpIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/BarsArrowUpIcon.js"(exports, module) {
                var React2 = require_react();
                function BarsArrowUpIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M2 3.75A.75.75 0 012.75 3h11.5a.75.75 0 010 1.5H2.75A.75.75 0 012 3.75zM2 7.5a.75.75 0 01.75-.75h6.365a.75.75 0 010 1.5H2.75A.75.75 0 012 7.5zM14 7a.75.75 0 01.55.24l3.25 3.5a.75.75 0 11-1.1 1.02l-1.95-2.1v6.59a.75.75 0 01-1.5 0V9.66l-1.95 2.1a.75.75 0 11-1.1-1.02l3.25-3.5A.75.75 0 0114 7zM2 11.25a.75.75 0 01.75-.75H7A.75.75 0 017 12H2.75a.75.75 0 01-.75-.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(BarsArrowUpIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/Battery0Icon.js
        var require_Battery0Icon = __commonJS({
            "node_modules/@heroicons/react/20/solid/Battery0Icon.js"(exports, module) {
                var React2 = require_react();
                function Battery0Icon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M1 7.25A2.25 2.25 0 013.25 5h12.5A2.25 2.25 0 0118 7.25v1.085a1.5 1.5 0 011 1.415v.5a1.5 1.5 0 01-1 1.415v1.085A2.25 2.25 0 0115.75 15H3.25A2.25 2.25 0 011 12.75v-5.5zm2.25-.75a.75.75 0 00-.75.75v5.5c0 .414.336.75.75.75h12.5a.75.75 0 00.75-.75v-5.5a.75.75 0 00-.75-.75H3.25z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(Battery0Icon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/Battery100Icon.js
        var require_Battery100Icon = __commonJS({
            "node_modules/@heroicons/react/20/solid/Battery100Icon.js"(exports, module) {
                var React2 = require_react();
                function Battery100Icon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M4.75 8a.75.75 0 00-.75.75v2.5c0 .414.336.75.75.75h9.5a.75.75 0 00.75-.75v-2.5a.75.75 0 00-.75-.75h-9.5z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M1 7.25A2.25 2.25 0 013.25 5h12.5A2.25 2.25 0 0118 7.25v1.085a1.5 1.5 0 011 1.415v.5a1.5 1.5 0 01-1 1.415v1.085A2.25 2.25 0 0115.75 15H3.25A2.25 2.25 0 011 12.75v-5.5zm2.25-.75a.75.75 0 00-.75.75v5.5c0 .414.336.75.75.75h12.5a.75.75 0 00.75-.75v-5.5a.75.75 0 00-.75-.75H3.25z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(Battery100Icon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/Battery50Icon.js
        var require_Battery50Icon = __commonJS({
            "node_modules/@heroicons/react/20/solid/Battery50Icon.js"(exports, module) {
                var React2 = require_react();
                function Battery50Icon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M4.75 8a.75.75 0 00-.75.75v2.5c0 .414.336.75.75.75H9.5a.75.75 0 00.75-.75v-2.5A.75.75 0 009.5 8H4.75z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M3.25 5A2.25 2.25 0 001 7.25v5.5A2.25 2.25 0 003.25 15h12.5A2.25 2.25 0 0018 12.75v-1.085a1.5 1.5 0 001-1.415v-.5a1.5 1.5 0 00-1-1.415V7.25A2.25 2.25 0 0015.75 5H3.25zM2.5 7.25a.75.75 0 01.75-.75h12.5a.75.75 0 01.75.75v5.5a.75.75 0 01-.75.75H3.25a.75.75 0 01-.75-.75v-5.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(Battery50Icon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/BeakerIcon.js
        var require_BeakerIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/BeakerIcon.js"(exports, module) {
                var React2 = require_react();
                function BeakerIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M8.5 3.528v4.644c0 .729-.29 1.428-.805 1.944l-1.217 1.216a8.75 8.75 0 013.55.621l.502.201a7.25 7.25 0 004.178.365l-2.403-2.403a2.75 2.75 0 01-.805-1.944V3.528a40.205 40.205 0 00-3 0zm4.5.084l.19.015a.75.75 0 10.12-1.495 41.364 41.364 0 00-6.62 0 .75.75 0 00.12 1.495L7 3.612v4.56c0 .331-.132.649-.366.883L2.6 13.09c-1.496 1.496-.817 4.15 1.403 4.475C5.961 17.852 7.963 18 10 18s4.039-.148 5.997-.436c2.22-.325 2.9-2.979 1.403-4.475l-4.034-4.034A1.25 1.25 0 0113 8.172v-4.56z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(BeakerIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/BellAlertIcon.js
        var require_BellAlertIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/BellAlertIcon.js"(exports, module) {
                var React2 = require_react();
                function BellAlertIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M4.214 3.227a.75.75 0 00-1.156-.956 8.97 8.97 0 00-1.856 3.826.75.75 0 001.466.316 7.47 7.47 0 011.546-3.186zM16.942 2.271a.75.75 0 00-1.157.956 7.47 7.47 0 011.547 3.186.75.75 0 001.466-.316 8.971 8.971 0 00-1.856-3.826z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10 2a6 6 0 00-6 6c0 1.887-.454 3.665-1.257 5.234a.75.75 0 00.515 1.076 32.94 32.94 0 003.256.508 3.5 3.5 0 006.972 0 32.933 32.933 0 003.256-.508.75.75 0 00.515-1.076A11.448 11.448 0 0116 8a6 6 0 00-6-6zm0 14.5a2 2 0 01-1.95-1.557 33.54 33.54 0 003.9 0A2 2 0 0110 16.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(BellAlertIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/BellSlashIcon.js
        var require_BellSlashIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/BellSlashIcon.js"(exports, module) {
                var React2 = require_react();
                function BellSlashIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M4 8c0-.26.017-.517.049-.77l7.722 7.723a33.56 33.56 0 01-3.722-.01 2 2 0 003.862.15l1.134 1.134a3.5 3.5 0 01-6.53-1.409 32.91 32.91 0 01-3.257-.508.75.75 0 01-.515-1.076A11.448 11.448 0 004 8zM17.266 13.9a.756.756 0 01-.068.116L6.389 3.207A6 6 0 0116 8c.001 1.887.455 3.665 1.258 5.234a.75.75 0 01.01.666zM3.28 2.22a.75.75 0 00-1.06 1.06l14.5 14.5a.75.75 0 101.06-1.06L3.28 2.22z"
                    }));
                }
                var ForwardRef = React2.forwardRef(BellSlashIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/BellSnoozeIcon.js
        var require_BellSnoozeIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/BellSnoozeIcon.js"(exports, module) {
                var React2 = require_react();
                function BellSnoozeIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M4 8a6 6 0 1112 0c0 1.887.454 3.665 1.257 5.234a.75.75 0 01-.515 1.076 32.903 32.903 0 01-3.256.508 3.5 3.5 0 01-6.972 0 32.91 32.91 0 01-3.256-.508.75.75 0 01-.515-1.076A11.448 11.448 0 004 8zm6 7c-.655 0-1.305-.02-1.95-.057a2 2 0 003.9 0c-.645.038-1.295.057-1.95.057zM8.75 6a.75.75 0 000 1.5h1.043L8.14 9.814A.75.75 0 008.75 11h2.5a.75.75 0 000-1.5h-1.043l1.653-2.314A.75.75 0 0011.25 6h-2.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(BellSnoozeIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/BellIcon.js
        var require_BellIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/BellIcon.js"(exports, module) {
                var React2 = require_react();
                function BellIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10 2a6 6 0 00-6 6c0 1.887-.454 3.665-1.257 5.234a.75.75 0 00.515 1.076 32.91 32.91 0 003.256.508 3.5 3.5 0 006.972 0 32.903 32.903 0 003.256-.508.75.75 0 00.515-1.076A11.448 11.448 0 0116 8a6 6 0 00-6-6zM8.05 14.943a33.54 33.54 0 003.9 0 2 2 0 01-3.9 0z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(BellIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/BoltSlashIcon.js
        var require_BoltSlashIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/BoltSlashIcon.js"(exports, module) {
                var React2 = require_react();
                function BoltSlashIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M2.22 2.22a.75.75 0 011.06 0l14.5 14.5a.75.75 0 11-1.06 1.06L2.22 3.28a.75.75 0 010-1.06z",
                        clipRule: "evenodd"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M4.73 7.912L2.191 10.75A.75.75 0 002.75 12h6.068L4.73 7.912zM9.233 12.415l-1.216 5.678a.75.75 0 001.292.657l2.956-3.303-3.032-3.032zM15.27 12.088l2.539-2.838A.75.75 0 0017.25 8h-6.068l4.088 4.088zM10.767 7.585l1.216-5.678a.75.75 0 00-1.292-.657L7.735 4.553l3.032 3.032z"
                    }));
                }
                var ForwardRef = React2.forwardRef(BoltSlashIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/BoltIcon.js
        var require_BoltIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/BoltIcon.js"(exports, module) {
                var React2 = require_react();
                function BoltIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M11.983 1.907a.75.75 0 00-1.292-.657l-8.5 9.5A.75.75 0 002.75 12h6.572l-1.305 6.093a.75.75 0 001.292.657l8.5-9.5A.75.75 0 0017.25 8h-6.572l1.305-6.093z"
                    }));
                }
                var ForwardRef = React2.forwardRef(BoltIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/BookOpenIcon.js
        var require_BookOpenIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/BookOpenIcon.js"(exports, module) {
                var React2 = require_react();
                function BookOpenIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M10.75 16.82A7.462 7.462 0 0115 15.5c.71 0 1.396.098 2.046.282A.75.75 0 0018 15.06v-11a.75.75 0 00-.546-.721A9.006 9.006 0 0015 3a8.963 8.963 0 00-4.25 1.065V16.82zM9.25 4.065A8.963 8.963 0 005 3c-.85 0-1.673.118-2.454.339A.75.75 0 002 4.06v11a.75.75 0 00.954.721A7.506 7.506 0 015 15.5c1.579 0 3.042.487 4.25 1.32V4.065z"
                    }));
                }
                var ForwardRef = React2.forwardRef(BookOpenIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/BookmarkSlashIcon.js
        var require_BookmarkSlashIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/BookmarkSlashIcon.js"(exports, module) {
                var React2 = require_react();
                function BookmarkSlashIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M17 4.517v9.301L5.433 2.252a41.44 41.44 0 019.637.058C16.194 2.45 17 3.414 17 4.517zM3 17.25V6.182l10.654 10.654L10 15.082l-5.925 2.844A.75.75 0 013 17.25zM3.28 2.22a.75.75 0 00-1.06 1.06l14.5 14.5a.75.75 0 101.06-1.06L3.28 2.22z"
                    }));
                }
                var ForwardRef = React2.forwardRef(BookmarkSlashIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/BookmarkSquareIcon.js
        var require_BookmarkSquareIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/BookmarkSquareIcon.js"(exports, module) {
                var React2 = require_react();
                function BookmarkSquareIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M4.25 2A2.25 2.25 0 002 4.25v11.5A2.25 2.25 0 004.25 18h11.5A2.25 2.25 0 0018 15.75V4.25A2.25 2.25 0 0015.75 2H4.25zM6 13.25V3.5h8v9.75a.75.75 0 01-1.064.681L10 12.576l-2.936 1.355A.75.75 0 016 13.25z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(BookmarkSquareIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/BookmarkIcon.js
        var require_BookmarkIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/BookmarkIcon.js"(exports, module) {
                var React2 = require_react();
                function BookmarkIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10 2c-1.716 0-3.408.106-5.07.31C3.806 2.45 3 3.414 3 4.517V17.25a.75.75 0 001.075.676L10 15.082l5.925 2.844A.75.75 0 0017 17.25V4.517c0-1.103-.806-2.068-1.93-2.207A41.403 41.403 0 0010 2z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(BookmarkIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/BriefcaseIcon.js
        var require_BriefcaseIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/BriefcaseIcon.js"(exports, module) {
                var React2 = require_react();
                function BriefcaseIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M6 3.75A2.75 2.75 0 018.75 1h2.5A2.75 2.75 0 0114 3.75v.443c.572.055 1.14.122 1.706.2C17.053 4.582 18 5.75 18 7.07v3.469c0 1.126-.694 2.191-1.83 2.54-1.952.599-4.024.921-6.17.921s-4.219-.322-6.17-.921C2.694 12.73 2 11.665 2 10.539V7.07c0-1.321.947-2.489 2.294-2.676A41.047 41.047 0 016 4.193V3.75zm6.5 0v.325a41.622 41.622 0 00-5 0V3.75c0-.69.56-1.25 1.25-1.25h2.5c.69 0 1.25.56 1.25 1.25zM10 10a1 1 0 00-1 1v.01a1 1 0 001 1h.01a1 1 0 001-1V11a1 1 0 00-1-1H10z",
                        clipRule: "evenodd"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M3 15.055v-.684c.126.053.255.1.39.142 2.092.642 4.313.987 6.61.987 2.297 0 4.518-.345 6.61-.987.135-.041.264-.089.39-.142v.684c0 1.347-.985 2.53-2.363 2.686a41.454 41.454 0 01-9.274 0C3.985 17.585 3 16.402 3 15.055z"
                    }));
                }
                var ForwardRef = React2.forwardRef(BriefcaseIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/BugAntIcon.js
        var require_BugAntIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/BugAntIcon.js"(exports, module) {
                var React2 = require_react();
                function BugAntIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M6.56 1.14a.75.75 0 01.177 1.045 3.989 3.989 0 00-.464.86c.185.17.382.329.59.473A3.993 3.993 0 0110 2c1.272 0 2.405.594 3.137 1.518.208-.144.405-.302.59-.473a3.989 3.989 0 00-.464-.86.75.75 0 011.222-.869c.369.519.65 1.105.822 1.736a.75.75 0 01-.174.707 7.03 7.03 0 01-1.299 1.098A4 4 0 0114 6c0 .52-.301.963-.723 1.187a6.961 6.961 0 01-1.158.486c.13.208.231.436.296.679 1.413-.174 2.779-.5 4.081-.96a19.655 19.655 0 00-.09-2.319.75.75 0 111.493-.146 21.239 21.239 0 01.08 3.028.75.75 0 01-.482.667 20.874 20.874 0 01-5.153 1.249 2.51 2.51 0 01-.107.247 20.86 20.86 0 015.253 1.257.75.75 0 01.48.74 20.946 20.946 0 01-.907 5.107.75.75 0 01-1.433-.444c.415-1.34.69-2.743.806-4.19-.495-.174-1-.328-1.512-.461.05.284.076.575.076.873 0 1.814-.517 3.312-1.426 4.37A4.639 4.639 0 0110 19a4.64 4.64 0 01-3.574-1.63C5.516 16.311 5 14.813 5 13c0-.298.026-.59.076-.873-.513.133-1.017.287-1.512.46.116 1.448.39 2.85.806 4.191a.75.75 0 01-1.433.444 20.94 20.94 0 01-.908-5.107.75.75 0 01.482-.74 20.857 20.857 0 015.252-1.257 2.481 2.481 0 01-.107-.247 20.874 20.874 0 01-5.153-1.249.75.75 0 01-.482-.667 21.342 21.342 0 01.08-3.028.75.75 0 111.493.146 19.745 19.745 0 00-.09 2.32c1.302.459 2.668.785 4.08.959.066-.243.166-.471.297-.679a6.962 6.962 0 01-1.158-.486A1.348 1.348 0 016 6a4 4 0 01.166-1.143 7.032 7.032 0 01-1.3-1.098.75.75 0 01-.173-.707 5.48 5.48 0 01.822-1.736.75.75 0 011.046-.176z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(BugAntIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/BuildingLibraryIcon.js
        var require_BuildingLibraryIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/BuildingLibraryIcon.js"(exports, module) {
                var React2 = require_react();
                function BuildingLibraryIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M9.674 2.075a.75.75 0 01.652 0l7.25 3.5A.75.75 0 0117 6.957V16.5h.25a.75.75 0 010 1.5H2.75a.75.75 0 010-1.5H3V6.957a.75.75 0 01-.576-1.382l7.25-3.5zM11 6a1 1 0 11-2 0 1 1 0 012 0zM7.5 9.75a.75.75 0 00-1.5 0v5.5a.75.75 0 001.5 0v-5.5zm3.25 0a.75.75 0 00-1.5 0v5.5a.75.75 0 001.5 0v-5.5zm3.25 0a.75.75 0 00-1.5 0v5.5a.75.75 0 001.5 0v-5.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(BuildingLibraryIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/BuildingOffice2Icon.js
        var require_BuildingOffice2Icon = __commonJS({
            "node_modules/@heroicons/react/20/solid/BuildingOffice2Icon.js"(exports, module) {
                var React2 = require_react();
                function BuildingOffice2Icon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M1 2.75A.75.75 0 011.75 2h10.5a.75.75 0 010 1.5H12v13.75a.75.75 0 01-.75.75h-1.5a.75.75 0 01-.75-.75v-2.5a.75.75 0 00-.75-.75h-2.5a.75.75 0 00-.75.75v2.5a.75.75 0 01-.75.75h-2.5a.75.75 0 010-1.5H2v-13h-.25A.75.75 0 011 2.75zM4 5.5a.5.5 0 01.5-.5h1a.5.5 0 01.5.5v1a.5.5 0 01-.5.5h-1a.5.5 0 01-.5-.5v-1zM4.5 9a.5.5 0 00-.5.5v1a.5.5 0 00.5.5h1a.5.5 0 00.5-.5v-1a.5.5 0 00-.5-.5h-1zM8 5.5a.5.5 0 01.5-.5h1a.5.5 0 01.5.5v1a.5.5 0 01-.5.5h-1a.5.5 0 01-.5-.5v-1zM8.5 9a.5.5 0 00-.5.5v1a.5.5 0 00.5.5h1a.5.5 0 00.5-.5v-1a.5.5 0 00-.5-.5h-1zM14.25 6a.75.75 0 00-.75.75V17a1 1 0 001 1h3.75a.75.75 0 000-1.5H18v-9h.25a.75.75 0 000-1.5h-4zm.5 3.5a.5.5 0 01.5-.5h1a.5.5 0 01.5.5v1a.5.5 0 01-.5.5h-1a.5.5 0 01-.5-.5v-1zm.5 3.5a.5.5 0 00-.5.5v1a.5.5 0 00.5.5h1a.5.5 0 00.5-.5v-1a.5.5 0 00-.5-.5h-1z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(BuildingOffice2Icon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/BuildingOfficeIcon.js
        var require_BuildingOfficeIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/BuildingOfficeIcon.js"(exports, module) {
                var React2 = require_react();
                function BuildingOfficeIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M4 16.5v-13h-.25a.75.75 0 010-1.5h12.5a.75.75 0 010 1.5H16v13h.25a.75.75 0 010 1.5h-3.5a.75.75 0 01-.75-.75v-2.5a.75.75 0 00-.75-.75h-2.5a.75.75 0 00-.75.75v2.5a.75.75 0 01-.75.75h-3.5a.75.75 0 010-1.5H4zm3-11a.5.5 0 01.5-.5h1a.5.5 0 01.5.5v1a.5.5 0 01-.5.5h-1a.5.5 0 01-.5-.5v-1zM7.5 9a.5.5 0 00-.5.5v1a.5.5 0 00.5.5h1a.5.5 0 00.5-.5v-1a.5.5 0 00-.5-.5h-1zM11 5.5a.5.5 0 01.5-.5h1a.5.5 0 01.5.5v1a.5.5 0 01-.5.5h-1a.5.5 0 01-.5-.5v-1zm.5 3.5a.5.5 0 00-.5.5v1a.5.5 0 00.5.5h1a.5.5 0 00.5-.5v-1a.5.5 0 00-.5-.5h-1z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(BuildingOfficeIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/BuildingStorefrontIcon.js
        var require_BuildingStorefrontIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/BuildingStorefrontIcon.js"(exports, module) {
                var React2 = require_react();
                function BuildingStorefrontIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M2.879 7.121A3 3 0 007.5 6.66a2.997 2.997 0 002.5 1.34 2.997 2.997 0 002.5-1.34 3 3 0 104.622-3.78l-.293-.293A2 2 0 0015.415 2H4.585a2 2 0 00-1.414.586l-.292.292a3 3 0 000 4.243zM3 9.032a4.507 4.507 0 004.5-.29A4.48 4.48 0 0010 9.5a4.48 4.48 0 002.5-.758 4.507 4.507 0 004.5.29V16.5h.25a.75.75 0 010 1.5h-4.5a.75.75 0 01-.75-.75v-3.5a.75.75 0 00-.75-.75h-2.5a.75.75 0 00-.75.75v3.5a.75.75 0 01-.75.75h-4.5a.75.75 0 010-1.5H3V9.032z"
                    }));
                }
                var ForwardRef = React2.forwardRef(BuildingStorefrontIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/CakeIcon.js
        var require_CakeIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/CakeIcon.js"(exports, module) {
                var React2 = require_react();
                function CakeIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M6.75.98l-.884.883a1.25 1.25 0 101.768 0L6.75.98zM13.25.98l-.884.883a1.25 1.25 0 101.768 0L13.25.98zM10 .98l.884.883a1.25 1.25 0 11-1.768 0L10 .98zM7.5 5.75a.75.75 0 00-1.5 0v.464c-1.179.305-2 1.39-2 2.622v.094c.1-.02.202-.038.306-.051A42.869 42.869 0 0110 8.5c1.93 0 3.83.129 5.694.379.104.013.206.03.306.051v-.094c0-1.232-.821-2.317-2-2.622V5.75a.75.75 0 00-1.5 0v.318a45.645 45.645 0 00-1.75-.062V5.75a.75.75 0 00-1.5 0v.256c-.586.01-1.17.03-1.75.062V5.75zM4.505 10.365A41.377 41.377 0 0110 10c1.863 0 3.697.124 5.495.365C16.967 10.562 18 11.838 18 13.28v.693a3.72 3.72 0 01-1.665-.393 5.222 5.222 0 00-4.67 0 3.722 3.722 0 01-3.33 0 5.222 5.222 0 00-4.67 0A3.72 3.72 0 012 13.972v-.693c0-1.441 1.033-2.716 2.505-2.914zM15.665 14.921a5.22 5.22 0 002.335.551V16.5a1.5 1.5 0 01-1.5 1.5h-13A1.5 1.5 0 012 16.5v-1.028c.8 0 1.6-.183 2.335-.551a3.722 3.722 0 013.33 0c1.47.735 3.2.735 4.67 0a3.722 3.722 0 013.33 0z"
                    }));
                }
                var ForwardRef = React2.forwardRef(CakeIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/CalculatorIcon.js
        var require_CalculatorIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/CalculatorIcon.js"(exports, module) {
                var React2 = require_react();
                function CalculatorIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10 1c-1.716 0-3.408.106-5.07.31C3.806 1.45 3 2.414 3 3.517V16.75A2.25 2.25 0 005.25 19h9.5A2.25 2.25 0 0017 16.75V3.517c0-1.103-.806-2.068-1.93-2.207A41.403 41.403 0 0010 1zM5.99 8.75A.75.75 0 016.74 8h.01a.75.75 0 01.75.75v.01a.75.75 0 01-.75.75h-.01a.75.75 0 01-.75-.75v-.01zm.75 1.417a.75.75 0 00-.75.75v.01c0 .414.336.75.75.75h.01a.75.75 0 00.75-.75v-.01a.75.75 0 00-.75-.75h-.01zm-.75 2.916a.75.75 0 01.75-.75h.01a.75.75 0 01.75.75v.01a.75.75 0 01-.75.75h-.01a.75.75 0 01-.75-.75v-.01zm.75 1.417a.75.75 0 00-.75.75v.01c0 .414.336.75.75.75h.01a.75.75 0 00.75-.75v-.01a.75.75 0 00-.75-.75h-.01zm1.417-5.75a.75.75 0 01.75-.75h.01a.75.75 0 01.75.75v.01a.75.75 0 01-.75.75h-.01a.75.75 0 01-.75-.75v-.01zm.75 1.417a.75.75 0 00-.75.75v.01c0 .414.336.75.75.75h.01a.75.75 0 00.75-.75v-.01a.75.75 0 00-.75-.75h-.01zm-.75 2.916a.75.75 0 01.75-.75h.01a.75.75 0 01.75.75v.01a.75.75 0 01-.75.75h-.01a.75.75 0 01-.75-.75v-.01zm.75 1.417a.75.75 0 00-.75.75v.01c0 .414.336.75.75.75h.01a.75.75 0 00.75-.75v-.01a.75.75 0 00-.75-.75h-.01zm1.42-5.75a.75.75 0 01.75-.75h.01a.75.75 0 01.75.75v.01a.75.75 0 01-.75.75h-.01a.75.75 0 01-.75-.75v-.01zm.75 1.417a.75.75 0 00-.75.75v.01c0 .414.336.75.75.75h.01a.75.75 0 00.75-.75v-.01a.75.75 0 00-.75-.75h-.01zm-.75 2.916a.75.75 0 01.75-.75h.01a.75.75 0 01.75.75v.01a.75.75 0 01-.75.75h-.01a.75.75 0 01-.75-.75v-.01zm.75 1.417a.75.75 0 00-.75.75v.01c0 .414.336.75.75.75h.01a.75.75 0 00.75-.75v-.01a.75.75 0 00-.75-.75h-.01zM12.5 8.75a.75.75 0 01.75-.75h.01a.75.75 0 01.75.75v.01a.75.75 0 01-.75.75h-.01a.75.75 0 01-.75-.75v-.01zm.75 1.417a.75.75 0 00-.75.75v.01c0 .414.336.75.75.75h.01a.75.75 0 00.75-.75v-.01a.75.75 0 00-.75-.75h-.01zm0 2.166a.75.75 0 01.75.75v2.167a.75.75 0 11-1.5 0v-2.167a.75.75 0 01.75-.75zM6.75 4a.75.75 0 00-.75.75v.5c0 .414.336.75.75.75h6.5a.75.75 0 00.75-.75v-.5a.75.75 0 00-.75-.75h-6.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(CalculatorIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/CalendarDaysIcon.js
        var require_CalendarDaysIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/CalendarDaysIcon.js"(exports, module) {
                var React2 = require_react();
                function CalendarDaysIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M5.25 12a.75.75 0 01.75-.75h.01a.75.75 0 01.75.75v.01a.75.75 0 01-.75.75H6a.75.75 0 01-.75-.75V12zM6 13.25a.75.75 0 00-.75.75v.01c0 .414.336.75.75.75h.01a.75.75 0 00.75-.75V14a.75.75 0 00-.75-.75H6zM7.25 12a.75.75 0 01.75-.75h.01a.75.75 0 01.75.75v.01a.75.75 0 01-.75.75H8a.75.75 0 01-.75-.75V12zM8 13.25a.75.75 0 00-.75.75v.01c0 .414.336.75.75.75h.01a.75.75 0 00.75-.75V14a.75.75 0 00-.75-.75H8zM9.25 10a.75.75 0 01.75-.75h.01a.75.75 0 01.75.75v.01a.75.75 0 01-.75.75H10a.75.75 0 01-.75-.75V10zM10 11.25a.75.75 0 00-.75.75v.01c0 .414.336.75.75.75h.01a.75.75 0 00.75-.75V12a.75.75 0 00-.75-.75H10zM9.25 14a.75.75 0 01.75-.75h.01a.75.75 0 01.75.75v.01a.75.75 0 01-.75.75H10a.75.75 0 01-.75-.75V14zM12 9.25a.75.75 0 00-.75.75v.01c0 .414.336.75.75.75h.01a.75.75 0 00.75-.75V10a.75.75 0 00-.75-.75H12zM11.25 12a.75.75 0 01.75-.75h.01a.75.75 0 01.75.75v.01a.75.75 0 01-.75.75H12a.75.75 0 01-.75-.75V12zM12 13.25a.75.75 0 00-.75.75v.01c0 .414.336.75.75.75h.01a.75.75 0 00.75-.75V14a.75.75 0 00-.75-.75H12zM13.25 10a.75.75 0 01.75-.75h.01a.75.75 0 01.75.75v.01a.75.75 0 01-.75.75H14a.75.75 0 01-.75-.75V10zM14 11.25a.75.75 0 00-.75.75v.01c0 .414.336.75.75.75h.01a.75.75 0 00.75-.75V12a.75.75 0 00-.75-.75H14z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M5.75 2a.75.75 0 01.75.75V4h7V2.75a.75.75 0 011.5 0V4h.25A2.75 2.75 0 0118 6.75v8.5A2.75 2.75 0 0115.25 18H4.75A2.75 2.75 0 012 15.25v-8.5A2.75 2.75 0 014.75 4H5V2.75A.75.75 0 015.75 2zm-1 5.5c-.69 0-1.25.56-1.25 1.25v6.5c0 .69.56 1.25 1.25 1.25h10.5c.69 0 1.25-.56 1.25-1.25v-6.5c0-.69-.56-1.25-1.25-1.25H4.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(CalendarDaysIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/CalendarIcon.js
        var require_CalendarIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/CalendarIcon.js"(exports, module) {
                var React2 = require_react();
                function CalendarIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M5.75 2a.75.75 0 01.75.75V4h7V2.75a.75.75 0 011.5 0V4h.25A2.75 2.75 0 0118 6.75v8.5A2.75 2.75 0 0115.25 18H4.75A2.75 2.75 0 012 15.25v-8.5A2.75 2.75 0 014.75 4H5V2.75A.75.75 0 015.75 2zm-1 5.5c-.69 0-1.25.56-1.25 1.25v6.5c0 .69.56 1.25 1.25 1.25h10.5c.69 0 1.25-.56 1.25-1.25v-6.5c0-.69-.56-1.25-1.25-1.25H4.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(CalendarIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/CameraIcon.js
        var require_CameraIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/CameraIcon.js"(exports, module) {
                var React2 = require_react();
                function CameraIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M1 8a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 018.07 3h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0016.07 6H17a2 2 0 012 2v7a2 2 0 01-2 2H3a2 2 0 01-2-2V8zm13.5 3a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zM10 14a3 3 0 100-6 3 3 0 000 6z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(CameraIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ChartBarSquareIcon.js
        var require_ChartBarSquareIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ChartBarSquareIcon.js"(exports, module) {
                var React2 = require_react();
                function ChartBarSquareIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M4.25 2A2.25 2.25 0 002 4.25v11.5A2.25 2.25 0 004.25 18h11.5A2.25 2.25 0 0018 15.75V4.25A2.25 2.25 0 0015.75 2H4.25zM15 5.75a.75.75 0 00-1.5 0v8.5a.75.75 0 001.5 0v-8.5zm-8.5 6a.75.75 0 00-1.5 0v2.5a.75.75 0 001.5 0v-2.5zM8.584 9a.75.75 0 01.75.75v4.5a.75.75 0 01-1.5 0v-4.5a.75.75 0 01.75-.75zm3.58-1.25a.75.75 0 00-1.5 0v6.5a.75.75 0 001.5 0v-6.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChartBarSquareIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ChartBarIcon.js
        var require_ChartBarIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ChartBarIcon.js"(exports, module) {
                var React2 = require_react();
                function ChartBarIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M15.5 2A1.5 1.5 0 0014 3.5v13a1.5 1.5 0 001.5 1.5h1a1.5 1.5 0 001.5-1.5v-13A1.5 1.5 0 0016.5 2h-1zM9.5 6A1.5 1.5 0 008 7.5v9A1.5 1.5 0 009.5 18h1a1.5 1.5 0 001.5-1.5v-9A1.5 1.5 0 0010.5 6h-1zM3.5 10A1.5 1.5 0 002 11.5v5A1.5 1.5 0 003.5 18h1A1.5 1.5 0 006 16.5v-5A1.5 1.5 0 004.5 10h-1z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChartBarIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ChartPieIcon.js
        var require_ChartPieIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ChartPieIcon.js"(exports, module) {
                var React2 = require_react();
                function ChartPieIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M12 9a1 1 0 01-1-1V3c0-.553.45-1.008.997-.93a7.004 7.004 0 015.933 5.933c.078.547-.378.997-.93.997h-5z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M8.003 4.07C8.55 3.992 9 4.447 9 5v5a1 1 0 001 1h5c.552 0 1.008.45.93.997A7.001 7.001 0 012 11a7.002 7.002 0 016.003-6.93z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChartPieIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ChatBubbleBottomCenterTextIcon.js
        var require_ChatBubbleBottomCenterTextIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ChatBubbleBottomCenterTextIcon.js"(exports, module) {
                var React2 = require_react();
                function ChatBubbleBottomCenterTextIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10 2c-2.236 0-4.43.18-6.57.524C1.993 2.755 1 4.014 1 5.426v5.148c0 1.413.993 2.67 2.43 2.902 1.168.188 2.352.327 3.55.414.28.02.521.18.642.413l1.713 3.293a.75.75 0 001.33 0l1.713-3.293a.783.783 0 01.642-.413 41.102 41.102 0 003.55-.414c1.437-.231 2.43-1.49 2.43-2.902V5.426c0-1.413-.993-2.67-2.43-2.902A41.289 41.289 0 0010 2zM6.75 6a.75.75 0 000 1.5h6.5a.75.75 0 000-1.5h-6.5zm0 2.5a.75.75 0 000 1.5h3.5a.75.75 0 000-1.5h-3.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChatBubbleBottomCenterTextIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ChatBubbleBottomCenterIcon.js
        var require_ChatBubbleBottomCenterIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ChatBubbleBottomCenterIcon.js"(exports, module) {
                var React2 = require_react();
                function ChatBubbleBottomCenterIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M3.43 2.524A41.29 41.29 0 0110 2c2.236 0 4.43.18 6.57.524 1.437.231 2.43 1.49 2.43 2.902v5.148c0 1.413-.993 2.67-2.43 2.902a41.102 41.102 0 01-3.55.414c-.28.02-.521.18-.643.413l-1.712 3.293a.75.75 0 01-1.33 0l-1.713-3.293a.783.783 0 00-.642-.413 41.108 41.108 0 01-3.55-.414C1.993 13.245 1 11.986 1 10.574V5.426c0-1.413.993-2.67 2.43-2.902z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChatBubbleBottomCenterIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ChatBubbleLeftEllipsisIcon.js
        var require_ChatBubbleLeftEllipsisIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ChatBubbleLeftEllipsisIcon.js"(exports, module) {
                var React2 = require_react();
                function ChatBubbleLeftEllipsisIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10 2c-2.236 0-4.43.18-6.57.524C1.993 2.755 1 4.014 1 5.426v5.148c0 1.413.993 2.67 2.43 2.902.848.137 1.705.248 2.57.331v3.443a.75.75 0 001.28.53l3.58-3.579a.78.78 0 01.527-.224 41.202 41.202 0 005.183-.5c1.437-.232 2.43-1.49 2.43-2.903V5.426c0-1.413-.993-2.67-2.43-2.902A41.289 41.289 0 0010 2zm0 7a1 1 0 100-2 1 1 0 000 2zM8 8a1 1 0 11-2 0 1 1 0 012 0zm5 1a1 1 0 100-2 1 1 0 000 2z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChatBubbleLeftEllipsisIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ChatBubbleLeftRightIcon.js
        var require_ChatBubbleLeftRightIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ChatBubbleLeftRightIcon.js"(exports, module) {
                var React2 = require_react();
                function ChatBubbleLeftRightIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M3.505 2.365A41.369 41.369 0 019 2c1.863 0 3.697.124 5.495.365 1.247.167 2.18 1.108 2.435 2.268a4.45 4.45 0 00-.577-.069 43.141 43.141 0 00-4.706 0C9.229 4.696 7.5 6.727 7.5 8.998v2.24c0 1.413.67 2.735 1.76 3.562l-2.98 2.98A.75.75 0 015 17.25v-3.443c-.501-.048-1-.106-1.495-.172C2.033 13.438 1 12.162 1 10.72V5.28c0-1.441 1.033-2.717 2.505-2.914z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M14 6c-.762 0-1.52.02-2.271.062C10.157 6.148 9 7.472 9 8.998v2.24c0 1.519 1.147 2.839 2.71 2.935.214.013.428.024.642.034.2.009.385.09.518.224l2.35 2.35a.75.75 0 001.28-.531v-2.07c1.453-.195 2.5-1.463 2.5-2.915V8.998c0-1.526-1.157-2.85-2.729-2.936A41.645 41.645 0 0014 6z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChatBubbleLeftRightIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ChatBubbleLeftIcon.js
        var require_ChatBubbleLeftIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ChatBubbleLeftIcon.js"(exports, module) {
                var React2 = require_react();
                function ChatBubbleLeftIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M3.43 2.524A41.29 41.29 0 0110 2c2.236 0 4.43.18 6.57.524 1.437.231 2.43 1.49 2.43 2.902v5.148c0 1.413-.993 2.67-2.43 2.902a41.202 41.202 0 01-5.183.501.78.78 0 00-.528.224l-3.579 3.58A.75.75 0 016 17.25v-3.443a41.033 41.033 0 01-2.57-.33C1.993 13.244 1 11.986 1 10.573V5.426c0-1.413.993-2.67 2.43-2.902z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChatBubbleLeftIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ChatBubbleOvalLeftEllipsisIcon.js
        var require_ChatBubbleOvalLeftEllipsisIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ChatBubbleOvalLeftEllipsisIcon.js"(exports, module) {
                var React2 = require_react();
                function ChatBubbleOvalLeftEllipsisIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10 3c-4.31 0-8 3.033-8 7 0 2.024.978 3.825 2.499 5.085a3.478 3.478 0 01-.522 1.756.75.75 0 00.584 1.143 5.976 5.976 0 003.936-1.108c.487.082.99.124 1.503.124 4.31 0 8-3.033 8-7s-3.69-7-8-7zm0 8a1 1 0 100-2 1 1 0 000 2zm-2-1a1 1 0 11-2 0 1 1 0 012 0zm5 1a1 1 0 100-2 1 1 0 000 2z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChatBubbleOvalLeftEllipsisIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ChatBubbleOvalLeftIcon.js
        var require_ChatBubbleOvalLeftIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ChatBubbleOvalLeftIcon.js"(exports, module) {
                var React2 = require_react();
                function ChatBubbleOvalLeftIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M2 10c0-3.967 3.69-7 8-7 4.31 0 8 3.033 8 7s-3.69 7-8 7a9.165 9.165 0 01-1.504-.123 5.976 5.976 0 01-3.935 1.107.75.75 0 01-.584-1.143 3.478 3.478 0 00.522-1.756C2.979 13.825 2 12.025 2 10z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChatBubbleOvalLeftIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/CheckBadgeIcon.js
        var require_CheckBadgeIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/CheckBadgeIcon.js"(exports, module) {
                var React2 = require_react();
                function CheckBadgeIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M16.403 12.652a3 3 0 000-5.304 3 3 0 00-3.75-3.751 3 3 0 00-5.305 0 3 3 0 00-3.751 3.75 3 3 0 000 5.305 3 3 0 003.75 3.751 3 3 0 005.305 0 3 3 0 003.751-3.75zm-2.546-4.46a.75.75 0 00-1.214-.883l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(CheckBadgeIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/CheckCircleIcon.js
        var require_CheckCircleIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/CheckCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function CheckCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(CheckCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/CheckIcon.js
        var require_CheckIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/CheckIcon.js"(exports, module) {
                var React2 = require_react();
                function CheckIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M16.704 4.153a.75.75 0 01.143 1.052l-8 10.5a.75.75 0 01-1.127.075l-4.5-4.5a.75.75 0 011.06-1.06l3.894 3.893 7.48-9.817a.75.75 0 011.05-.143z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(CheckIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ChevronDoubleDownIcon.js
        var require_ChevronDoubleDownIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ChevronDoubleDownIcon.js"(exports, module) {
                var React2 = require_react();
                function ChevronDoubleDownIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M14.77 4.21a.75.75 0 01.02 1.06l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 011.08-1.04L10 8.168l3.71-3.938a.75.75 0 011.06-.02zm0 6a.75.75 0 01.02 1.06l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 111.08-1.04L10 14.168l3.71-3.938a.75.75 0 011.06-.02z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChevronDoubleDownIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ChevronDoubleLeftIcon.js
        var require_ChevronDoubleLeftIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ChevronDoubleLeftIcon.js"(exports, module) {
                var React2 = require_react();
                function ChevronDoubleLeftIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M15.79 14.77a.75.75 0 01-1.06.02l-4.5-4.25a.75.75 0 010-1.08l4.5-4.25a.75.75 0 111.04 1.08L11.832 10l3.938 3.71a.75.75 0 01.02 1.06zm-6 0a.75.75 0 01-1.06.02l-4.5-4.25a.75.75 0 010-1.08l4.5-4.25a.75.75 0 111.04 1.08L5.832 10l3.938 3.71a.75.75 0 01.02 1.06z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChevronDoubleLeftIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ChevronDoubleRightIcon.js
        var require_ChevronDoubleRightIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ChevronDoubleRightIcon.js"(exports, module) {
                var React2 = require_react();
                function ChevronDoubleRightIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10.21 14.77a.75.75 0 01.02-1.06L14.168 10 10.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z",
                        clipRule: "evenodd"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M4.21 14.77a.75.75 0 01.02-1.06L8.168 10 4.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChevronDoubleRightIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ChevronDoubleUpIcon.js
        var require_ChevronDoubleUpIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ChevronDoubleUpIcon.js"(exports, module) {
                var React2 = require_react();
                function ChevronDoubleUpIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M5.23 15.79a.75.75 0 01-.02-1.06l4.25-4.5a.75.75 0 011.08 0l4.25 4.5a.75.75 0 11-1.08 1.04L10 11.832 6.29 15.77a.75.75 0 01-1.06.02zm0-6a.75.75 0 01-.02-1.06l4.25-4.5a.75.75 0 011.08 0l4.25 4.5a.75.75 0 11-1.08 1.04L10 5.832 6.29 9.77a.75.75 0 01-1.06.02z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChevronDoubleUpIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ChevronDownIcon.js
        var require_ChevronDownIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ChevronDownIcon.js"(exports, module) {
                var React2 = require_react();
                function ChevronDownIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChevronDownIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ChevronLeftIcon.js
        var require_ChevronLeftIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ChevronLeftIcon.js"(exports, module) {
                var React2 = require_react();
                function ChevronLeftIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M12.79 5.23a.75.75 0 01-.02 1.06L8.832 10l3.938 3.71a.75.75 0 11-1.04 1.08l-4.5-4.25a.75.75 0 010-1.08l4.5-4.25a.75.75 0 011.06.02z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChevronLeftIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ChevronRightIcon.js
        var require_ChevronRightIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ChevronRightIcon.js"(exports, module) {
                var React2 = require_react();
                function ChevronRightIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChevronRightIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ChevronUpDownIcon.js
        var require_ChevronUpDownIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ChevronUpDownIcon.js"(exports, module) {
                var React2 = require_react();
                function ChevronUpDownIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10 3a.75.75 0 01.55.24l3.25 3.5a.75.75 0 11-1.1 1.02L10 4.852 7.3 7.76a.75.75 0 01-1.1-1.02l3.25-3.5A.75.75 0 0110 3zm-3.76 9.2a.75.75 0 011.06.04l2.7 2.908 2.7-2.908a.75.75 0 111.1 1.02l-3.25 3.5a.75.75 0 01-1.1 0l-3.25-3.5a.75.75 0 01.04-1.06z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChevronUpDownIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ChevronUpIcon.js
        var require_ChevronUpIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ChevronUpIcon.js"(exports, module) {
                var React2 = require_react();
                function ChevronUpIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M14.77 12.79a.75.75 0 01-1.06-.02L10 8.832 6.29 12.77a.75.75 0 11-1.08-1.04l4.25-4.5a.75.75 0 011.08 0l4.25 4.5a.75.75 0 01-.02 1.06z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChevronUpIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/CircleStackIcon.js
        var require_CircleStackIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/CircleStackIcon.js"(exports, module) {
                var React2 = require_react();
                function CircleStackIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10 1c3.866 0 7 1.79 7 4s-3.134 4-7 4-7-1.79-7-4 3.134-4 7-4zm5.694 8.13c.464-.264.91-.583 1.306-.952V10c0 2.21-3.134 4-7 4s-7-1.79-7-4V8.178c.396.37.842.688 1.306.953C5.838 10.006 7.854 10.5 10 10.5s4.162-.494 5.694-1.37zM3 13.179V15c0 2.21 3.134 4 7 4s7-1.79 7-4v-1.822c-.396.37-.842.688-1.306.953-1.532.875-3.548 1.369-5.694 1.369s-4.162-.494-5.694-1.37A7.009 7.009 0 013 13.179z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(CircleStackIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ClipboardDocumentCheckIcon.js
        var require_ClipboardDocumentCheckIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ClipboardDocumentCheckIcon.js"(exports, module) {
                var React2 = require_react();
                function ClipboardDocumentCheckIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M18 5.25a2.25 2.25 0 00-2.012-2.238A2.25 2.25 0 0013.75 1h-1.5a2.25 2.25 0 00-2.238 2.012c-.875.092-1.6.686-1.884 1.488H11A2.5 2.5 0 0113.5 7v7h2.25A2.25 2.25 0 0018 11.75v-6.5zM12.25 2.5a.75.75 0 00-.75.75v.25h3v-.25a.75.75 0 00-.75-.75h-1.5z",
                        clipRule: "evenodd"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M3 6a1 1 0 00-1 1v10a1 1 0 001 1h8a1 1 0 001-1V7a1 1 0 00-1-1H3zm6.874 4.166a.75.75 0 10-1.248-.832l-2.493 3.739-.853-.853a.75.75 0 00-1.06 1.06l1.5 1.5a.75.75 0 001.154-.114l3-4.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ClipboardDocumentCheckIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ClipboardDocumentListIcon.js
        var require_ClipboardDocumentListIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ClipboardDocumentListIcon.js"(exports, module) {
                var React2 = require_react();
                function ClipboardDocumentListIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M15.988 3.012A2.25 2.25 0 0118 5.25v6.5A2.25 2.25 0 0115.75 14H13.5V7A2.5 2.5 0 0011 4.5H8.128a2.252 2.252 0 011.884-1.488A2.25 2.25 0 0112.25 1h1.5a2.25 2.25 0 012.238 2.012zM11.5 3.25a.75.75 0 01.75-.75h1.5a.75.75 0 01.75.75v.25h-3v-.25z",
                        clipRule: "evenodd"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M2 7a1 1 0 011-1h8a1 1 0 011 1v10a1 1 0 01-1 1H3a1 1 0 01-1-1V7zm2 3.25a.75.75 0 01.75-.75h4.5a.75.75 0 010 1.5h-4.5a.75.75 0 01-.75-.75zm0 3.5a.75.75 0 01.75-.75h4.5a.75.75 0 010 1.5h-4.5a.75.75 0 01-.75-.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ClipboardDocumentListIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ClipboardDocumentIcon.js
        var require_ClipboardDocumentIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ClipboardDocumentIcon.js"(exports, module) {
                var React2 = require_react();
                function ClipboardDocumentIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M15.988 3.012A2.25 2.25 0 0118 5.25v6.5A2.25 2.25 0 0115.75 14H13.5v-3.379a3 3 0 00-.879-2.121l-3.12-3.121a3 3 0 00-1.402-.791 2.252 2.252 0 011.913-1.576A2.25 2.25 0 0112.25 1h1.5a2.25 2.25 0 012.238 2.012zM11.5 3.25a.75.75 0 01.75-.75h1.5a.75.75 0 01.75.75v.25h-3v-.25z",
                        clipRule: "evenodd"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M3.5 6A1.5 1.5 0 002 7.5v9A1.5 1.5 0 003.5 18h7a1.5 1.5 0 001.5-1.5v-5.879a1.5 1.5 0 00-.44-1.06L8.44 6.439A1.5 1.5 0 007.378 6H3.5z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ClipboardDocumentIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ClipboardIcon.js
        var require_ClipboardIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ClipboardIcon.js"(exports, module) {
                var React2 = require_react();
                function ClipboardIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M13.887 3.182c.396.037.79.08 1.183.128C16.194 3.45 17 4.414 17 5.517V16.75A2.25 2.25 0 0114.75 19h-9.5A2.25 2.25 0 013 16.75V5.517c0-1.103.806-2.068 1.93-2.207.393-.048.787-.09 1.183-.128A3.001 3.001 0 019 1h2c1.373 0 2.531.923 2.887 2.182zM7.5 4A1.5 1.5 0 019 2.5h2A1.5 1.5 0 0112.5 4v.5h-5V4z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ClipboardIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ClockIcon.js
        var require_ClockIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ClockIcon.js"(exports, module) {
                var React2 = require_react();
                function ClockIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10 18a8 8 0 100-16 8 8 0 000 16zm.75-13a.75.75 0 00-1.5 0v5c0 .414.336.75.75.75h4a.75.75 0 000-1.5h-3.25V5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ClockIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/CloudArrowDownIcon.js
        var require_CloudArrowDownIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/CloudArrowDownIcon.js"(exports, module) {
                var React2 = require_react();
                function CloudArrowDownIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M5.5 17a4.5 4.5 0 01-1.44-8.765 4.5 4.5 0 018.302-3.046 3.5 3.5 0 014.504 4.272A4 4 0 0115 17H5.5zm5.25-9.25a.75.75 0 00-1.5 0v4.59l-1.95-2.1a.75.75 0 10-1.1 1.02l3.25 3.5a.75.75 0 001.1 0l3.25-3.5a.75.75 0 10-1.1-1.02l-1.95 2.1V7.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(CloudArrowDownIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/CloudArrowUpIcon.js
        var require_CloudArrowUpIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/CloudArrowUpIcon.js"(exports, module) {
                var React2 = require_react();
                function CloudArrowUpIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M5.5 17a4.5 4.5 0 01-1.44-8.765 4.5 4.5 0 018.302-3.046 3.5 3.5 0 014.504 4.272A4 4 0 0115 17H5.5zm3.75-2.75a.75.75 0 001.5 0V9.66l1.95 2.1a.75.75 0 101.1-1.02l-3.25-3.5a.75.75 0 00-1.1 0l-3.25 3.5a.75.75 0 101.1 1.02l1.95-2.1v4.59z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(CloudArrowUpIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/CloudIcon.js
        var require_CloudIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/CloudIcon.js"(exports, module) {
                var React2 = require_react();
                function CloudIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M1 12.5A4.5 4.5 0 005.5 17H15a4 4 0 001.866-7.539 3.504 3.504 0 00-4.504-4.272A4.5 4.5 0 004.06 8.235 4.502 4.502 0 001 12.5z"
                    }));
                }
                var ForwardRef = React2.forwardRef(CloudIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/CodeBracketSquareIcon.js
        var require_CodeBracketSquareIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/CodeBracketSquareIcon.js"(exports, module) {
                var React2 = require_react();
                function CodeBracketSquareIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M4.25 2A2.25 2.25 0 002 4.25v11.5A2.25 2.25 0 004.25 18h11.5A2.25 2.25 0 0018 15.75V4.25A2.25 2.25 0 0015.75 2H4.25zm4.03 6.28a.75.75 0 00-1.06-1.06L4.97 9.47a.75.75 0 000 1.06l2.25 2.25a.75.75 0 001.06-1.06L6.56 10l1.72-1.72zm4.5-1.06a.75.75 0 10-1.06 1.06L13.44 10l-1.72 1.72a.75.75 0 101.06 1.06l2.25-2.25a.75.75 0 000-1.06l-2.25-2.25z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(CodeBracketSquareIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/CodeBracketIcon.js
        var require_CodeBracketIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/CodeBracketIcon.js"(exports, module) {
                var React2 = require_react();
                function CodeBracketIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M6.28 5.22a.75.75 0 010 1.06L2.56 10l3.72 3.72a.75.75 0 01-1.06 1.06L.97 10.53a.75.75 0 010-1.06l4.25-4.25a.75.75 0 011.06 0zm7.44 0a.75.75 0 011.06 0l4.25 4.25a.75.75 0 010 1.06l-4.25 4.25a.75.75 0 01-1.06-1.06L17.44 10l-3.72-3.72a.75.75 0 010-1.06zM11.377 2.011a.75.75 0 01.612.867l-2.5 14.5a.75.75 0 01-1.478-.255l2.5-14.5a.75.75 0 01.866-.612z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(CodeBracketIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/Cog6ToothIcon.js
        var require_Cog6ToothIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/Cog6ToothIcon.js"(exports, module) {
                var React2 = require_react();
                function Cog6ToothIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M7.84 1.804A1 1 0 018.82 1h2.36a1 1 0 01.98.804l.331 1.652a6.993 6.993 0 011.929 1.115l1.598-.54a1 1 0 011.186.447l1.18 2.044a1 1 0 01-.205 1.251l-1.267 1.113a7.047 7.047 0 010 2.228l1.267 1.113a1 1 0 01.206 1.25l-1.18 2.045a1 1 0 01-1.187.447l-1.598-.54a6.993 6.993 0 01-1.929 1.115l-.33 1.652a1 1 0 01-.98.804H8.82a1 1 0 01-.98-.804l-.331-1.652a6.993 6.993 0 01-1.929-1.115l-1.598.54a1 1 0 01-1.186-.447l-1.18-2.044a1 1 0 01.205-1.251l1.267-1.114a7.05 7.05 0 010-2.227L1.821 7.773a1 1 0 01-.206-1.25l1.18-2.045a1 1 0 011.187-.447l1.598.54A6.993 6.993 0 017.51 3.456l.33-1.652zM10 13a3 3 0 100-6 3 3 0 000 6z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(Cog6ToothIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/Cog8ToothIcon.js
        var require_Cog8ToothIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/Cog8ToothIcon.js"(exports, module) {
                var React2 = require_react();
                function Cog8ToothIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M8.34 1.804A1 1 0 019.32 1h1.36a1 1 0 01.98.804l.295 1.473c.497.144.971.342 1.416.587l1.25-.834a1 1 0 011.262.125l.962.962a1 1 0 01.125 1.262l-.834 1.25c.245.445.443.919.587 1.416l1.473.294a1 1 0 01.804.98v1.361a1 1 0 01-.804.98l-1.473.295a6.95 6.95 0 01-.587 1.416l.834 1.25a1 1 0 01-.125 1.262l-.962.962a1 1 0 01-1.262.125l-1.25-.834a6.953 6.953 0 01-1.416.587l-.294 1.473a1 1 0 01-.98.804H9.32a1 1 0 01-.98-.804l-.295-1.473a6.957 6.957 0 01-1.416-.587l-1.25.834a1 1 0 01-1.262-.125l-.962-.962a1 1 0 01-.125-1.262l.834-1.25a6.957 6.957 0 01-.587-1.416l-1.473-.294A1 1 0 011 10.68V9.32a1 1 0 01.804-.98l1.473-.295c.144-.497.342-.971.587-1.416l-.834-1.25a1 1 0 01.125-1.262l.962-.962A1 1 0 015.38 3.03l1.25.834a6.957 6.957 0 011.416-.587l.294-1.473zM13 10a3 3 0 11-6 0 3 3 0 016 0z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(Cog8ToothIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/CogIcon.js
        var require_CogIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/CogIcon.js"(exports, module) {
                var React2 = require_react();
                function CogIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M13.024 9.25c.47 0 .827-.433.637-.863a4 4 0 00-4.094-2.364c-.468.05-.665.576-.43.984l1.08 1.868a.75.75 0 00.649.375h2.158zM7.84 7.758c-.236-.408-.79-.5-1.068-.12A3.982 3.982 0 006 10c0 .884.287 1.7.772 2.363.278.38.832.287 1.068-.12l1.078-1.868a.75.75 0 000-.75L7.839 7.758zM9.138 12.993c-.235.408-.039.934.43.984a4 4 0 004.094-2.364c.19-.43-.168-.863-.638-.863h-2.158a.75.75 0 00-.65.375l-1.078 1.868z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M14.13 4.347l.644-1.117a.75.75 0 00-1.299-.75l-.644 1.116a6.954 6.954 0 00-2.081-.556V1.75a.75.75 0 00-1.5 0v1.29a6.954 6.954 0 00-2.081.556L6.525 2.48a.75.75 0 10-1.3.75l.645 1.117A7.04 7.04 0 004.347 5.87L3.23 5.225a.75.75 0 10-.75 1.3l1.116.644A6.954 6.954 0 003.04 9.25H1.75a.75.75 0 000 1.5h1.29c.078.733.27 1.433.556 2.081l-1.116.645a.75.75 0 10.75 1.298l1.117-.644a7.04 7.04 0 001.523 1.523l-.645 1.117a.75.75 0 101.3.75l.644-1.116a6.954 6.954 0 002.081.556v1.29a.75.75 0 001.5 0v-1.29a6.954 6.954 0 002.081-.556l.645 1.116a.75.75 0 001.299-.75l-.645-1.117a7.042 7.042 0 001.523-1.523l1.117.644a.75.75 0 00.75-1.298l-1.116-.645a6.954 6.954 0 00.556-2.081h1.29a.75.75 0 000-1.5h-1.29a6.954 6.954 0 00-.556-2.081l1.116-.644a.75.75 0 00-.75-1.3l-1.117.645a7.04 7.04 0 00-1.524-1.523zM10 4.5a5.475 5.475 0 00-2.781.754A5.527 5.527 0 005.22 7.277 5.475 5.475 0 004.5 10a5.475 5.475 0 00.752 2.777 5.527 5.527 0 002.028 2.004c.802.458 1.73.719 2.72.719a5.474 5.474 0 002.78-.753 5.527 5.527 0 002.001-2.027c.458-.802.719-1.73.719-2.72a5.475 5.475 0 00-.753-2.78 5.528 5.528 0 00-2.028-2.002A5.475 5.475 0 0010 4.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(CogIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/CommandLineIcon.js
        var require_CommandLineIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/CommandLineIcon.js"(exports, module) {
                var React2 = require_react();
                function CommandLineIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M3.25 3A2.25 2.25 0 001 5.25v9.5A2.25 2.25 0 003.25 17h13.5A2.25 2.25 0 0019 14.75v-9.5A2.25 2.25 0 0016.75 3H3.25zm.943 8.752a.75.75 0 01.055-1.06L6.128 9l-1.88-1.693a.75.75 0 111.004-1.114l2.5 2.25a.75.75 0 010 1.114l-2.5 2.25a.75.75 0 01-1.06-.055zM9.75 10.25a.75.75 0 000 1.5h2.5a.75.75 0 000-1.5h-2.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(CommandLineIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ComputerDesktopIcon.js
        var require_ComputerDesktopIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ComputerDesktopIcon.js"(exports, module) {
                var React2 = require_react();
                function ComputerDesktopIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M2 4.25A2.25 2.25 0 014.25 2h11.5A2.25 2.25 0 0118 4.25v8.5A2.25 2.25 0 0115.75 15h-3.105a3.501 3.501 0 001.1 1.677A.75.75 0 0113.26 18H6.74a.75.75 0 01-.484-1.323A3.501 3.501 0 007.355 15H4.25A2.25 2.25 0 012 12.75v-8.5zm1.5 0a.75.75 0 01.75-.75h11.5a.75.75 0 01.75.75v7.5a.75.75 0 01-.75.75H4.25a.75.75 0 01-.75-.75v-7.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ComputerDesktopIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/CpuChipIcon.js
        var require_CpuChipIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/CpuChipIcon.js"(exports, module) {
                var React2 = require_react();
                function CpuChipIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M14 6H6v8h8V6z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M9.25 3V1.75a.75.75 0 011.5 0V3h1.5V1.75a.75.75 0 011.5 0V3h.5A2.75 2.75 0 0117 5.75v.5h1.25a.75.75 0 010 1.5H17v1.5h1.25a.75.75 0 010 1.5H17v1.5h1.25a.75.75 0 010 1.5H17v.5A2.75 2.75 0 0114.25 17h-.5v1.25a.75.75 0 01-1.5 0V17h-1.5v1.25a.75.75 0 01-1.5 0V17h-1.5v1.25a.75.75 0 01-1.5 0V17h-.5A2.75 2.75 0 013 14.25v-.5H1.75a.75.75 0 010-1.5H3v-1.5H1.75a.75.75 0 010-1.5H3v-1.5H1.75a.75.75 0 010-1.5H3v-.5A2.75 2.75 0 015.75 3h.5V1.75a.75.75 0 011.5 0V3h1.5zM4.5 5.75c0-.69.56-1.25 1.25-1.25h8.5c.69 0 1.25.56 1.25 1.25v8.5c0 .69-.56 1.25-1.25 1.25h-8.5c-.69 0-1.25-.56-1.25-1.25v-8.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(CpuChipIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/CreditCardIcon.js
        var require_CreditCardIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/CreditCardIcon.js"(exports, module) {
                var React2 = require_react();
                function CreditCardIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M2.5 4A1.5 1.5 0 001 5.5V6h18v-.5A1.5 1.5 0 0017.5 4h-15zM19 8.5H1v6A1.5 1.5 0 002.5 16h15a1.5 1.5 0 001.5-1.5v-6zM3 13.25a.75.75 0 01.75-.75h1.5a.75.75 0 010 1.5h-1.5a.75.75 0 01-.75-.75zm4.75-.75a.75.75 0 000 1.5h3.5a.75.75 0 000-1.5h-3.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(CreditCardIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/CubeTransparentIcon.js
        var require_CubeTransparentIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/CubeTransparentIcon.js"(exports, module) {
                var React2 = require_react();
                function CubeTransparentIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M9.638 1.093a.75.75 0 01.724 0l2 1.104a.75.75 0 11-.724 1.313L10 2.607l-1.638.903a.75.75 0 11-.724-1.313l2-1.104zM5.403 4.287a.75.75 0 01-.295 1.019l-.805.444.805.444a.75.75 0 01-.724 1.314L3.5 7.02v.73a.75.75 0 01-1.5 0v-2a.75.75 0 01.388-.657l1.996-1.1a.75.75 0 011.019.294zm9.194 0a.75.75 0 011.02-.295l1.995 1.101A.75.75 0 0118 5.75v2a.75.75 0 01-1.5 0v-.73l-.884.488a.75.75 0 11-.724-1.314l.806-.444-.806-.444a.75.75 0 01-.295-1.02zM7.343 8.284a.75.75 0 011.02-.294L10 8.893l1.638-.903a.75.75 0 11.724 1.313l-1.612.89v1.557a.75.75 0 01-1.5 0v-1.557l-1.612-.89a.75.75 0 01-.295-1.019zM2.75 11.5a.75.75 0 01.75.75v1.557l1.608.887a.75.75 0 01-.724 1.314l-1.996-1.101A.75.75 0 012 14.25v-2a.75.75 0 01.75-.75zm14.5 0a.75.75 0 01.75.75v2a.75.75 0 01-.388.657l-1.996 1.1a.75.75 0 11-.724-1.313l1.608-.887V12.25a.75.75 0 01.75-.75zm-7.25 4a.75.75 0 01.75.75v.73l.888-.49a.75.75 0 01.724 1.313l-2 1.104a.75.75 0 01-.724 0l-2-1.104a.75.75 0 11.724-1.313l.888.49v-.73a.75.75 0 01.75-.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(CubeTransparentIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/CubeIcon.js
        var require_CubeIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/CubeIcon.js"(exports, module) {
                var React2 = require_react();
                function CubeIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10.362 1.093a.75.75 0 00-.724 0L2.523 5.018 10 9.143l7.477-4.125-7.115-3.925zM18 6.443l-7.25 4v8.25l6.862-3.786A.75.75 0 0018 14.25V6.443zm-8.75 12.25v-8.25l-7.25-4v7.807a.75.75 0 00.388.657l6.862 3.786z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(CubeIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/CurrencyBangladeshiIcon.js
        var require_CurrencyBangladeshiIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/CurrencyBangladeshiIcon.js"(exports, module) {
                var React2 = require_react();
                function CurrencyBangladeshiIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10 2a8 8 0 100 16 8 8 0 000-16zM5.94 5.5c.944-.945 2.56-.276 2.56 1.06V8h5.75a.75.75 0 010 1.5H8.5v4.275c0 .296.144.455.26.499a3.5 3.5 0 004.402-1.77h-.412a.75.75 0 010-1.5h.537c.462 0 .887.21 1.156.556.278.355.383.852.184 1.337a5.001 5.001 0 01-6.4 2.78C7.376 15.353 7 14.512 7 13.774V9.5H5.75a.75.75 0 010-1.5H7V6.56l-.22.22a.75.75 0 11-1.06-1.06l.22-.22z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(CurrencyBangladeshiIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/CurrencyDollarIcon.js
        var require_CurrencyDollarIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/CurrencyDollarIcon.js"(exports, module) {
                var React2 = require_react();
                function CurrencyDollarIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M10.75 10.818v2.614A3.13 3.13 0 0011.888 13c.482-.315.612-.648.612-.875 0-.227-.13-.56-.612-.875a3.13 3.13 0 00-1.138-.432zM8.33 8.62c.053.055.115.11.184.164.208.16.46.284.736.363V6.603a2.45 2.45 0 00-.35.13c-.14.065-.27.143-.386.233-.377.292-.514.627-.514.909 0 .184.058.39.202.592.037.051.08.102.128.152z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-6a.75.75 0 01.75.75v.316a3.78 3.78 0 011.653.713c.426.33.744.74.925 1.2a.75.75 0 01-1.395.55 1.35 1.35 0 00-.447-.563 2.187 2.187 0 00-.736-.363V9.3c.698.093 1.383.32 1.959.696.787.514 1.29 1.27 1.29 2.13 0 .86-.504 1.616-1.29 2.13-.576.377-1.261.603-1.96.696v.299a.75.75 0 11-1.5 0v-.3c-.697-.092-1.382-.318-1.958-.695-.482-.315-.857-.717-1.078-1.188a.75.75 0 111.359-.636c.08.173.245.376.54.569.313.205.706.353 1.138.432v-2.748a3.782 3.782 0 01-1.653-.713C6.9 9.433 6.5 8.681 6.5 7.875c0-.805.4-1.558 1.097-2.096a3.78 3.78 0 011.653-.713V4.75A.75.75 0 0110 4z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(CurrencyDollarIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/CurrencyEuroIcon.js
        var require_CurrencyEuroIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/CurrencyEuroIcon.js"(exports, module) {
                var React2 = require_react();
                function CurrencyEuroIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10 18a8 8 0 100-16 8 8 0 000 16zM8.798 7.45c.512-.67 1.135-.95 1.702-.95s1.19.28 1.702.95a.75.75 0 001.192-.91C12.637 5.55 11.596 5 10.5 5s-2.137.55-2.894 1.54A5.205 5.205 0 006.83 8H5.75a.75.75 0 000 1.5h.77a6.333 6.333 0 000 1h-.77a.75.75 0 000 1.5h1.08c.183.528.442 1.023.776 1.46.757.99 1.798 1.54 2.894 1.54s2.137-.55 2.894-1.54a.75.75 0 00-1.192-.91c-.512.67-1.135.95-1.702.95s-1.19-.28-1.702-.95a3.505 3.505 0 01-.343-.55h1.795a.75.75 0 000-1.5H8.026a4.835 4.835 0 010-1h2.224a.75.75 0 000-1.5H8.455c.098-.195.212-.38.343-.55z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(CurrencyEuroIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/CurrencyPoundIcon.js
        var require_CurrencyPoundIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/CurrencyPoundIcon.js"(exports, module) {
                var React2 = require_react();
                function CurrencyPoundIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10 18a8 8 0 100-16 8 8 0 000 16zM8.732 6.232a2.5 2.5 0 013.536 0 .75.75 0 101.06-1.06A4 4 0 006.5 8v.165c0 .364.034.728.1 1.085h-.35a.75.75 0 000 1.5h.737a5.25 5.25 0 01-.367 3.072l-.055.123a.75.75 0 00.848 1.037l1.272-.283a3.493 3.493 0 011.604.021 4.992 4.992 0 002.422 0l.97-.242a.75.75 0 00-.363-1.456l-.971.243a3.491 3.491 0 01-1.694 0 4.992 4.992 0 00-2.258-.038c.19-.811.227-1.651.111-2.477H9.75a.75.75 0 000-1.5H8.136A4.397 4.397 0 018 8.165V8c0-.641.244-1.28.732-1.768z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(CurrencyPoundIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/CurrencyRupeeIcon.js
        var require_CurrencyRupeeIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/CurrencyRupeeIcon.js"(exports, module) {
                var React2 = require_react();
                function CurrencyRupeeIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10 18a8 8 0 100-16 8 8 0 000 16zM6 5.75A.75.75 0 016.75 5h6.5a.75.75 0 010 1.5h-2.127c.4.5.683 1.096.807 1.75h1.32a.75.75 0 010 1.5h-1.32a4.003 4.003 0 01-3.404 3.216l1.754 1.754a.75.75 0 01-1.06 1.06l-3-3a.75.75 0 01.53-1.28H8c1.12 0 2.067-.736 2.386-1.75H6.75a.75.75 0 010-1.5h3.636A2.501 2.501 0 008 6.5H6.75A.75.75 0 016 5.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(CurrencyRupeeIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/CurrencyYenIcon.js
        var require_CurrencyYenIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/CurrencyYenIcon.js"(exports, module) {
                var React2 = require_react();
                function CurrencyYenIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10 18a8 8 0 100-16 8 8 0 000 16zM7.346 5.294a.75.75 0 00-1.192.912L9.056 10H6.75a.75.75 0 000 1.5h2.5v1h-2.5a.75.75 0 000 1.5h2.5v1.25a.75.75 0 001.5 0V14h2.5a.75.75 0 100-1.5h-2.5v-1h2.5a.75.75 0 100-1.5h-2.306l2.902-3.794a.75.75 0 10-1.192-.912L10 8.765l-2.654-3.47z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(CurrencyYenIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/CursorArrowRaysIcon.js
        var require_CursorArrowRaysIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/CursorArrowRaysIcon.js"(exports, module) {
                var React2 = require_react();
                function CursorArrowRaysIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10 1a.75.75 0 01.75.75v1.5a.75.75 0 01-1.5 0v-1.5A.75.75 0 0110 1zM5.05 3.05a.75.75 0 011.06 0l1.062 1.06A.75.75 0 116.11 5.173L5.05 4.11a.75.75 0 010-1.06zm9.9 0a.75.75 0 010 1.06l-1.06 1.062a.75.75 0 01-1.062-1.061l1.061-1.06a.75.75 0 011.06 0zM3 8a.75.75 0 01.75-.75h1.5a.75.75 0 010 1.5h-1.5A.75.75 0 013 8zm11 0a.75.75 0 01.75-.75h1.5a.75.75 0 010 1.5h-1.5A.75.75 0 0114 8zm-6.828 2.828a.75.75 0 010 1.061L6.11 12.95a.75.75 0 01-1.06-1.06l1.06-1.06a.75.75 0 011.06 0zm3.594-3.317a.75.75 0 00-1.37.364l-.492 6.861a.75.75 0 001.204.65l1.043-.799.985 3.678a.75.75 0 001.45-.388l-.978-3.646 1.292.204a.75.75 0 00.74-1.16l-3.874-5.764z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(CursorArrowRaysIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/CursorArrowRippleIcon.js
        var require_CursorArrowRippleIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/CursorArrowRippleIcon.js"(exports, module) {
                var React2 = require_react();
                function CursorArrowRippleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M6.111 11.89A5.5 5.5 0 1115.501 8 .75.75 0 1017 8a7 7 0 10-11.95 4.95.75.75 0 001.06-1.06zm2.121-5.658a2.5 2.5 0 000 3.536.75.75 0 11-1.06 1.06A4 4 0 1114 8a.75.75 0 01-1.5 0 2.5 2.5 0 00-4.268-1.768zm2.534 1.279a.75.75 0 00-1.37.364l-.492 6.861a.75.75 0 001.204.65l1.043-.799.985 3.678a.75.75 0 001.45-.388l-.978-3.646 1.292.204a.75.75 0 00.74-1.16l-3.874-5.764z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(CursorArrowRippleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/DevicePhoneMobileIcon.js
        var require_DevicePhoneMobileIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/DevicePhoneMobileIcon.js"(exports, module) {
                var React2 = require_react();
                function DevicePhoneMobileIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M8 16.25a.75.75 0 01.75-.75h2.5a.75.75 0 010 1.5h-2.5a.75.75 0 01-.75-.75z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M4 4a3 3 0 013-3h6a3 3 0 013 3v12a3 3 0 01-3 3H7a3 3 0 01-3-3V4zm4-1.5v.75c0 .414.336.75.75.75h2.5a.75.75 0 00.75-.75V2.5h1A1.5 1.5 0 0114.5 4v12a1.5 1.5 0 01-1.5 1.5H7A1.5 1.5 0 015.5 16V4A1.5 1.5 0 017 2.5h1z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(DevicePhoneMobileIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/DeviceTabletIcon.js
        var require_DeviceTabletIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/DeviceTabletIcon.js"(exports, module) {
                var React2 = require_react();
                function DeviceTabletIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M5 1a3 3 0 00-3 3v12a3 3 0 003 3h10a3 3 0 003-3V4a3 3 0 00-3-3H5zM3.5 4A1.5 1.5 0 015 2.5h10A1.5 1.5 0 0116.5 4v12a1.5 1.5 0 01-1.5 1.5H5A1.5 1.5 0 013.5 16V4zm5.25 11.5a.75.75 0 000 1.5h2.5a.75.75 0 000-1.5h-2.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(DeviceTabletIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/DocumentArrowDownIcon.js
        var require_DocumentArrowDownIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/DocumentArrowDownIcon.js"(exports, module) {
                var React2 = require_react();
                function DocumentArrowDownIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M4.5 2A1.5 1.5 0 003 3.5v13A1.5 1.5 0 004.5 18h11a1.5 1.5 0 001.5-1.5V7.621a1.5 1.5 0 00-.44-1.06l-4.12-4.122A1.5 1.5 0 0011.378 2H4.5zm4.75 6.75a.75.75 0 011.5 0v2.546l.943-1.048a.75.75 0 011.114 1.004l-2.25 2.5a.75.75 0 01-1.114 0l-2.25-2.5a.75.75 0 111.114-1.004l.943 1.048V8.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(DocumentArrowDownIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/DocumentArrowUpIcon.js
        var require_DocumentArrowUpIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/DocumentArrowUpIcon.js"(exports, module) {
                var React2 = require_react();
                function DocumentArrowUpIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M4.5 2A1.5 1.5 0 003 3.5v13A1.5 1.5 0 004.5 18h11a1.5 1.5 0 001.5-1.5V7.621a1.5 1.5 0 00-.44-1.06l-4.12-4.122A1.5 1.5 0 0011.378 2H4.5zm4.75 11.25a.75.75 0 001.5 0v-2.546l.943 1.048a.75.75 0 101.114-1.004l-2.25-2.5a.75.75 0 00-1.114 0l-2.25 2.5a.75.75 0 101.114 1.004l.943-1.048v2.546z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(DocumentArrowUpIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/DocumentChartBarIcon.js
        var require_DocumentChartBarIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/DocumentChartBarIcon.js"(exports, module) {
                var React2 = require_react();
                function DocumentChartBarIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M3 3.5A1.5 1.5 0 014.5 2h6.879a1.5 1.5 0 011.06.44l4.122 4.12A1.5 1.5 0 0117 7.622V16.5a1.5 1.5 0 01-1.5 1.5h-11A1.5 1.5 0 013 16.5v-13zM13.25 9a.75.75 0 01.75.75v4.5a.75.75 0 01-1.5 0v-4.5a.75.75 0 01.75-.75zm-6.5 4a.75.75 0 01.75.75v.5a.75.75 0 01-1.5 0v-.5a.75.75 0 01.75-.75zm4-1.25a.75.75 0 00-1.5 0v2.5a.75.75 0 001.5 0v-2.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(DocumentChartBarIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/DocumentCheckIcon.js
        var require_DocumentCheckIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/DocumentCheckIcon.js"(exports, module) {
                var React2 = require_react();
                function DocumentCheckIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M3 3.5A1.5 1.5 0 014.5 2h6.879a1.5 1.5 0 011.06.44l4.122 4.12A1.5 1.5 0 0117 7.622V16.5a1.5 1.5 0 01-1.5 1.5h-11A1.5 1.5 0 013 16.5v-13zm10.857 5.691a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 00-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(DocumentCheckIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/DocumentDuplicateIcon.js
        var require_DocumentDuplicateIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/DocumentDuplicateIcon.js"(exports, module) {
                var React2 = require_react();
                function DocumentDuplicateIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M7 3.5A1.5 1.5 0 018.5 2h3.879a1.5 1.5 0 011.06.44l3.122 3.12A1.5 1.5 0 0117 6.622V12.5a1.5 1.5 0 01-1.5 1.5h-1v-3.379a3 3 0 00-.879-2.121L10.5 5.379A3 3 0 008.379 4.5H7v-1z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M4.5 6A1.5 1.5 0 003 7.5v9A1.5 1.5 0 004.5 18h7a1.5 1.5 0 001.5-1.5v-5.879a1.5 1.5 0 00-.44-1.06L9.44 6.439A1.5 1.5 0 008.378 6H4.5z"
                    }));
                }
                var ForwardRef = React2.forwardRef(DocumentDuplicateIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/DocumentMagnifyingGlassIcon.js
        var require_DocumentMagnifyingGlassIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/DocumentMagnifyingGlassIcon.js"(exports, module) {
                var React2 = require_react();
                function DocumentMagnifyingGlassIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M8 10a1.5 1.5 0 113 0 1.5 1.5 0 01-3 0z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M4.5 2A1.5 1.5 0 003 3.5v13A1.5 1.5 0 004.5 18h11a1.5 1.5 0 001.5-1.5V7.621a1.5 1.5 0 00-.44-1.06l-4.12-4.122A1.5 1.5 0 0011.378 2H4.5zm5 5a3 3 0 101.524 5.585l1.196 1.195a.75.75 0 101.06-1.06l-1.195-1.196A3 3 0 009.5 7z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(DocumentMagnifyingGlassIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/DocumentMinusIcon.js
        var require_DocumentMinusIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/DocumentMinusIcon.js"(exports, module) {
                var React2 = require_react();
                function DocumentMinusIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M4.5 2A1.5 1.5 0 003 3.5v13A1.5 1.5 0 004.5 18h11a1.5 1.5 0 001.5-1.5V7.621a1.5 1.5 0 00-.44-1.06l-4.12-4.122A1.5 1.5 0 0011.378 2H4.5zm7.75 9.75a.75.75 0 000-1.5h-4.5a.75.75 0 000 1.5h4.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(DocumentMinusIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/DocumentPlusIcon.js
        var require_DocumentPlusIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/DocumentPlusIcon.js"(exports, module) {
                var React2 = require_react();
                function DocumentPlusIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M4.5 2A1.5 1.5 0 003 3.5v13A1.5 1.5 0 004.5 18h11a1.5 1.5 0 001.5-1.5V7.621a1.5 1.5 0 00-.44-1.06l-4.12-4.122A1.5 1.5 0 0011.378 2H4.5zM10 8a.75.75 0 01.75.75v1.5h1.5a.75.75 0 010 1.5h-1.5v1.5a.75.75 0 01-1.5 0v-1.5h-1.5a.75.75 0 010-1.5h1.5v-1.5A.75.75 0 0110 8z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(DocumentPlusIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/DocumentTextIcon.js
        var require_DocumentTextIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/DocumentTextIcon.js"(exports, module) {
                var React2 = require_react();
                function DocumentTextIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M4.5 2A1.5 1.5 0 003 3.5v13A1.5 1.5 0 004.5 18h11a1.5 1.5 0 001.5-1.5V7.621a1.5 1.5 0 00-.44-1.06l-4.12-4.122A1.5 1.5 0 0011.378 2H4.5zm2.25 8.5a.75.75 0 000 1.5h6.5a.75.75 0 000-1.5h-6.5zm0 3a.75.75 0 000 1.5h6.5a.75.75 0 000-1.5h-6.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(DocumentTextIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/DocumentIcon.js
        var require_DocumentIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/DocumentIcon.js"(exports, module) {
                var React2 = require_react();
                function DocumentIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M3 3.5A1.5 1.5 0 014.5 2h6.879a1.5 1.5 0 011.06.44l4.122 4.12A1.5 1.5 0 0117 7.622V16.5a1.5 1.5 0 01-1.5 1.5h-11A1.5 1.5 0 013 16.5v-13z"
                    }));
                }
                var ForwardRef = React2.forwardRef(DocumentIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/EllipsisHorizontalCircleIcon.js
        var require_EllipsisHorizontalCircleIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/EllipsisHorizontalCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function EllipsisHorizontalCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M2 10a8 8 0 1116 0 8 8 0 01-16 0zm8 1a1 1 0 100-2 1 1 0 000 2zm-3-1a1 1 0 11-2 0 1 1 0 012 0zm7 1a1 1 0 100-2 1 1 0 000 2z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(EllipsisHorizontalCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/EllipsisHorizontalIcon.js
        var require_EllipsisHorizontalIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/EllipsisHorizontalIcon.js"(exports, module) {
                var React2 = require_react();
                function EllipsisHorizontalIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M3 10a1.5 1.5 0 113 0 1.5 1.5 0 01-3 0zM8.5 10a1.5 1.5 0 113 0 1.5 1.5 0 01-3 0zM15.5 8.5a1.5 1.5 0 100 3 1.5 1.5 0 000-3z"
                    }));
                }
                var ForwardRef = React2.forwardRef(EllipsisHorizontalIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/EllipsisVerticalIcon.js
        var require_EllipsisVerticalIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/EllipsisVerticalIcon.js"(exports, module) {
                var React2 = require_react();
                function EllipsisVerticalIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M10 3a1.5 1.5 0 110 3 1.5 1.5 0 010-3zM10 8.5a1.5 1.5 0 110 3 1.5 1.5 0 010-3zM11.5 15.5a1.5 1.5 0 10-3 0 1.5 1.5 0 003 0z"
                    }));
                }
                var ForwardRef = React2.forwardRef(EllipsisVerticalIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/EnvelopeOpenIcon.js
        var require_EnvelopeOpenIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/EnvelopeOpenIcon.js"(exports, module) {
                var React2 = require_react();
                function EnvelopeOpenIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M2.106 6.447A2 2 0 001 8.237V16a2 2 0 002 2h14a2 2 0 002-2V8.236a2 2 0 00-1.106-1.789l-7-3.5a2 2 0 00-1.788 0l-7 3.5zm1.48 4.007a.75.75 0 00-.671 1.342l5.855 2.928a2.75 2.75 0 002.46 0l5.852-2.926a.75.75 0 10-.67-1.342l-5.853 2.926a1.25 1.25 0 01-1.118 0l-5.856-2.928z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(EnvelopeOpenIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/EnvelopeIcon.js
        var require_EnvelopeIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/EnvelopeIcon.js"(exports, module) {
                var React2 = require_react();
                function EnvelopeIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M3 4a2 2 0 00-2 2v1.161l8.441 4.221a1.25 1.25 0 001.118 0L19 7.162V6a2 2 0 00-2-2H3z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M19 8.839l-7.77 3.885a2.75 2.75 0 01-2.46 0L1 8.839V14a2 2 0 002 2h14a2 2 0 002-2V8.839z"
                    }));
                }
                var ForwardRef = React2.forwardRef(EnvelopeIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ExclamationCircleIcon.js
        var require_ExclamationCircleIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ExclamationCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function ExclamationCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-5a.75.75 0 01.75.75v4.5a.75.75 0 01-1.5 0v-4.5A.75.75 0 0110 5zm0 10a1 1 0 100-2 1 1 0 000 2z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ExclamationCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ExclamationTriangleIcon.js
        var require_ExclamationTriangleIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ExclamationTriangleIcon.js"(exports, module) {
                var React2 = require_react();
                function ExclamationTriangleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M8.485 2.495c.673-1.167 2.357-1.167 3.03 0l6.28 10.875c.673 1.167-.17 2.625-1.516 2.625H3.72c-1.347 0-2.189-1.458-1.515-2.625L8.485 2.495zM10 5a.75.75 0 01.75.75v3.5a.75.75 0 01-1.5 0v-3.5A.75.75 0 0110 5zm0 9a1 1 0 100-2 1 1 0 000 2z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ExclamationTriangleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/EyeDropperIcon.js
        var require_EyeDropperIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/EyeDropperIcon.js"(exports, module) {
                var React2 = require_react();
                function EyeDropperIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M12.1 3.667a3.502 3.502 0 116.782 1.738 3.487 3.487 0 01-.907 1.57 3.495 3.495 0 01-1.617.919L16 7.99V10a.75.75 0 01-.22.53l-.25.25a.75.75 0 01-1.06 0l-.845-.844L7.22 16.34A2.25 2.25 0 015.629 17H5.12a.75.75 0 00-.53.22l-1.56 1.56a.75.75 0 01-1.061 0l-.75-.75a.75.75 0 010-1.06l1.56-1.561a.75.75 0 00.22-.53v-.508c0-.596.237-1.169.659-1.59l6.405-6.406-.844-.845a.75.75 0 010-1.06l.25-.25A.75.75 0 0110 4h2.01l.09-.333zM4.72 13.84l6.405-6.405 1.44 1.439-6.406 6.405a.75.75 0 01-.53.22H5.12c-.258 0-.511.044-.75.129a2.25 2.25 0 00.129-.75v-.508a.75.75 0 01.22-.53z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(EyeDropperIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/EyeSlashIcon.js
        var require_EyeSlashIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/EyeSlashIcon.js"(exports, module) {
                var React2 = require_react();
                function EyeSlashIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M3.28 2.22a.75.75 0 00-1.06 1.06l14.5 14.5a.75.75 0 101.06-1.06l-1.745-1.745a10.029 10.029 0 003.3-4.38 1.651 1.651 0 000-1.185A10.004 10.004 0 009.999 3a9.956 9.956 0 00-4.744 1.194L3.28 2.22zM7.752 6.69l1.092 1.092a2.5 2.5 0 013.374 3.373l1.091 1.092a4 4 0 00-5.557-5.557z",
                        clipRule: "evenodd"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M10.748 13.93l2.523 2.523a9.987 9.987 0 01-3.27.547c-4.258 0-7.894-2.66-9.337-6.41a1.651 1.651 0 010-1.186A10.007 10.007 0 012.839 6.02L6.07 9.252a4 4 0 004.678 4.678z"
                    }));
                }
                var ForwardRef = React2.forwardRef(EyeSlashIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/EyeIcon.js
        var require_EyeIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/EyeIcon.js"(exports, module) {
                var React2 = require_react();
                function EyeIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M10 12.5a2.5 2.5 0 100-5 2.5 2.5 0 000 5z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M.664 10.59a1.651 1.651 0 010-1.186A10.004 10.004 0 0110 3c4.257 0 7.893 2.66 9.336 6.41.147.381.146.804 0 1.186A10.004 10.004 0 0110 17c-4.257 0-7.893-2.66-9.336-6.41zM14 10a4 4 0 11-8 0 4 4 0 018 0z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(EyeIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/FaceFrownIcon.js
        var require_FaceFrownIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/FaceFrownIcon.js"(exports, module) {
                var React2 = require_react();
                function FaceFrownIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10 18a8 8 0 100-16 8 8 0 000 16zm-3.536-3.475a.75.75 0 001.061 0 3.5 3.5 0 014.95 0 .75.75 0 101.06-1.06 5 5 0 00-7.07 0 .75.75 0 000 1.06zM9 8.5c0 .828-.448 1.5-1 1.5s-1-.672-1-1.5S7.448 7 8 7s1 .672 1 1.5zm3 1.5c.552 0 1-.672 1-1.5S12.552 7 12 7s-1 .672-1 1.5.448 1.5 1 1.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(FaceFrownIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/FaceSmileIcon.js
        var require_FaceSmileIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/FaceSmileIcon.js"(exports, module) {
                var React2 = require_react();
                function FaceSmileIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10 18a8 8 0 100-16 8 8 0 000 16zm3.536-4.464a.75.75 0 10-1.061-1.061 3.5 3.5 0 01-4.95 0 .75.75 0 00-1.06 1.06 5 5 0 007.07 0zM9 8.5c0 .828-.448 1.5-1 1.5s-1-.672-1-1.5S7.448 7 8 7s1 .672 1 1.5zm3 1.5c.552 0 1-.672 1-1.5S12.552 7 12 7s-1 .672-1 1.5.448 1.5 1 1.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(FaceSmileIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/FilmIcon.js
        var require_FilmIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/FilmIcon.js"(exports, module) {
                var React2 = require_react();
                function FilmIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M1 4.75C1 3.784 1.784 3 2.75 3h14.5c.966 0 1.75.784 1.75 1.75v10.515a1.75 1.75 0 01-1.75 1.75h-1.5c-.078 0-.155-.005-.23-.015H4.48c-.075.01-.152.015-.23.015h-1.5A1.75 1.75 0 011 15.265V4.75zm16.5 7.385V11.01a.25.25 0 00-.25-.25h-1.5a.25.25 0 00-.25.25v1.125c0 .138.112.25.25.25h1.5a.25.25 0 00.25-.25zm0 2.005a.25.25 0 00-.25-.25h-1.5a.25.25 0 00-.25.25v1.125c0 .108.069.2.165.235h1.585a.25.25 0 00.25-.25v-1.11zm-15 1.11v-1.11a.25.25 0 01.25-.25h1.5a.25.25 0 01.25.25v1.125a.25.25 0 01-.164.235H2.75a.25.25 0 01-.25-.25zm2-4.24v1.125a.25.25 0 01-.25.25h-1.5a.25.25 0 01-.25-.25V11.01a.25.25 0 01.25-.25h1.5a.25.25 0 01.25.25zm13-2.005V7.88a.25.25 0 00-.25-.25h-1.5a.25.25 0 00-.25.25v1.125c0 .138.112.25.25.25h1.5a.25.25 0 00.25-.25zM4.25 7.63a.25.25 0 01.25.25v1.125a.25.25 0 01-.25.25h-1.5a.25.25 0 01-.25-.25V7.88a.25.25 0 01.25-.25h1.5zm0-3.13a.25.25 0 01.25.25v1.125a.25.25 0 01-.25.25h-1.5a.25.25 0 01-.25-.25V4.75a.25.25 0 01.25-.25h1.5zm11.5 1.625a.25.25 0 01-.25-.25V4.75a.25.25 0 01.25-.25h1.5a.25.25 0 01.25.25v1.125a.25.25 0 01-.25.25h-1.5zm-9 3.125a.75.75 0 000 1.5h6.5a.75.75 0 000-1.5h-6.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(FilmIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/FingerPrintIcon.js
        var require_FingerPrintIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/FingerPrintIcon.js"(exports, module) {
                var React2 = require_react();
                function FingerPrintIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10 2.5c-1.31 0-2.526.386-3.546 1.051a.75.75 0 01-.82-1.256A8 8 0 0118 9a22.47 22.47 0 01-1.228 7.351.75.75 0 11-1.417-.49A20.97 20.97 0 0016.5 9 6.5 6.5 0 0010 2.5zM4.333 4.416a.75.75 0 01.218 1.038A6.466 6.466 0 003.5 9a7.966 7.966 0 01-1.293 4.362.75.75 0 01-1.257-.819A6.466 6.466 0 002 9c0-1.61.476-3.11 1.295-4.365a.75.75 0 011.038-.219zM10 6.12a3 3 0 00-3.001 3.041 11.455 11.455 0 01-2.697 7.24.75.75 0 01-1.148-.965A9.957 9.957 0 005.5 9c0-.028.002-.055.004-.082a4.5 4.5 0 018.996.084V9.15l-.005.297a.75.75 0 11-1.5-.034c.003-.11.004-.219.005-.328a3 3 0 00-3-2.965zm0 2.13a.75.75 0 01.75.75c0 3.51-1.187 6.745-3.181 9.323a.75.75 0 11-1.186-.918A13.687 13.687 0 009.25 9a.75.75 0 01.75-.75zm3.529 3.698a.75.75 0 01.584.885 18.883 18.883 0 01-2.257 5.84.75.75 0 11-1.29-.764 17.386 17.386 0 002.078-5.377.75.75 0 01.885-.584z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(FingerPrintIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/FireIcon.js
        var require_FireIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/FireIcon.js"(exports, module) {
                var React2 = require_react();
                function FireIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M13.5 4.938a7 7 0 11-9.006 1.737c.202-.257.59-.218.793.039.278.352.594.672.943.954.332.269.786-.049.773-.476a5.977 5.977 0 01.572-2.759 6.026 6.026 0 012.486-2.665c.247-.14.55-.016.677.238A6.967 6.967 0 0013.5 4.938zM14 12a4 4 0 01-4 4c-1.913 0-3.52-1.398-3.91-3.182-.093-.429.44-.643.814-.413a4.043 4.043 0 001.601.564c.303.038.531-.24.51-.544a5.975 5.975 0 011.315-4.192.447.447 0 01.431-.16A4.001 4.001 0 0114 12z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(FireIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/FlagIcon.js
        var require_FlagIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/FlagIcon.js"(exports, module) {
                var React2 = require_react();
                function FlagIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M3.5 2.75a.75.75 0 00-1.5 0v14.5a.75.75 0 001.5 0v-4.392l1.657-.348a6.449 6.449 0 014.271.572 7.948 7.948 0 005.965.524l2.078-.64A.75.75 0 0018 12.25v-8.5a.75.75 0 00-.904-.734l-2.38.501a7.25 7.25 0 01-4.186-.363l-.502-.2a8.75 8.75 0 00-5.053-.439l-1.475.31V2.75z"
                    }));
                }
                var ForwardRef = React2.forwardRef(FlagIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/FolderArrowDownIcon.js
        var require_FolderArrowDownIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/FolderArrowDownIcon.js"(exports, module) {
                var React2 = require_react();
                function FolderArrowDownIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M2 4.75C2 3.784 2.784 3 3.75 3h4.836c.464 0 .909.184 1.237.513l1.414 1.414a.25.25 0 00.177.073h4.836c.966 0 1.75.784 1.75 1.75v8.5A1.75 1.75 0 0116.25 17H3.75A1.75 1.75 0 012 15.25V4.75zm8.75 4a.75.75 0 00-1.5 0v2.546l-.943-1.048a.75.75 0 10-1.114 1.004l2.25 2.5a.75.75 0 001.114 0l2.25-2.5a.75.75 0 10-1.114-1.004l-.943 1.048V8.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(FolderArrowDownIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/FolderMinusIcon.js
        var require_FolderMinusIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/FolderMinusIcon.js"(exports, module) {
                var React2 = require_react();
                function FolderMinusIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M2 4.75C2 3.784 2.784 3 3.75 3h4.836c.464 0 .909.184 1.237.513l1.414 1.414a.25.25 0 00.177.073h4.836c.966 0 1.75.784 1.75 1.75v8.5A1.75 1.75 0 0116.25 17H3.75A1.75 1.75 0 012 15.25V4.75zm10.25 7a.75.75 0 000-1.5h-4.5a.75.75 0 000 1.5h4.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(FolderMinusIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/FolderOpenIcon.js
        var require_FolderOpenIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/FolderOpenIcon.js"(exports, module) {
                var React2 = require_react();
                function FolderOpenIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M4.75 3A1.75 1.75 0 003 4.75v2.752l.104-.002h13.792c.035 0 .07 0 .104.002V6.75A1.75 1.75 0 0015.25 5h-3.836a.25.25 0 01-.177-.073L9.823 3.513A1.75 1.75 0 008.586 3H4.75zM3.104 9a1.75 1.75 0 00-1.673 2.265l1.385 4.5A1.75 1.75 0 004.488 17h11.023a1.75 1.75 0 001.673-1.235l1.384-4.5A1.75 1.75 0 0016.896 9H3.104z"
                    }));
                }
                var ForwardRef = React2.forwardRef(FolderOpenIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/FolderPlusIcon.js
        var require_FolderPlusIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/FolderPlusIcon.js"(exports, module) {
                var React2 = require_react();
                function FolderPlusIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M3.75 3A1.75 1.75 0 002 4.75v10.5c0 .966.784 1.75 1.75 1.75h12.5A1.75 1.75 0 0018 15.25v-8.5A1.75 1.75 0 0016.25 5h-4.836a.25.25 0 01-.177-.073L9.823 3.513A1.75 1.75 0 008.586 3H3.75zM10 8a.75.75 0 01.75.75v1.5h1.5a.75.75 0 010 1.5h-1.5v1.5a.75.75 0 01-1.5 0v-1.5h-1.5a.75.75 0 010-1.5h1.5v-1.5A.75.75 0 0110 8z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(FolderPlusIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/FolderIcon.js
        var require_FolderIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/FolderIcon.js"(exports, module) {
                var React2 = require_react();
                function FolderIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M3.75 3A1.75 1.75 0 002 4.75v3.26a3.235 3.235 0 011.75-.51h12.5c.644 0 1.245.188 1.75.51V6.75A1.75 1.75 0 0016.25 5h-4.836a.25.25 0 01-.177-.073L9.823 3.513A1.75 1.75 0 008.586 3H3.75zM3.75 9A1.75 1.75 0 002 10.75v4.5c0 .966.784 1.75 1.75 1.75h12.5A1.75 1.75 0 0018 15.25v-4.5A1.75 1.75 0 0016.25 9H3.75z"
                    }));
                }
                var ForwardRef = React2.forwardRef(FolderIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ForwardIcon.js
        var require_ForwardIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ForwardIcon.js"(exports, module) {
                var React2 = require_react();
                function ForwardIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M3.288 4.819A1.5 1.5 0 001 6.095v7.81a1.5 1.5 0 002.288 1.277l6.323-3.905c.155-.096.285-.213.389-.344v2.973a1.5 1.5 0 002.288 1.276l6.323-3.905a1.5 1.5 0 000-2.553L12.288 4.82A1.5 1.5 0 0010 6.095v2.973a1.506 1.506 0 00-.389-.344L3.288 4.82z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ForwardIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/FunnelIcon.js
        var require_FunnelIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/FunnelIcon.js"(exports, module) {
                var React2 = require_react();
                function FunnelIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M2.628 1.601C5.028 1.206 7.49 1 10 1s4.973.206 7.372.601a.75.75 0 01.628.74v2.288a2.25 2.25 0 01-.659 1.59l-4.682 4.683a2.25 2.25 0 00-.659 1.59v3.037c0 .684-.31 1.33-.844 1.757l-1.937 1.55A.75.75 0 018 18.25v-5.757a2.25 2.25 0 00-.659-1.591L2.659 6.22A2.25 2.25 0 012 4.629V2.34a.75.75 0 01.628-.74z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(FunnelIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/GifIcon.js
        var require_GifIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/GifIcon.js"(exports, module) {
                var React2 = require_react();
                function GifIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M1 5.25A2.25 2.25 0 013.25 3h13.5A2.25 2.25 0 0119 5.25v9.5A2.25 2.25 0 0116.75 17H3.25A2.25 2.25 0 011 14.75v-9.5zm4.026 2.879C5.356 7.65 5.72 7.5 6 7.5s.643.15.974.629a.75.75 0 001.234-.854C7.66 6.484 6.873 6 6 6c-.873 0-1.66.484-2.208 1.275C3.25 8.059 3 9.048 3 10c0 .952.25 1.941.792 2.725C4.34 13.516 5.127 14 6 14c.873 0 1.66-.484 2.208-1.275a.75.75 0 00.133-.427V10a.75.75 0 00-.75-.75H6.25a.75.75 0 000 1.5h.591v1.295c-.293.342-.6.455-.841.455-.279 0-.643-.15-.974-.629C4.69 11.386 4.5 10.711 4.5 10c0-.711.19-1.386.526-1.871zM10.75 6a.75.75 0 01.75.75v6.5a.75.75 0 01-1.5 0v-6.5a.75.75 0 01.75-.75zm3 0h2.5a.75.75 0 010 1.5H14.5v1.75h.75a.75.75 0 010 1.5h-.75v2.5a.75.75 0 01-1.5 0v-6.5a.75.75 0 01.75-.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(GifIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/GiftTopIcon.js
        var require_GiftTopIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/GiftTopIcon.js"(exports, module) {
                var React2 = require_react();
                function GiftTopIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M9.25 3H3.5A1.5 1.5 0 002 4.5v4.75h3.365A2.75 2.75 0 019.25 5.362V3zM2 10.75v4.75A1.5 1.5 0 003.5 17h5.75v-4.876A4.75 4.75 0 015 14.75a.75.75 0 010-1.5 3.251 3.251 0 003.163-2.5H2zM10.75 17h5.75a1.5 1.5 0 001.5-1.5v-4.75h-6.163A3.251 3.251 0 0015 13.25a.75.75 0 010 1.5 4.75 4.75 0 01-4.25-2.626V17zM18 9.25V4.5A1.5 1.5 0 0016.5 3h-5.75v2.362a2.75 2.75 0 013.885 3.888H18zm-4.496-2.755a1.25 1.25 0 00-1.768 0c-.36.359-.526.999-.559 1.697-.01.228-.006.443.004.626.183.01.398.014.626.003.698-.033 1.338-.2 1.697-.559a1.25 1.25 0 000-1.767zm-5.24 0a1.25 1.25 0 00-1.768 1.767c.36.36 1 .526 1.697.56.228.01.443.006.626-.004.01-.183.015-.398.004-.626-.033-.698-.2-1.338-.56-1.697z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(GiftTopIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/GiftIcon.js
        var require_GiftIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/GiftIcon.js"(exports, module) {
                var React2 = require_react();
                function GiftIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M14 6a2.5 2.5 0 00-4-3 2.5 2.5 0 00-4 3H3.25C2.56 6 2 6.56 2 7.25v.5C2 8.44 2.56 9 3.25 9h6V6h1.5v3h6C17.44 9 18 8.44 18 7.75v-.5C18 6.56 17.44 6 16.75 6H14zm-1-1.5a1 1 0 01-1 1h-1v-1a1 1 0 112 0zm-6 0a1 1 0 001 1h1v-1a1 1 0 00-2 0z",
                        clipRule: "evenodd"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M9.25 10.5H3v4.75A2.75 2.75 0 005.75 18h3.5v-7.5zM10.75 18v-7.5H17v4.75A2.75 2.75 0 0114.25 18h-3.5z"
                    }));
                }
                var ForwardRef = React2.forwardRef(GiftIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/GlobeAltIcon.js
        var require_GlobeAltIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/GlobeAltIcon.js"(exports, module) {
                var React2 = require_react();
                function GlobeAltIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M16.555 5.412a8.028 8.028 0 00-3.503-2.81 14.899 14.899 0 011.663 4.472 8.547 8.547 0 001.84-1.662zM13.326 7.825a13.43 13.43 0 00-2.413-5.773 8.087 8.087 0 00-1.826 0 13.43 13.43 0 00-2.413 5.773A8.473 8.473 0 0010 8.5c1.18 0 2.304-.24 3.326-.675zM6.514 9.376A9.98 9.98 0 0010 10c1.226 0 2.4-.22 3.486-.624a13.54 13.54 0 01-.351 3.759A13.54 13.54 0 0110 13.5c-1.079 0-2.128-.127-3.134-.366a13.538 13.538 0 01-.352-3.758zM5.285 7.074a14.9 14.9 0 011.663-4.471 8.028 8.028 0 00-3.503 2.81c.529.638 1.149 1.199 1.84 1.66zM17.334 6.798a7.973 7.973 0 01.614 4.115 13.47 13.47 0 01-3.178 1.72 15.093 15.093 0 00.174-3.939 10.043 10.043 0 002.39-1.896zM2.666 6.798a10.042 10.042 0 002.39 1.896 15.196 15.196 0 00.174 3.94 13.472 13.472 0 01-3.178-1.72 7.973 7.973 0 01.615-4.115zM10 15c.898 0 1.778-.079 2.633-.23a13.473 13.473 0 01-1.72 3.178 8.099 8.099 0 01-1.826 0 13.47 13.47 0 01-1.72-3.178c.855.151 1.735.23 2.633.23zM14.357 14.357a14.912 14.912 0 01-1.305 3.04 8.027 8.027 0 004.345-4.345c-.953.542-1.971.981-3.04 1.305zM6.948 17.397a8.027 8.027 0 01-4.345-4.345c.953.542 1.971.981 3.04 1.305a14.912 14.912 0 001.305 3.04z"
                    }));
                }
                var ForwardRef = React2.forwardRef(GlobeAltIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/GlobeAmericasIcon.js
        var require_GlobeAmericasIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/GlobeAmericasIcon.js"(exports, module) {
                var React2 = require_react();
                function GlobeAmericasIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-1.5 0a6.5 6.5 0 11-11-4.69v.447a3.5 3.5 0 001.025 2.475L8.293 10 8 10.293a1 1 0 000 1.414l1.06 1.06a1.5 1.5 0 01.44 1.061v.363a1 1 0 00.553.894l.276.139a1 1 0 001.342-.448l1.454-2.908a1.5 1.5 0 00-.281-1.731l-.772-.772a1 1 0 00-1.023-.242l-.384.128a.5.5 0 01-.606-.25l-.296-.592a.481.481 0 01.646-.646l.262.131a1 1 0 00.447.106h.188a1 1 0 00.949-1.316l-.068-.204a.5.5 0 01.149-.538l1.44-1.234A6.492 6.492 0 0116.5 10z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(GlobeAmericasIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/GlobeAsiaAustraliaIcon.js
        var require_GlobeAsiaAustraliaIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/GlobeAsiaAustraliaIcon.js"(exports, module) {
                var React2 = require_react();
                function GlobeAsiaAustraliaIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-6.5 6.326a6.52 6.52 0 01-1.5.174 6.487 6.487 0 01-5.011-2.36l.49-.98a.423.423 0 01.614-.164l.294.196a.992.992 0 001.491-1.139l-.197-.593a.252.252 0 01.126-.304l1.973-.987a.938.938 0 00.361-1.359.375.375 0 01.239-.576l.125-.025A2.421 2.421 0 0012.327 6.6l.05-.149a1 1 0 00-.242-1.023l-1.489-1.489a.5.5 0 01-.146-.353v-.067a6.5 6.5 0 015.392 9.23 1.398 1.398 0 00-.68-.244l-.566-.566a1.5 1.5 0 00-1.06-.439h-.172a1.5 1.5 0 00-1.06.44l-.593.592a.501.501 0 01-.13.093l-1.578.79a1 1 0 00-.553.894v.191a1 1 0 001 1h.5a.5.5 0 01.5.5v.326z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(GlobeAsiaAustraliaIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/GlobeEuropeAfricaIcon.js
        var require_GlobeEuropeAfricaIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/GlobeEuropeAfricaIcon.js"(exports, module) {
                var React2 = require_react();
                function GlobeEuropeAfricaIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-1.503.204A6.5 6.5 0 117.95 3.83L6.927 5.62a1.453 1.453 0 001.91 2.02l.175-.087a.5.5 0 01.224-.053h.146a.5.5 0 01.447.724l-.028.055a.4.4 0 01-.357.221h-.502a2.26 2.26 0 00-1.88 1.006l-.044.066a2.099 2.099 0 001.085 3.156.58.58 0 01.397.547v1.05a1.175 1.175 0 002.093.734l1.611-2.014c.192-.24.296-.536.296-.842 0-.316.128-.624.353-.85a1.363 1.363 0 00.173-1.716l-.464-.696a.369.369 0 01.527-.499l.343.257c.316.237.738.275 1.091.098a.586.586 0 01.677.11l1.297 1.297z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(GlobeEuropeAfricaIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/HandRaisedIcon.js
        var require_HandRaisedIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/HandRaisedIcon.js"(exports, module) {
                var React2 = require_react();
                function HandRaisedIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M11 2a1 1 0 10-2 0v6.5a.5.5 0 01-1 0V3a1 1 0 10-2 0v5.5a.5.5 0 01-1 0V5a1 1 0 10-2 0v7a7 7 0 1014 0V8a1 1 0 10-2 0v3.5a.5.5 0 01-1 0V3a1 1 0 10-2 0v5.5a.5.5 0 01-1 0V2z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(HandRaisedIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/HandThumbDownIcon.js
        var require_HandThumbDownIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/HandThumbDownIcon.js"(exports, module) {
                var React2 = require_react();
                function HandThumbDownIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M18.905 12.75a1.25 1.25 0 01-2.5 0v-7.5a1.25 1.25 0 112.5 0v7.5zM8.905 17v1.3c0 .268-.14.526-.395.607A2 2 0 015.905 17c0-.995.182-1.948.514-2.826.204-.54-.166-1.174-.744-1.174h-2.52c-1.242 0-2.26-1.01-2.146-2.247.193-2.08.652-4.082 1.341-5.974C2.752 3.678 3.833 3 5.005 3h3.192a3 3 0 011.342.317l2.733 1.366A3 3 0 0013.613 5h1.292v7h-.963c-.684 0-1.258.482-1.612 1.068a4.012 4.012 0 01-2.165 1.73c-.433.143-.854.386-1.012.814-.16.432-.248.9-.248 1.388z"
                    }));
                }
                var ForwardRef = React2.forwardRef(HandThumbDownIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/HandThumbUpIcon.js
        var require_HandThumbUpIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/HandThumbUpIcon.js"(exports, module) {
                var React2 = require_react();
                function HandThumbUpIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M1 8.25a1.25 1.25 0 112.5 0v7.5a1.25 1.25 0 11-2.5 0v-7.5zM11 3V1.7c0-.268.14-.526.395-.607A2 2 0 0114 3c0 .995-.182 1.948-.514 2.826-.204.54.166 1.174.744 1.174h2.52c1.243 0 2.261 1.01 2.146 2.247a23.864 23.864 0 01-1.341 5.974C17.153 16.323 16.072 17 14.9 17h-3.192a3 3 0 01-1.341-.317l-2.734-1.366A3 3 0 006.292 15H5V8h.963c.685 0 1.258-.483 1.612-1.068a4.011 4.011 0 012.166-1.73c.432-.143.853-.386 1.011-.814.16-.432.248-.9.248-1.388z"
                    }));
                }
                var ForwardRef = React2.forwardRef(HandThumbUpIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/HashtagIcon.js
        var require_HashtagIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/HashtagIcon.js"(exports, module) {
                var React2 = require_react();
                function HashtagIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M9.493 2.853a.75.75 0 00-1.486-.205L7.545 6H4.198a.75.75 0 000 1.5h3.14l-.69 5H3.302a.75.75 0 000 1.5h3.14l-.435 3.148a.75.75 0 001.486.205L7.955 14h2.986l-.434 3.148a.75.75 0 001.486.205L12.456 14h3.346a.75.75 0 000-1.5h-3.14l.69-5h3.346a.75.75 0 000-1.5h-3.14l.435-3.147a.75.75 0 00-1.486-.205L12.045 6H9.059l.434-3.147zM8.852 7.5l-.69 5h2.986l.69-5H8.852z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(HashtagIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/HeartIcon.js
        var require_HeartIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/HeartIcon.js"(exports, module) {
                var React2 = require_react();
                function HeartIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M9.653 16.915l-.005-.003-.019-.01a20.759 20.759 0 01-1.162-.682 22.045 22.045 0 01-2.582-1.9C4.045 12.733 2 10.352 2 7.5a4.5 4.5 0 018-2.828A4.5 4.5 0 0118 7.5c0 2.852-2.044 5.233-3.885 6.82a22.049 22.049 0 01-3.744 2.582l-.019.01-.005.003h-.002a.739.739 0 01-.69.001l-.002-.001z"
                    }));
                }
                var ForwardRef = React2.forwardRef(HeartIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/HomeModernIcon.js
        var require_HomeModernIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/HomeModernIcon.js"(exports, module) {
                var React2 = require_react();
                function HomeModernIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M14.916 2.404a.75.75 0 01-.32 1.012l-.596.31V17a1 1 0 01-1 1h-2.26a.75.75 0 01-.75-.75v-3.5a.75.75 0 00-.75-.75H6.75a.75.75 0 00-.75.75v3.5a.75.75 0 01-.75.75h-3.5a.75.75 0 010-1.5H2V9.957a.75.75 0 01-.596-1.372L2 8.275V5.75a.75.75 0 011.5 0v1.745l10.404-5.41a.75.75 0 011.012.32zM15.861 8.57a.75.75 0 01.736-.025l1.999 1.04A.75.75 0 0118 10.957V16.5h.25a.75.75 0 110 1.5h-2a.75.75 0 01-.75-.75V9.21a.75.75 0 01.361-.64z"
                    }));
                }
                var ForwardRef = React2.forwardRef(HomeModernIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/HomeIcon.js
        var require_HomeIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/HomeIcon.js"(exports, module) {
                var React2 = require_react();
                function HomeIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M9.293 2.293a1 1 0 011.414 0l7 7A1 1 0 0117 11h-1v6a1 1 0 01-1 1h-2a1 1 0 01-1-1v-3a1 1 0 00-1-1H9a1 1 0 00-1 1v3a1 1 0 01-1 1H5a1 1 0 01-1-1v-6H3a1 1 0 01-.707-1.707l7-7z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(HomeIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/IdentificationIcon.js
        var require_IdentificationIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/IdentificationIcon.js"(exports, module) {
                var React2 = require_react();
                function IdentificationIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M1 6a3 3 0 013-3h12a3 3 0 013 3v8a3 3 0 01-3 3H4a3 3 0 01-3-3V6zm4 1.5a2 2 0 114 0 2 2 0 01-4 0zm2 3a4 4 0 00-3.665 2.395.75.75 0 00.416 1A8.98 8.98 0 007 14.5a8.98 8.98 0 003.249-.604.75.75 0 00.416-1.001A4.001 4.001 0 007 10.5zm5-3.75a.75.75 0 01.75-.75h2.5a.75.75 0 010 1.5h-2.5a.75.75 0 01-.75-.75zm0 6.5a.75.75 0 01.75-.75h2.5a.75.75 0 010 1.5h-2.5a.75.75 0 01-.75-.75zm.75-4a.75.75 0 000 1.5h2.5a.75.75 0 000-1.5h-2.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(IdentificationIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/InboxArrowDownIcon.js
        var require_InboxArrowDownIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/InboxArrowDownIcon.js"(exports, module) {
                var React2 = require_react();
                function InboxArrowDownIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M10 2a.75.75 0 01.75.75v5.59l1.95-2.1a.75.75 0 111.1 1.02l-3.25 3.5a.75.75 0 01-1.1 0L6.2 7.26a.75.75 0 111.1-1.02l1.95 2.1V2.75A.75.75 0 0110 2z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M5.273 4.5a1.25 1.25 0 00-1.205.918l-1.523 5.52c-.006.02-.01.041-.015.062H6a1 1 0 01.894.553l.448.894a1 1 0 00.894.553h3.438a1 1 0 00.86-.49l.606-1.02A1 1 0 0114 11h3.47a1.318 1.318 0 00-.015-.062l-1.523-5.52a1.25 1.25 0 00-1.205-.918h-.977a.75.75 0 010-1.5h.977a2.75 2.75 0 012.651 2.019l1.523 5.52c.066.239.099.485.099.732V15a2 2 0 01-2 2H3a2 2 0 01-2-2v-3.73c0-.246.033-.492.099-.73l1.523-5.521A2.75 2.75 0 015.273 3h.977a.75.75 0 010 1.5h-.977z"
                    }));
                }
                var ForwardRef = React2.forwardRef(InboxArrowDownIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/InboxStackIcon.js
        var require_InboxStackIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/InboxStackIcon.js"(exports, module) {
                var React2 = require_react();
                function InboxStackIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M1.045 6.954a2.75 2.75 0 01.217-.678L2.53 3.58A2.75 2.75 0 015.019 2h9.962a2.75 2.75 0 012.488 1.58l1.27 2.696c.101.216.174.444.216.678A1 1 0 0119 7.25v1.5a2.75 2.75 0 01-2.75 2.75H3.75A2.75 2.75 0 011 8.75v-1.5a1 1 0 01.045-.296zm2.843-2.736A1.25 1.25 0 015.02 3.5h9.962c.484 0 .925.28 1.13.718l.957 2.032H14a1 1 0 00-.86.49l-.606 1.02a1 1 0 01-.86.49H8.236a1 1 0 01-.894-.553l-.448-.894A1 1 0 006 6.25H2.932l.956-2.032z",
                        clipRule: "evenodd"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M1 14a1 1 0 011-1h4a1 1 0 01.894.553l.448.894a1 1 0 00.894.553h3.438a1 1 0 00.86-.49l.606-1.02A1 1 0 0114 13h4a1 1 0 011 1v2a2 2 0 01-2 2H3a2 2 0 01-2-2v-2z"
                    }));
                }
                var ForwardRef = React2.forwardRef(InboxStackIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/InboxIcon.js
        var require_InboxIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/InboxIcon.js"(exports, module) {
                var React2 = require_react();
                function InboxIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M1 11.27c0-.246.033-.492.099-.73l1.523-5.521A2.75 2.75 0 015.273 3h9.454a2.75 2.75 0 012.651 2.019l1.523 5.52c.066.239.099.485.099.732V15a2 2 0 01-2 2H3a2 2 0 01-2-2v-3.73zm3.068-5.852A1.25 1.25 0 015.273 4.5h9.454a1.25 1.25 0 011.205.918l1.523 5.52c.006.02.01.041.015.062H14a1 1 0 00-.86.49l-.606 1.02a1 1 0 01-.86.49H8.236a1 1 0 01-.894-.553l-.448-.894A1 1 0 006 11H2.53l.015-.062 1.523-5.52z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(InboxIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/InformationCircleIcon.js
        var require_InformationCircleIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/InformationCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function InformationCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a.75.75 0 000 1.5h.253a.25.25 0 01.244.304l-.459 2.066A1.75 1.75 0 0010.747 15H11a.75.75 0 000-1.5h-.253a.25.25 0 01-.244-.304l.459-2.066A1.75 1.75 0 009.253 9H9z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(InformationCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/KeyIcon.js
        var require_KeyIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/KeyIcon.js"(exports, module) {
                var React2 = require_react();
                function KeyIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M8 7a5 5 0 113.61 4.804l-1.903 1.903A1 1 0 019 14H8v1a1 1 0 01-1 1H6v1a1 1 0 01-1 1H3a1 1 0 01-1-1v-2a1 1 0 01.293-.707L8.196 8.39A5.002 5.002 0 018 7zm5-3a.75.75 0 000 1.5A1.5 1.5 0 0114.5 7 .75.75 0 0016 7a3 3 0 00-3-3z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(KeyIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/LanguageIcon.js
        var require_LanguageIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/LanguageIcon.js"(exports, module) {
                var React2 = require_react();
                function LanguageIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M7.75 2.75a.75.75 0 00-1.5 0v1.258a32.987 32.987 0 00-3.599.278.75.75 0 10.198 1.487A31.545 31.545 0 018.7 5.545 19.381 19.381 0 017 9.56a19.418 19.418 0 01-1.002-2.05.75.75 0 00-1.384.577 20.935 20.935 0 001.492 2.91 19.613 19.613 0 01-3.828 4.154.75.75 0 10.945 1.164A21.116 21.116 0 007 12.331c.095.132.192.262.29.391a.75.75 0 001.194-.91c-.204-.266-.4-.538-.59-.815a20.888 20.888 0 002.333-5.332c.31.031.618.068.924.108a.75.75 0 00.198-1.487 32.832 32.832 0 00-3.599-.278V2.75z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M13 8a.75.75 0 01.671.415l4.25 8.5a.75.75 0 11-1.342.67L15.787 16h-5.573l-.793 1.585a.75.75 0 11-1.342-.67l4.25-8.5A.75.75 0 0113 8zm2.037 6.5L13 10.427 10.964 14.5h4.073z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(LanguageIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/LifebuoyIcon.js
        var require_LifebuoyIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/LifebuoyIcon.js"(exports, module) {
                var React2 = require_react();
                function LifebuoyIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M7.171 4.146l1.947 2.466a3.514 3.514 0 011.764 0l1.947-2.466a6.52 6.52 0 00-5.658 0zm8.683 3.025l-2.466 1.947c.15.578.15 1.186 0 1.764l2.466 1.947a6.52 6.52 0 000-5.658zm-3.025 8.683l-1.947-2.466c-.578.15-1.186.15-1.764 0l-1.947 2.466a6.52 6.52 0 005.658 0zM4.146 12.83l2.466-1.947a3.514 3.514 0 010-1.764L4.146 7.171a6.52 6.52 0 000 5.658zM5.63 3.297a8.01 8.01 0 018.738 0 8.031 8.031 0 012.334 2.334 8.01 8.01 0 010 8.738 8.033 8.033 0 01-2.334 2.334 8.01 8.01 0 01-8.738 0 8.032 8.032 0 01-2.334-2.334 8.01 8.01 0 010-8.738A8.03 8.03 0 015.63 3.297zm5.198 4.882a2.008 2.008 0 00-2.243.407 1.994 1.994 0 00-.407 2.243 1.993 1.993 0 00.992.992 2.008 2.008 0 002.243-.407c.176-.175.31-.374.407-.585a2.008 2.008 0 00-.407-2.243 1.993 1.993 0 00-.585-.407z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(LifebuoyIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/LightBulbIcon.js
        var require_LightBulbIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/LightBulbIcon.js"(exports, module) {
                var React2 = require_react();
                function LightBulbIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M10 1a6 6 0 00-3.815 10.631C7.237 12.5 8 13.443 8 14.456v.644a.75.75 0 00.572.729 6.016 6.016 0 002.856 0A.75.75 0 0012 15.1v-.644c0-1.013.762-1.957 1.815-2.825A6 6 0 0010 1zM8.863 17.414a.75.75 0 00-.226 1.483 9.066 9.066 0 002.726 0 .75.75 0 00-.226-1.483 7.553 7.553 0 01-2.274 0z"
                    }));
                }
                var ForwardRef = React2.forwardRef(LightBulbIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/LinkIcon.js
        var require_LinkIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/LinkIcon.js"(exports, module) {
                var React2 = require_react();
                function LinkIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M12.232 4.232a2.5 2.5 0 013.536 3.536l-1.225 1.224a.75.75 0 001.061 1.06l1.224-1.224a4 4 0 00-5.656-5.656l-3 3a4 4 0 00.225 5.865.75.75 0 00.977-1.138 2.5 2.5 0 01-.142-3.667l3-3z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M11.603 7.963a.75.75 0 00-.977 1.138 2.5 2.5 0 01.142 3.667l-3 3a2.5 2.5 0 01-3.536-3.536l1.225-1.224a.75.75 0 00-1.061-1.06l-1.224 1.224a4 4 0 105.656 5.656l3-3a4 4 0 00-.225-5.865z"
                    }));
                }
                var ForwardRef = React2.forwardRef(LinkIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ListBulletIcon.js
        var require_ListBulletIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ListBulletIcon.js"(exports, module) {
                var React2 = require_react();
                function ListBulletIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M6 4.75A.75.75 0 016.75 4h10.5a.75.75 0 010 1.5H6.75A.75.75 0 016 4.75zM6 10a.75.75 0 01.75-.75h10.5a.75.75 0 010 1.5H6.75A.75.75 0 016 10zm0 5.25a.75.75 0 01.75-.75h10.5a.75.75 0 010 1.5H6.75a.75.75 0 01-.75-.75zM1.99 4.75a1 1 0 011-1H3a1 1 0 011 1v.01a1 1 0 01-1 1h-.01a1 1 0 01-1-1v-.01zM1.99 15.25a1 1 0 011-1H3a1 1 0 011 1v.01a1 1 0 01-1 1h-.01a1 1 0 01-1-1v-.01zM1.99 10a1 1 0 011-1H3a1 1 0 011 1v.01a1 1 0 01-1 1h-.01a1 1 0 01-1-1V10z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ListBulletIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/LockClosedIcon.js
        var require_LockClosedIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/LockClosedIcon.js"(exports, module) {
                var React2 = require_react();
                function LockClosedIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10 1a4.5 4.5 0 00-4.5 4.5V9H5a2 2 0 00-2 2v6a2 2 0 002 2h10a2 2 0 002-2v-6a2 2 0 00-2-2h-.5V5.5A4.5 4.5 0 0010 1zm3 8V5.5a3 3 0 10-6 0V9h6z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(LockClosedIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/LockOpenIcon.js
        var require_LockOpenIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/LockOpenIcon.js"(exports, module) {
                var React2 = require_react();
                function LockOpenIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M14.5 1A4.5 4.5 0 0010 5.5V9H3a2 2 0 00-2 2v6a2 2 0 002 2h10a2 2 0 002-2v-6a2 2 0 00-2-2h-1.5V5.5a3 3 0 116 0v2.75a.75.75 0 001.5 0V5.5A4.5 4.5 0 0014.5 1z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(LockOpenIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/MagnifyingGlassCircleIcon.js
        var require_MagnifyingGlassCircleIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/MagnifyingGlassCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function MagnifyingGlassCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M6.5 9a2.5 2.5 0 115 0 2.5 2.5 0 01-5 0z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10 18a8 8 0 100-16 8 8 0 000 16zM9 5a4 4 0 102.248 7.309l1.472 1.471a.75.75 0 101.06-1.06l-1.471-1.472A4 4 0 009 5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(MagnifyingGlassCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/MagnifyingGlassMinusIcon.js
        var require_MagnifyingGlassMinusIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/MagnifyingGlassMinusIcon.js"(exports, module) {
                var React2 = require_react();
                function MagnifyingGlassMinusIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M6.75 8.25a.75.75 0 000 1.5h4.5a.75.75 0 000-1.5h-4.5z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M9 2a7 7 0 104.391 12.452l3.329 3.328a.75.75 0 101.06-1.06l-3.328-3.329A7 7 0 009 2zM3.5 9a5.5 5.5 0 1111 0 5.5 5.5 0 01-11 0z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(MagnifyingGlassMinusIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/MagnifyingGlassPlusIcon.js
        var require_MagnifyingGlassPlusIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/MagnifyingGlassPlusIcon.js"(exports, module) {
                var React2 = require_react();
                function MagnifyingGlassPlusIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M9 6a.75.75 0 01.75.75v1.5h1.5a.75.75 0 010 1.5h-1.5v1.5a.75.75 0 01-1.5 0v-1.5h-1.5a.75.75 0 010-1.5h1.5v-1.5A.75.75 0 019 6z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M2 9a7 7 0 1112.452 4.391l3.328 3.329a.75.75 0 11-1.06 1.06l-3.329-3.328A7 7 0 012 9zm7-5.5a5.5 5.5 0 100 11 5.5 5.5 0 000-11z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(MagnifyingGlassPlusIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/MagnifyingGlassIcon.js
        var require_MagnifyingGlassIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/MagnifyingGlassIcon.js"(exports, module) {
                var React2 = require_react();
                function MagnifyingGlassIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M9 3.5a5.5 5.5 0 100 11 5.5 5.5 0 000-11zM2 9a7 7 0 1112.452 4.391l3.328 3.329a.75.75 0 11-1.06 1.06l-3.329-3.328A7 7 0 012 9z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(MagnifyingGlassIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/MapPinIcon.js
        var require_MapPinIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/MapPinIcon.js"(exports, module) {
                var React2 = require_react();
                function MapPinIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M9.69 18.933l.003.001C9.89 19.02 10 19 10 19s.11.02.308-.066l.002-.001.006-.003.018-.008a5.741 5.741 0 00.281-.14c.186-.096.446-.24.757-.433.62-.384 1.445-.966 2.274-1.765C15.302 14.988 17 12.493 17 9A7 7 0 103 9c0 3.492 1.698 5.988 3.355 7.584a13.731 13.731 0 002.273 1.765 11.842 11.842 0 00.976.544l.062.029.018.008.006.003zM10 11.25a2.25 2.25 0 100-4.5 2.25 2.25 0 000 4.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(MapPinIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/MapIcon.js
        var require_MapIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/MapIcon.js"(exports, module) {
                var React2 = require_react();
                function MapIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M8.157 2.175a1.5 1.5 0 00-1.147 0l-4.084 1.69A1.5 1.5 0 002 5.251v10.877a1.5 1.5 0 002.074 1.386l3.51-1.453 4.26 1.763a1.5 1.5 0 001.146 0l4.083-1.69A1.5 1.5 0 0018 14.748V3.873a1.5 1.5 0 00-2.073-1.386l-3.51 1.452-4.26-1.763zM7.58 5a.75.75 0 01.75.75v6.5a.75.75 0 01-1.5 0v-6.5A.75.75 0 017.58 5zm5.59 2.75a.75.75 0 00-1.5 0v6.5a.75.75 0 001.5 0v-6.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(MapIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/MegaphoneIcon.js
        var require_MegaphoneIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/MegaphoneIcon.js"(exports, module) {
                var React2 = require_react();
                function MegaphoneIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M13.92 3.845a19.361 19.361 0 01-6.3 1.98C6.765 5.942 5.89 6 5 6a4 4 0 00-.504 7.969 15.974 15.974 0 001.271 3.341c.397.77 1.342 1 2.05.59l.867-.5c.726-.42.94-1.321.588-2.021-.166-.33-.315-.666-.448-1.004 1.8.358 3.511.964 5.096 1.78A17.964 17.964 0 0015 10c0-2.161-.381-4.234-1.08-6.155zM15.243 3.097A19.456 19.456 0 0116.5 10c0 2.431-.445 4.758-1.257 6.904l-.03.077a.75.75 0 001.401.537 20.902 20.902 0 001.312-5.745 1.999 1.999 0 000-3.545 20.902 20.902 0 00-1.312-5.745.75.75 0 00-1.4.537l.029.077z"
                    }));
                }
                var ForwardRef = React2.forwardRef(MegaphoneIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/MicrophoneIcon.js
        var require_MicrophoneIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/MicrophoneIcon.js"(exports, module) {
                var React2 = require_react();
                function MicrophoneIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M7 4a3 3 0 016 0v6a3 3 0 11-6 0V4z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M5.5 9.643a.75.75 0 00-1.5 0V10c0 3.06 2.29 5.585 5.25 5.954V17.5h-1.5a.75.75 0 000 1.5h4.5a.75.75 0 000-1.5h-1.5v-1.546A6.001 6.001 0 0016 10v-.357a.75.75 0 00-1.5 0V10a4.5 4.5 0 01-9 0v-.357z"
                    }));
                }
                var ForwardRef = React2.forwardRef(MicrophoneIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/MinusCircleIcon.js
        var require_MinusCircleIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/MinusCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function MinusCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10 18a8 8 0 100-16 8 8 0 000 16zM6.75 9.25a.75.75 0 000 1.5h6.5a.75.75 0 000-1.5h-6.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(MinusCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/MinusSmallIcon.js
        var require_MinusSmallIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/MinusSmallIcon.js"(exports, module) {
                var React2 = require_react();
                function MinusSmallIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M6.75 9.25a.75.75 0 000 1.5h6.5a.75.75 0 000-1.5h-6.5z"
                    }));
                }
                var ForwardRef = React2.forwardRef(MinusSmallIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/MinusIcon.js
        var require_MinusIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/MinusIcon.js"(exports, module) {
                var React2 = require_react();
                function MinusIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M4 10a.75.75 0 01.75-.75h10.5a.75.75 0 010 1.5H4.75A.75.75 0 014 10z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(MinusIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/MoonIcon.js
        var require_MoonIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/MoonIcon.js"(exports, module) {
                var React2 = require_react();
                function MoonIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M7.455 2.004a.75.75 0 01.26.77 7 7 0 009.958 7.967.75.75 0 011.067.853A8.5 8.5 0 116.647 1.921a.75.75 0 01.808.083z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(MoonIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/MusicalNoteIcon.js
        var require_MusicalNoteIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/MusicalNoteIcon.js"(exports, module) {
                var React2 = require_react();
                function MusicalNoteIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M17.721 1.599a.75.75 0 01.279.584v11.29a2.25 2.25 0 01-1.774 2.198l-2.041.442a2.216 2.216 0 01-.938-4.333l2.662-.576a.75.75 0 00.591-.734V6.112l-8 1.73v7.684a2.25 2.25 0 01-1.774 2.2l-2.042.44a2.216 2.216 0 11-.935-4.33l2.659-.574A.75.75 0 007 12.53V4.237a.75.75 0 01.591-.733l9.5-2.054a.75.75 0 01.63.149z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(MusicalNoteIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/NewspaperIcon.js
        var require_NewspaperIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/NewspaperIcon.js"(exports, module) {
                var React2 = require_react();
                function NewspaperIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M2 3.5A1.5 1.5 0 013.5 2h9A1.5 1.5 0 0114 3.5v11.75A2.75 2.75 0 0016.75 18h-12A2.75 2.75 0 012 15.25V3.5zm3.75 7a.75.75 0 000 1.5h4.5a.75.75 0 000-1.5h-4.5zm0 3a.75.75 0 000 1.5h4.5a.75.75 0 000-1.5h-4.5zM5 5.75A.75.75 0 015.75 5h4.5a.75.75 0 01.75.75v2.5a.75.75 0 01-.75.75h-4.5A.75.75 0 015 8.25v-2.5z",
                        clipRule: "evenodd"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M16.5 6.5h-1v8.75a1.25 1.25 0 102.5 0V8a1.5 1.5 0 00-1.5-1.5z"
                    }));
                }
                var ForwardRef = React2.forwardRef(NewspaperIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/NoSymbolIcon.js
        var require_NoSymbolIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/NoSymbolIcon.js"(exports, module) {
                var React2 = require_react();
                function NoSymbolIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M5.965 4.904l9.131 9.131a6.5 6.5 0 00-9.131-9.131zm8.07 10.192L4.904 5.965a6.5 6.5 0 009.131 9.131zM4.343 4.343a8 8 0 1111.314 11.314A8 8 0 014.343 4.343z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(NoSymbolIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/PaintBrushIcon.js
        var require_PaintBrushIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/PaintBrushIcon.js"(exports, module) {
                var React2 = require_react();
                function PaintBrushIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M15.993 1.385a1.87 1.87 0 012.623 2.622l-4.03 5.27a12.749 12.749 0 01-4.237 3.562 4.508 4.508 0 00-3.188-3.188 12.75 12.75 0 013.562-4.236l5.27-4.03zM6 11a3 3 0 00-3 3 .5.5 0 01-.72.45.75.75 0 00-1.035.931A4.001 4.001 0 009 14.004V14a3.01 3.01 0 00-1.66-2.685A2.99 2.99 0 006 11z"
                    }));
                }
                var ForwardRef = React2.forwardRef(PaintBrushIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/PaperAirplaneIcon.js
        var require_PaperAirplaneIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/PaperAirplaneIcon.js"(exports, module) {
                var React2 = require_react();
                function PaperAirplaneIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M3.105 2.289a.75.75 0 00-.826.95l1.414 4.925A1.5 1.5 0 005.135 9.25h6.115a.75.75 0 010 1.5H5.135a1.5 1.5 0 00-1.442 1.086l-1.414 4.926a.75.75 0 00.826.95 28.896 28.896 0 0015.293-7.154.75.75 0 000-1.115A28.897 28.897 0 003.105 2.289z"
                    }));
                }
                var ForwardRef = React2.forwardRef(PaperAirplaneIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/PaperClipIcon.js
        var require_PaperClipIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/PaperClipIcon.js"(exports, module) {
                var React2 = require_react();
                function PaperClipIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M15.621 4.379a3 3 0 00-4.242 0l-7 7a3 3 0 004.241 4.243h.001l.497-.5a.75.75 0 011.064 1.057l-.498.501-.002.002a4.5 4.5 0 01-6.364-6.364l7-7a4.5 4.5 0 016.368 6.36l-3.455 3.553A2.625 2.625 0 119.52 9.52l3.45-3.451a.75.75 0 111.061 1.06l-3.45 3.451a1.125 1.125 0 001.587 1.595l3.454-3.553a3 3 0 000-4.242z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(PaperClipIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/PauseCircleIcon.js
        var require_PauseCircleIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/PauseCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function PauseCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M2 10a8 8 0 1116 0 8 8 0 01-16 0zm5-2.25A.75.75 0 017.75 7h.5a.75.75 0 01.75.75v4.5a.75.75 0 01-.75.75h-.5a.75.75 0 01-.75-.75v-4.5zm4 0a.75.75 0 01.75-.75h.5a.75.75 0 01.75.75v4.5a.75.75 0 01-.75.75h-.5a.75.75 0 01-.75-.75v-4.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(PauseCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/PauseIcon.js
        var require_PauseIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/PauseIcon.js"(exports, module) {
                var React2 = require_react();
                function PauseIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M5.75 3a.75.75 0 00-.75.75v12.5c0 .414.336.75.75.75h1.5a.75.75 0 00.75-.75V3.75A.75.75 0 007.25 3h-1.5zM12.75 3a.75.75 0 00-.75.75v12.5c0 .414.336.75.75.75h1.5a.75.75 0 00.75-.75V3.75a.75.75 0 00-.75-.75h-1.5z"
                    }));
                }
                var ForwardRef = React2.forwardRef(PauseIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/PencilSquareIcon.js
        var require_PencilSquareIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/PencilSquareIcon.js"(exports, module) {
                var React2 = require_react();
                function PencilSquareIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M5.433 13.917l1.262-3.155A4 4 0 017.58 9.42l6.92-6.918a2.121 2.121 0 013 3l-6.92 6.918c-.383.383-.84.685-1.343.886l-3.154 1.262a.5.5 0 01-.65-.65z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M3.5 5.75c0-.69.56-1.25 1.25-1.25H10A.75.75 0 0010 3H4.75A2.75 2.75 0 002 5.75v9.5A2.75 2.75 0 004.75 18h9.5A2.75 2.75 0 0017 15.25V10a.75.75 0 00-1.5 0v5.25c0 .69-.56 1.25-1.25 1.25h-9.5c-.69 0-1.25-.56-1.25-1.25v-9.5z"
                    }));
                }
                var ForwardRef = React2.forwardRef(PencilSquareIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/PencilIcon.js
        var require_PencilIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/PencilIcon.js"(exports, module) {
                var React2 = require_react();
                function PencilIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M2.695 14.763l-1.262 3.154a.5.5 0 00.65.65l3.155-1.262a4 4 0 001.343-.885L17.5 5.5a2.121 2.121 0 00-3-3L3.58 13.42a4 4 0 00-.885 1.343z"
                    }));
                }
                var ForwardRef = React2.forwardRef(PencilIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/PhoneArrowDownLeftIcon.js
        var require_PhoneArrowDownLeftIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/PhoneArrowDownLeftIcon.js"(exports, module) {
                var React2 = require_react();
                function PhoneArrowDownLeftIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M3.5 2A1.5 1.5 0 002 3.5V5c0 1.149.15 2.263.43 3.326a13.022 13.022 0 009.244 9.244c1.063.28 2.177.43 3.326.43h1.5a1.5 1.5 0 001.5-1.5v-1.148a1.5 1.5 0 00-1.175-1.465l-3.223-.716a1.5 1.5 0 00-1.767 1.052l-.267.933c-.117.41-.555.643-.95.48a11.542 11.542 0 01-6.254-6.254c-.163-.395.07-.833.48-.95l.933-.267a1.5 1.5 0 001.052-1.767l-.716-3.223A1.5 1.5 0 004.648 2H3.5zM16.72 2.22a.75.75 0 111.06 1.06L14.56 6.5h2.69a.75.75 0 010 1.5h-4.5a.75.75 0 01-.75-.75v-4.5a.75.75 0 011.5 0v2.69l3.22-3.22z"
                    }));
                }
                var ForwardRef = React2.forwardRef(PhoneArrowDownLeftIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/PhoneArrowUpRightIcon.js
        var require_PhoneArrowUpRightIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/PhoneArrowUpRightIcon.js"(exports, module) {
                var React2 = require_react();
                function PhoneArrowUpRightIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M3.5 2A1.5 1.5 0 002 3.5V5c0 1.149.15 2.263.43 3.326a13.022 13.022 0 009.244 9.244c1.063.28 2.177.43 3.326.43h1.5a1.5 1.5 0 001.5-1.5v-1.148a1.5 1.5 0 00-1.175-1.465l-3.223-.716a1.5 1.5 0 00-1.767 1.052l-.267.933c-.117.41-.555.643-.95.48a11.542 11.542 0 01-6.254-6.254c-.163-.395.07-.833.48-.95l.933-.267a1.5 1.5 0 001.052-1.767l-.716-3.223A1.5 1.5 0 004.648 2H3.5zM16.5 4.56l-3.22 3.22a.75.75 0 11-1.06-1.06l3.22-3.22h-2.69a.75.75 0 010-1.5h4.5a.75.75 0 01.75.75v4.5a.75.75 0 01-1.5 0V4.56z"
                    }));
                }
                var ForwardRef = React2.forwardRef(PhoneArrowUpRightIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/PhoneXMarkIcon.js
        var require_PhoneXMarkIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/PhoneXMarkIcon.js"(exports, module) {
                var React2 = require_react();
                function PhoneXMarkIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M3.5 2A1.5 1.5 0 002 3.5V5c0 1.149.15 2.263.43 3.326a13.022 13.022 0 009.244 9.244c1.063.28 2.177.43 3.326.43h1.5a1.5 1.5 0 001.5-1.5v-1.148a1.5 1.5 0 00-1.175-1.465l-3.223-.716a1.5 1.5 0 00-1.767 1.052l-.267.933c-.117.41-.555.643-.95.48a11.542 11.542 0 01-6.254-6.254c-.163-.395.07-.833.48-.95l.933-.267a1.5 1.5 0 001.052-1.767l-.716-3.223A1.5 1.5 0 004.648 2H3.5zm9.78.22a.75.75 0 10-1.06 1.06L13.94 5l-1.72 1.72a.75.75 0 001.06 1.06L15 6.06l1.72 1.72a.75.75 0 101.06-1.06L16.06 5l1.72-1.72a.75.75 0 00-1.06-1.06L15 3.94l-1.72-1.72z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(PhoneXMarkIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/PhoneIcon.js
        var require_PhoneIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/PhoneIcon.js"(exports, module) {
                var React2 = require_react();
                function PhoneIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M2 3.5A1.5 1.5 0 013.5 2h1.148a1.5 1.5 0 011.465 1.175l.716 3.223a1.5 1.5 0 01-1.052 1.767l-.933.267c-.41.117-.643.555-.48.95a11.542 11.542 0 006.254 6.254c.395.163.833-.07.95-.48l.267-.933a1.5 1.5 0 011.767-1.052l3.223.716A1.5 1.5 0 0118 15.352V16.5a1.5 1.5 0 01-1.5 1.5H15c-1.149 0-2.263-.15-3.326-.43A13.022 13.022 0 012.43 8.326 13.019 13.019 0 012 5V3.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(PhoneIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/PhotoIcon.js
        var require_PhotoIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/PhotoIcon.js"(exports, module) {
                var React2 = require_react();
                function PhotoIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M1 5.25A2.25 2.25 0 013.25 3h13.5A2.25 2.25 0 0119 5.25v9.5A2.25 2.25 0 0116.75 17H3.25A2.25 2.25 0 011 14.75v-9.5zm1.5 5.81v3.69c0 .414.336.75.75.75h13.5a.75.75 0 00.75-.75v-2.69l-2.22-2.219a.75.75 0 00-1.06 0l-1.91 1.909.47.47a.75.75 0 11-1.06 1.06L6.53 8.091a.75.75 0 00-1.06 0l-2.97 2.97zM12 7a1 1 0 11-2 0 1 1 0 012 0z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(PhotoIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/PlayCircleIcon.js
        var require_PlayCircleIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/PlayCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function PlayCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M2 10a8 8 0 1116 0 8 8 0 01-16 0zm6.39-2.908a.75.75 0 01.766.027l3.5 2.25a.75.75 0 010 1.262l-3.5 2.25A.75.75 0 018 12.25v-4.5a.75.75 0 01.39-.658z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(PlayCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/PlayPauseIcon.js
        var require_PlayPauseIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/PlayPauseIcon.js"(exports, module) {
                var React2 = require_react();
                function PlayPauseIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M12.75 4a.75.75 0 00-.75.75v10.5c0 .414.336.75.75.75h.5a.75.75 0 00.75-.75V4.75a.75.75 0 00-.75-.75h-.5zM17.75 4a.75.75 0 00-.75.75v10.5c0 .414.336.75.75.75h.5a.75.75 0 00.75-.75V4.75a.75.75 0 00-.75-.75h-.5zM3.288 4.819A1.5 1.5 0 001 6.095v7.81a1.5 1.5 0 002.288 1.277l6.323-3.906a1.5 1.5 0 000-2.552L3.288 4.819z"
                    }));
                }
                var ForwardRef = React2.forwardRef(PlayPauseIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/PlayIcon.js
        var require_PlayIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/PlayIcon.js"(exports, module) {
                var React2 = require_react();
                function PlayIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M6.3 2.841A1.5 1.5 0 004 4.11V15.89a1.5 1.5 0 002.3 1.269l9.344-5.89a1.5 1.5 0 000-2.538L6.3 2.84z"
                    }));
                }
                var ForwardRef = React2.forwardRef(PlayIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/PlusCircleIcon.js
        var require_PlusCircleIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/PlusCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function PlusCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10 18a8 8 0 100-16 8 8 0 000 16zm.75-11.25a.75.75 0 00-1.5 0v2.5h-2.5a.75.75 0 000 1.5h2.5v2.5a.75.75 0 001.5 0v-2.5h2.5a.75.75 0 000-1.5h-2.5v-2.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(PlusCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/PlusSmallIcon.js
        var require_PlusSmallIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/PlusSmallIcon.js"(exports, module) {
                var React2 = require_react();
                function PlusSmallIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M10.75 6.75a.75.75 0 00-1.5 0v2.5h-2.5a.75.75 0 000 1.5h2.5v2.5a.75.75 0 001.5 0v-2.5h2.5a.75.75 0 000-1.5h-2.5v-2.5z"
                    }));
                }
                var ForwardRef = React2.forwardRef(PlusSmallIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/PlusIcon.js
        var require_PlusIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/PlusIcon.js"(exports, module) {
                var React2 = require_react();
                function PlusIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M10.75 4.75a.75.75 0 00-1.5 0v4.5h-4.5a.75.75 0 000 1.5h4.5v4.5a.75.75 0 001.5 0v-4.5h4.5a.75.75 0 000-1.5h-4.5v-4.5z"
                    }));
                }
                var ForwardRef = React2.forwardRef(PlusIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/PowerIcon.js
        var require_PowerIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/PowerIcon.js"(exports, module) {
                var React2 = require_react();
                function PowerIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10 2a.75.75 0 01.75.75v7.5a.75.75 0 01-1.5 0v-7.5A.75.75 0 0110 2zM5.404 4.343a.75.75 0 010 1.06 6.5 6.5 0 109.192 0 .75.75 0 111.06-1.06 8 8 0 11-11.313 0 .75.75 0 011.06 0z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(PowerIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/PresentationChartBarIcon.js
        var require_PresentationChartBarIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/PresentationChartBarIcon.js"(exports, module) {
                var React2 = require_react();
                function PresentationChartBarIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M1 2.75A.75.75 0 011.75 2h16.5a.75.75 0 010 1.5H18v8.75A2.75 2.75 0 0115.25 15h-1.072l.798 3.06a.75.75 0 01-1.452.38L13.41 18H6.59l-.114.44a.75.75 0 01-1.452-.38L5.823 15H4.75A2.75 2.75 0 012 12.25V3.5h-.25A.75.75 0 011 2.75zM7.373 15l-.391 1.5h6.037l-.392-1.5H7.373zM13.25 5a.75.75 0 01.75.75v5.5a.75.75 0 01-1.5 0v-5.5a.75.75 0 01.75-.75zm-6.5 4a.75.75 0 01.75.75v1.5a.75.75 0 01-1.5 0v-1.5A.75.75 0 016.75 9zm4-1.25a.75.75 0 00-1.5 0v3.5a.75.75 0 001.5 0v-3.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(PresentationChartBarIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/PresentationChartLineIcon.js
        var require_PresentationChartLineIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/PresentationChartLineIcon.js"(exports, module) {
                var React2 = require_react();
                function PresentationChartLineIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M1 2.75A.75.75 0 011.75 2h16.5a.75.75 0 010 1.5H18v8.75A2.75 2.75 0 0115.25 15h-1.072l.798 3.06a.75.75 0 01-1.452.38L13.41 18H6.59l-.114.44a.75.75 0 01-1.452-.38L5.823 15H4.75A2.75 2.75 0 012 12.25V3.5h-.25A.75.75 0 011 2.75zM7.373 15l-.391 1.5h6.037l-.392-1.5H7.373zm7.49-8.931a.75.75 0 01-.175 1.046 19.326 19.326 0 00-3.398 3.098.75.75 0 01-1.097.04L8.5 8.561l-2.22 2.22A.75.75 0 115.22 9.72l2.75-2.75a.75.75 0 011.06 0l1.664 1.663a20.786 20.786 0 013.122-2.74.75.75 0 011.046.176z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(PresentationChartLineIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/PrinterIcon.js
        var require_PrinterIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/PrinterIcon.js"(exports, module) {
                var React2 = require_react();
                function PrinterIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M5 2.75C5 1.784 5.784 1 6.75 1h6.5c.966 0 1.75.784 1.75 1.75v3.552c.377.046.752.097 1.126.153A2.212 2.212 0 0118 8.653v4.097A2.25 2.25 0 0115.75 15h-.241l.305 1.984A1.75 1.75 0 0114.084 19H5.915a1.75 1.75 0 01-1.73-2.016L4.492 15H4.25A2.25 2.25 0 012 12.75V8.653c0-1.082.775-2.034 1.874-2.198.374-.056.75-.107 1.127-.153L5 6.25v-3.5zm8.5 3.397a41.533 41.533 0 00-7 0V2.75a.25.25 0 01.25-.25h6.5a.25.25 0 01.25.25v3.397zM6.608 12.5a.25.25 0 00-.247.212l-.693 4.5a.25.25 0 00.247.288h8.17a.25.25 0 00.246-.288l-.692-4.5a.25.25 0 00-.247-.212H6.608z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(PrinterIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/PuzzlePieceIcon.js
        var require_PuzzlePieceIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/PuzzlePieceIcon.js"(exports, module) {
                var React2 = require_react();
                function PuzzlePieceIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M12 4.467c0-.405.262-.75.559-1.027.276-.257.441-.584.441-.94 0-.828-.895-1.5-2-1.5s-2 .672-2 1.5c0 .362.171.694.456.953.29.265.544.6.544.994a.968.968 0 01-1.024.974 39.655 39.655 0 01-3.014-.306.75.75 0 00-.847.847c.14.993.242 1.999.306 3.014A.968.968 0 014.447 10c-.393 0-.729-.253-.994-.544C3.194 9.17 2.862 9 2.5 9 1.672 9 1 9.895 1 11s.672 2 1.5 2c.356 0 .683-.165.94-.441.276-.297.622-.559 1.027-.559a.997.997 0 011.004 1.03 39.747 39.747 0 01-.319 3.734.75.75 0 00.64.842c1.05.146 2.111.252 3.184.318A.97.97 0 0010 16.948c0-.394-.254-.73-.545-.995C9.171 15.693 9 15.362 9 15c0-.828.895-1.5 2-1.5s2 .672 2 1.5c0 .356-.165.683-.441.94-.297.276-.559.622-.559 1.027a.998.998 0 001.03 1.005c1.337-.05 2.659-.162 3.961-.337a.75.75 0 00.644-.644c.175-1.302.288-2.624.337-3.961A.998.998 0 0016.967 12c-.405 0-.75.262-1.027.559-.257.276-.584.441-.94.441-.828 0-1.5-.895-1.5-2s.672-2 1.5-2c.362 0 .694.17.953.455.265.291.601.545.995.545a.97.97 0 00.976-1.024 41.159 41.159 0 00-.318-3.184.75.75 0 00-.842-.64c-1.228.164-2.473.271-3.734.319A.997.997 0 0112 4.467z"
                    }));
                }
                var ForwardRef = React2.forwardRef(PuzzlePieceIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/QrCodeIcon.js
        var require_QrCodeIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/QrCodeIcon.js"(exports, module) {
                var React2 = require_react();
                function QrCodeIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M3.75 2A1.75 1.75 0 002 3.75v3.5C2 8.216 2.784 9 3.75 9h3.5A1.75 1.75 0 009 7.25v-3.5A1.75 1.75 0 007.25 2h-3.5zM3.5 3.75a.25.25 0 01.25-.25h3.5a.25.25 0 01.25.25v3.5a.25.25 0 01-.25.25h-3.5a.25.25 0 01-.25-.25v-3.5zM3.75 11A1.75 1.75 0 002 12.75v3.5c0 .966.784 1.75 1.75 1.75h3.5A1.75 1.75 0 009 16.25v-3.5A1.75 1.75 0 007.25 11h-3.5zm-.25 1.75a.25.25 0 01.25-.25h3.5a.25.25 0 01.25.25v3.5a.25.25 0 01-.25.25h-3.5a.25.25 0 01-.25-.25v-3.5zm7.5-9c0-.966.784-1.75 1.75-1.75h3.5c.966 0 1.75.784 1.75 1.75v3.5A1.75 1.75 0 0116.25 9h-3.5A1.75 1.75 0 0111 7.25v-3.5zm1.75-.25a.25.25 0 00-.25.25v3.5c0 .138.112.25.25.25h3.5a.25.25 0 00.25-.25v-3.5a.25.25 0 00-.25-.25h-3.5zm-7.26 1a1 1 0 00-1 1v.01a1 1 0 001 1h.01a1 1 0 001-1V5.5a1 1 0 00-1-1h-.01zm9 0a1 1 0 00-1 1v.01a1 1 0 001 1h.01a1 1 0 001-1V5.5a1 1 0 00-1-1h-.01zm-9 9a1 1 0 00-1 1v.01a1 1 0 001 1h.01a1 1 0 001-1v-.01a1 1 0 00-1-1h-.01zm9 0a1 1 0 00-1 1v.01a1 1 0 001 1h.01a1 1 0 001-1v-.01a1 1 0 00-1-1h-.01zm-3.5-1.5a1 1 0 011-1H12a1 1 0 011 1v.01a1 1 0 01-1 1h-.01a1 1 0 01-1-1V12zm6-1a1 1 0 00-1 1v.01a1 1 0 001 1H17a1 1 0 001-1V12a1 1 0 00-1-1h-.01zm-1 6a1 1 0 011-1H17a1 1 0 011 1v.01a1 1 0 01-1 1h-.01a1 1 0 01-1-1V17zm-4-1a1 1 0 00-1 1v.01a1 1 0 001 1H12a1 1 0 001-1V17a1 1 0 00-1-1h-.01z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(QrCodeIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/QuestionMarkCircleIcon.js
        var require_QuestionMarkCircleIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/QuestionMarkCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function QuestionMarkCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zM8.94 6.94a.75.75 0 11-1.061-1.061 3 3 0 112.871 5.026v.345a.75.75 0 01-1.5 0v-.5c0-.72.57-1.172 1.081-1.287A1.5 1.5 0 108.94 6.94zM10 15a1 1 0 100-2 1 1 0 000 2z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(QuestionMarkCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/QueueListIcon.js
        var require_QueueListIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/QueueListIcon.js"(exports, module) {
                var React2 = require_react();
                function QueueListIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M2 4.5A2.5 2.5 0 014.5 2h11a2.5 2.5 0 010 5h-11A2.5 2.5 0 012 4.5zM2.75 9.083a.75.75 0 000 1.5h14.5a.75.75 0 000-1.5H2.75zM2.75 12.663a.75.75 0 000 1.5h14.5a.75.75 0 000-1.5H2.75zM2.75 16.25a.75.75 0 000 1.5h14.5a.75.75 0 100-1.5H2.75z"
                    }));
                }
                var ForwardRef = React2.forwardRef(QueueListIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/RadioIcon.js
        var require_RadioIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/RadioIcon.js"(exports, module) {
                var React2 = require_react();
                function RadioIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M17.45 3.473a.75.75 0 10-.4-1.446L5.313 5.265c-.84.096-1.671.217-2.495.362A2.212 2.212 0 001 7.817v7.933A2.25 2.25 0 003.25 18h13.5A2.25 2.25 0 0019 15.75V7.816c0-1.06-.745-2-1.817-2.189a41.124 41.124 0 00-5.406-.589l5.673-1.565zM16 9.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM14.5 16a1.5 1.5 0 100-3 1.5 1.5 0 000 3zm-9.26-5a.75.75 0 01.75-.75H6a.75.75 0 01.75.75v.01a.75.75 0 01-.75.75h-.01a.75.75 0 01-.75-.75V11zm2.75-.75a.75.75 0 00-.75.75v.01c0 .415.336.75.75.75H8a.75.75 0 00.75-.75V11a.75.75 0 00-.75-.75h-.01zm-1.75-1.5A.75.75 0 016.99 8H7a.75.75 0 01.75.75v.01a.75.75 0 01-.75.75h-.01a.75.75 0 01-.75-.75v-.01zm3.583.42a.75.75 0 00-1.06 0l-.007.007a.75.75 0 000 1.06l.007.008a.75.75 0 001.06 0l.007-.007a.75.75 0 000-1.061l-.007-.007zm.427 2.08A.75.75 0 0111 12v.01a.75.75 0 01-.75.75h-.01a.75.75 0 01-.75-.75V12a.75.75 0 01.75-.75h.01zm-.42 3.584a.75.75 0 000-1.061l-.007-.007a.75.75 0 00-1.06 0l-.007.007a.75.75 0 000 1.06l.007.008a.75.75 0 001.06 0l.008-.007zm-3.59.416a.75.75 0 01.75-.75H7a.75.75 0 01.75.75v.01a.75.75 0 01-.75.75h-.01a.75.75 0 01-.75-.75v-.01zm-1.013-1.484a.75.75 0 00-1.06 0l-.008.007a.75.75 0 000 1.06l.007.008a.75.75 0 001.061 0l.007-.007a.75.75 0 000-1.061l-.007-.007zM3.75 11.25a.75.75 0 01.75.75v.01a.75.75 0 01-.75.75h-.01a.75.75 0 01-.75-.75V12a.75.75 0 01.75-.75h.01zm1.484-1.012a.75.75 0 000-1.061l-.007-.007a.75.75 0 00-1.06 0l-.007.007a.75.75 0 000 1.06l.007.008a.75.75 0 001.06 0l.007-.007zM7.24 13a.75.75 0 01.75-.75H8a.75.75 0 01.75.75v.01a.75.75 0 01-.75.75h-.01a.75.75 0 01-.75-.75V13zm-1.25-.75a.75.75 0 00-.75.75v.01c0 .415.336.75.75.75H6a.75.75 0 00.75-.75V13a.75.75 0 00-.75-.75h-.01z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(RadioIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ReceiptPercentIcon.js
        var require_ReceiptPercentIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ReceiptPercentIcon.js"(exports, module) {
                var React2 = require_react();
                function ReceiptPercentIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M4.93 1.31a41.401 41.401 0 0110.14 0C16.194 1.45 17 2.414 17 3.517V18.25a.75.75 0 01-1.075.676l-2.8-1.344-2.8 1.344a.75.75 0 01-.65 0l-2.8-1.344-2.8 1.344A.75.75 0 013 18.25V3.517c0-1.103.806-2.068 1.93-2.207zm8.85 5.97a.75.75 0 00-1.06-1.06l-6.5 6.5a.75.75 0 101.06 1.06l6.5-6.5zM9 8a1 1 0 11-2 0 1 1 0 012 0zm3 5a1 1 0 100-2 1 1 0 000 2z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ReceiptPercentIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ReceiptRefundIcon.js
        var require_ReceiptRefundIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ReceiptRefundIcon.js"(exports, module) {
                var React2 = require_react();
                function ReceiptRefundIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M4.93 1.31a41.401 41.401 0 0110.14 0C16.194 1.45 17 2.414 17 3.517V18.25a.75.75 0 01-1.075.676l-2.8-1.344-2.8 1.344a.75.75 0 01-.65 0l-2.8-1.344-2.8 1.344A.75.75 0 013 18.25V3.517c0-1.103.806-2.068 1.93-2.207zm4.822 4.997a.75.75 0 10-1.004-1.114l-2.5 2.25a.75.75 0 000 1.114l2.5 2.25a.75.75 0 001.004-1.114L8.704 8.75h1.921a1.875 1.875 0 010 3.75.75.75 0 000 1.5 3.375 3.375 0 100-6.75h-1.92l1.047-.943z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ReceiptRefundIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/RectangleGroupIcon.js
        var require_RectangleGroupIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/RectangleGroupIcon.js"(exports, module) {
                var React2 = require_react();
                function RectangleGroupIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M2.5 3A1.5 1.5 0 001 4.5v4A1.5 1.5 0 002.5 10h6A1.5 1.5 0 0010 8.5v-4A1.5 1.5 0 008.5 3h-6zm11 2A1.5 1.5 0 0012 6.5v7a1.5 1.5 0 001.5 1.5h4a1.5 1.5 0 001.5-1.5v-7A1.5 1.5 0 0017.5 5h-4zm-10 7A1.5 1.5 0 002 13.5v2A1.5 1.5 0 003.5 17h6a1.5 1.5 0 001.5-1.5v-2A1.5 1.5 0 009.5 12h-6z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(RectangleGroupIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/RectangleStackIcon.js
        var require_RectangleStackIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/RectangleStackIcon.js"(exports, module) {
                var React2 = require_react();
                function RectangleStackIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M5.127 3.502L5.25 3.5h9.5c.041 0 .082 0 .123.002A2.251 2.251 0 0012.75 2h-5.5a2.25 2.25 0 00-2.123 1.502zM1 10.25A2.25 2.25 0 013.25 8h13.5A2.25 2.25 0 0119 10.25v5.5A2.25 2.25 0 0116.75 18H3.25A2.25 2.25 0 011 15.75v-5.5zM3.25 6.5c-.04 0-.082 0-.123.002A2.25 2.25 0 015.25 5h9.5c.98 0 1.814.627 2.123 1.502a3.819 3.819 0 00-.123-.002H3.25z"
                    }));
                }
                var ForwardRef = React2.forwardRef(RectangleStackIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/RocketLaunchIcon.js
        var require_RocketLaunchIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/RocketLaunchIcon.js"(exports, module) {
                var React2 = require_react();
                function RocketLaunchIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M4.606 12.97a.75.75 0 01-.134 1.051 2.494 2.494 0 00-.93 2.437 2.494 2.494 0 002.437-.93.75.75 0 111.186.918 3.995 3.995 0 01-4.482 1.332.75.75 0 01-.461-.461 3.994 3.994 0 011.332-4.482.75.75 0 011.052.134z",
                        clipRule: "evenodd"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M5.752 12A13.07 13.07 0 008 14.248v4.002c0 .414.336.75.75.75a5 5 0 004.797-6.414 12.984 12.984 0 005.45-10.848.75.75 0 00-.735-.735 12.984 12.984 0 00-10.849 5.45A5 5 0 001 11.25c.001.414.337.75.751.75h4.002zM13 9a2 2 0 100-4 2 2 0 000 4z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(RocketLaunchIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/RssIcon.js
        var require_RssIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/RssIcon.js"(exports, module) {
                var React2 = require_react();
                function RssIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M3.75 3a.75.75 0 00-.75.75v.5c0 .414.336.75.75.75H4c6.075 0 11 4.925 11 11v.25c0 .414.336.75.75.75h.5a.75.75 0 00.75-.75V16C17 8.82 11.18 3 4 3h-.25z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M3 8.75A.75.75 0 013.75 8H4a8 8 0 018 8v.25a.75.75 0 01-.75.75h-.5a.75.75 0 01-.75-.75V16a6 6 0 00-6-6h-.25A.75.75 0 013 9.25v-.5zM7 15a2 2 0 11-4 0 2 2 0 014 0z"
                    }));
                }
                var ForwardRef = React2.forwardRef(RssIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ScaleIcon.js
        var require_ScaleIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ScaleIcon.js"(exports, module) {
                var React2 = require_react();
                function ScaleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10 2a.75.75 0 01.75.75v.258a33.186 33.186 0 016.668.83.75.75 0 01-.336 1.461 31.28 31.28 0 00-1.103-.232l1.702 7.545a.75.75 0 01-.387.832A4.981 4.981 0 0115 14c-.825 0-1.606-.2-2.294-.556a.75.75 0 01-.387-.832l1.77-7.849a31.743 31.743 0 00-3.339-.254v11.505a20.01 20.01 0 013.78.501.75.75 0 11-.339 1.462A18.558 18.558 0 0010 17.5c-1.442 0-2.845.165-4.191.477a.75.75 0 01-.338-1.462 20.01 20.01 0 013.779-.501V4.509c-1.129.026-2.243.112-3.34.254l1.771 7.85a.75.75 0 01-.387.83A4.98 4.98 0 015 14a4.98 4.98 0 01-2.294-.556.75.75 0 01-.387-.832L4.02 5.067c-.37.07-.738.148-1.103.232a.75.75 0 01-.336-1.462 32.845 32.845 0 016.668-.829V2.75A.75.75 0 0110 2zM5 7.543L3.92 12.33a3.499 3.499 0 002.16 0L5 7.543zm10 0l-1.08 4.787a3.498 3.498 0 002.16 0L15 7.543z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ScaleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ScissorsIcon.js
        var require_ScissorsIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ScissorsIcon.js"(exports, module) {
                var React2 = require_react();
                function ScissorsIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M1.469 3.75a3.5 3.5 0 005.617 4.11l.883.51c.025.092.147.116.21.043a3.75 3.75 0 01.5-.484c.286-.23.3-.709-.018-.892l-.825-.477A3.501 3.501 0 001.47 3.75zm2.03 3.482a2 2 0 112-3.464 2 2 0 01-2 3.464zM9.956 8.322a2.75 2.75 0 00-1.588 1.822L7.97 11.63l-.884.51a3.501 3.501 0 10.75 1.3l10.68-6.166a.75.75 0 00-.182-1.374l-.703-.189a2.75 2.75 0 00-1.78.123L9.955 8.322zM2.768 15.5a2 2 0 113.464-2 2 2 0 01-3.464 2z",
                        clipRule: "evenodd"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M12.52 11.89a.5.5 0 00.056.894l3.274 1.381a2.75 2.75 0 001.78.123l.704-.188a.75.75 0 00.18-1.374l-3.47-2.004a.5.5 0 00-.5 0L12.52 11.89z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ScissorsIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ServerStackIcon.js
        var require_ServerStackIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ServerStackIcon.js"(exports, module) {
                var React2 = require_react();
                function ServerStackIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M4.464 3.162A2 2 0 016.28 2h7.44a2 2 0 011.816 1.162l1.154 2.5c.067.145.115.291.145.438A3.508 3.508 0 0016 6H4c-.288 0-.568.035-.835.1.03-.147.078-.293.145-.438l1.154-2.5z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M2 9.5a2 2 0 012-2h12a2 2 0 110 4H4a2 2 0 01-2-2zm13.24 0a.75.75 0 01.75-.75H16a.75.75 0 01.75.75v.01a.75.75 0 01-.75.75h-.01a.75.75 0 01-.75-.75V9.5zm-2.25-.75a.75.75 0 00-.75.75v.01c0 .414.336.75.75.75H13a.75.75 0 00.75-.75V9.5a.75.75 0 00-.75-.75h-.01zM2 15a2 2 0 012-2h12a2 2 0 110 4H4a2 2 0 01-2-2zm13.24 0a.75.75 0 01.75-.75H16a.75.75 0 01.75.75v.01a.75.75 0 01-.75.75h-.01a.75.75 0 01-.75-.75V15zm-2.25-.75a.75.75 0 00-.75.75v.01c0 .414.336.75.75.75H13a.75.75 0 00.75-.75V15a.75.75 0 00-.75-.75h-.01z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ServerStackIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ServerIcon.js
        var require_ServerIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ServerIcon.js"(exports, module) {
                var React2 = require_react();
                function ServerIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M4.632 3.533A2 2 0 016.577 2h6.846a2 2 0 011.945 1.533l1.976 8.234A3.489 3.489 0 0016 11.5H4c-.476 0-.93.095-1.344.267l1.976-8.234z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M4 13a2 2 0 100 4h12a2 2 0 100-4H4zm11.24 2a.75.75 0 01.75-.75H16a.75.75 0 01.75.75v.01a.75.75 0 01-.75.75h-.01a.75.75 0 01-.75-.75V15zm-2.25-.75a.75.75 0 00-.75.75v.01c0 .414.336.75.75.75H13a.75.75 0 00.75-.75V15a.75.75 0 00-.75-.75h-.01z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ServerIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ShareIcon.js
        var require_ShareIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ShareIcon.js"(exports, module) {
                var React2 = require_react();
                function ShareIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M13 4.5a2.5 2.5 0 11.702 1.737L6.97 9.604a2.518 2.518 0 010 .792l6.733 3.367a2.5 2.5 0 11-.671 1.341l-6.733-3.367a2.5 2.5 0 110-3.475l6.733-3.366A2.52 2.52 0 0113 4.5z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ShareIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ShieldCheckIcon.js
        var require_ShieldCheckIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ShieldCheckIcon.js"(exports, module) {
                var React2 = require_react();
                function ShieldCheckIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M9.661 2.237a.531.531 0 01.678 0 11.947 11.947 0 007.078 2.749.5.5 0 01.479.425c.069.52.104 1.05.104 1.59 0 5.162-3.26 9.563-7.834 11.256a.48.48 0 01-.332 0C5.26 16.564 2 12.163 2 7c0-.538.035-1.069.104-1.589a.5.5 0 01.48-.425 11.947 11.947 0 007.077-2.75zm4.196 5.954a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ShieldCheckIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ShieldExclamationIcon.js
        var require_ShieldExclamationIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ShieldExclamationIcon.js"(exports, module) {
                var React2 = require_react();
                function ShieldExclamationIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10.339 2.237a.532.532 0 00-.678 0 11.947 11.947 0 01-7.078 2.75.5.5 0 00-.479.425A12.11 12.11 0 002 7c0 5.163 3.26 9.564 7.834 11.257a.48.48 0 00.332 0C14.74 16.564 18 12.163 18 7.001c0-.54-.035-1.07-.104-1.59a.5.5 0 00-.48-.425 11.947 11.947 0 01-7.077-2.75zM10 6a.75.75 0 01.75.75v3.5a.75.75 0 01-1.5 0v-3.5A.75.75 0 0110 6zm0 9a1 1 0 100-2 1 1 0 000 2z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ShieldExclamationIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ShoppingBagIcon.js
        var require_ShoppingBagIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ShoppingBagIcon.js"(exports, module) {
                var React2 = require_react();
                function ShoppingBagIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M6 5v1H4.667a1.75 1.75 0 00-1.743 1.598l-.826 9.5A1.75 1.75 0 003.84 19H16.16a1.75 1.75 0 001.743-1.902l-.826-9.5A1.75 1.75 0 0015.333 6H14V5a4 4 0 00-8 0zm4-2.5A2.5 2.5 0 007.5 5v1h5V5A2.5 2.5 0 0010 2.5zM7.5 10a2.5 2.5 0 005 0V8.75a.75.75 0 011.5 0V10a4 4 0 01-8 0V8.75a.75.75 0 011.5 0V10z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ShoppingBagIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ShoppingCartIcon.js
        var require_ShoppingCartIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ShoppingCartIcon.js"(exports, module) {
                var React2 = require_react();
                function ShoppingCartIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M1 1.75A.75.75 0 011.75 1h1.628a1.75 1.75 0 011.734 1.51L5.18 3a65.25 65.25 0 0113.36 1.412.75.75 0 01.58.875 48.645 48.645 0 01-1.618 6.2.75.75 0 01-.712.513H6a2.503 2.503 0 00-2.292 1.5H17.25a.75.75 0 010 1.5H2.76a.75.75 0 01-.748-.807 4.002 4.002 0 012.716-3.486L3.626 2.716a.25.25 0 00-.248-.216H1.75A.75.75 0 011 1.75zM6 17.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM15.5 19a1.5 1.5 0 100-3 1.5 1.5 0 000 3z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ShoppingCartIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/SignalSlashIcon.js
        var require_SignalSlashIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/SignalSlashIcon.js"(exports, module) {
                var React2 = require_react();
                function SignalSlashIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M2.22 2.22a.75.75 0 011.06 0l6.783 6.782a1 1 0 01.935.935l6.782 6.783a.75.75 0 11-1.06 1.06l-6.783-6.782a1 1 0 01-.935-.935L2.22 3.28a.75.75 0 010-1.06zM3.636 16.364a9.004 9.004 0 01-1.39-10.936L3.349 6.53a7.503 7.503 0 001.348 8.773.75.75 0 01-1.061 1.061zM6.464 13.536a5 5 0 01-1.213-5.103l1.262 1.262a3.493 3.493 0 001.012 2.78.75.75 0 01-1.06 1.06zM16.364 3.636a9.004 9.004 0 011.39 10.937l-1.103-1.104a7.503 7.503 0 00-1.348-8.772.75.75 0 111.061-1.061zM13.536 6.464a5 5 0 011.213 5.103l-1.262-1.262a3.493 3.493 0 00-1.012-2.78.75.75 0 011.06-1.06z"
                    }));
                }
                var ForwardRef = React2.forwardRef(SignalSlashIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/SignalIcon.js
        var require_SignalIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/SignalIcon.js"(exports, module) {
                var React2 = require_react();
                function SignalIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M16.364 3.636a.75.75 0 00-1.06 1.06 7.5 7.5 0 010 10.607.75.75 0 001.06 1.061 9 9 0 000-12.728zM4.697 4.697a.75.75 0 00-1.061-1.06 9 9 0 000 12.727.75.75 0 101.06-1.06 7.5 7.5 0 010-10.607z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M12.475 6.465a.75.75 0 011.06 0 5 5 0 010 7.07.75.75 0 11-1.06-1.06 3.5 3.5 0 000-4.95.75.75 0 010-1.06zM7.525 6.465a.75.75 0 010 1.06 3.5 3.5 0 000 4.95.75.75 0 01-1.06 1.06 5 5 0 010-7.07.75.75 0 011.06 0zM11 10a1 1 0 11-2 0 1 1 0 012 0z"
                    }));
                }
                var ForwardRef = React2.forwardRef(SignalIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/SparklesIcon.js
        var require_SparklesIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/SparklesIcon.js"(exports, module) {
                var React2 = require_react();
                function SparklesIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M15.98 1.804a1 1 0 00-1.96 0l-.24 1.192a1 1 0 01-.784.785l-1.192.238a1 1 0 000 1.962l1.192.238a1 1 0 01.785.785l.238 1.192a1 1 0 001.962 0l.238-1.192a1 1 0 01.785-.785l1.192-.238a1 1 0 000-1.962l-1.192-.238a1 1 0 01-.785-.785l-.238-1.192zM6.949 5.684a1 1 0 00-1.898 0l-.683 2.051a1 1 0 01-.633.633l-2.051.683a1 1 0 000 1.898l2.051.684a1 1 0 01.633.632l.683 2.051a1 1 0 001.898 0l.683-2.051a1 1 0 01.633-.633l2.051-.683a1 1 0 000-1.898l-2.051-.683a1 1 0 01-.633-.633L6.95 5.684zM13.949 13.684a1 1 0 00-1.898 0l-.184.551a1 1 0 01-.632.633l-.551.183a1 1 0 000 1.898l.551.183a1 1 0 01.633.633l.183.551a1 1 0 001.898 0l.184-.551a1 1 0 01.632-.633l.551-.183a1 1 0 000-1.898l-.551-.184a1 1 0 01-.633-.632l-.183-.551z"
                    }));
                }
                var ForwardRef = React2.forwardRef(SparklesIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/SpeakerWaveIcon.js
        var require_SpeakerWaveIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/SpeakerWaveIcon.js"(exports, module) {
                var React2 = require_react();
                function SpeakerWaveIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M10 3.75a.75.75 0 00-1.264-.546L4.703 7H3.167a.75.75 0 00-.7.48A6.985 6.985 0 002 10c0 .887.165 1.737.468 2.52.111.29.39.48.7.48h1.535l4.033 3.796A.75.75 0 0010 16.25V3.75zM15.95 5.05a.75.75 0 00-1.06 1.061 5.5 5.5 0 010 7.778.75.75 0 001.06 1.06 7 7 0 000-9.899z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M13.829 7.172a.75.75 0 00-1.061 1.06 2.5 2.5 0 010 3.536.75.75 0 001.06 1.06 4 4 0 000-5.656z"
                    }));
                }
                var ForwardRef = React2.forwardRef(SpeakerWaveIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/SpeakerXMarkIcon.js
        var require_SpeakerXMarkIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/SpeakerXMarkIcon.js"(exports, module) {
                var React2 = require_react();
                function SpeakerXMarkIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M9.547 3.062A.75.75 0 0110 3.75v12.5a.75.75 0 01-1.264.546L4.703 13H3.167a.75.75 0 01-.7-.48A6.985 6.985 0 012 10c0-.887.165-1.737.468-2.52a.75.75 0 01.7-.48h1.535l4.033-3.796a.75.75 0 01.811-.142zM13.28 7.22a.75.75 0 10-1.06 1.06L13.94 10l-1.72 1.72a.75.75 0 001.06 1.06L15 11.06l1.72 1.72a.75.75 0 101.06-1.06L16.06 10l1.72-1.72a.75.75 0 00-1.06-1.06L15 8.94l-1.72-1.72z"
                    }));
                }
                var ForwardRef = React2.forwardRef(SpeakerXMarkIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/Square2StackIcon.js
        var require_Square2StackIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/Square2StackIcon.js"(exports, module) {
                var React2 = require_react();
                function Square2StackIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M2 4.25A2.25 2.25 0 014.25 2h6.5A2.25 2.25 0 0113 4.25V5.5H9.25A3.75 3.75 0 005.5 9.25V13H4.25A2.25 2.25 0 012 10.75v-6.5z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M9.25 7A2.25 2.25 0 007 9.25v6.5A2.25 2.25 0 009.25 18h6.5A2.25 2.25 0 0018 15.75v-6.5A2.25 2.25 0 0015.75 7h-6.5z"
                    }));
                }
                var ForwardRef = React2.forwardRef(Square2StackIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/Square3Stack3DIcon.js
        var require_Square3Stack3DIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/Square3Stack3DIcon.js"(exports, module) {
                var React2 = require_react();
                function Square3Stack3DIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M3.196 12.87l-.825.483a.75.75 0 000 1.294l7.25 4.25a.75.75 0 00.758 0l7.25-4.25a.75.75 0 000-1.294l-.825-.484-5.666 3.322a2.25 2.25 0 01-2.276 0L3.196 12.87z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M3.196 8.87l-.825.483a.75.75 0 000 1.294l7.25 4.25a.75.75 0 00.758 0l7.25-4.25a.75.75 0 000-1.294l-.825-.484-5.666 3.322a2.25 2.25 0 01-2.276 0L3.196 8.87z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M10.38 1.103a.75.75 0 00-.76 0l-7.25 4.25a.75.75 0 000 1.294l7.25 4.25a.75.75 0 00.76 0l7.25-4.25a.75.75 0 000-1.294l-7.25-4.25z"
                    }));
                }
                var ForwardRef = React2.forwardRef(Square3Stack3DIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/Squares2X2Icon.js
        var require_Squares2X2Icon = __commonJS({
            "node_modules/@heroicons/react/20/solid/Squares2X2Icon.js"(exports, module) {
                var React2 = require_react();
                function Squares2X2Icon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M4.25 2A2.25 2.25 0 002 4.25v2.5A2.25 2.25 0 004.25 9h2.5A2.25 2.25 0 009 6.75v-2.5A2.25 2.25 0 006.75 2h-2.5zm0 9A2.25 2.25 0 002 13.25v2.5A2.25 2.25 0 004.25 18h2.5A2.25 2.25 0 009 15.75v-2.5A2.25 2.25 0 006.75 11h-2.5zm9-9A2.25 2.25 0 0011 4.25v2.5A2.25 2.25 0 0013.25 9h2.5A2.25 2.25 0 0018 6.75v-2.5A2.25 2.25 0 0015.75 2h-2.5zm0 9A2.25 2.25 0 0011 13.25v2.5A2.25 2.25 0 0013.25 18h2.5A2.25 2.25 0 0018 15.75v-2.5A2.25 2.25 0 0015.75 11h-2.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(Squares2X2Icon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/SquaresPlusIcon.js
        var require_SquaresPlusIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/SquaresPlusIcon.js"(exports, module) {
                var React2 = require_react();
                function SquaresPlusIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M2 4.25A2.25 2.25 0 014.25 2h2.5A2.25 2.25 0 019 4.25v2.5A2.25 2.25 0 016.75 9h-2.5A2.25 2.25 0 012 6.75v-2.5zM2 13.25A2.25 2.25 0 014.25 11h2.5A2.25 2.25 0 019 13.25v2.5A2.25 2.25 0 016.75 18h-2.5A2.25 2.25 0 012 15.75v-2.5zM11 4.25A2.25 2.25 0 0113.25 2h2.5A2.25 2.25 0 0118 4.25v2.5A2.25 2.25 0 0115.75 9h-2.5A2.25 2.25 0 0111 6.75v-2.5zM15.25 11.75a.75.75 0 00-1.5 0v2h-2a.75.75 0 000 1.5h2v2a.75.75 0 001.5 0v-2h2a.75.75 0 000-1.5h-2v-2z"
                    }));
                }
                var ForwardRef = React2.forwardRef(SquaresPlusIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/StarIcon.js
        var require_StarIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/StarIcon.js"(exports, module) {
                var React2 = require_react();
                function StarIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10.868 2.884c-.321-.772-1.415-.772-1.736 0l-1.83 4.401-4.753.381c-.833.067-1.171 1.107-.536 1.651l3.62 3.102-1.106 4.637c-.194.813.691 1.456 1.405 1.02L10 15.591l4.069 2.485c.713.436 1.598-.207 1.404-1.02l-1.106-4.637 3.62-3.102c.635-.544.297-1.584-.536-1.65l-4.752-.382-1.831-4.401z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(StarIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/StopCircleIcon.js
        var require_StopCircleIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/StopCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function StopCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M2 10a8 8 0 1116 0 8 8 0 01-16 0zm5-2.25A.75.75 0 017.75 7h4.5a.75.75 0 01.75.75v4.5a.75.75 0 01-.75.75h-4.5a.75.75 0 01-.75-.75v-4.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(StopCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/StopIcon.js
        var require_StopIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/StopIcon.js"(exports, module) {
                var React2 = require_react();
                function StopIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M5.25 3A2.25 2.25 0 003 5.25v9.5A2.25 2.25 0 005.25 17h9.5A2.25 2.25 0 0017 14.75v-9.5A2.25 2.25 0 0014.75 3h-9.5z"
                    }));
                }
                var ForwardRef = React2.forwardRef(StopIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/SunIcon.js
        var require_SunIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/SunIcon.js"(exports, module) {
                var React2 = require_react();
                function SunIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M10 2a.75.75 0 01.75.75v1.5a.75.75 0 01-1.5 0v-1.5A.75.75 0 0110 2zM10 15a.75.75 0 01.75.75v1.5a.75.75 0 01-1.5 0v-1.5A.75.75 0 0110 15zM10 7a3 3 0 100 6 3 3 0 000-6zM15.657 5.404a.75.75 0 10-1.06-1.06l-1.061 1.06a.75.75 0 001.06 1.06l1.06-1.06zM6.464 14.596a.75.75 0 10-1.06-1.06l-1.06 1.06a.75.75 0 001.06 1.06l1.06-1.06zM18 10a.75.75 0 01-.75.75h-1.5a.75.75 0 010-1.5h1.5A.75.75 0 0118 10zM5 10a.75.75 0 01-.75.75h-1.5a.75.75 0 010-1.5h1.5A.75.75 0 015 10zM14.596 15.657a.75.75 0 001.06-1.06l-1.06-1.061a.75.75 0 10-1.06 1.06l1.06 1.06zM5.404 6.464a.75.75 0 001.06-1.06l-1.06-1.06a.75.75 0 10-1.061 1.06l1.06 1.06z"
                    }));
                }
                var ForwardRef = React2.forwardRef(SunIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/SwatchIcon.js
        var require_SwatchIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/SwatchIcon.js"(exports, module) {
                var React2 = require_react();
                function SwatchIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M3.5 2A1.5 1.5 0 002 3.5V15a3 3 0 106 0V3.5A1.5 1.5 0 006.5 2h-3zm11.753 6.99L9.5 14.743V6.257l1.51-1.51a1.5 1.5 0 012.122 0l2.121 2.121a1.5 1.5 0 010 2.122zM8.364 18H16.5a1.5 1.5 0 001.5-1.5v-3a1.5 1.5 0 00-1.5-1.5h-2.136l-6 6zM5 16a1 1 0 100-2 1 1 0 000 2z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(SwatchIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/TableCellsIcon.js
        var require_TableCellsIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/TableCellsIcon.js"(exports, module) {
                var React2 = require_react();
                function TableCellsIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M.99 5.24A2.25 2.25 0 013.25 3h13.5A2.25 2.25 0 0119 5.25l.01 9.5A2.25 2.25 0 0116.76 17H3.26A2.267 2.267 0 011 14.74l-.01-9.5zm8.26 9.52v-.625a.75.75 0 00-.75-.75H3.25a.75.75 0 00-.75.75v.615c0 .414.336.75.75.75h5.373a.75.75 0 00.627-.74zm1.5 0a.75.75 0 00.627.74h5.373a.75.75 0 00.75-.75v-.615a.75.75 0 00-.75-.75H11.5a.75.75 0 00-.75.75v.625zm6.75-3.63v-.625a.75.75 0 00-.75-.75H11.5a.75.75 0 00-.75.75v.625c0 .414.336.75.75.75h5.25a.75.75 0 00.75-.75zm-8.25 0v-.625a.75.75 0 00-.75-.75H3.25a.75.75 0 00-.75.75v.625c0 .414.336.75.75.75H8.5a.75.75 0 00.75-.75zM17.5 7.5v-.625a.75.75 0 00-.75-.75H11.5a.75.75 0 00-.75.75V7.5c0 .414.336.75.75.75h5.25a.75.75 0 00.75-.75zm-8.25 0v-.625a.75.75 0 00-.75-.75H3.25a.75.75 0 00-.75.75V7.5c0 .414.336.75.75.75H8.5a.75.75 0 00.75-.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(TableCellsIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/TagIcon.js
        var require_TagIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/TagIcon.js"(exports, module) {
                var React2 = require_react();
                function TagIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M5.5 3A2.5 2.5 0 003 5.5v2.879a2.5 2.5 0 00.732 1.767l6.5 6.5a2.5 2.5 0 003.536 0l2.878-2.878a2.5 2.5 0 000-3.536l-6.5-6.5A2.5 2.5 0 008.38 3H5.5zM6 7a1 1 0 100-2 1 1 0 000 2z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(TagIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/TicketIcon.js
        var require_TicketIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/TicketIcon.js"(exports, module) {
                var React2 = require_react();
                function TicketIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M13 3v1.27a.75.75 0 001.5 0V3h2.25A2.25 2.25 0 0119 5.25v2.628a.75.75 0 01-.5.707 1.5 1.5 0 000 2.83c.3.106.5.39.5.707v2.628A2.25 2.25 0 0116.75 17H14.5v-1.27a.75.75 0 00-1.5 0V17H3.25A2.25 2.25 0 011 14.75v-2.628c0-.318.2-.601.5-.707a1.5 1.5 0 000-2.83.75.75 0 01-.5-.707V5.25A2.25 2.25 0 013.25 3H13zm1.5 4.396a.75.75 0 00-1.5 0v1.042a.75.75 0 001.5 0V7.396zm0 4.167a.75.75 0 00-1.5 0v1.041a.75.75 0 001.5 0v-1.041zM6 10.75a.75.75 0 01.75-.75h3.5a.75.75 0 010 1.5h-3.5a.75.75 0 01-.75-.75zm0 2.5a.75.75 0 01.75-.75h1.5a.75.75 0 010 1.5h-1.5a.75.75 0 01-.75-.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(TicketIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/TrashIcon.js
        var require_TrashIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/TrashIcon.js"(exports, module) {
                var React2 = require_react();
                function TrashIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M8.75 1A2.75 2.75 0 006 3.75v.443c-.795.077-1.584.176-2.365.298a.75.75 0 10.23 1.482l.149-.022.841 10.518A2.75 2.75 0 007.596 19h4.807a2.75 2.75 0 002.742-2.53l.841-10.52.149.023a.75.75 0 00.23-1.482A41.03 41.03 0 0014 4.193V3.75A2.75 2.75 0 0011.25 1h-2.5zM10 4c.84 0 1.673.025 2.5.075V3.75c0-.69-.56-1.25-1.25-1.25h-2.5c-.69 0-1.25.56-1.25 1.25v.325C8.327 4.025 9.16 4 10 4zM8.58 7.72a.75.75 0 00-1.5.06l.3 7.5a.75.75 0 101.5-.06l-.3-7.5zm4.34.06a.75.75 0 10-1.5-.06l-.3 7.5a.75.75 0 101.5.06l.3-7.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(TrashIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/TrophyIcon.js
        var require_TrophyIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/TrophyIcon.js"(exports, module) {
                var React2 = require_react();
                function TrophyIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10 1c-1.828 0-3.623.149-5.371.435a.75.75 0 00-.629.74v.387c-.827.157-1.642.345-2.445.564a.75.75 0 00-.552.698 5 5 0 004.503 5.152 6 6 0 002.946 1.822A6.451 6.451 0 017.768 13H7.5A1.5 1.5 0 006 14.5V17h-.75C4.56 17 4 17.56 4 18.25c0 .414.336.75.75.75h10.5a.75.75 0 00.75-.75c0-.69-.56-1.25-1.25-1.25H14v-2.5a1.5 1.5 0 00-1.5-1.5h-.268a6.453 6.453 0 01-.684-2.202 6 6 0 002.946-1.822 5 5 0 004.503-5.152.75.75 0 00-.552-.698A31.804 31.804 0 0016 2.562v-.387a.75.75 0 00-.629-.74A33.227 33.227 0 0010 1zM2.525 4.422C3.012 4.3 3.504 4.19 4 4.09V5c0 .74.134 1.448.38 2.103a3.503 3.503 0 01-1.855-2.68zm14.95 0a3.503 3.503 0 01-1.854 2.68C15.866 6.449 16 5.74 16 5v-.91c.496.099.988.21 1.475.332z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(TrophyIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/TruckIcon.js
        var require_TruckIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/TruckIcon.js"(exports, module) {
                var React2 = require_react();
                function TruckIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M6.5 3c-1.051 0-2.093.04-3.125.117A1.49 1.49 0 002 4.607V10.5h9V4.606c0-.771-.59-1.43-1.375-1.489A41.568 41.568 0 006.5 3zM2 12v2.5A1.5 1.5 0 003.5 16h.041a3 3 0 015.918 0h.791a.75.75 0 00.75-.75V12H2z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3zM13.25 5a.75.75 0 00-.75.75v8.514a3.001 3.001 0 014.893 1.44c.37-.275.61-.719.595-1.227a24.905 24.905 0 00-1.784-8.549A1.486 1.486 0 0014.823 5H13.25zM14.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z"
                    }));
                }
                var ForwardRef = React2.forwardRef(TruckIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/TvIcon.js
        var require_TvIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/TvIcon.js"(exports, module) {
                var React2 = require_react();
                function TvIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M4 5h12v7H4V5z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M1 3.5A1.5 1.5 0 012.5 2h15A1.5 1.5 0 0119 3.5v10a1.5 1.5 0 01-1.5 1.5H12v1.5h3.25a.75.75 0 010 1.5H4.75a.75.75 0 010-1.5H8V15H2.5A1.5 1.5 0 011 13.5v-10zm16.5 0h-15v10h15v-10z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(TvIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/UserCircleIcon.js
        var require_UserCircleIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/UserCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function UserCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-5.5-2.5a2.5 2.5 0 11-5 0 2.5 2.5 0 015 0zM10 12a5.99 5.99 0 00-4.793 2.39A6.483 6.483 0 0010 16.5a6.483 6.483 0 004.793-2.11A5.99 5.99 0 0010 12z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(UserCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/UserGroupIcon.js
        var require_UserGroupIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/UserGroupIcon.js"(exports, module) {
                var React2 = require_react();
                function UserGroupIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M10 9a3 3 0 100-6 3 3 0 000 6zM6 8a2 2 0 11-4 0 2 2 0 014 0zM1.49 15.326a.78.78 0 01-.358-.442 3 3 0 014.308-3.516 6.484 6.484 0 00-1.905 3.959c-.023.222-.014.442.025.654a4.97 4.97 0 01-2.07-.655zM16.44 15.98a4.97 4.97 0 002.07-.654.78.78 0 00.357-.442 3 3 0 00-4.308-3.517 6.484 6.484 0 011.907 3.96 2.32 2.32 0 01-.026.654zM18 8a2 2 0 11-4 0 2 2 0 014 0zM5.304 16.19a.844.844 0 01-.277-.71 5 5 0 019.947 0 .843.843 0 01-.277.71A6.975 6.975 0 0110 18a6.974 6.974 0 01-4.696-1.81z"
                    }));
                }
                var ForwardRef = React2.forwardRef(UserGroupIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/UserMinusIcon.js
        var require_UserMinusIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/UserMinusIcon.js"(exports, module) {
                var React2 = require_react();
                function UserMinusIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M11 5a3 3 0 11-6 0 3 3 0 016 0zM2.046 15.253c-.058.468.172.92.57 1.175A9.953 9.953 0 008 18c1.982 0 3.83-.578 5.384-1.573.398-.254.628-.707.57-1.175a6.001 6.001 0 00-11.908 0zM12.75 7.75a.75.75 0 000 1.5h5.5a.75.75 0 000-1.5h-5.5z"
                    }));
                }
                var ForwardRef = React2.forwardRef(UserMinusIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/UserPlusIcon.js
        var require_UserPlusIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/UserPlusIcon.js"(exports, module) {
                var React2 = require_react();
                function UserPlusIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M11 5a3 3 0 11-6 0 3 3 0 016 0zM2.615 16.428a1.224 1.224 0 01-.569-1.175 6.002 6.002 0 0111.908 0c.058.467-.172.92-.57 1.174A9.953 9.953 0 018 18a9.953 9.953 0 01-5.385-1.572zM16.25 5.75a.75.75 0 00-1.5 0v2h-2a.75.75 0 000 1.5h2v2a.75.75 0 001.5 0v-2h2a.75.75 0 000-1.5h-2v-2z"
                    }));
                }
                var ForwardRef = React2.forwardRef(UserPlusIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/UserIcon.js
        var require_UserIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/UserIcon.js"(exports, module) {
                var React2 = require_react();
                function UserIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M10 8a3 3 0 100-6 3 3 0 000 6zM3.465 14.493a1.23 1.23 0 00.41 1.412A9.957 9.957 0 0010 18c2.31 0 4.438-.784 6.131-2.1.43-.333.604-.903.408-1.41a7.002 7.002 0 00-13.074.003z"
                    }));
                }
                var ForwardRef = React2.forwardRef(UserIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/UsersIcon.js
        var require_UsersIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/UsersIcon.js"(exports, module) {
                var React2 = require_react();
                function UsersIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M7 8a3 3 0 100-6 3 3 0 000 6zM14.5 9a2.5 2.5 0 100-5 2.5 2.5 0 000 5zM1.615 16.428a1.224 1.224 0 01-.569-1.175 6.002 6.002 0 0111.908 0c.058.467-.172.92-.57 1.174A9.953 9.953 0 017 18a9.953 9.953 0 01-5.385-1.572zM14.5 16h-.106c.07-.297.088-.611.048-.933a7.47 7.47 0 00-1.588-3.755 4.502 4.502 0 015.874 2.636.818.818 0 01-.36.98A7.465 7.465 0 0114.5 16z"
                    }));
                }
                var ForwardRef = React2.forwardRef(UsersIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/VariableIcon.js
        var require_VariableIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/VariableIcon.js"(exports, module) {
                var React2 = require_react();
                function VariableIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M15.212 2.079a.75.75 0 011.006.336A16.932 16.932 0 0118 10c0 2.724-.641 5.3-1.782 7.585a.75.75 0 11-1.342-.67A15.432 15.432 0 0016.5 10c0-2.486-.585-4.834-1.624-6.915a.75.75 0 01.336-1.006zm-10.424 0a.75.75 0 01.336 1.006A15.433 15.433 0 003.5 10c0 2.486.585 4.834 1.624 6.915a.75.75 0 11-1.342.67A16.933 16.933 0 012 10c0-2.724.641-5.3 1.782-7.585a.75.75 0 011.006-.336zm2.285 3.554a1.5 1.5 0 012.219.677l.856 2.08 1.146-1.77a2.25 2.25 0 013.137-.65l.235.156a.75.75 0 11-.832 1.248l-.235-.156a.75.75 0 00-1.045.216l-1.71 2.644 1.251 3.04.739-.492a.75.75 0 11.832 1.248l-.739.493a1.5 1.5 0 01-2.219-.677l-.856-2.08-1.146 1.77a2.25 2.25 0 01-3.137.65l-.235-.156a.75.75 0 01.832-1.248l.235.157a.75.75 0 001.045-.217l1.71-2.644-1.251-3.04-.739.492a.75.75 0 01-.832-1.248l.739-.493z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(VariableIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/VideoCameraSlashIcon.js
        var require_VideoCameraSlashIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/VideoCameraSlashIcon.js"(exports, module) {
                var React2 = require_react();
                function VideoCameraSlashIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M1 13.75V7.182L9.818 16H3.25A2.25 2.25 0 011 13.75zM13 6.25v6.568L4.182 4h6.568A2.25 2.25 0 0113 6.25zM19 4.75a.75.75 0 00-1.28-.53l-3 3a.75.75 0 00-.22.53v4.5c0 .199.079.39.22.53l3 3a.75.75 0 001.28-.53V4.75zM2.28 4.22a.75.75 0 00-1.06 1.06l10.5 10.5a.75.75 0 101.06-1.06L2.28 4.22z"
                    }));
                }
                var ForwardRef = React2.forwardRef(VideoCameraSlashIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/VideoCameraIcon.js
        var require_VideoCameraIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/VideoCameraIcon.js"(exports, module) {
                var React2 = require_react();
                function VideoCameraIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M3.25 4A2.25 2.25 0 001 6.25v7.5A2.25 2.25 0 003.25 16h7.5A2.25 2.25 0 0013 13.75v-7.5A2.25 2.25 0 0010.75 4h-7.5zM19 4.75a.75.75 0 00-1.28-.53l-3 3a.75.75 0 00-.22.53v4.5c0 .199.079.39.22.53l3 3a.75.75 0 001.28-.53V4.75z"
                    }));
                }
                var ForwardRef = React2.forwardRef(VideoCameraIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ViewColumnsIcon.js
        var require_ViewColumnsIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ViewColumnsIcon.js"(exports, module) {
                var React2 = require_react();
                function ViewColumnsIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M14 17h2.75A2.25 2.25 0 0019 14.75v-9.5A2.25 2.25 0 0016.75 3H14v14zM12.5 3h-5v14h5V3zM3.25 3H6v14H3.25A2.25 2.25 0 011 14.75v-9.5A2.25 2.25 0 013.25 3z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ViewColumnsIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/ViewfinderCircleIcon.js
        var require_ViewfinderCircleIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/ViewfinderCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function ViewfinderCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M4.25 2A2.25 2.25 0 002 4.25v2a.75.75 0 001.5 0v-2a.75.75 0 01.75-.75h2a.75.75 0 000-1.5h-2zM13.75 2a.75.75 0 000 1.5h2a.75.75 0 01.75.75v2a.75.75 0 001.5 0v-2A2.25 2.25 0 0015.75 2h-2zM3.5 13.75a.75.75 0 00-1.5 0v2A2.25 2.25 0 004.25 18h2a.75.75 0 000-1.5h-2a.75.75 0 01-.75-.75v-2zM18 13.75a.75.75 0 00-1.5 0v2a.75.75 0 01-.75.75h-2a.75.75 0 000 1.5h2A2.25 2.25 0 0018 15.75v-2zM7 10a3 3 0 116 0 3 3 0 01-6 0z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ViewfinderCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/WalletIcon.js
        var require_WalletIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/WalletIcon.js"(exports, module) {
                var React2 = require_react();
                function WalletIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M1 4.25a3.733 3.733 0 012.25-.75h13.5c.844 0 1.623.279 2.25.75A2.25 2.25 0 0016.75 2H3.25A2.25 2.25 0 001 4.25zM1 7.25a3.733 3.733 0 012.25-.75h13.5c.844 0 1.623.279 2.25.75A2.25 2.25 0 0016.75 5H3.25A2.25 2.25 0 001 7.25zM7 8a1 1 0 011 1 2 2 0 104 0 1 1 0 011-1h3.75A2.25 2.25 0 0119 10.25v5.5A2.25 2.25 0 0116.75 18H3.25A2.25 2.25 0 011 15.75v-5.5A2.25 2.25 0 013.25 8H7z"
                    }));
                }
                var ForwardRef = React2.forwardRef(WalletIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/WifiIcon.js
        var require_WifiIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/WifiIcon.js"(exports, module) {
                var React2 = require_react();
                function WifiIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M.676 6.941A12.964 12.964 0 0110 3c3.657 0 6.963 1.511 9.324 3.941a.75.75 0 01-.008 1.053l-.353.354a.75.75 0 01-1.069-.008C15.894 6.28 13.097 5 10 5 6.903 5 4.106 6.28 2.106 8.34a.75.75 0 01-1.069.008l-.353-.354a.75.75 0 01-.008-1.053zm2.825 2.833A8.976 8.976 0 0110 7a8.976 8.976 0 016.499 2.774.75.75 0 01-.011 1.049l-.354.354a.75.75 0 01-1.072-.012A6.978 6.978 0 0010 9c-1.99 0-3.786.83-5.061 2.165a.75.75 0 01-1.073.012l-.354-.354a.75.75 0 01-.01-1.05zm2.82 2.84A4.989 4.989 0 0110 11c1.456 0 2.767.623 3.68 1.614a.75.75 0 01-.022 1.039l-.354.354a.75.75 0 01-1.085-.026A2.99 2.99 0 0010 13c-.88 0-1.67.377-2.22.981a.75.75 0 01-1.084.026l-.354-.354a.75.75 0 01-.021-1.039zm2.795 2.752a1.248 1.248 0 011.768 0 .75.75 0 010 1.06l-.354.354a.75.75 0 01-1.06 0l-.354-.353a.75.75 0 010-1.06z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(WifiIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/WindowIcon.js
        var require_WindowIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/WindowIcon.js"(exports, module) {
                var React2 = require_react();
                function WindowIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M3.25 3A2.25 2.25 0 001 5.25v9.5A2.25 2.25 0 003.25 17h13.5A2.25 2.25 0 0019 14.75v-9.5A2.25 2.25 0 0016.75 3H3.25zM2.5 9v5.75c0 .414.336.75.75.75h13.5a.75.75 0 00.75-.75V9h-15zM4 5.25a.75.75 0 00-.75.75v.01c0 .414.336.75.75.75h.01a.75.75 0 00.75-.75V6a.75.75 0 00-.75-.75H4zM6.25 6A.75.75 0 017 5.25h.01a.75.75 0 01.75.75v.01a.75.75 0 01-.75.75H7a.75.75 0 01-.75-.75V6zM10 5.25a.75.75 0 00-.75.75v.01c0 .414.336.75.75.75h.01a.75.75 0 00.75-.75V6a.75.75 0 00-.75-.75H10z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(WindowIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/WrenchScrewdriverIcon.js
        var require_WrenchScrewdriverIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/WrenchScrewdriverIcon.js"(exports, module) {
                var React2 = require_react();
                function WrenchScrewdriverIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M14.5 10a4.5 4.5 0 004.284-5.882c-.105-.324-.51-.391-.752-.15L15.34 6.66a.454.454 0 01-.493.11 3.01 3.01 0 01-1.618-1.616.455.455 0 01.11-.494l2.694-2.692c.24-.241.174-.647-.15-.752a4.5 4.5 0 00-5.873 4.575c.055.873-.128 1.808-.8 2.368l-7.23 6.024a2.724 2.724 0 103.837 3.837l6.024-7.23c.56-.672 1.495-.855 2.368-.8.096.007.193.01.291.01zM5 16a1 1 0 11-2 0 1 1 0 012 0z",
                        clipRule: "evenodd"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M14.5 11.5c.173 0 .345-.007.514-.022l3.754 3.754a2.5 2.5 0 01-3.536 3.536l-4.41-4.41 2.172-2.607c.052-.063.147-.138.342-.196.202-.06.469-.087.777-.067.128.008.257.012.387.012zM6 4.586l2.33 2.33a.452.452 0 01-.08.09L6.8 8.214 4.586 6H3.309a.5.5 0 01-.447-.276l-1.7-3.402a.5.5 0 01.093-.577l.49-.49a.5.5 0 01.577-.094l3.402 1.7A.5.5 0 016 3.31v1.277z"
                    }));
                }
                var ForwardRef = React2.forwardRef(WrenchScrewdriverIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/WrenchIcon.js
        var require_WrenchIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/WrenchIcon.js"(exports, module) {
                var React2 = require_react();
                function WrenchIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M19 5.5a4.5 4.5 0 01-4.791 4.49c-.873-.055-1.808.128-2.368.8l-6.024 7.23a2.724 2.724 0 11-3.837-3.837L9.21 8.16c.672-.56.855-1.495.8-2.368a4.5 4.5 0 015.873-4.575c.324.105.39.51.15.752L13.34 4.66a.455.455 0 00-.11.494 3.01 3.01 0 001.617 1.617c.17.07.363.02.493-.111l2.692-2.692c.241-.241.647-.174.752.15.14.435.216.9.216 1.382zM4 17a1 1 0 100-2 1 1 0 000 2z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(WrenchIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/XCircleIcon.js
        var require_XCircleIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/XCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function XCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10 18a8 8 0 100-16 8 8 0 000 16zM8.28 7.22a.75.75 0 00-1.06 1.06L8.94 10l-1.72 1.72a.75.75 0 101.06 1.06L10 11.06l1.72 1.72a.75.75 0 101.06-1.06L11.06 10l1.72-1.72a.75.75 0 00-1.06-1.06L10 8.94 8.28 7.22z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(XCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/XMarkIcon.js
        var require_XMarkIcon = __commonJS({
            "node_modules/@heroicons/react/20/solid/XMarkIcon.js"(exports, module) {
                var React2 = require_react();
                function XMarkIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 20 20",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M6.28 5.22a.75.75 0 00-1.06 1.06L8.94 10l-3.72 3.72a.75.75 0 101.06 1.06L10 11.06l3.72 3.72a.75.75 0 101.06-1.06L11.06 10l3.72-3.72a.75.75 0 00-1.06-1.06L10 8.94 6.28 5.22z"
                    }));
                }
                var ForwardRef = React2.forwardRef(XMarkIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/20/solid/index.js
        var require_solid = __commonJS({
            "node_modules/@heroicons/react/20/solid/index.js"(exports, module) {
                module.exports.AcademicCapIcon = require_AcademicCapIcon();
                module.exports.AdjustmentsHorizontalIcon = require_AdjustmentsHorizontalIcon();
                module.exports.AdjustmentsVerticalIcon = require_AdjustmentsVerticalIcon();
                module.exports.ArchiveBoxArrowDownIcon = require_ArchiveBoxArrowDownIcon();
                module.exports.ArchiveBoxXMarkIcon = require_ArchiveBoxXMarkIcon();
                module.exports.ArchiveBoxIcon = require_ArchiveBoxIcon();
                module.exports.ArrowDownCircleIcon = require_ArrowDownCircleIcon();
                module.exports.ArrowDownLeftIcon = require_ArrowDownLeftIcon();
                module.exports.ArrowDownOnSquareStackIcon = require_ArrowDownOnSquareStackIcon();
                module.exports.ArrowDownOnSquareIcon = require_ArrowDownOnSquareIcon();
                module.exports.ArrowDownRightIcon = require_ArrowDownRightIcon();
                module.exports.ArrowDownTrayIcon = require_ArrowDownTrayIcon();
                module.exports.ArrowDownIcon = require_ArrowDownIcon();
                module.exports.ArrowLeftCircleIcon = require_ArrowLeftCircleIcon();
                module.exports.ArrowLeftOnRectangleIcon = require_ArrowLeftOnRectangleIcon();
                module.exports.ArrowLeftIcon = require_ArrowLeftIcon();
                module.exports.ArrowLongDownIcon = require_ArrowLongDownIcon();
                module.exports.ArrowLongLeftIcon = require_ArrowLongLeftIcon();
                module.exports.ArrowLongRightIcon = require_ArrowLongRightIcon();
                module.exports.ArrowLongUpIcon = require_ArrowLongUpIcon();
                module.exports.ArrowPathRoundedSquareIcon = require_ArrowPathRoundedSquareIcon();
                module.exports.ArrowPathIcon = require_ArrowPathIcon();
                module.exports.ArrowRightCircleIcon = require_ArrowRightCircleIcon();
                module.exports.ArrowRightOnRectangleIcon = require_ArrowRightOnRectangleIcon();
                module.exports.ArrowRightIcon = require_ArrowRightIcon();
                module.exports.ArrowSmallDownIcon = require_ArrowSmallDownIcon();
                module.exports.ArrowSmallLeftIcon = require_ArrowSmallLeftIcon();
                module.exports.ArrowSmallRightIcon = require_ArrowSmallRightIcon();
                module.exports.ArrowSmallUpIcon = require_ArrowSmallUpIcon();
                module.exports.ArrowTopRightOnSquareIcon = require_ArrowTopRightOnSquareIcon();
                module.exports.ArrowTrendingDownIcon = require_ArrowTrendingDownIcon();
                module.exports.ArrowTrendingUpIcon = require_ArrowTrendingUpIcon();
                module.exports.ArrowUpCircleIcon = require_ArrowUpCircleIcon();
                module.exports.ArrowUpLeftIcon = require_ArrowUpLeftIcon();
                module.exports.ArrowUpOnSquareStackIcon = require_ArrowUpOnSquareStackIcon();
                module.exports.ArrowUpOnSquareIcon = require_ArrowUpOnSquareIcon();
                module.exports.ArrowUpRightIcon = require_ArrowUpRightIcon();
                module.exports.ArrowUpTrayIcon = require_ArrowUpTrayIcon();
                module.exports.ArrowUpIcon = require_ArrowUpIcon();
                module.exports.ArrowUturnDownIcon = require_ArrowUturnDownIcon();
                module.exports.ArrowUturnLeftIcon = require_ArrowUturnLeftIcon();
                module.exports.ArrowUturnRightIcon = require_ArrowUturnRightIcon();
                module.exports.ArrowUturnUpIcon = require_ArrowUturnUpIcon();
                module.exports.ArrowsPointingInIcon = require_ArrowsPointingInIcon();
                module.exports.ArrowsPointingOutIcon = require_ArrowsPointingOutIcon();
                module.exports.ArrowsRightLeftIcon = require_ArrowsRightLeftIcon();
                module.exports.ArrowsUpDownIcon = require_ArrowsUpDownIcon();
                module.exports.AtSymbolIcon = require_AtSymbolIcon();
                module.exports.BackspaceIcon = require_BackspaceIcon();
                module.exports.BackwardIcon = require_BackwardIcon();
                module.exports.BanknotesIcon = require_BanknotesIcon();
                module.exports.Bars2Icon = require_Bars2Icon();
                module.exports.Bars3BottomLeftIcon = require_Bars3BottomLeftIcon();
                module.exports.Bars3BottomRightIcon = require_Bars3BottomRightIcon();
                module.exports.Bars3CenterLeftIcon = require_Bars3CenterLeftIcon();
                module.exports.Bars3Icon = require_Bars3Icon();
                module.exports.Bars4Icon = require_Bars4Icon();
                module.exports.BarsArrowDownIcon = require_BarsArrowDownIcon();
                module.exports.BarsArrowUpIcon = require_BarsArrowUpIcon();
                module.exports.Battery0Icon = require_Battery0Icon();
                module.exports.Battery100Icon = require_Battery100Icon();
                module.exports.Battery50Icon = require_Battery50Icon();
                module.exports.BeakerIcon = require_BeakerIcon();
                module.exports.BellAlertIcon = require_BellAlertIcon();
                module.exports.BellSlashIcon = require_BellSlashIcon();
                module.exports.BellSnoozeIcon = require_BellSnoozeIcon();
                module.exports.BellIcon = require_BellIcon();
                module.exports.BoltSlashIcon = require_BoltSlashIcon();
                module.exports.BoltIcon = require_BoltIcon();
                module.exports.BookOpenIcon = require_BookOpenIcon();
                module.exports.BookmarkSlashIcon = require_BookmarkSlashIcon();
                module.exports.BookmarkSquareIcon = require_BookmarkSquareIcon();
                module.exports.BookmarkIcon = require_BookmarkIcon();
                module.exports.BriefcaseIcon = require_BriefcaseIcon();
                module.exports.BugAntIcon = require_BugAntIcon();
                module.exports.BuildingLibraryIcon = require_BuildingLibraryIcon();
                module.exports.BuildingOffice2Icon = require_BuildingOffice2Icon();
                module.exports.BuildingOfficeIcon = require_BuildingOfficeIcon();
                module.exports.BuildingStorefrontIcon = require_BuildingStorefrontIcon();
                module.exports.CakeIcon = require_CakeIcon();
                module.exports.CalculatorIcon = require_CalculatorIcon();
                module.exports.CalendarDaysIcon = require_CalendarDaysIcon();
                module.exports.CalendarIcon = require_CalendarIcon();
                module.exports.CameraIcon = require_CameraIcon();
                module.exports.ChartBarSquareIcon = require_ChartBarSquareIcon();
                module.exports.ChartBarIcon = require_ChartBarIcon();
                module.exports.ChartPieIcon = require_ChartPieIcon();
                module.exports.ChatBubbleBottomCenterTextIcon = require_ChatBubbleBottomCenterTextIcon();
                module.exports.ChatBubbleBottomCenterIcon = require_ChatBubbleBottomCenterIcon();
                module.exports.ChatBubbleLeftEllipsisIcon = require_ChatBubbleLeftEllipsisIcon();
                module.exports.ChatBubbleLeftRightIcon = require_ChatBubbleLeftRightIcon();
                module.exports.ChatBubbleLeftIcon = require_ChatBubbleLeftIcon();
                module.exports.ChatBubbleOvalLeftEllipsisIcon = require_ChatBubbleOvalLeftEllipsisIcon();
                module.exports.ChatBubbleOvalLeftIcon = require_ChatBubbleOvalLeftIcon();
                module.exports.CheckBadgeIcon = require_CheckBadgeIcon();
                module.exports.CheckCircleIcon = require_CheckCircleIcon();
                module.exports.CheckIcon = require_CheckIcon();
                module.exports.ChevronDoubleDownIcon = require_ChevronDoubleDownIcon();
                module.exports.ChevronDoubleLeftIcon = require_ChevronDoubleLeftIcon();
                module.exports.ChevronDoubleRightIcon = require_ChevronDoubleRightIcon();
                module.exports.ChevronDoubleUpIcon = require_ChevronDoubleUpIcon();
                module.exports.ChevronDownIcon = require_ChevronDownIcon();
                module.exports.ChevronLeftIcon = require_ChevronLeftIcon();
                module.exports.ChevronRightIcon = require_ChevronRightIcon();
                module.exports.ChevronUpDownIcon = require_ChevronUpDownIcon();
                module.exports.ChevronUpIcon = require_ChevronUpIcon();
                module.exports.CircleStackIcon = require_CircleStackIcon();
                module.exports.ClipboardDocumentCheckIcon = require_ClipboardDocumentCheckIcon();
                module.exports.ClipboardDocumentListIcon = require_ClipboardDocumentListIcon();
                module.exports.ClipboardDocumentIcon = require_ClipboardDocumentIcon();
                module.exports.ClipboardIcon = require_ClipboardIcon();
                module.exports.ClockIcon = require_ClockIcon();
                module.exports.CloudArrowDownIcon = require_CloudArrowDownIcon();
                module.exports.CloudArrowUpIcon = require_CloudArrowUpIcon();
                module.exports.CloudIcon = require_CloudIcon();
                module.exports.CodeBracketSquareIcon = require_CodeBracketSquareIcon();
                module.exports.CodeBracketIcon = require_CodeBracketIcon();
                module.exports.Cog6ToothIcon = require_Cog6ToothIcon();
                module.exports.Cog8ToothIcon = require_Cog8ToothIcon();
                module.exports.CogIcon = require_CogIcon();
                module.exports.CommandLineIcon = require_CommandLineIcon();
                module.exports.ComputerDesktopIcon = require_ComputerDesktopIcon();
                module.exports.CpuChipIcon = require_CpuChipIcon();
                module.exports.CreditCardIcon = require_CreditCardIcon();
                module.exports.CubeTransparentIcon = require_CubeTransparentIcon();
                module.exports.CubeIcon = require_CubeIcon();
                module.exports.CurrencyBangladeshiIcon = require_CurrencyBangladeshiIcon();
                module.exports.CurrencyDollarIcon = require_CurrencyDollarIcon();
                module.exports.CurrencyEuroIcon = require_CurrencyEuroIcon();
                module.exports.CurrencyPoundIcon = require_CurrencyPoundIcon();
                module.exports.CurrencyRupeeIcon = require_CurrencyRupeeIcon();
                module.exports.CurrencyYenIcon = require_CurrencyYenIcon();
                module.exports.CursorArrowRaysIcon = require_CursorArrowRaysIcon();
                module.exports.CursorArrowRippleIcon = require_CursorArrowRippleIcon();
                module.exports.DevicePhoneMobileIcon = require_DevicePhoneMobileIcon();
                module.exports.DeviceTabletIcon = require_DeviceTabletIcon();
                module.exports.DocumentArrowDownIcon = require_DocumentArrowDownIcon();
                module.exports.DocumentArrowUpIcon = require_DocumentArrowUpIcon();
                module.exports.DocumentChartBarIcon = require_DocumentChartBarIcon();
                module.exports.DocumentCheckIcon = require_DocumentCheckIcon();
                module.exports.DocumentDuplicateIcon = require_DocumentDuplicateIcon();
                module.exports.DocumentMagnifyingGlassIcon = require_DocumentMagnifyingGlassIcon();
                module.exports.DocumentMinusIcon = require_DocumentMinusIcon();
                module.exports.DocumentPlusIcon = require_DocumentPlusIcon();
                module.exports.DocumentTextIcon = require_DocumentTextIcon();
                module.exports.DocumentIcon = require_DocumentIcon();
                module.exports.EllipsisHorizontalCircleIcon = require_EllipsisHorizontalCircleIcon();
                module.exports.EllipsisHorizontalIcon = require_EllipsisHorizontalIcon();
                module.exports.EllipsisVerticalIcon = require_EllipsisVerticalIcon();
                module.exports.EnvelopeOpenIcon = require_EnvelopeOpenIcon();
                module.exports.EnvelopeIcon = require_EnvelopeIcon();
                module.exports.ExclamationCircleIcon = require_ExclamationCircleIcon();
                module.exports.ExclamationTriangleIcon = require_ExclamationTriangleIcon();
                module.exports.EyeDropperIcon = require_EyeDropperIcon();
                module.exports.EyeSlashIcon = require_EyeSlashIcon();
                module.exports.EyeIcon = require_EyeIcon();
                module.exports.FaceFrownIcon = require_FaceFrownIcon();
                module.exports.FaceSmileIcon = require_FaceSmileIcon();
                module.exports.FilmIcon = require_FilmIcon();
                module.exports.FingerPrintIcon = require_FingerPrintIcon();
                module.exports.FireIcon = require_FireIcon();
                module.exports.FlagIcon = require_FlagIcon();
                module.exports.FolderArrowDownIcon = require_FolderArrowDownIcon();
                module.exports.FolderMinusIcon = require_FolderMinusIcon();
                module.exports.FolderOpenIcon = require_FolderOpenIcon();
                module.exports.FolderPlusIcon = require_FolderPlusIcon();
                module.exports.FolderIcon = require_FolderIcon();
                module.exports.ForwardIcon = require_ForwardIcon();
                module.exports.FunnelIcon = require_FunnelIcon();
                module.exports.GifIcon = require_GifIcon();
                module.exports.GiftTopIcon = require_GiftTopIcon();
                module.exports.GiftIcon = require_GiftIcon();
                module.exports.GlobeAltIcon = require_GlobeAltIcon();
                module.exports.GlobeAmericasIcon = require_GlobeAmericasIcon();
                module.exports.GlobeAsiaAustraliaIcon = require_GlobeAsiaAustraliaIcon();
                module.exports.GlobeEuropeAfricaIcon = require_GlobeEuropeAfricaIcon();
                module.exports.HandRaisedIcon = require_HandRaisedIcon();
                module.exports.HandThumbDownIcon = require_HandThumbDownIcon();
                module.exports.HandThumbUpIcon = require_HandThumbUpIcon();
                module.exports.HashtagIcon = require_HashtagIcon();
                module.exports.HeartIcon = require_HeartIcon();
                module.exports.HomeModernIcon = require_HomeModernIcon();
                module.exports.HomeIcon = require_HomeIcon();
                module.exports.IdentificationIcon = require_IdentificationIcon();
                module.exports.InboxArrowDownIcon = require_InboxArrowDownIcon();
                module.exports.InboxStackIcon = require_InboxStackIcon();
                module.exports.InboxIcon = require_InboxIcon();
                module.exports.InformationCircleIcon = require_InformationCircleIcon();
                module.exports.KeyIcon = require_KeyIcon();
                module.exports.LanguageIcon = require_LanguageIcon();
                module.exports.LifebuoyIcon = require_LifebuoyIcon();
                module.exports.LightBulbIcon = require_LightBulbIcon();
                module.exports.LinkIcon = require_LinkIcon();
                module.exports.ListBulletIcon = require_ListBulletIcon();
                module.exports.LockClosedIcon = require_LockClosedIcon();
                module.exports.LockOpenIcon = require_LockOpenIcon();
                module.exports.MagnifyingGlassCircleIcon = require_MagnifyingGlassCircleIcon();
                module.exports.MagnifyingGlassMinusIcon = require_MagnifyingGlassMinusIcon();
                module.exports.MagnifyingGlassPlusIcon = require_MagnifyingGlassPlusIcon();
                module.exports.MagnifyingGlassIcon = require_MagnifyingGlassIcon();
                module.exports.MapPinIcon = require_MapPinIcon();
                module.exports.MapIcon = require_MapIcon();
                module.exports.MegaphoneIcon = require_MegaphoneIcon();
                module.exports.MicrophoneIcon = require_MicrophoneIcon();
                module.exports.MinusCircleIcon = require_MinusCircleIcon();
                module.exports.MinusSmallIcon = require_MinusSmallIcon();
                module.exports.MinusIcon = require_MinusIcon();
                module.exports.MoonIcon = require_MoonIcon();
                module.exports.MusicalNoteIcon = require_MusicalNoteIcon();
                module.exports.NewspaperIcon = require_NewspaperIcon();
                module.exports.NoSymbolIcon = require_NoSymbolIcon();
                module.exports.PaintBrushIcon = require_PaintBrushIcon();
                module.exports.PaperAirplaneIcon = require_PaperAirplaneIcon();
                module.exports.PaperClipIcon = require_PaperClipIcon();
                module.exports.PauseCircleIcon = require_PauseCircleIcon();
                module.exports.PauseIcon = require_PauseIcon();
                module.exports.PencilSquareIcon = require_PencilSquareIcon();
                module.exports.PencilIcon = require_PencilIcon();
                module.exports.PhoneArrowDownLeftIcon = require_PhoneArrowDownLeftIcon();
                module.exports.PhoneArrowUpRightIcon = require_PhoneArrowUpRightIcon();
                module.exports.PhoneXMarkIcon = require_PhoneXMarkIcon();
                module.exports.PhoneIcon = require_PhoneIcon();
                module.exports.PhotoIcon = require_PhotoIcon();
                module.exports.PlayCircleIcon = require_PlayCircleIcon();
                module.exports.PlayPauseIcon = require_PlayPauseIcon();
                module.exports.PlayIcon = require_PlayIcon();
                module.exports.PlusCircleIcon = require_PlusCircleIcon();
                module.exports.PlusSmallIcon = require_PlusSmallIcon();
                module.exports.PlusIcon = require_PlusIcon();
                module.exports.PowerIcon = require_PowerIcon();
                module.exports.PresentationChartBarIcon = require_PresentationChartBarIcon();
                module.exports.PresentationChartLineIcon = require_PresentationChartLineIcon();
                module.exports.PrinterIcon = require_PrinterIcon();
                module.exports.PuzzlePieceIcon = require_PuzzlePieceIcon();
                module.exports.QrCodeIcon = require_QrCodeIcon();
                module.exports.QuestionMarkCircleIcon = require_QuestionMarkCircleIcon();
                module.exports.QueueListIcon = require_QueueListIcon();
                module.exports.RadioIcon = require_RadioIcon();
                module.exports.ReceiptPercentIcon = require_ReceiptPercentIcon();
                module.exports.ReceiptRefundIcon = require_ReceiptRefundIcon();
                module.exports.RectangleGroupIcon = require_RectangleGroupIcon();
                module.exports.RectangleStackIcon = require_RectangleStackIcon();
                module.exports.RocketLaunchIcon = require_RocketLaunchIcon();
                module.exports.RssIcon = require_RssIcon();
                module.exports.ScaleIcon = require_ScaleIcon();
                module.exports.ScissorsIcon = require_ScissorsIcon();
                module.exports.ServerStackIcon = require_ServerStackIcon();
                module.exports.ServerIcon = require_ServerIcon();
                module.exports.ShareIcon = require_ShareIcon();
                module.exports.ShieldCheckIcon = require_ShieldCheckIcon();
                module.exports.ShieldExclamationIcon = require_ShieldExclamationIcon();
                module.exports.ShoppingBagIcon = require_ShoppingBagIcon();
                module.exports.ShoppingCartIcon = require_ShoppingCartIcon();
                module.exports.SignalSlashIcon = require_SignalSlashIcon();
                module.exports.SignalIcon = require_SignalIcon();
                module.exports.SparklesIcon = require_SparklesIcon();
                module.exports.SpeakerWaveIcon = require_SpeakerWaveIcon();
                module.exports.SpeakerXMarkIcon = require_SpeakerXMarkIcon();
                module.exports.Square2StackIcon = require_Square2StackIcon();
                module.exports.Square3Stack3DIcon = require_Square3Stack3DIcon();
                module.exports.Squares2X2Icon = require_Squares2X2Icon();
                module.exports.SquaresPlusIcon = require_SquaresPlusIcon();
                module.exports.StarIcon = require_StarIcon();
                module.exports.StopCircleIcon = require_StopCircleIcon();
                module.exports.StopIcon = require_StopIcon();
                module.exports.SunIcon = require_SunIcon();
                module.exports.SwatchIcon = require_SwatchIcon();
                module.exports.TableCellsIcon = require_TableCellsIcon();
                module.exports.TagIcon = require_TagIcon();
                module.exports.TicketIcon = require_TicketIcon();
                module.exports.TrashIcon = require_TrashIcon();
                module.exports.TrophyIcon = require_TrophyIcon();
                module.exports.TruckIcon = require_TruckIcon();
                module.exports.TvIcon = require_TvIcon();
                module.exports.UserCircleIcon = require_UserCircleIcon();
                module.exports.UserGroupIcon = require_UserGroupIcon();
                module.exports.UserMinusIcon = require_UserMinusIcon();
                module.exports.UserPlusIcon = require_UserPlusIcon();
                module.exports.UserIcon = require_UserIcon();
                module.exports.UsersIcon = require_UsersIcon();
                module.exports.VariableIcon = require_VariableIcon();
                module.exports.VideoCameraSlashIcon = require_VideoCameraSlashIcon();
                module.exports.VideoCameraIcon = require_VideoCameraIcon();
                module.exports.ViewColumnsIcon = require_ViewColumnsIcon();
                module.exports.ViewfinderCircleIcon = require_ViewfinderCircleIcon();
                module.exports.WalletIcon = require_WalletIcon();
                module.exports.WifiIcon = require_WifiIcon();
                module.exports.WindowIcon = require_WindowIcon();
                module.exports.WrenchScrewdriverIcon = require_WrenchScrewdriverIcon();
                module.exports.WrenchIcon = require_WrenchIcon();
                module.exports.XCircleIcon = require_XCircleIcon();
                module.exports.XMarkIcon = require_XMarkIcon();
            }
        });

        // node_modules/@heroicons/react/24/solid/AcademicCapIcon.js
        var require_AcademicCapIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/AcademicCapIcon.js"(exports, module) {
                var React2 = require_react();
                function AcademicCapIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M11.7 2.805a.75.75 0 01.6 0A60.65 60.65 0 0122.83 8.72a.75.75 0 01-.231 1.337 49.949 49.949 0 00-9.902 3.912l-.003.002-.34.18a.75.75 0 01-.707 0A50.009 50.009 0 007.5 12.174v-.224c0-.131.067-.248.172-.311a54.614 54.614 0 014.653-2.52.75.75 0 00-.65-1.352 56.129 56.129 0 00-4.78 2.589 1.858 1.858 0 00-.859 1.228 49.803 49.803 0 00-4.634-1.527.75.75 0 01-.231-1.337A60.653 60.653 0 0111.7 2.805z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M13.06 15.473a48.45 48.45 0 017.666-3.282c.134 1.414.22 2.843.255 4.285a.75.75 0 01-.46.71 47.878 47.878 0 00-8.105 4.342.75.75 0 01-.832 0 47.877 47.877 0 00-8.104-4.342.75.75 0 01-.461-.71c.035-1.442.121-2.87.255-4.286A48.4 48.4 0 016 13.18v1.27a1.5 1.5 0 00-.14 2.508c-.09.38-.222.753-.397 1.11.452.213.901.434 1.346.661a6.729 6.729 0 00.551-1.608 1.5 1.5 0 00.14-2.67v-.645a48.549 48.549 0 013.44 1.668 2.25 2.25 0 002.12 0z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M4.462 19.462c.42-.419.753-.89 1-1.394.453.213.902.434 1.347.661a6.743 6.743 0 01-1.286 1.794.75.75 0 11-1.06-1.06z"
                    }));
                }
                var ForwardRef = React2.forwardRef(AcademicCapIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/AdjustmentsHorizontalIcon.js
        var require_AdjustmentsHorizontalIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/AdjustmentsHorizontalIcon.js"(exports, module) {
                var React2 = require_react();
                function AdjustmentsHorizontalIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M18.75 12.75h1.5a.75.75 0 000-1.5h-1.5a.75.75 0 000 1.5zM12 6a.75.75 0 01.75-.75h7.5a.75.75 0 010 1.5h-7.5A.75.75 0 0112 6zM12 18a.75.75 0 01.75-.75h7.5a.75.75 0 010 1.5h-7.5A.75.75 0 0112 18zM3.75 6.75h1.5a.75.75 0 100-1.5h-1.5a.75.75 0 000 1.5zM5.25 18.75h-1.5a.75.75 0 010-1.5h1.5a.75.75 0 010 1.5zM3 12a.75.75 0 01.75-.75h7.5a.75.75 0 010 1.5h-7.5A.75.75 0 013 12zM9 3.75a2.25 2.25 0 100 4.5 2.25 2.25 0 000-4.5zM12.75 12a2.25 2.25 0 114.5 0 2.25 2.25 0 01-4.5 0zM9 15.75a2.25 2.25 0 100 4.5 2.25 2.25 0 000-4.5z"
                    }));
                }
                var ForwardRef = React2.forwardRef(AdjustmentsHorizontalIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/AdjustmentsVerticalIcon.js
        var require_AdjustmentsVerticalIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/AdjustmentsVerticalIcon.js"(exports, module) {
                var React2 = require_react();
                function AdjustmentsVerticalIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M6 12a.75.75 0 01-.75-.75v-7.5a.75.75 0 111.5 0v7.5A.75.75 0 016 12zM18 12a.75.75 0 01-.75-.75v-7.5a.75.75 0 011.5 0v7.5A.75.75 0 0118 12zM6.75 20.25v-1.5a.75.75 0 00-1.5 0v1.5a.75.75 0 001.5 0zM18.75 18.75v1.5a.75.75 0 01-1.5 0v-1.5a.75.75 0 011.5 0zM12.75 5.25v-1.5a.75.75 0 00-1.5 0v1.5a.75.75 0 001.5 0zM12 21a.75.75 0 01-.75-.75v-7.5a.75.75 0 011.5 0v7.5A.75.75 0 0112 21zM3.75 15a2.25 2.25 0 104.5 0 2.25 2.25 0 00-4.5 0zM12 11.25a2.25 2.25 0 110-4.5 2.25 2.25 0 010 4.5zM15.75 15a2.25 2.25 0 104.5 0 2.25 2.25 0 00-4.5 0z"
                    }));
                }
                var ForwardRef = React2.forwardRef(AdjustmentsVerticalIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ArchiveBoxArrowDownIcon.js
        var require_ArchiveBoxArrowDownIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ArchiveBoxArrowDownIcon.js"(exports, module) {
                var React2 = require_react();
                function ArchiveBoxArrowDownIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M3.375 3C2.339 3 1.5 3.84 1.5 4.875v.75c0 1.036.84 1.875 1.875 1.875h17.25c1.035 0 1.875-.84 1.875-1.875v-.75C22.5 3.839 21.66 3 20.625 3H3.375z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M3.087 9l.54 9.176A3 3 0 006.62 21h10.757a3 3 0 002.995-2.824L20.913 9H3.087zM12 10.5a.75.75 0 01.75.75v4.94l1.72-1.72a.75.75 0 111.06 1.06l-3 3a.75.75 0 01-1.06 0l-3-3a.75.75 0 111.06-1.06l1.72 1.72v-4.94a.75.75 0 01.75-.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArchiveBoxArrowDownIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ArchiveBoxXMarkIcon.js
        var require_ArchiveBoxXMarkIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ArchiveBoxXMarkIcon.js"(exports, module) {
                var React2 = require_react();
                function ArchiveBoxXMarkIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M3.375 3C2.339 3 1.5 3.84 1.5 4.875v.75c0 1.036.84 1.875 1.875 1.875h17.25c1.035 0 1.875-.84 1.875-1.875v-.75C22.5 3.839 21.66 3 20.625 3H3.375z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M3.087 9l.54 9.176A3 3 0 006.62 21h10.757a3 3 0 002.995-2.824L20.913 9H3.087zm6.133 2.845a.75.75 0 011.06 0l1.72 1.72 1.72-1.72a.75.75 0 111.06 1.06l-1.72 1.72 1.72 1.72a.75.75 0 11-1.06 1.06L12 15.685l-1.72 1.72a.75.75 0 11-1.06-1.06l1.72-1.72-1.72-1.72a.75.75 0 010-1.06z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArchiveBoxXMarkIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ArchiveBoxIcon.js
        var require_ArchiveBoxIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ArchiveBoxIcon.js"(exports, module) {
                var React2 = require_react();
                function ArchiveBoxIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M3.375 3C2.339 3 1.5 3.84 1.5 4.875v.75c0 1.036.84 1.875 1.875 1.875h17.25c1.035 0 1.875-.84 1.875-1.875v-.75C22.5 3.839 21.66 3 20.625 3H3.375z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M3.087 9l.54 9.176A3 3 0 006.62 21h10.757a3 3 0 002.995-2.824L20.913 9H3.087zm6.163 3.75A.75.75 0 0110 12h4a.75.75 0 010 1.5h-4a.75.75 0 01-.75-.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArchiveBoxIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ArrowDownCircleIcon.js
        var require_ArrowDownCircleIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ArrowDownCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowDownCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25zm-.53 14.03a.75.75 0 001.06 0l3-3a.75.75 0 10-1.06-1.06l-1.72 1.72V8.25a.75.75 0 00-1.5 0v5.69l-1.72-1.72a.75.75 0 00-1.06 1.06l3 3z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowDownCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ArrowDownLeftIcon.js
        var require_ArrowDownLeftIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ArrowDownLeftIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowDownLeftIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M20.03 3.97a.75.75 0 010 1.06L6.31 18.75h9.44a.75.75 0 010 1.5H4.5a.75.75 0 01-.75-.75V8.25a.75.75 0 011.5 0v9.44L18.97 3.97a.75.75 0 011.06 0z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowDownLeftIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ArrowDownOnSquareStackIcon.js
        var require_ArrowDownOnSquareStackIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ArrowDownOnSquareStackIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowDownOnSquareStackIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M9.75 6.75h-3a3 3 0 00-3 3v7.5a3 3 0 003 3h7.5a3 3 0 003-3v-7.5a3 3 0 00-3-3h-3V1.5a.75.75 0 00-1.5 0v5.25zm0 0h1.5v5.69l1.72-1.72a.75.75 0 111.06 1.06l-3 3a.75.75 0 01-1.06 0l-3-3a.75.75 0 111.06-1.06l1.72 1.72V6.75z",
                        clipRule: "evenodd"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M7.151 21.75a2.999 2.999 0 002.599 1.5h7.5a3 3 0 003-3v-7.5c0-1.11-.603-2.08-1.5-2.599v7.099a4.5 4.5 0 01-4.5 4.5H7.151z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowDownOnSquareStackIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ArrowDownOnSquareIcon.js
        var require_ArrowDownOnSquareIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ArrowDownOnSquareIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowDownOnSquareIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M12 1.5a.75.75 0 01.75.75V7.5h-1.5V2.25A.75.75 0 0112 1.5zM11.25 7.5v5.69l-1.72-1.72a.75.75 0 00-1.06 1.06l3 3a.75.75 0 001.06 0l3-3a.75.75 0 10-1.06-1.06l-1.72 1.72V7.5h3.75a3 3 0 013 3v9a3 3 0 01-3 3h-9a3 3 0 01-3-3v-9a3 3 0 013-3h3.75z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowDownOnSquareIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ArrowDownRightIcon.js
        var require_ArrowDownRightIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ArrowDownRightIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowDownRightIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M3.97 3.97a.75.75 0 011.06 0l13.72 13.72V8.25a.75.75 0 011.5 0V19.5a.75.75 0 01-.75.75H8.25a.75.75 0 010-1.5h9.44L3.97 5.03a.75.75 0 010-1.06z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowDownRightIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ArrowDownTrayIcon.js
        var require_ArrowDownTrayIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ArrowDownTrayIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowDownTrayIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M12 2.25a.75.75 0 01.75.75v11.69l3.22-3.22a.75.75 0 111.06 1.06l-4.5 4.5a.75.75 0 01-1.06 0l-4.5-4.5a.75.75 0 111.06-1.06l3.22 3.22V3a.75.75 0 01.75-.75zm-9 13.5a.75.75 0 01.75.75v2.25a1.5 1.5 0 001.5 1.5h13.5a1.5 1.5 0 001.5-1.5V16.5a.75.75 0 011.5 0v2.25a3 3 0 01-3 3H5.25a3 3 0 01-3-3V16.5a.75.75 0 01.75-.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowDownTrayIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ArrowDownIcon.js
        var require_ArrowDownIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ArrowDownIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowDownIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M12 2.25a.75.75 0 01.75.75v16.19l6.22-6.22a.75.75 0 111.06 1.06l-7.5 7.5a.75.75 0 01-1.06 0l-7.5-7.5a.75.75 0 111.06-1.06l6.22 6.22V3a.75.75 0 01.75-.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowDownIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ArrowLeftCircleIcon.js
        var require_ArrowLeftCircleIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ArrowLeftCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowLeftCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25zm-4.28 9.22a.75.75 0 000 1.06l3 3a.75.75 0 101.06-1.06l-1.72-1.72h5.69a.75.75 0 000-1.5h-5.69l1.72-1.72a.75.75 0 00-1.06-1.06l-3 3z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowLeftCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ArrowLeftOnRectangleIcon.js
        var require_ArrowLeftOnRectangleIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ArrowLeftOnRectangleIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowLeftOnRectangleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M7.5 3.75A1.5 1.5 0 006 5.25v13.5a1.5 1.5 0 001.5 1.5h6a1.5 1.5 0 001.5-1.5V15a.75.75 0 011.5 0v3.75a3 3 0 01-3 3h-6a3 3 0 01-3-3V5.25a3 3 0 013-3h6a3 3 0 013 3V9A.75.75 0 0115 9V5.25a1.5 1.5 0 00-1.5-1.5h-6zm5.03 4.72a.75.75 0 010 1.06l-1.72 1.72h10.94a.75.75 0 010 1.5H10.81l1.72 1.72a.75.75 0 11-1.06 1.06l-3-3a.75.75 0 010-1.06l3-3a.75.75 0 011.06 0z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowLeftOnRectangleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ArrowLeftIcon.js
        var require_ArrowLeftIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ArrowLeftIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowLeftIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M11.03 3.97a.75.75 0 010 1.06l-6.22 6.22H21a.75.75 0 010 1.5H4.81l6.22 6.22a.75.75 0 11-1.06 1.06l-7.5-7.5a.75.75 0 010-1.06l7.5-7.5a.75.75 0 011.06 0z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowLeftIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ArrowLongDownIcon.js
        var require_ArrowLongDownIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ArrowLongDownIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowLongDownIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M12 2.25a.75.75 0 01.75.75v16.19l2.47-2.47a.75.75 0 111.06 1.06l-3.75 3.75a.75.75 0 01-1.06 0l-3.75-3.75a.75.75 0 111.06-1.06l2.47 2.47V3a.75.75 0 01.75-.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowLongDownIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ArrowLongLeftIcon.js
        var require_ArrowLongLeftIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ArrowLongLeftIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowLongLeftIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M7.28 7.72a.75.75 0 010 1.06l-2.47 2.47H21a.75.75 0 010 1.5H4.81l2.47 2.47a.75.75 0 11-1.06 1.06l-3.75-3.75a.75.75 0 010-1.06l3.75-3.75a.75.75 0 011.06 0z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowLongLeftIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ArrowLongRightIcon.js
        var require_ArrowLongRightIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ArrowLongRightIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowLongRightIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M16.72 7.72a.75.75 0 011.06 0l3.75 3.75a.75.75 0 010 1.06l-3.75 3.75a.75.75 0 11-1.06-1.06l2.47-2.47H3a.75.75 0 010-1.5h16.19l-2.47-2.47a.75.75 0 010-1.06z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowLongRightIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ArrowLongUpIcon.js
        var require_ArrowLongUpIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ArrowLongUpIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowLongUpIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M11.47 2.47a.75.75 0 011.06 0l3.75 3.75a.75.75 0 01-1.06 1.06l-2.47-2.47V21a.75.75 0 01-1.5 0V4.81L8.78 7.28a.75.75 0 01-1.06-1.06l3.75-3.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowLongUpIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ArrowPathRoundedSquareIcon.js
        var require_ArrowPathRoundedSquareIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ArrowPathRoundedSquareIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowPathRoundedSquareIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M12 5.25c1.213 0 2.415.046 3.605.135a3.256 3.256 0 013.01 3.01c.044.583.077 1.17.1 1.759L17.03 8.47a.75.75 0 10-1.06 1.06l3 3a.75.75 0 001.06 0l3-3a.75.75 0 00-1.06-1.06l-1.752 1.751c-.023-.65-.06-1.296-.108-1.939a4.756 4.756 0 00-4.392-4.392 49.422 49.422 0 00-7.436 0A4.756 4.756 0 003.89 8.282c-.017.224-.033.447-.046.672a.75.75 0 101.497.092c.013-.217.028-.434.044-.651a3.256 3.256 0 013.01-3.01c1.19-.09 2.392-.135 3.605-.135zm-6.97 6.22a.75.75 0 00-1.06 0l-3 3a.75.75 0 101.06 1.06l1.752-1.751c.023.65.06 1.296.108 1.939a4.756 4.756 0 004.392 4.392 49.413 49.413 0 007.436 0 4.756 4.756 0 004.392-4.392c.017-.223.032-.447.046-.672a.75.75 0 00-1.497-.092c-.013.217-.028.434-.044.651a3.256 3.256 0 01-3.01 3.01 47.953 47.953 0 01-7.21 0 3.256 3.256 0 01-3.01-3.01 47.759 47.759 0 01-.1-1.759L6.97 15.53a.75.75 0 001.06-1.06l-3-3z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowPathRoundedSquareIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ArrowPathIcon.js
        var require_ArrowPathIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ArrowPathIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowPathIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M4.755 10.059a7.5 7.5 0 0112.548-3.364l1.903 1.903h-3.183a.75.75 0 100 1.5h4.992a.75.75 0 00.75-.75V4.356a.75.75 0 00-1.5 0v3.18l-1.9-1.9A9 9 0 003.306 9.67a.75.75 0 101.45.388zm15.408 3.352a.75.75 0 00-.919.53 7.5 7.5 0 01-12.548 3.364l-1.902-1.903h3.183a.75.75 0 000-1.5H2.984a.75.75 0 00-.75.75v4.992a.75.75 0 001.5 0v-3.18l1.9 1.9a9 9 0 0015.059-4.035.75.75 0 00-.53-.918z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowPathIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ArrowRightCircleIcon.js
        var require_ArrowRightCircleIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ArrowRightCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowRightCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25zm4.28 10.28a.75.75 0 000-1.06l-3-3a.75.75 0 10-1.06 1.06l1.72 1.72H8.25a.75.75 0 000 1.5h5.69l-1.72 1.72a.75.75 0 101.06 1.06l3-3z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowRightCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ArrowRightOnRectangleIcon.js
        var require_ArrowRightOnRectangleIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ArrowRightOnRectangleIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowRightOnRectangleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M7.5 3.75A1.5 1.5 0 006 5.25v13.5a1.5 1.5 0 001.5 1.5h6a1.5 1.5 0 001.5-1.5V15a.75.75 0 011.5 0v3.75a3 3 0 01-3 3h-6a3 3 0 01-3-3V5.25a3 3 0 013-3h6a3 3 0 013 3V9A.75.75 0 0115 9V5.25a1.5 1.5 0 00-1.5-1.5h-6zm10.72 4.72a.75.75 0 011.06 0l3 3a.75.75 0 010 1.06l-3 3a.75.75 0 11-1.06-1.06l1.72-1.72H9a.75.75 0 010-1.5h10.94l-1.72-1.72a.75.75 0 010-1.06z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowRightOnRectangleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ArrowRightIcon.js
        var require_ArrowRightIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ArrowRightIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowRightIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M12.97 3.97a.75.75 0 011.06 0l7.5 7.5a.75.75 0 010 1.06l-7.5 7.5a.75.75 0 11-1.06-1.06l6.22-6.22H3a.75.75 0 010-1.5h16.19l-6.22-6.22a.75.75 0 010-1.06z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowRightIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ArrowSmallDownIcon.js
        var require_ArrowSmallDownIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ArrowSmallDownIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowSmallDownIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M12 3.75a.75.75 0 01.75.75v13.19l5.47-5.47a.75.75 0 111.06 1.06l-6.75 6.75a.75.75 0 01-1.06 0l-6.75-6.75a.75.75 0 111.06-1.06l5.47 5.47V4.5a.75.75 0 01.75-.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowSmallDownIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ArrowSmallLeftIcon.js
        var require_ArrowSmallLeftIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ArrowSmallLeftIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowSmallLeftIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M20.25 12a.75.75 0 01-.75.75H6.31l5.47 5.47a.75.75 0 11-1.06 1.06l-6.75-6.75a.75.75 0 010-1.06l6.75-6.75a.75.75 0 111.06 1.06l-5.47 5.47H19.5a.75.75 0 01.75.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowSmallLeftIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ArrowSmallRightIcon.js
        var require_ArrowSmallRightIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ArrowSmallRightIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowSmallRightIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M3.75 12a.75.75 0 01.75-.75h13.19l-5.47-5.47a.75.75 0 011.06-1.06l6.75 6.75a.75.75 0 010 1.06l-6.75 6.75a.75.75 0 11-1.06-1.06l5.47-5.47H4.5a.75.75 0 01-.75-.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowSmallRightIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ArrowSmallUpIcon.js
        var require_ArrowSmallUpIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ArrowSmallUpIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowSmallUpIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M12 20.25a.75.75 0 01-.75-.75V6.31l-5.47 5.47a.75.75 0 01-1.06-1.06l6.75-6.75a.75.75 0 011.06 0l6.75 6.75a.75.75 0 11-1.06 1.06l-5.47-5.47V19.5a.75.75 0 01-.75.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowSmallUpIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ArrowTopRightOnSquareIcon.js
        var require_ArrowTopRightOnSquareIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ArrowTopRightOnSquareIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowTopRightOnSquareIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M15.75 2.25H21a.75.75 0 01.75.75v5.25a.75.75 0 01-1.5 0V4.81L8.03 17.03a.75.75 0 01-1.06-1.06L19.19 3.75h-3.44a.75.75 0 010-1.5zm-10.5 4.5a1.5 1.5 0 00-1.5 1.5v10.5a1.5 1.5 0 001.5 1.5h10.5a1.5 1.5 0 001.5-1.5V10.5a.75.75 0 011.5 0v8.25a3 3 0 01-3 3H5.25a3 3 0 01-3-3V8.25a3 3 0 013-3h8.25a.75.75 0 010 1.5H5.25z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowTopRightOnSquareIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ArrowTrendingDownIcon.js
        var require_ArrowTrendingDownIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ArrowTrendingDownIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowTrendingDownIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M1.72 5.47a.75.75 0 011.06 0L9 11.69l3.756-3.756a.75.75 0 01.985-.066 12.698 12.698 0 014.575 6.832l.308 1.149 2.277-3.943a.75.75 0 111.299.75l-3.182 5.51a.75.75 0 01-1.025.275l-5.511-3.181a.75.75 0 01.75-1.3l3.943 2.277-.308-1.149a11.194 11.194 0 00-3.528-5.617l-3.809 3.81a.75.75 0 01-1.06 0L1.72 6.53a.75.75 0 010-1.061z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowTrendingDownIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ArrowTrendingUpIcon.js
        var require_ArrowTrendingUpIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ArrowTrendingUpIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowTrendingUpIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M15.22 6.268a.75.75 0 01.968-.432l5.942 2.28a.75.75 0 01.431.97l-2.28 5.941a.75.75 0 11-1.4-.537l1.63-4.251-1.086.483a11.2 11.2 0 00-5.45 5.174.75.75 0 01-1.199.19L9 12.31l-6.22 6.22a.75.75 0 11-1.06-1.06l6.75-6.75a.75.75 0 011.06 0l3.606 3.605a12.694 12.694 0 015.68-4.973l1.086-.484-4.251-1.631a.75.75 0 01-.432-.97z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowTrendingUpIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ArrowUpCircleIcon.js
        var require_ArrowUpCircleIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ArrowUpCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowUpCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25zm.53 5.47a.75.75 0 00-1.06 0l-3 3a.75.75 0 101.06 1.06l1.72-1.72v5.69a.75.75 0 001.5 0v-5.69l1.72 1.72a.75.75 0 101.06-1.06l-3-3z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowUpCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ArrowUpLeftIcon.js
        var require_ArrowUpLeftIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ArrowUpLeftIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowUpLeftIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M5.25 6.31v9.44a.75.75 0 01-1.5 0V4.5a.75.75 0 01.75-.75h11.25a.75.75 0 010 1.5H6.31l13.72 13.72a.75.75 0 11-1.06 1.06L5.25 6.31z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowUpLeftIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ArrowUpOnSquareStackIcon.js
        var require_ArrowUpOnSquareStackIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ArrowUpOnSquareStackIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowUpOnSquareStackIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M9.97.97a.75.75 0 011.06 0l3 3a.75.75 0 01-1.06 1.06l-1.72-1.72v3.44h-1.5V3.31L8.03 5.03a.75.75 0 01-1.06-1.06l3-3zM9.75 6.75v6a.75.75 0 001.5 0v-6h3a3 3 0 013 3v7.5a3 3 0 01-3 3h-7.5a3 3 0 01-3-3v-7.5a3 3 0 013-3h3z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M7.151 21.75a2.999 2.999 0 002.599 1.5h7.5a3 3 0 003-3v-7.5c0-1.11-.603-2.08-1.5-2.599v7.099a4.5 4.5 0 01-4.5 4.5H7.151z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowUpOnSquareStackIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ArrowUpOnSquareIcon.js
        var require_ArrowUpOnSquareIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ArrowUpOnSquareIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowUpOnSquareIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M11.47 1.72a.75.75 0 011.06 0l3 3a.75.75 0 01-1.06 1.06l-1.72-1.72V7.5h-1.5V4.06L9.53 5.78a.75.75 0 01-1.06-1.06l3-3zM11.25 7.5V15a.75.75 0 001.5 0V7.5h3.75a3 3 0 013 3v9a3 3 0 01-3 3h-9a3 3 0 01-3-3v-9a3 3 0 013-3h3.75z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowUpOnSquareIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ArrowUpRightIcon.js
        var require_ArrowUpRightIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ArrowUpRightIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowUpRightIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M8.25 3.75H19.5a.75.75 0 01.75.75v11.25a.75.75 0 01-1.5 0V6.31L5.03 20.03a.75.75 0 01-1.06-1.06L17.69 5.25H8.25a.75.75 0 010-1.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowUpRightIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ArrowUpTrayIcon.js
        var require_ArrowUpTrayIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ArrowUpTrayIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowUpTrayIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M11.47 2.47a.75.75 0 011.06 0l4.5 4.5a.75.75 0 01-1.06 1.06l-3.22-3.22V16.5a.75.75 0 01-1.5 0V4.81L8.03 8.03a.75.75 0 01-1.06-1.06l4.5-4.5zM3 15.75a.75.75 0 01.75.75v2.25a1.5 1.5 0 001.5 1.5h13.5a1.5 1.5 0 001.5-1.5V16.5a.75.75 0 011.5 0v2.25a3 3 0 01-3 3H5.25a3 3 0 01-3-3V16.5a.75.75 0 01.75-.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowUpTrayIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ArrowUpIcon.js
        var require_ArrowUpIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ArrowUpIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowUpIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M11.47 2.47a.75.75 0 011.06 0l7.5 7.5a.75.75 0 11-1.06 1.06l-6.22-6.22V21a.75.75 0 01-1.5 0V4.81l-6.22 6.22a.75.75 0 11-1.06-1.06l7.5-7.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowUpIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ArrowUturnDownIcon.js
        var require_ArrowUturnDownIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ArrowUturnDownIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowUturnDownIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M15 3.75A5.25 5.25 0 009.75 9v10.19l4.72-4.72a.75.75 0 111.06 1.06l-6 6a.75.75 0 01-1.06 0l-6-6a.75.75 0 111.06-1.06l4.72 4.72V9a6.75 6.75 0 0113.5 0v3a.75.75 0 01-1.5 0V9c0-2.9-2.35-5.25-5.25-5.25z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowUturnDownIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ArrowUturnLeftIcon.js
        var require_ArrowUturnLeftIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ArrowUturnLeftIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowUturnLeftIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M9.53 2.47a.75.75 0 010 1.06L4.81 8.25H15a6.75 6.75 0 010 13.5h-3a.75.75 0 010-1.5h3a5.25 5.25 0 100-10.5H4.81l4.72 4.72a.75.75 0 11-1.06 1.06l-6-6a.75.75 0 010-1.06l6-6a.75.75 0 011.06 0z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowUturnLeftIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ArrowUturnRightIcon.js
        var require_ArrowUturnRightIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ArrowUturnRightIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowUturnRightIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M14.47 2.47a.75.75 0 011.06 0l6 6a.75.75 0 010 1.06l-6 6a.75.75 0 11-1.06-1.06l4.72-4.72H9a5.25 5.25 0 100 10.5h3a.75.75 0 010 1.5H9a6.75 6.75 0 010-13.5h10.19l-4.72-4.72a.75.75 0 010-1.06z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowUturnRightIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ArrowUturnUpIcon.js
        var require_ArrowUturnUpIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ArrowUturnUpIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowUturnUpIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M21.53 9.53a.75.75 0 01-1.06 0l-4.72-4.72V15a6.75 6.75 0 01-13.5 0v-3a.75.75 0 011.5 0v3a5.25 5.25 0 1010.5 0V4.81L9.53 9.53a.75.75 0 01-1.06-1.06l6-6a.75.75 0 011.06 0l6 6a.75.75 0 010 1.06z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowUturnUpIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ArrowsPointingInIcon.js
        var require_ArrowsPointingInIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ArrowsPointingInIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowsPointingInIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M3.22 3.22a.75.75 0 011.06 0l3.97 3.97V4.5a.75.75 0 011.5 0V9a.75.75 0 01-.75.75H4.5a.75.75 0 010-1.5h2.69L3.22 4.28a.75.75 0 010-1.06zm17.56 0a.75.75 0 010 1.06l-3.97 3.97h2.69a.75.75 0 010 1.5H15a.75.75 0 01-.75-.75V4.5a.75.75 0 011.5 0v2.69l3.97-3.97a.75.75 0 011.06 0zM3.75 15a.75.75 0 01.75-.75H9a.75.75 0 01.75.75v4.5a.75.75 0 01-1.5 0v-2.69l-3.97 3.97a.75.75 0 01-1.06-1.06l3.97-3.97H4.5a.75.75 0 01-.75-.75zm10.5 0a.75.75 0 01.75-.75h4.5a.75.75 0 010 1.5h-2.69l3.97 3.97a.75.75 0 11-1.06 1.06l-3.97-3.97v2.69a.75.75 0 01-1.5 0V15z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowsPointingInIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ArrowsPointingOutIcon.js
        var require_ArrowsPointingOutIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ArrowsPointingOutIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowsPointingOutIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M15 3.75a.75.75 0 01.75-.75h4.5a.75.75 0 01.75.75v4.5a.75.75 0 01-1.5 0V5.56l-3.97 3.97a.75.75 0 11-1.06-1.06l3.97-3.97h-2.69a.75.75 0 01-.75-.75zm-12 0A.75.75 0 013.75 3h4.5a.75.75 0 010 1.5H5.56l3.97 3.97a.75.75 0 01-1.06 1.06L4.5 5.56v2.69a.75.75 0 01-1.5 0v-4.5zm11.47 11.78a.75.75 0 111.06-1.06l3.97 3.97v-2.69a.75.75 0 011.5 0v4.5a.75.75 0 01-.75.75h-4.5a.75.75 0 010-1.5h2.69l-3.97-3.97zm-4.94-1.06a.75.75 0 010 1.06L5.56 19.5h2.69a.75.75 0 010 1.5h-4.5a.75.75 0 01-.75-.75v-4.5a.75.75 0 011.5 0v2.69l3.97-3.97a.75.75 0 011.06 0z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowsPointingOutIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ArrowsRightLeftIcon.js
        var require_ArrowsRightLeftIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ArrowsRightLeftIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowsRightLeftIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M15.97 2.47a.75.75 0 011.06 0l4.5 4.5a.75.75 0 010 1.06l-4.5 4.5a.75.75 0 11-1.06-1.06l3.22-3.22H7.5a.75.75 0 010-1.5h11.69l-3.22-3.22a.75.75 0 010-1.06zm-7.94 9a.75.75 0 010 1.06l-3.22 3.22H16.5a.75.75 0 010 1.5H4.81l3.22 3.22a.75.75 0 11-1.06 1.06l-4.5-4.5a.75.75 0 010-1.06l4.5-4.5a.75.75 0 011.06 0z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowsRightLeftIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ArrowsUpDownIcon.js
        var require_ArrowsUpDownIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ArrowsUpDownIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowsUpDownIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M6.97 2.47a.75.75 0 011.06 0l4.5 4.5a.75.75 0 01-1.06 1.06L8.25 4.81V16.5a.75.75 0 01-1.5 0V4.81L3.53 8.03a.75.75 0 01-1.06-1.06l4.5-4.5zm9.53 4.28a.75.75 0 01.75.75v11.69l3.22-3.22a.75.75 0 111.06 1.06l-4.5 4.5a.75.75 0 01-1.06 0l-4.5-4.5a.75.75 0 111.06-1.06l3.22 3.22V7.5a.75.75 0 01.75-.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowsUpDownIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/AtSymbolIcon.js
        var require_AtSymbolIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/AtSymbolIcon.js"(exports, module) {
                var React2 = require_react();
                function AtSymbolIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M17.834 6.166a8.25 8.25 0 100 11.668.75.75 0 011.06 1.06c-3.807 3.808-9.98 3.808-13.788 0-3.808-3.807-3.808-9.98 0-13.788 3.807-3.808 9.98-3.808 13.788 0A9.722 9.722 0 0121.75 12c0 .975-.296 1.887-.809 2.571-.514.685-1.28 1.179-2.191 1.179-.904 0-1.666-.487-2.18-1.164a5.25 5.25 0 11-.82-6.26V8.25a.75.75 0 011.5 0V12c0 .682.208 1.27.509 1.671.3.401.659.579.991.579.332 0 .69-.178.991-.579.3-.4.509-.99.509-1.671a8.222 8.222 0 00-2.416-5.834zM15.75 12a3.75 3.75 0 10-7.5 0 3.75 3.75 0 007.5 0z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(AtSymbolIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/BackspaceIcon.js
        var require_BackspaceIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/BackspaceIcon.js"(exports, module) {
                var React2 = require_react();
                function BackspaceIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M2.515 10.674a1.875 1.875 0 000 2.652L8.89 19.7c.352.351.829.549 1.326.549H19.5a3 3 0 003-3V6.75a3 3 0 00-3-3h-9.284c-.497 0-.974.198-1.326.55l-6.375 6.374zM12.53 9.22a.75.75 0 10-1.06 1.06L13.19 12l-1.72 1.72a.75.75 0 101.06 1.06l1.72-1.72 1.72 1.72a.75.75 0 101.06-1.06L15.31 12l1.72-1.72a.75.75 0 10-1.06-1.06l-1.72 1.72-1.72-1.72z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(BackspaceIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/BackwardIcon.js
        var require_BackwardIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/BackwardIcon.js"(exports, module) {
                var React2 = require_react();
                function BackwardIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M9.195 18.44c1.25.713 2.805-.19 2.805-1.629v-2.34l6.945 3.968c1.25.714 2.805-.188 2.805-1.628V8.688c0-1.44-1.555-2.342-2.805-1.628L12 11.03v-2.34c0-1.44-1.555-2.343-2.805-1.629l-7.108 4.062c-1.26.72-1.26 2.536 0 3.256l7.108 4.061z"
                    }));
                }
                var ForwardRef = React2.forwardRef(BackwardIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/BanknotesIcon.js
        var require_BanknotesIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/BanknotesIcon.js"(exports, module) {
                var React2 = require_react();
                function BanknotesIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M12 7.5a2.25 2.25 0 100 4.5 2.25 2.25 0 000-4.5z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M1.5 4.875C1.5 3.839 2.34 3 3.375 3h17.25c1.035 0 1.875.84 1.875 1.875v9.75c0 1.036-.84 1.875-1.875 1.875H3.375A1.875 1.875 0 011.5 14.625v-9.75zM8.25 9.75a3.75 3.75 0 117.5 0 3.75 3.75 0 01-7.5 0zM18.75 9a.75.75 0 00-.75.75v.008c0 .414.336.75.75.75h.008a.75.75 0 00.75-.75V9.75a.75.75 0 00-.75-.75h-.008zM4.5 9.75A.75.75 0 015.25 9h.008a.75.75 0 01.75.75v.008a.75.75 0 01-.75.75H5.25a.75.75 0 01-.75-.75V9.75z",
                        clipRule: "evenodd"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M2.25 18a.75.75 0 000 1.5c5.4 0 10.63.722 15.6 2.075 1.19.324 2.4-.558 2.4-1.82V18.75a.75.75 0 00-.75-.75H2.25z"
                    }));
                }
                var ForwardRef = React2.forwardRef(BanknotesIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/Bars2Icon.js
        var require_Bars2Icon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/Bars2Icon.js"(exports, module) {
                var React2 = require_react();
                function Bars2Icon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M3 9a.75.75 0 01.75-.75h16.5a.75.75 0 010 1.5H3.75A.75.75 0 013 9zm0 6.75a.75.75 0 01.75-.75h16.5a.75.75 0 010 1.5H3.75a.75.75 0 01-.75-.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(Bars2Icon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/Bars3BottomLeftIcon.js
        var require_Bars3BottomLeftIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/Bars3BottomLeftIcon.js"(exports, module) {
                var React2 = require_react();
                function Bars3BottomLeftIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M3 6.75A.75.75 0 013.75 6h16.5a.75.75 0 010 1.5H3.75A.75.75 0 013 6.75zM3 12a.75.75 0 01.75-.75h16.5a.75.75 0 010 1.5H3.75A.75.75 0 013 12zm0 5.25a.75.75 0 01.75-.75H12a.75.75 0 010 1.5H3.75a.75.75 0 01-.75-.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(Bars3BottomLeftIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/Bars3BottomRightIcon.js
        var require_Bars3BottomRightIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/Bars3BottomRightIcon.js"(exports, module) {
                var React2 = require_react();
                function Bars3BottomRightIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M3 6.75A.75.75 0 013.75 6h16.5a.75.75 0 010 1.5H3.75A.75.75 0 013 6.75zM3 12a.75.75 0 01.75-.75h16.5a.75.75 0 010 1.5H3.75A.75.75 0 013 12zm8.25 5.25a.75.75 0 01.75-.75h8.25a.75.75 0 010 1.5H12a.75.75 0 01-.75-.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(Bars3BottomRightIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/Bars3CenterLeftIcon.js
        var require_Bars3CenterLeftIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/Bars3CenterLeftIcon.js"(exports, module) {
                var React2 = require_react();
                function Bars3CenterLeftIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M3 6.75A.75.75 0 013.75 6h16.5a.75.75 0 010 1.5H3.75A.75.75 0 013 6.75zM3 12a.75.75 0 01.75-.75H12a.75.75 0 010 1.5H3.75A.75.75 0 013 12zm0 5.25a.75.75 0 01.75-.75h16.5a.75.75 0 010 1.5H3.75a.75.75 0 01-.75-.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(Bars3CenterLeftIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/Bars3Icon.js
        var require_Bars3Icon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/Bars3Icon.js"(exports, module) {
                var React2 = require_react();
                function Bars3Icon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M3 6.75A.75.75 0 013.75 6h16.5a.75.75 0 010 1.5H3.75A.75.75 0 013 6.75zM3 12a.75.75 0 01.75-.75h16.5a.75.75 0 010 1.5H3.75A.75.75 0 013 12zm0 5.25a.75.75 0 01.75-.75h16.5a.75.75 0 010 1.5H3.75a.75.75 0 01-.75-.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(Bars3Icon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/Bars4Icon.js
        var require_Bars4Icon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/Bars4Icon.js"(exports, module) {
                var React2 = require_react();
                function Bars4Icon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M3 5.25a.75.75 0 01.75-.75h16.5a.75.75 0 010 1.5H3.75A.75.75 0 013 5.25zm0 4.5A.75.75 0 013.75 9h16.5a.75.75 0 010 1.5H3.75A.75.75 0 013 9.75zm0 4.5a.75.75 0 01.75-.75h16.5a.75.75 0 010 1.5H3.75a.75.75 0 01-.75-.75zm0 4.5a.75.75 0 01.75-.75h16.5a.75.75 0 010 1.5H3.75a.75.75 0 01-.75-.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(Bars4Icon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/BarsArrowDownIcon.js
        var require_BarsArrowDownIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/BarsArrowDownIcon.js"(exports, module) {
                var React2 = require_react();
                function BarsArrowDownIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M2.25 4.5A.75.75 0 013 3.75h14.25a.75.75 0 010 1.5H3a.75.75 0 01-.75-.75zm0 4.5A.75.75 0 013 8.25h9.75a.75.75 0 010 1.5H3A.75.75 0 012.25 9zm15-.75A.75.75 0 0118 9v10.19l2.47-2.47a.75.75 0 111.06 1.06l-3.75 3.75a.75.75 0 01-1.06 0l-3.75-3.75a.75.75 0 111.06-1.06l2.47 2.47V9a.75.75 0 01.75-.75zm-15 5.25a.75.75 0 01.75-.75h9.75a.75.75 0 010 1.5H3a.75.75 0 01-.75-.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(BarsArrowDownIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/BarsArrowUpIcon.js
        var require_BarsArrowUpIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/BarsArrowUpIcon.js"(exports, module) {
                var React2 = require_react();
                function BarsArrowUpIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M2.25 4.5A.75.75 0 013 3.75h14.25a.75.75 0 010 1.5H3a.75.75 0 01-.75-.75zm14.47 3.97a.75.75 0 011.06 0l3.75 3.75a.75.75 0 11-1.06 1.06L18 10.81V21a.75.75 0 01-1.5 0V10.81l-2.47 2.47a.75.75 0 11-1.06-1.06l3.75-3.75zM2.25 9A.75.75 0 013 8.25h9.75a.75.75 0 010 1.5H3A.75.75 0 012.25 9zm0 4.5a.75.75 0 01.75-.75h5.25a.75.75 0 010 1.5H3a.75.75 0 01-.75-.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(BarsArrowUpIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/Battery0Icon.js
        var require_Battery0Icon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/Battery0Icon.js"(exports, module) {
                var React2 = require_react();
                function Battery0Icon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M.75 9.75a3 3 0 013-3h15a3 3 0 013 3v.038c.856.173 1.5.93 1.5 1.837v2.25c0 .907-.644 1.664-1.5 1.838v.037a3 3 0 01-3 3h-15a3 3 0 01-3-3v-6zm19.5 0a1.5 1.5 0 00-1.5-1.5h-15a1.5 1.5 0 00-1.5 1.5v6a1.5 1.5 0 001.5 1.5h15a1.5 1.5 0 001.5-1.5v-6z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(Battery0Icon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/Battery100Icon.js
        var require_Battery100Icon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/Battery100Icon.js"(exports, module) {
                var React2 = require_react();
                function Battery100Icon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M3.75 6.75a3 3 0 00-3 3v6a3 3 0 003 3h15a3 3 0 003-3v-.037c.856-.174 1.5-.93 1.5-1.838v-2.25c0-.907-.644-1.664-1.5-1.837V9.75a3 3 0 00-3-3h-15zm15 1.5a1.5 1.5 0 011.5 1.5v6a1.5 1.5 0 01-1.5 1.5h-15a1.5 1.5 0 01-1.5-1.5v-6a1.5 1.5 0 011.5-1.5h15zM4.5 9.75a.75.75 0 00-.75.75V15c0 .414.336.75.75.75H18a.75.75 0 00.75-.75v-4.5a.75.75 0 00-.75-.75H4.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(Battery100Icon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/Battery50Icon.js
        var require_Battery50Icon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/Battery50Icon.js"(exports, module) {
                var React2 = require_react();
                function Battery50Icon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M4.5 9.75a.75.75 0 00-.75.75V15c0 .414.336.75.75.75h6.75A.75.75 0 0012 15v-4.5a.75.75 0 00-.75-.75H4.5z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M3.75 6.75a3 3 0 00-3 3v6a3 3 0 003 3h15a3 3 0 003-3v-.037c.856-.174 1.5-.93 1.5-1.838v-2.25c0-.907-.644-1.664-1.5-1.837V9.75a3 3 0 00-3-3h-15zm15 1.5a1.5 1.5 0 011.5 1.5v6a1.5 1.5 0 01-1.5 1.5h-15a1.5 1.5 0 01-1.5-1.5v-6a1.5 1.5 0 011.5-1.5h15z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(Battery50Icon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/BeakerIcon.js
        var require_BeakerIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/BeakerIcon.js"(exports, module) {
                var React2 = require_react();
                function BeakerIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10.5 3.798v5.02a3 3 0 01-.879 2.121l-2.377 2.377a9.845 9.845 0 015.091 1.013 8.315 8.315 0 005.713.636l.285-.071-3.954-3.955a3 3 0 01-.879-2.121v-5.02a23.614 23.614 0 00-3 0zm4.5.138a.75.75 0 00.093-1.495A24.837 24.837 0 0012 2.25a25.048 25.048 0 00-3.093.191A.75.75 0 009 3.936v4.882a1.5 1.5 0 01-.44 1.06l-6.293 6.294c-1.62 1.621-.903 4.475 1.471 4.88 2.686.46 5.447.698 8.262.698 2.816 0 5.576-.239 8.262-.697 2.373-.406 3.092-3.26 1.47-4.881L15.44 9.879A1.5 1.5 0 0115 8.818V3.936z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(BeakerIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/BellAlertIcon.js
        var require_BellAlertIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/BellAlertIcon.js"(exports, module) {
                var React2 = require_react();
                function BellAlertIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M5.85 3.5a.75.75 0 00-1.117-1 9.719 9.719 0 00-2.348 4.876.75.75 0 001.479.248A8.219 8.219 0 015.85 3.5zM19.267 2.5a.75.75 0 10-1.118 1 8.22 8.22 0 011.987 4.124.75.75 0 001.48-.248A9.72 9.72 0 0019.266 2.5z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M12 2.25A6.75 6.75 0 005.25 9v.75a8.217 8.217 0 01-2.119 5.52.75.75 0 00.298 1.206c1.544.57 3.16.99 4.831 1.243a3.75 3.75 0 107.48 0 24.583 24.583 0 004.83-1.244.75.75 0 00.298-1.205 8.217 8.217 0 01-2.118-5.52V9A6.75 6.75 0 0012 2.25zM9.75 18c0-.034 0-.067.002-.1a25.05 25.05 0 004.496 0l.002.1a2.25 2.25 0 11-4.5 0z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(BellAlertIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/BellSlashIcon.js
        var require_BellSlashIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/BellSlashIcon.js"(exports, module) {
                var React2 = require_react();
                function BellSlashIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M3.53 2.47a.75.75 0 00-1.06 1.06l18 18a.75.75 0 101.06-1.06l-18-18zM20.57 16.476c-.223.082-.448.161-.674.238L7.319 4.137A6.75 6.75 0 0118.75 9v.75c0 2.123.8 4.057 2.118 5.52a.75.75 0 01-.297 1.206z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M5.25 9c0-.184.007-.366.022-.546l10.384 10.384a3.751 3.751 0 01-7.396-1.119 24.585 24.585 0 01-4.831-1.244.75.75 0 01-.298-1.205A8.217 8.217 0 005.25 9.75V9zm4.502 8.9a2.25 2.25 0 104.496 0 25.057 25.057 0 01-4.496 0z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(BellSlashIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/BellSnoozeIcon.js
        var require_BellSnoozeIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/BellSnoozeIcon.js"(exports, module) {
                var React2 = require_react();
                function BellSnoozeIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M12 2.25A6.75 6.75 0 005.25 9v.75a8.217 8.217 0 01-2.119 5.52.75.75 0 00.298 1.206c1.544.57 3.16.99 4.831 1.243a3.75 3.75 0 107.48 0 24.583 24.583 0 004.83-1.244.75.75 0 00.298-1.205 8.217 8.217 0 01-2.118-5.52V9A6.75 6.75 0 0012 2.25zM9.75 18c0-.034 0-.067.002-.1a25.05 25.05 0 004.496 0l.002.1a2.25 2.25 0 11-4.5 0zm.75-10.5a.75.75 0 000 1.5h1.599l-2.223 3.334A.75.75 0 0010.5 13.5h3a.75.75 0 000-1.5h-1.599l2.223-3.334A.75.75 0 0013.5 7.5h-3z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(BellSnoozeIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/BellIcon.js
        var require_BellIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/BellIcon.js"(exports, module) {
                var React2 = require_react();
                function BellIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M5.25 9a6.75 6.75 0 0113.5 0v.75c0 2.123.8 4.057 2.118 5.52a.75.75 0 01-.297 1.206c-1.544.57-3.16.99-4.831 1.243a3.75 3.75 0 11-7.48 0 24.585 24.585 0 01-4.831-1.244.75.75 0 01-.298-1.205A8.217 8.217 0 005.25 9.75V9zm4.502 8.9a2.25 2.25 0 104.496 0 25.057 25.057 0 01-4.496 0z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(BellIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/BoltSlashIcon.js
        var require_BoltSlashIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/BoltSlashIcon.js"(exports, module) {
                var React2 = require_react();
                function BoltSlashIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M20.798 11.012l-3.188 3.416L9.462 6.28l4.24-4.542a.75.75 0 011.272.71L12.982 9.75h7.268a.75.75 0 01.548 1.262zM3.202 12.988L6.39 9.572l8.148 8.148-4.24 4.542a.75.75 0 01-1.272-.71l1.992-7.302H3.75a.75.75 0 01-.548-1.262zM3.53 2.47a.75.75 0 00-1.06 1.06l18 18a.75.75 0 101.06-1.06l-18-18z"
                    }));
                }
                var ForwardRef = React2.forwardRef(BoltSlashIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/BoltIcon.js
        var require_BoltIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/BoltIcon.js"(exports, module) {
                var React2 = require_react();
                function BoltIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M14.615 1.595a.75.75 0 01.359.852L12.982 9.75h7.268a.75.75 0 01.548 1.262l-10.5 11.25a.75.75 0 01-1.272-.71l1.992-7.302H3.75a.75.75 0 01-.548-1.262l10.5-11.25a.75.75 0 01.913-.143z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(BoltIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/BookOpenIcon.js
        var require_BookOpenIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/BookOpenIcon.js"(exports, module) {
                var React2 = require_react();
                function BookOpenIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M11.25 4.533A9.707 9.707 0 006 3a9.735 9.735 0 00-3.25.555.75.75 0 00-.5.707v14.25a.75.75 0 001 .707A8.237 8.237 0 016 18.75c1.995 0 3.823.707 5.25 1.886V4.533zM12.75 20.636A8.214 8.214 0 0118 18.75c.966 0 1.89.166 2.75.47a.75.75 0 001-.708V4.262a.75.75 0 00-.5-.707A9.735 9.735 0 0018 3a9.707 9.707 0 00-5.25 1.533v16.103z"
                    }));
                }
                var ForwardRef = React2.forwardRef(BookOpenIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/BookmarkSlashIcon.js
        var require_BookmarkSlashIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/BookmarkSlashIcon.js"(exports, module) {
                var React2 = require_react();
                function BookmarkSlashIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M3.53 2.47a.75.75 0 00-1.06 1.06l18 18a.75.75 0 101.06-1.06l-18-18zM20.25 5.507v11.561L5.853 2.671c.15-.043.306-.075.467-.094a49.255 49.255 0 0111.36 0c1.497.174 2.57 1.46 2.57 2.93zM3.75 21V6.932l14.063 14.063L12 18.088l-7.165 3.583A.75.75 0 013.75 21z"
                    }));
                }
                var ForwardRef = React2.forwardRef(BookmarkSlashIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/BookmarkSquareIcon.js
        var require_BookmarkSquareIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/BookmarkSquareIcon.js"(exports, module) {
                var React2 = require_react();
                function BookmarkSquareIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M6 3a3 3 0 00-3 3v12a3 3 0 003 3h12a3 3 0 003-3V6a3 3 0 00-3-3H6zm1.5 1.5a.75.75 0 00-.75.75V16.5a.75.75 0 001.085.67L12 15.089l4.165 2.083a.75.75 0 001.085-.671V5.25a.75.75 0 00-.75-.75h-9z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(BookmarkSquareIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/BookmarkIcon.js
        var require_BookmarkIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/BookmarkIcon.js"(exports, module) {
                var React2 = require_react();
                function BookmarkIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M6.32 2.577a49.255 49.255 0 0111.36 0c1.497.174 2.57 1.46 2.57 2.93V21a.75.75 0 01-1.085.67L12 18.089l-7.165 3.583A.75.75 0 013.75 21V5.507c0-1.47 1.073-2.756 2.57-2.93z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(BookmarkIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/BriefcaseIcon.js
        var require_BriefcaseIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/BriefcaseIcon.js"(exports, module) {
                var React2 = require_react();
                function BriefcaseIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M7.5 5.25a3 3 0 013-3h3a3 3 0 013 3v.205c.933.085 1.857.197 2.774.334 1.454.218 2.476 1.483 2.476 2.917v3.033c0 1.211-.734 2.352-1.936 2.752A24.726 24.726 0 0112 15.75c-2.73 0-5.357-.442-7.814-1.259-1.202-.4-1.936-1.541-1.936-2.752V8.706c0-1.434 1.022-2.7 2.476-2.917A48.814 48.814 0 017.5 5.455V5.25zm7.5 0v.09a49.488 49.488 0 00-6 0v-.09a1.5 1.5 0 011.5-1.5h3a1.5 1.5 0 011.5 1.5zm-3 8.25a.75.75 0 100-1.5.75.75 0 000 1.5z",
                        clipRule: "evenodd"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M3 18.4v-2.796a4.3 4.3 0 00.713.31A26.226 26.226 0 0012 17.25c2.892 0 5.68-.468 8.287-1.335.252-.084.49-.189.713-.311V18.4c0 1.452-1.047 2.728-2.523 2.923-2.12.282-4.282.427-6.477.427a49.19 49.19 0 01-6.477-.427C4.047 21.128 3 19.852 3 18.4z"
                    }));
                }
                var ForwardRef = React2.forwardRef(BriefcaseIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/BugAntIcon.js
        var require_BugAntIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/BugAntIcon.js"(exports, module) {
                var React2 = require_react();
                function BugAntIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M8.478 1.6a.75.75 0 01.273 1.025 3.72 3.72 0 00-.425 1.122c.058.057.118.114.18.168A4.491 4.491 0 0112 2.25c1.413 0 2.673.651 3.497 1.668.06-.054.12-.11.178-.167a3.717 3.717 0 00-.426-1.126.75.75 0 111.298-.75 5.22 5.22 0 01.671 2.045.75.75 0 01-.187.582c-.241.27-.505.52-.787.749a4.495 4.495 0 01.216 2.1c-.106.792-.753 1.295-1.417 1.403-.182.03-.364.057-.547.081.152.227.273.476.359.741a23.122 23.122 0 003.832-.802 23.241 23.241 0 00-.345-2.634.75.75 0 011.474-.28c.21 1.115.348 2.256.404 3.418a.75.75 0 01-.516.749c-1.527.5-3.119.855-4.76 1.05-.074.38-.22.735-.423 1.05a24.61 24.61 0 015.943 1.358.75.75 0 01.492.75 24.665 24.665 0 01-1.189 6.25.75.75 0 01-1.425-.47 23.141 23.141 0 001.077-5.307c-.5-.168-1.009-.32-1.524-.454.068.234.104.484.104.746 0 3.956-2.521 7.5-6 7.5-3.478 0-6-3.544-6-7.5 0-.262.037-.511.104-.746-.514.134-1.022.286-1.522.454a23.14 23.14 0 001.077 5.308.75.75 0 01-1.425.468 24.663 24.663 0 01-1.19-6.25.75.75 0 01.493-.749 24.593 24.593 0 014.964-1.24h.01c.321-.046.644-.085.969-.118a2.982 2.982 0 01-.424-1.05 24.614 24.614 0 01-4.76-1.05.75.75 0 01-.516-.75c.057-1.161.194-2.302.405-3.417a.75.75 0 011.474.28c-.164.862-.28 1.74-.345 2.634 1.237.37 2.517.641 3.832.802.085-.265.207-.514.359-.74a18.732 18.732 0 01-.547-.082c-.664-.108-1.311-.611-1.417-1.403a4.535 4.535 0 01.217-2.103 6.788 6.788 0 01-.788-.751.75.75 0 01-.187-.583 5.22 5.22 0 01.67-2.04.75.75 0 011.026-.273z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(BugAntIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/BuildingLibraryIcon.js
        var require_BuildingLibraryIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/BuildingLibraryIcon.js"(exports, module) {
                var React2 = require_react();
                function BuildingLibraryIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M11.584 2.376a.75.75 0 01.832 0l9 6a.75.75 0 11-.832 1.248L12 3.901 3.416 9.624a.75.75 0 01-.832-1.248l9-6z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M20.25 10.332v9.918H21a.75.75 0 010 1.5H3a.75.75 0 010-1.5h.75v-9.918a.75.75 0 01.634-.74A49.109 49.109 0 0112 9c2.59 0 5.134.202 7.616.592a.75.75 0 01.634.74zm-7.5 2.418a.75.75 0 00-1.5 0v6.75a.75.75 0 001.5 0v-6.75zm3-.75a.75.75 0 01.75.75v6.75a.75.75 0 01-1.5 0v-6.75a.75.75 0 01.75-.75zM9 12.75a.75.75 0 00-1.5 0v6.75a.75.75 0 001.5 0v-6.75z",
                        clipRule: "evenodd"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M12 7.875a1.125 1.125 0 100-2.25 1.125 1.125 0 000 2.25z"
                    }));
                }
                var ForwardRef = React2.forwardRef(BuildingLibraryIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/BuildingOffice2Icon.js
        var require_BuildingOffice2Icon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/BuildingOffice2Icon.js"(exports, module) {
                var React2 = require_react();
                function BuildingOffice2Icon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M3 2.25a.75.75 0 000 1.5v16.5h-.75a.75.75 0 000 1.5H15v-18a.75.75 0 000-1.5H3zM6.75 19.5v-2.25a.75.75 0 01.75-.75h3a.75.75 0 01.75.75v2.25a.75.75 0 01-.75.75h-3a.75.75 0 01-.75-.75zM6 6.75A.75.75 0 016.75 6h.75a.75.75 0 010 1.5h-.75A.75.75 0 016 6.75zM6.75 9a.75.75 0 000 1.5h.75a.75.75 0 000-1.5h-.75zM6 12.75a.75.75 0 01.75-.75h.75a.75.75 0 010 1.5h-.75a.75.75 0 01-.75-.75zM10.5 6a.75.75 0 000 1.5h.75a.75.75 0 000-1.5h-.75zm-.75 3.75A.75.75 0 0110.5 9h.75a.75.75 0 010 1.5h-.75a.75.75 0 01-.75-.75zM10.5 12a.75.75 0 000 1.5h.75a.75.75 0 000-1.5h-.75zM16.5 6.75v15h5.25a.75.75 0 000-1.5H21v-12a.75.75 0 000-1.5h-4.5zm1.5 4.5a.75.75 0 01.75-.75h.008a.75.75 0 01.75.75v.008a.75.75 0 01-.75.75h-.008a.75.75 0 01-.75-.75v-.008zm.75 2.25a.75.75 0 00-.75.75v.008c0 .414.336.75.75.75h.008a.75.75 0 00.75-.75v-.008a.75.75 0 00-.75-.75h-.008zM18 17.25a.75.75 0 01.75-.75h.008a.75.75 0 01.75.75v.008a.75.75 0 01-.75.75h-.008a.75.75 0 01-.75-.75v-.008z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(BuildingOffice2Icon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/BuildingOfficeIcon.js
        var require_BuildingOfficeIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/BuildingOfficeIcon.js"(exports, module) {
                var React2 = require_react();
                function BuildingOfficeIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M4.5 2.25a.75.75 0 000 1.5v16.5h-.75a.75.75 0 000 1.5h16.5a.75.75 0 000-1.5h-.75V3.75a.75.75 0 000-1.5h-15zM9 6a.75.75 0 000 1.5h1.5a.75.75 0 000-1.5H9zm-.75 3.75A.75.75 0 019 9h1.5a.75.75 0 010 1.5H9a.75.75 0 01-.75-.75zM9 12a.75.75 0 000 1.5h1.5a.75.75 0 000-1.5H9zm3.75-5.25A.75.75 0 0113.5 6H15a.75.75 0 010 1.5h-1.5a.75.75 0 01-.75-.75zM13.5 9a.75.75 0 000 1.5H15A.75.75 0 0015 9h-1.5zm-.75 3.75a.75.75 0 01.75-.75H15a.75.75 0 010 1.5h-1.5a.75.75 0 01-.75-.75zM9 19.5v-2.25a.75.75 0 01.75-.75h4.5a.75.75 0 01.75.75v2.25a.75.75 0 01-.75.75h-4.5A.75.75 0 019 19.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(BuildingOfficeIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/BuildingStorefrontIcon.js
        var require_BuildingStorefrontIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/BuildingStorefrontIcon.js"(exports, module) {
                var React2 = require_react();
                function BuildingStorefrontIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M5.223 2.25c-.497 0-.974.198-1.325.55l-1.3 1.298A3.75 3.75 0 007.5 9.75c.627.47 1.406.75 2.25.75.844 0 1.624-.28 2.25-.75.626.47 1.406.75 2.25.75.844 0 1.623-.28 2.25-.75a3.75 3.75 0 004.902-5.652l-1.3-1.299a1.875 1.875 0 00-1.325-.549H5.223z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M3 20.25v-8.755c1.42.674 3.08.673 4.5 0A5.234 5.234 0 009.75 12c.804 0 1.568-.182 2.25-.506a5.234 5.234 0 002.25.506c.804 0 1.567-.182 2.25-.506 1.42.674 3.08.675 4.5.001v8.755h.75a.75.75 0 010 1.5H2.25a.75.75 0 010-1.5H3zm3-6a.75.75 0 01.75-.75h3a.75.75 0 01.75.75v3a.75.75 0 01-.75.75h-3a.75.75 0 01-.75-.75v-3zm8.25-.75a.75.75 0 00-.75.75v5.25c0 .414.336.75.75.75h3a.75.75 0 00.75-.75v-5.25a.75.75 0 00-.75-.75h-3z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(BuildingStorefrontIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/CakeIcon.js
        var require_CakeIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/CakeIcon.js"(exports, module) {
                var React2 = require_react();
                function CakeIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M15 1.784l-.796.796a1.125 1.125 0 101.591 0L15 1.784zM12 1.784l-.796.796a1.125 1.125 0 101.591 0L12 1.784zM9 1.784l-.796.796a1.125 1.125 0 101.591 0L9 1.784zM9.75 7.547c.498-.02.998-.035 1.5-.042V6.75a.75.75 0 011.5 0v.755c.502.007 1.002.021 1.5.042V6.75a.75.75 0 011.5 0v.88l.307.022c1.55.117 2.693 1.427 2.693 2.946v1.018a62.182 62.182 0 00-13.5 0v-1.018c0-1.519 1.143-2.829 2.693-2.946l.307-.022v-.88a.75.75 0 011.5 0v.797zM12 12.75c-2.472 0-4.9.184-7.274.54-1.454.217-2.476 1.482-2.476 2.916v.384a4.104 4.104 0 012.585.364 2.605 2.605 0 002.33 0 4.104 4.104 0 013.67 0 2.605 2.605 0 002.33 0 4.104 4.104 0 013.67 0 2.605 2.605 0 002.33 0 4.104 4.104 0 012.585-.364v-.384c0-1.434-1.022-2.7-2.476-2.917A49.138 49.138 0 0012 12.75zM21.75 18.131a2.604 2.604 0 00-1.915.165 4.104 4.104 0 01-3.67 0 2.604 2.604 0 00-2.33 0 4.104 4.104 0 01-3.67 0 2.604 2.604 0 00-2.33 0 4.104 4.104 0 01-3.67 0 2.604 2.604 0 00-1.915-.165v2.494c0 1.036.84 1.875 1.875 1.875h15.75c1.035 0 1.875-.84 1.875-1.875v-2.494z"
                    }));
                }
                var ForwardRef = React2.forwardRef(CakeIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/CalculatorIcon.js
        var require_CalculatorIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/CalculatorIcon.js"(exports, module) {
                var React2 = require_react();
                function CalculatorIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M6.32 1.827a49.255 49.255 0 0111.36 0c1.497.174 2.57 1.46 2.57 2.93V19.5a3 3 0 01-3 3H6.75a3 3 0 01-3-3V4.757c0-1.47 1.073-2.756 2.57-2.93zM7.5 11.25a.75.75 0 01.75-.75h.008a.75.75 0 01.75.75v.008a.75.75 0 01-.75.75H8.25a.75.75 0 01-.75-.75v-.008zm.75 1.5a.75.75 0 00-.75.75v.008c0 .414.336.75.75.75h.008a.75.75 0 00.75-.75V13.5a.75.75 0 00-.75-.75H8.25zm-.75 3a.75.75 0 01.75-.75h.008a.75.75 0 01.75.75v.008a.75.75 0 01-.75.75H8.25a.75.75 0 01-.75-.75v-.008zm.75 1.5a.75.75 0 00-.75.75v.008c0 .414.336.75.75.75h.008a.75.75 0 00.75-.75V18a.75.75 0 00-.75-.75H8.25zm1.748-6a.75.75 0 01.75-.75h.007a.75.75 0 01.75.75v.008a.75.75 0 01-.75.75h-.007a.75.75 0 01-.75-.75v-.008zm.75 1.5a.75.75 0 00-.75.75v.008c0 .414.335.75.75.75h.007a.75.75 0 00.75-.75V13.5a.75.75 0 00-.75-.75h-.007zm-.75 3a.75.75 0 01.75-.75h.007a.75.75 0 01.75.75v.008a.75.75 0 01-.75.75h-.007a.75.75 0 01-.75-.75v-.008zm.75 1.5a.75.75 0 00-.75.75v.008c0 .414.335.75.75.75h.007a.75.75 0 00.75-.75V18a.75.75 0 00-.75-.75h-.007zm1.754-6a.75.75 0 01.75-.75h.008a.75.75 0 01.75.75v.008a.75.75 0 01-.75.75h-.008a.75.75 0 01-.75-.75v-.008zm.75 1.5a.75.75 0 00-.75.75v.008c0 .414.336.75.75.75h.008a.75.75 0 00.75-.75V13.5a.75.75 0 00-.75-.75h-.008zm-.75 3a.75.75 0 01.75-.75h.008a.75.75 0 01.75.75v.008a.75.75 0 01-.75.75h-.008a.75.75 0 01-.75-.75v-.008zm.75 1.5a.75.75 0 00-.75.75v.008c0 .414.336.75.75.75h.008a.75.75 0 00.75-.75V18a.75.75 0 00-.75-.75h-.008zm1.748-6a.75.75 0 01.75-.75h.008a.75.75 0 01.75.75v.008a.75.75 0 01-.75.75h-.008a.75.75 0 01-.75-.75v-.008zm.75 1.5a.75.75 0 00-.75.75v.008c0 .414.336.75.75.75h.008a.75.75 0 00.75-.75V13.5a.75.75 0 00-.75-.75h-.008zm-8.25-6A.75.75 0 018.25 6h7.5a.75.75 0 01.75.75v.75a.75.75 0 01-.75.75h-7.5a.75.75 0 01-.75-.75v-.75zm9 9a.75.75 0 00-1.5 0V18a.75.75 0 001.5 0v-2.25z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(CalculatorIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/CalendarDaysIcon.js
        var require_CalendarDaysIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/CalendarDaysIcon.js"(exports, module) {
                var React2 = require_react();
                function CalendarDaysIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M12.75 12.75a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM7.5 15.75a.75.75 0 100-1.5.75.75 0 000 1.5zM8.25 17.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM9.75 15.75a.75.75 0 100-1.5.75.75 0 000 1.5zM10.5 17.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM12 15.75a.75.75 0 100-1.5.75.75 0 000 1.5zM12.75 17.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM14.25 15.75a.75.75 0 100-1.5.75.75 0 000 1.5zM15 17.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM16.5 15.75a.75.75 0 100-1.5.75.75 0 000 1.5zM15 12.75a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM16.5 13.5a.75.75 0 100-1.5.75.75 0 000 1.5z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M6.75 2.25A.75.75 0 017.5 3v1.5h9V3A.75.75 0 0118 3v1.5h.75a3 3 0 013 3v11.25a3 3 0 01-3 3H5.25a3 3 0 01-3-3V7.5a3 3 0 013-3H6V3a.75.75 0 01.75-.75zm13.5 9a1.5 1.5 0 00-1.5-1.5H5.25a1.5 1.5 0 00-1.5 1.5v7.5a1.5 1.5 0 001.5 1.5h13.5a1.5 1.5 0 001.5-1.5v-7.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(CalendarDaysIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/CalendarIcon.js
        var require_CalendarIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/CalendarIcon.js"(exports, module) {
                var React2 = require_react();
                function CalendarIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M6.75 2.25A.75.75 0 017.5 3v1.5h9V3A.75.75 0 0118 3v1.5h.75a3 3 0 013 3v11.25a3 3 0 01-3 3H5.25a3 3 0 01-3-3V7.5a3 3 0 013-3H6V3a.75.75 0 01.75-.75zm13.5 9a1.5 1.5 0 00-1.5-1.5H5.25a1.5 1.5 0 00-1.5 1.5v7.5a1.5 1.5 0 001.5 1.5h13.5a1.5 1.5 0 001.5-1.5v-7.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(CalendarIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/CameraIcon.js
        var require_CameraIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/CameraIcon.js"(exports, module) {
                var React2 = require_react();
                function CameraIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M12 9a3.75 3.75 0 100 7.5A3.75 3.75 0 0012 9z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M9.344 3.071a49.52 49.52 0 015.312 0c.967.052 1.83.585 2.332 1.39l.821 1.317c.24.383.645.643 1.11.71.386.054.77.113 1.152.177 1.432.239 2.429 1.493 2.429 2.909V18a3 3 0 01-3 3h-15a3 3 0 01-3-3V9.574c0-1.416.997-2.67 2.429-2.909.382-.064.766-.123 1.151-.178a1.56 1.56 0 001.11-.71l.822-1.315a2.942 2.942 0 012.332-1.39zM6.75 12.75a5.25 5.25 0 1110.5 0 5.25 5.25 0 01-10.5 0zm12-1.5a.75.75 0 100-1.5.75.75 0 000 1.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(CameraIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ChartBarSquareIcon.js
        var require_ChartBarSquareIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ChartBarSquareIcon.js"(exports, module) {
                var React2 = require_react();
                function ChartBarSquareIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M3 6a3 3 0 013-3h12a3 3 0 013 3v12a3 3 0 01-3 3H6a3 3 0 01-3-3V6zm4.5 7.5a.75.75 0 01.75.75v2.25a.75.75 0 01-1.5 0v-2.25a.75.75 0 01.75-.75zm3.75-1.5a.75.75 0 00-1.5 0v4.5a.75.75 0 001.5 0V12zm2.25-3a.75.75 0 01.75.75v6.75a.75.75 0 01-1.5 0V9.75A.75.75 0 0113.5 9zm3.75-1.5a.75.75 0 00-1.5 0v9a.75.75 0 001.5 0v-9z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChartBarSquareIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ChartBarIcon.js
        var require_ChartBarIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ChartBarIcon.js"(exports, module) {
                var React2 = require_react();
                function ChartBarIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M18.375 2.25c-1.035 0-1.875.84-1.875 1.875v15.75c0 1.035.84 1.875 1.875 1.875h.75c1.035 0 1.875-.84 1.875-1.875V4.125c0-1.036-.84-1.875-1.875-1.875h-.75zM9.75 8.625c0-1.036.84-1.875 1.875-1.875h.75c1.036 0 1.875.84 1.875 1.875v11.25c0 1.035-.84 1.875-1.875 1.875h-.75a1.875 1.875 0 01-1.875-1.875V8.625zM3 13.125c0-1.036.84-1.875 1.875-1.875h.75c1.036 0 1.875.84 1.875 1.875v6.75c0 1.035-.84 1.875-1.875 1.875h-.75A1.875 1.875 0 013 19.875v-6.75z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChartBarIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ChartPieIcon.js
        var require_ChartPieIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ChartPieIcon.js"(exports, module) {
                var React2 = require_react();
                function ChartPieIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M2.25 13.5a8.25 8.25 0 018.25-8.25.75.75 0 01.75.75v6.75H18a.75.75 0 01.75.75 8.25 8.25 0 01-16.5 0z",
                        clipRule: "evenodd"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M12.75 3a.75.75 0 01.75-.75 8.25 8.25 0 018.25 8.25.75.75 0 01-.75.75h-7.5a.75.75 0 01-.75-.75V3z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChartPieIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ChatBubbleBottomCenterTextIcon.js
        var require_ChatBubbleBottomCenterTextIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ChatBubbleBottomCenterTextIcon.js"(exports, module) {
                var React2 = require_react();
                function ChatBubbleBottomCenterTextIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M4.848 2.771A49.144 49.144 0 0112 2.25c2.43 0 4.817.178 7.152.52 1.978.292 3.348 2.024 3.348 3.97v6.02c0 1.946-1.37 3.678-3.348 3.97a48.901 48.901 0 01-3.476.383.39.39 0 00-.297.17l-2.755 4.133a.75.75 0 01-1.248 0l-2.755-4.133a.39.39 0 00-.297-.17 48.9 48.9 0 01-3.476-.384c-1.978-.29-3.348-2.024-3.348-3.97V6.741c0-1.946 1.37-3.68 3.348-3.97zM6.75 8.25a.75.75 0 01.75-.75h9a.75.75 0 010 1.5h-9a.75.75 0 01-.75-.75zm.75 2.25a.75.75 0 000 1.5H12a.75.75 0 000-1.5H7.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChatBubbleBottomCenterTextIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ChatBubbleBottomCenterIcon.js
        var require_ChatBubbleBottomCenterIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ChatBubbleBottomCenterIcon.js"(exports, module) {
                var React2 = require_react();
                function ChatBubbleBottomCenterIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M4.848 2.771A49.144 49.144 0 0112 2.25c2.43 0 4.817.178 7.152.52 1.978.292 3.348 2.024 3.348 3.97v6.02c0 1.946-1.37 3.678-3.348 3.97a48.901 48.901 0 01-3.476.383.39.39 0 00-.297.17l-2.755 4.133a.75.75 0 01-1.248 0l-2.755-4.133a.39.39 0 00-.297-.17 48.9 48.9 0 01-3.476-.384c-1.978-.29-3.348-2.024-3.348-3.97V6.741c0-1.946 1.37-3.68 3.348-3.97z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChatBubbleBottomCenterIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ChatBubbleLeftEllipsisIcon.js
        var require_ChatBubbleLeftEllipsisIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ChatBubbleLeftEllipsisIcon.js"(exports, module) {
                var React2 = require_react();
                function ChatBubbleLeftEllipsisIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M12 2.25c-2.429 0-4.817.178-7.152.521C2.87 3.061 1.5 4.795 1.5 6.741v6.018c0 1.946 1.37 3.68 3.348 3.97.877.129 1.761.234 2.652.316V21a.75.75 0 001.28.53l4.184-4.183a.39.39 0 01.266-.112c2.006-.05 3.982-.22 5.922-.506 1.978-.29 3.348-2.023 3.348-3.97V6.741c0-1.947-1.37-3.68-3.348-3.97A49.145 49.145 0 0012 2.25zM8.25 8.625a1.125 1.125 0 100 2.25 1.125 1.125 0 000-2.25zm2.625 1.125a1.125 1.125 0 112.25 0 1.125 1.125 0 01-2.25 0zm4.875-1.125a1.125 1.125 0 100 2.25 1.125 1.125 0 000-2.25z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChatBubbleLeftEllipsisIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ChatBubbleLeftRightIcon.js
        var require_ChatBubbleLeftRightIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ChatBubbleLeftRightIcon.js"(exports, module) {
                var React2 = require_react();
                function ChatBubbleLeftRightIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M4.913 2.658c2.075-.27 4.19-.408 6.337-.408 2.147 0 4.262.139 6.337.408 1.922.25 3.291 1.861 3.405 3.727a4.403 4.403 0 00-1.032-.211 50.89 50.89 0 00-8.42 0c-2.358.196-4.04 2.19-4.04 4.434v4.286a4.47 4.47 0 002.433 3.984L7.28 21.53A.75.75 0 016 21v-4.03a48.527 48.527 0 01-1.087-.128C2.905 16.58 1.5 14.833 1.5 12.862V6.638c0-1.97 1.405-3.718 3.413-3.979z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M15.75 7.5c-1.376 0-2.739.057-4.086.169C10.124 7.797 9 9.103 9 10.609v4.285c0 1.507 1.128 2.814 2.67 2.94 1.243.102 2.5.157 3.768.165l2.782 2.781a.75.75 0 001.28-.53v-2.39l.33-.026c1.542-.125 2.67-1.433 2.67-2.94v-4.286c0-1.505-1.125-2.811-2.664-2.94A49.392 49.392 0 0015.75 7.5z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChatBubbleLeftRightIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ChatBubbleLeftIcon.js
        var require_ChatBubbleLeftIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ChatBubbleLeftIcon.js"(exports, module) {
                var React2 = require_react();
                function ChatBubbleLeftIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M4.848 2.771A49.144 49.144 0 0112 2.25c2.43 0 4.817.178 7.152.52 1.978.292 3.348 2.024 3.348 3.97v6.02c0 1.946-1.37 3.678-3.348 3.97-1.94.284-3.916.455-5.922.505a.39.39 0 00-.266.112L8.78 21.53A.75.75 0 017.5 21v-3.955a48.842 48.842 0 01-2.652-.316c-1.978-.29-3.348-2.024-3.348-3.97V6.741c0-1.946 1.37-3.68 3.348-3.97z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChatBubbleLeftIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ChatBubbleOvalLeftEllipsisIcon.js
        var require_ChatBubbleOvalLeftEllipsisIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ChatBubbleOvalLeftEllipsisIcon.js"(exports, module) {
                var React2 = require_react();
                function ChatBubbleOvalLeftEllipsisIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M4.804 21.644A6.707 6.707 0 006 21.75a6.721 6.721 0 003.583-1.029c.774.182 1.584.279 2.417.279 5.322 0 9.75-3.97 9.75-9 0-5.03-4.428-9-9.75-9s-9.75 3.97-9.75 9c0 2.409 1.025 4.587 2.674 6.192.232.226.277.428.254.543a3.73 3.73 0 01-.814 1.686.75.75 0 00.44 1.223zM8.25 10.875a1.125 1.125 0 100 2.25 1.125 1.125 0 000-2.25zM10.875 12a1.125 1.125 0 112.25 0 1.125 1.125 0 01-2.25 0zm4.875-1.125a1.125 1.125 0 100 2.25 1.125 1.125 0 000-2.25z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChatBubbleOvalLeftEllipsisIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ChatBubbleOvalLeftIcon.js
        var require_ChatBubbleOvalLeftIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ChatBubbleOvalLeftIcon.js"(exports, module) {
                var React2 = require_react();
                function ChatBubbleOvalLeftIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M5.337 21.718a6.707 6.707 0 01-.533-.074.75.75 0 01-.44-1.223 3.73 3.73 0 00.814-1.686c.023-.115-.022-.317-.254-.543C3.274 16.587 2.25 14.41 2.25 12c0-5.03 4.428-9 9.75-9s9.75 3.97 9.75 9c0 5.03-4.428 9-9.75 9-.833 0-1.643-.097-2.417-.279a6.721 6.721 0 01-4.246.997z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChatBubbleOvalLeftIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/CheckBadgeIcon.js
        var require_CheckBadgeIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/CheckBadgeIcon.js"(exports, module) {
                var React2 = require_react();
                function CheckBadgeIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M8.603 3.799A4.49 4.49 0 0112 2.25c1.357 0 2.573.6 3.397 1.549a4.49 4.49 0 013.498 1.307 4.491 4.491 0 011.307 3.497A4.49 4.49 0 0121.75 12a4.49 4.49 0 01-1.549 3.397 4.491 4.491 0 01-1.307 3.497 4.491 4.491 0 01-3.497 1.307A4.49 4.49 0 0112 21.75a4.49 4.49 0 01-3.397-1.549 4.49 4.49 0 01-3.498-1.306 4.491 4.491 0 01-1.307-3.498A4.49 4.49 0 012.25 12c0-1.357.6-2.573 1.549-3.397a4.49 4.49 0 011.307-3.497 4.49 4.49 0 013.497-1.307zm7.007 6.387a.75.75 0 10-1.22-.872l-3.236 4.53L9.53 12.22a.75.75 0 00-1.06 1.06l2.25 2.25a.75.75 0 001.14-.094l3.75-5.25z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(CheckBadgeIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/CheckCircleIcon.js
        var require_CheckCircleIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/CheckCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function CheckCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12zm13.36-1.814a.75.75 0 10-1.22-.872l-3.236 4.53L9.53 12.22a.75.75 0 00-1.06 1.06l2.25 2.25a.75.75 0 001.14-.094l3.75-5.25z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(CheckCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/CheckIcon.js
        var require_CheckIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/CheckIcon.js"(exports, module) {
                var React2 = require_react();
                function CheckIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M19.916 4.626a.75.75 0 01.208 1.04l-9 13.5a.75.75 0 01-1.154.114l-6-6a.75.75 0 011.06-1.06l5.353 5.353 8.493-12.739a.75.75 0 011.04-.208z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(CheckIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ChevronDoubleDownIcon.js
        var require_ChevronDoubleDownIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ChevronDoubleDownIcon.js"(exports, module) {
                var React2 = require_react();
                function ChevronDoubleDownIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M20.03 4.72a.75.75 0 010 1.06l-7.5 7.5a.75.75 0 01-1.06 0l-7.5-7.5a.75.75 0 011.06-1.06L12 11.69l6.97-6.97a.75.75 0 011.06 0zm0 6a.75.75 0 010 1.06l-7.5 7.5a.75.75 0 01-1.06 0l-7.5-7.5a.75.75 0 111.06-1.06L12 17.69l6.97-6.97a.75.75 0 011.06 0z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChevronDoubleDownIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ChevronDoubleLeftIcon.js
        var require_ChevronDoubleLeftIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ChevronDoubleLeftIcon.js"(exports, module) {
                var React2 = require_react();
                function ChevronDoubleLeftIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M13.28 3.97a.75.75 0 010 1.06L6.31 12l6.97 6.97a.75.75 0 11-1.06 1.06l-7.5-7.5a.75.75 0 010-1.06l7.5-7.5a.75.75 0 011.06 0zm6 0a.75.75 0 010 1.06L12.31 12l6.97 6.97a.75.75 0 11-1.06 1.06l-7.5-7.5a.75.75 0 010-1.06l7.5-7.5a.75.75 0 011.06 0z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChevronDoubleLeftIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ChevronDoubleRightIcon.js
        var require_ChevronDoubleRightIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ChevronDoubleRightIcon.js"(exports, module) {
                var React2 = require_react();
                function ChevronDoubleRightIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M4.72 3.97a.75.75 0 011.06 0l7.5 7.5a.75.75 0 010 1.06l-7.5 7.5a.75.75 0 01-1.06-1.06L11.69 12 4.72 5.03a.75.75 0 010-1.06zm6 0a.75.75 0 011.06 0l7.5 7.5a.75.75 0 010 1.06l-7.5 7.5a.75.75 0 11-1.06-1.06L17.69 12l-6.97-6.97a.75.75 0 010-1.06z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChevronDoubleRightIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ChevronDoubleUpIcon.js
        var require_ChevronDoubleUpIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ChevronDoubleUpIcon.js"(exports, module) {
                var React2 = require_react();
                function ChevronDoubleUpIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M11.47 4.72a.75.75 0 011.06 0l7.5 7.5a.75.75 0 11-1.06 1.06L12 6.31l-6.97 6.97a.75.75 0 01-1.06-1.06l7.5-7.5zm.53 7.59l-6.97 6.97a.75.75 0 01-1.06-1.06l7.5-7.5a.75.75 0 011.06 0l7.5 7.5a.75.75 0 11-1.06 1.06L12 12.31z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChevronDoubleUpIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ChevronDownIcon.js
        var require_ChevronDownIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ChevronDownIcon.js"(exports, module) {
                var React2 = require_react();
                function ChevronDownIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M12.53 16.28a.75.75 0 01-1.06 0l-7.5-7.5a.75.75 0 011.06-1.06L12 14.69l6.97-6.97a.75.75 0 111.06 1.06l-7.5 7.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChevronDownIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ChevronLeftIcon.js
        var require_ChevronLeftIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ChevronLeftIcon.js"(exports, module) {
                var React2 = require_react();
                function ChevronLeftIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M7.72 12.53a.75.75 0 010-1.06l7.5-7.5a.75.75 0 111.06 1.06L9.31 12l6.97 6.97a.75.75 0 11-1.06 1.06l-7.5-7.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChevronLeftIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ChevronRightIcon.js
        var require_ChevronRightIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ChevronRightIcon.js"(exports, module) {
                var React2 = require_react();
                function ChevronRightIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M16.28 11.47a.75.75 0 010 1.06l-7.5 7.5a.75.75 0 01-1.06-1.06L14.69 12 7.72 5.03a.75.75 0 011.06-1.06l7.5 7.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChevronRightIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ChevronUpDownIcon.js
        var require_ChevronUpDownIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ChevronUpDownIcon.js"(exports, module) {
                var React2 = require_react();
                function ChevronUpDownIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M11.47 4.72a.75.75 0 011.06 0l3.75 3.75a.75.75 0 01-1.06 1.06L12 6.31 8.78 9.53a.75.75 0 01-1.06-1.06l3.75-3.75zm-3.75 9.75a.75.75 0 011.06 0L12 17.69l3.22-3.22a.75.75 0 111.06 1.06l-3.75 3.75a.75.75 0 01-1.06 0l-3.75-3.75a.75.75 0 010-1.06z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChevronUpDownIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ChevronUpIcon.js
        var require_ChevronUpIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ChevronUpIcon.js"(exports, module) {
                var React2 = require_react();
                function ChevronUpIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M11.47 7.72a.75.75 0 011.06 0l7.5 7.5a.75.75 0 11-1.06 1.06L12 9.31l-6.97 6.97a.75.75 0 01-1.06-1.06l7.5-7.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChevronUpIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/CircleStackIcon.js
        var require_CircleStackIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/CircleStackIcon.js"(exports, module) {
                var React2 = require_react();
                function CircleStackIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M21 6.375c0 2.692-4.03 4.875-9 4.875S3 9.067 3 6.375 7.03 1.5 12 1.5s9 2.183 9 4.875z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M12 12.75c2.685 0 5.19-.586 7.078-1.609a8.283 8.283 0 001.897-1.384c.016.121.025.244.025.368C21 12.817 16.97 15 12 15s-9-2.183-9-4.875c0-.124.009-.247.025-.368a8.285 8.285 0 001.897 1.384C6.809 12.164 9.315 12.75 12 12.75z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M12 16.5c2.685 0 5.19-.586 7.078-1.609a8.282 8.282 0 001.897-1.384c.016.121.025.244.025.368 0 2.692-4.03 4.875-9 4.875s-9-2.183-9-4.875c0-.124.009-.247.025-.368a8.284 8.284 0 001.897 1.384C6.809 15.914 9.315 16.5 12 16.5z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M12 20.25c2.685 0 5.19-.586 7.078-1.609a8.282 8.282 0 001.897-1.384c.016.121.025.244.025.368 0 2.692-4.03 4.875-9 4.875s-9-2.183-9-4.875c0-.124.009-.247.025-.368a8.284 8.284 0 001.897 1.384C6.809 19.664 9.315 20.25 12 20.25z"
                    }));
                }
                var ForwardRef = React2.forwardRef(CircleStackIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ClipboardDocumentCheckIcon.js
        var require_ClipboardDocumentCheckIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ClipboardDocumentCheckIcon.js"(exports, module) {
                var React2 = require_react();
                function ClipboardDocumentCheckIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M7.502 6h7.128A3.375 3.375 0 0118 9.375v9.375a3 3 0 003-3V6.108c0-1.505-1.125-2.811-2.664-2.94a48.972 48.972 0 00-.673-.05A3 3 0 0015 1.5h-1.5a3 3 0 00-2.663 1.618c-.225.015-.45.032-.673.05C8.662 3.295 7.554 4.542 7.502 6zM13.5 3A1.5 1.5 0 0012 4.5h4.5A1.5 1.5 0 0015 3h-1.5z",
                        clipRule: "evenodd"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M3 9.375C3 8.339 3.84 7.5 4.875 7.5h9.75c1.036 0 1.875.84 1.875 1.875v11.25c0 1.035-.84 1.875-1.875 1.875h-9.75A1.875 1.875 0 013 20.625V9.375zm9.586 4.594a.75.75 0 00-1.172-.938l-2.476 3.096-.908-.907a.75.75 0 00-1.06 1.06l1.5 1.5a.75.75 0 001.116-.062l3-3.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ClipboardDocumentCheckIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ClipboardDocumentListIcon.js
        var require_ClipboardDocumentListIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ClipboardDocumentListIcon.js"(exports, module) {
                var React2 = require_react();
                function ClipboardDocumentListIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M7.502 6h7.128A3.375 3.375 0 0118 9.375v9.375a3 3 0 003-3V6.108c0-1.505-1.125-2.811-2.664-2.94a48.972 48.972 0 00-.673-.05A3 3 0 0015 1.5h-1.5a3 3 0 00-2.663 1.618c-.225.015-.45.032-.673.05C8.662 3.295 7.554 4.542 7.502 6zM13.5 3A1.5 1.5 0 0012 4.5h4.5A1.5 1.5 0 0015 3h-1.5z",
                        clipRule: "evenodd"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M3 9.375C3 8.339 3.84 7.5 4.875 7.5h9.75c1.036 0 1.875.84 1.875 1.875v11.25c0 1.035-.84 1.875-1.875 1.875h-9.75A1.875 1.875 0 013 20.625V9.375zM6 12a.75.75 0 01.75-.75h.008a.75.75 0 01.75.75v.008a.75.75 0 01-.75.75H6.75a.75.75 0 01-.75-.75V12zm2.25 0a.75.75 0 01.75-.75h3.75a.75.75 0 010 1.5H9a.75.75 0 01-.75-.75zM6 15a.75.75 0 01.75-.75h.008a.75.75 0 01.75.75v.008a.75.75 0 01-.75.75H6.75a.75.75 0 01-.75-.75V15zm2.25 0a.75.75 0 01.75-.75h3.75a.75.75 0 010 1.5H9a.75.75 0 01-.75-.75zM6 18a.75.75 0 01.75-.75h.008a.75.75 0 01.75.75v.008a.75.75 0 01-.75.75H6.75a.75.75 0 01-.75-.75V18zm2.25 0a.75.75 0 01.75-.75h3.75a.75.75 0 010 1.5H9a.75.75 0 01-.75-.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ClipboardDocumentListIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ClipboardDocumentIcon.js
        var require_ClipboardDocumentIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ClipboardDocumentIcon.js"(exports, module) {
                var React2 = require_react();
                function ClipboardDocumentIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M17.663 3.118c.225.015.45.032.673.05C19.876 3.298 21 4.604 21 6.109v9.642a3 3 0 01-3 3V16.5c0-5.922-4.576-10.775-10.384-11.217.324-1.132 1.3-2.01 2.548-2.114.224-.019.448-.036.673-.051A3 3 0 0113.5 1.5H15a3 3 0 012.663 1.618zM12 4.5A1.5 1.5 0 0113.5 3H15a1.5 1.5 0 011.5 1.5H12z",
                        clipRule: "evenodd"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M3 8.625c0-1.036.84-1.875 1.875-1.875h.375A3.75 3.75 0 019 10.5v1.875c0 1.036.84 1.875 1.875 1.875h1.875A3.75 3.75 0 0116.5 18v2.625c0 1.035-.84 1.875-1.875 1.875h-9.75A1.875 1.875 0 013 20.625v-12z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M10.5 10.5a5.23 5.23 0 00-1.279-3.434 9.768 9.768 0 016.963 6.963 5.23 5.23 0 00-3.434-1.279h-1.875a.375.375 0 01-.375-.375V10.5z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ClipboardDocumentIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ClipboardIcon.js
        var require_ClipboardIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ClipboardIcon.js"(exports, module) {
                var React2 = require_react();
                function ClipboardIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10.5 3A1.501 1.501 0 009 4.5h6A1.5 1.5 0 0013.5 3h-3zm-2.693.178A3 3 0 0110.5 1.5h3a3 3 0 012.694 1.678c.497.042.992.092 1.486.15 1.497.173 2.57 1.46 2.57 2.929V19.5a3 3 0 01-3 3H6.75a3 3 0 01-3-3V6.257c0-1.47 1.073-2.756 2.57-2.93.493-.057.989-.107 1.487-.15z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ClipboardIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ClockIcon.js
        var require_ClockIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ClockIcon.js"(exports, module) {
                var React2 = require_react();
                function ClockIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25zM12.75 6a.75.75 0 00-1.5 0v6c0 .414.336.75.75.75h4.5a.75.75 0 000-1.5h-3.75V6z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ClockIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/CloudArrowDownIcon.js
        var require_CloudArrowDownIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/CloudArrowDownIcon.js"(exports, module) {
                var React2 = require_react();
                function CloudArrowDownIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10.5 3.75a6 6 0 00-5.98 6.496A5.25 5.25 0 006.75 20.25H18a4.5 4.5 0 002.206-8.423 3.75 3.75 0 00-4.133-4.303A6.001 6.001 0 0010.5 3.75zm2.25 6a.75.75 0 00-1.5 0v4.94l-1.72-1.72a.75.75 0 00-1.06 1.06l3 3a.75.75 0 001.06 0l3-3a.75.75 0 10-1.06-1.06l-1.72 1.72V9.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(CloudArrowDownIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/CloudArrowUpIcon.js
        var require_CloudArrowUpIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/CloudArrowUpIcon.js"(exports, module) {
                var React2 = require_react();
                function CloudArrowUpIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10.5 3.75a6 6 0 00-5.98 6.496A5.25 5.25 0 006.75 20.25H18a4.5 4.5 0 002.206-8.423 3.75 3.75 0 00-4.133-4.303A6.001 6.001 0 0010.5 3.75zm2.03 5.47a.75.75 0 00-1.06 0l-3 3a.75.75 0 101.06 1.06l1.72-1.72v4.94a.75.75 0 001.5 0v-4.94l1.72 1.72a.75.75 0 101.06-1.06l-3-3z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(CloudArrowUpIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/CloudIcon.js
        var require_CloudIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/CloudIcon.js"(exports, module) {
                var React2 = require_react();
                function CloudIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M4.5 9.75a6 6 0 0111.573-2.226 3.75 3.75 0 014.133 4.303A4.5 4.5 0 0118 20.25H6.75a5.25 5.25 0 01-2.23-10.004 6.072 6.072 0 01-.02-.496z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(CloudIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/CodeBracketSquareIcon.js
        var require_CodeBracketSquareIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/CodeBracketSquareIcon.js"(exports, module) {
                var React2 = require_react();
                function CodeBracketSquareIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M3 6a3 3 0 013-3h12a3 3 0 013 3v12a3 3 0 01-3 3H6a3 3 0 01-3-3V6zm14.25 6a.75.75 0 01-.22.53l-2.25 2.25a.75.75 0 11-1.06-1.06L15.44 12l-1.72-1.72a.75.75 0 111.06-1.06l2.25 2.25c.141.14.22.331.22.53zm-10.28-.53a.75.75 0 000 1.06l2.25 2.25a.75.75 0 101.06-1.06L8.56 12l1.72-1.72a.75.75 0 10-1.06-1.06l-2.25 2.25z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(CodeBracketSquareIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/CodeBracketIcon.js
        var require_CodeBracketIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/CodeBracketIcon.js"(exports, module) {
                var React2 = require_react();
                function CodeBracketIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M14.447 3.027a.75.75 0 01.527.92l-4.5 16.5a.75.75 0 01-1.448-.394l4.5-16.5a.75.75 0 01.921-.526zM16.72 6.22a.75.75 0 011.06 0l5.25 5.25a.75.75 0 010 1.06l-5.25 5.25a.75.75 0 11-1.06-1.06L21.44 12l-4.72-4.72a.75.75 0 010-1.06zm-9.44 0a.75.75 0 010 1.06L2.56 12l4.72 4.72a.75.75 0 11-1.06 1.06L.97 12.53a.75.75 0 010-1.06l5.25-5.25a.75.75 0 011.06 0z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(CodeBracketIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/Cog6ToothIcon.js
        var require_Cog6ToothIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/Cog6ToothIcon.js"(exports, module) {
                var React2 = require_react();
                function Cog6ToothIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M11.078 2.25c-.917 0-1.699.663-1.85 1.567L9.05 4.889c-.02.12-.115.26-.297.348a7.493 7.493 0 00-.986.57c-.166.115-.334.126-.45.083L6.3 5.508a1.875 1.875 0 00-2.282.819l-.922 1.597a1.875 1.875 0 00.432 2.385l.84.692c.095.078.17.229.154.43a7.598 7.598 0 000 1.139c.015.2-.059.352-.153.43l-.841.692a1.875 1.875 0 00-.432 2.385l.922 1.597a1.875 1.875 0 002.282.818l1.019-.382c.115-.043.283-.031.45.082.312.214.641.405.985.57.182.088.277.228.297.35l.178 1.071c.151.904.933 1.567 1.85 1.567h1.844c.916 0 1.699-.663 1.85-1.567l.178-1.072c.02-.12.114-.26.297-.349.344-.165.673-.356.985-.57.167-.114.335-.125.45-.082l1.02.382a1.875 1.875 0 002.28-.819l.923-1.597a1.875 1.875 0 00-.432-2.385l-.84-.692c-.095-.078-.17-.229-.154-.43a7.614 7.614 0 000-1.139c-.016-.2.059-.352.153-.43l.84-.692c.708-.582.891-1.59.433-2.385l-.922-1.597a1.875 1.875 0 00-2.282-.818l-1.02.382c-.114.043-.282.031-.449-.083a7.49 7.49 0 00-.985-.57c-.183-.087-.277-.227-.297-.348l-.179-1.072a1.875 1.875 0 00-1.85-1.567h-1.843zM12 15.75a3.75 3.75 0 100-7.5 3.75 3.75 0 000 7.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(Cog6ToothIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/Cog8ToothIcon.js
        var require_Cog8ToothIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/Cog8ToothIcon.js"(exports, module) {
                var React2 = require_react();
                function Cog8ToothIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M11.828 2.25c-.916 0-1.699.663-1.85 1.567l-.091.549a.798.798 0 01-.517.608 7.45 7.45 0 00-.478.198.798.798 0 01-.796-.064l-.453-.324a1.875 1.875 0 00-2.416.2l-.243.243a1.875 1.875 0 00-.2 2.416l.324.453a.798.798 0 01.064.796 7.448 7.448 0 00-.198.478.798.798 0 01-.608.517l-.55.092a1.875 1.875 0 00-1.566 1.849v.344c0 .916.663 1.699 1.567 1.85l.549.091c.281.047.508.25.608.517.06.162.127.321.198.478a.798.798 0 01-.064.796l-.324.453a1.875 1.875 0 00.2 2.416l.243.243c.648.648 1.67.733 2.416.2l.453-.324a.798.798 0 01.796-.064c.157.071.316.137.478.198.267.1.47.327.517.608l.092.55c.15.903.932 1.566 1.849 1.566h.344c.916 0 1.699-.663 1.85-1.567l.091-.549a.798.798 0 01.517-.608 7.52 7.52 0 00.478-.198.798.798 0 01.796.064l.453.324a1.875 1.875 0 002.416-.2l.243-.243c.648-.648.733-1.67.2-2.416l-.324-.453a.798.798 0 01-.064-.796c.071-.157.137-.316.198-.478.1-.267.327-.47.608-.517l.55-.091a1.875 1.875 0 001.566-1.85v-.344c0-.916-.663-1.699-1.567-1.85l-.549-.091a.798.798 0 01-.608-.517 7.507 7.507 0 00-.198-.478.798.798 0 01.064-.796l.324-.453a1.875 1.875 0 00-.2-2.416l-.243-.243a1.875 1.875 0 00-2.416-.2l-.453.324a.798.798 0 01-.796.064 7.462 7.462 0 00-.478-.198.798.798 0 01-.517-.608l-.091-.55a1.875 1.875 0 00-1.85-1.566h-.344zM12 15.75a3.75 3.75 0 100-7.5 3.75 3.75 0 000 7.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(Cog8ToothIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/CogIcon.js
        var require_CogIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/CogIcon.js"(exports, module) {
                var React2 = require_react();
                function CogIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M17.004 10.407c.138.435-.216.842-.672.842h-3.465a.75.75 0 01-.65-.375l-1.732-3c-.229-.396-.053-.907.393-1.004a5.252 5.252 0 016.126 3.537zM8.12 8.464c.307-.338.838-.235 1.066.16l1.732 3a.75.75 0 010 .75l-1.732 3.001c-.229.396-.76.498-1.067.16A5.231 5.231 0 016.75 12c0-1.362.519-2.603 1.37-3.536zM10.878 17.13c-.447-.097-.623-.608-.394-1.003l1.733-3.003a.75.75 0 01.65-.375h3.465c.457 0 .81.408.672.843a5.252 5.252 0 01-6.126 3.538z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M21 12.75a.75.75 0 000-1.5h-.783a8.22 8.22 0 00-.237-1.357l.734-.267a.75.75 0 10-.513-1.41l-.735.268a8.24 8.24 0 00-.689-1.191l.6-.504a.75.75 0 10-.964-1.149l-.6.504a8.3 8.3 0 00-1.054-.885l.391-.678a.75.75 0 10-1.299-.75l-.39.677a8.188 8.188 0 00-1.295-.471l.136-.77a.75.75 0 00-1.477-.26l-.136.77a8.364 8.364 0 00-1.377 0l-.136-.77a.75.75 0 10-1.477.26l.136.77c-.448.121-.88.28-1.294.47l-.39-.676a.75.75 0 00-1.3.75l.392.678a8.29 8.29 0 00-1.054.885l-.6-.504a.75.75 0 00-.965 1.149l.6.503a8.243 8.243 0 00-.689 1.192L3.8 8.217a.75.75 0 10-.513 1.41l.735.267a8.222 8.222 0 00-.238 1.355h-.783a.75.75 0 000 1.5h.783c.042.464.122.917.238 1.356l-.735.268a.75.75 0 10.513 1.41l.735-.268c.197.417.428.816.69 1.192l-.6.504a.75.75 0 10.963 1.149l.601-.505c.326.323.679.62 1.054.885l-.392.68a.75.75 0 101.3.75l.39-.679c.414.192.847.35 1.294.471l-.136.771a.75.75 0 101.477.26l.137-.772a8.376 8.376 0 001.376 0l.136.773a.75.75 0 101.477-.26l-.136-.772a8.19 8.19 0 001.294-.47l.391.677a.75.75 0 101.3-.75l-.393-.679a8.282 8.282 0 001.054-.885l.601.504a.75.75 0 10.964-1.15l-.6-.503a8.24 8.24 0 00.69-1.191l.735.268a.75.75 0 10.512-1.41l-.734-.268c.115-.438.195-.892.237-1.356h.784zm-2.657-3.06a6.744 6.744 0 00-1.19-2.053 6.784 6.784 0 00-1.82-1.51A6.704 6.704 0 0012 5.25a6.801 6.801 0 00-1.225.111 6.7 6.7 0 00-2.15.792 6.784 6.784 0 00-2.952 3.489.758.758 0 01-.036.099A6.74 6.74 0 005.251 12a6.739 6.739 0 003.355 5.835l.01.006.01.005a6.706 6.706 0 002.203.802c.007 0 .014.002.021.004a6.792 6.792 0 002.301 0l.022-.004a6.707 6.707 0 002.228-.816 6.781 6.781 0 001.762-1.483l.009-.01.009-.012a6.744 6.744 0 001.18-2.064c.253-.708.39-1.47.39-2.264a6.74 6.74 0 00-.408-2.308z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(CogIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/CommandLineIcon.js
        var require_CommandLineIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/CommandLineIcon.js"(exports, module) {
                var React2 = require_react();
                function CommandLineIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M2.25 6a3 3 0 013-3h13.5a3 3 0 013 3v12a3 3 0 01-3 3H5.25a3 3 0 01-3-3V6zm3.97.97a.75.75 0 011.06 0l2.25 2.25a.75.75 0 010 1.06l-2.25 2.25a.75.75 0 01-1.06-1.06l1.72-1.72-1.72-1.72a.75.75 0 010-1.06zm4.28 4.28a.75.75 0 000 1.5h3a.75.75 0 000-1.5h-3z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(CommandLineIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ComputerDesktopIcon.js
        var require_ComputerDesktopIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ComputerDesktopIcon.js"(exports, module) {
                var React2 = require_react();
                function ComputerDesktopIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M2.25 5.25a3 3 0 013-3h13.5a3 3 0 013 3V15a3 3 0 01-3 3h-3v.257c0 .597.237 1.17.659 1.591l.621.622a.75.75 0 01-.53 1.28h-9a.75.75 0 01-.53-1.28l.621-.622a2.25 2.25 0 00.659-1.59V18h-3a3 3 0 01-3-3V5.25zm1.5 0v7.5a1.5 1.5 0 001.5 1.5h13.5a1.5 1.5 0 001.5-1.5v-7.5a1.5 1.5 0 00-1.5-1.5H5.25a1.5 1.5 0 00-1.5 1.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ComputerDesktopIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/CpuChipIcon.js
        var require_CpuChipIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/CpuChipIcon.js"(exports, module) {
                var React2 = require_react();
                function CpuChipIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M16.5 7.5h-9v9h9v-9z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M8.25 2.25A.75.75 0 019 3v.75h2.25V3a.75.75 0 011.5 0v.75H15V3a.75.75 0 011.5 0v.75h.75a3 3 0 013 3v.75H21A.75.75 0 0121 9h-.75v2.25H21a.75.75 0 010 1.5h-.75V15H21a.75.75 0 010 1.5h-.75v.75a3 3 0 01-3 3h-.75V21a.75.75 0 01-1.5 0v-.75h-2.25V21a.75.75 0 01-1.5 0v-.75H9V21a.75.75 0 01-1.5 0v-.75h-.75a3 3 0 01-3-3v-.75H3A.75.75 0 013 15h.75v-2.25H3a.75.75 0 010-1.5h.75V9H3a.75.75 0 010-1.5h.75v-.75a3 3 0 013-3h.75V3a.75.75 0 01.75-.75zM6 6.75A.75.75 0 016.75 6h10.5a.75.75 0 01.75.75v10.5a.75.75 0 01-.75.75H6.75a.75.75 0 01-.75-.75V6.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(CpuChipIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/CreditCardIcon.js
        var require_CreditCardIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/CreditCardIcon.js"(exports, module) {
                var React2 = require_react();
                function CreditCardIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M4.5 3.75a3 3 0 00-3 3v.75h21v-.75a3 3 0 00-3-3h-15z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M22.5 9.75h-21v7.5a3 3 0 003 3h15a3 3 0 003-3v-7.5zm-18 3.75a.75.75 0 01.75-.75h6a.75.75 0 010 1.5h-6a.75.75 0 01-.75-.75zm.75 2.25a.75.75 0 000 1.5h3a.75.75 0 000-1.5h-3z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(CreditCardIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/CubeTransparentIcon.js
        var require_CubeTransparentIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/CubeTransparentIcon.js"(exports, module) {
                var React2 = require_react();
                function CubeTransparentIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M11.622 1.602a.75.75 0 01.756 0l2.25 1.313a.75.75 0 01-.756 1.295L12 3.118 10.128 4.21a.75.75 0 11-.756-1.295l2.25-1.313zM5.898 5.81a.75.75 0 01-.27 1.025l-1.14.665 1.14.665a.75.75 0 11-.756 1.295L3.75 8.806v.944a.75.75 0 01-1.5 0V7.5a.75.75 0 01.372-.648l2.25-1.312a.75.75 0 011.026.27zm12.204 0a.75.75 0 011.026-.27l2.25 1.312a.75.75 0 01.372.648v2.25a.75.75 0 01-1.5 0v-.944l-1.122.654a.75.75 0 11-.756-1.295l1.14-.665-1.14-.665a.75.75 0 01-.27-1.025zm-9 5.25a.75.75 0 011.026-.27L12 11.882l1.872-1.092a.75.75 0 11.756 1.295l-1.878 1.096V15a.75.75 0 01-1.5 0v-1.82l-1.878-1.095a.75.75 0 01-.27-1.025zM3 13.5a.75.75 0 01.75.75v1.82l1.878 1.095a.75.75 0 11-.756 1.295l-2.25-1.312a.75.75 0 01-.372-.648v-2.25A.75.75 0 013 13.5zm18 0a.75.75 0 01.75.75v2.25a.75.75 0 01-.372.648l-2.25 1.312a.75.75 0 11-.756-1.295l1.878-1.096V14.25a.75.75 0 01.75-.75zm-9 5.25a.75.75 0 01.75.75v.944l1.122-.654a.75.75 0 11.756 1.295l-2.25 1.313a.75.75 0 01-.756 0l-2.25-1.313a.75.75 0 11.756-1.295l1.122.654V19.5a.75.75 0 01.75-.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(CubeTransparentIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/CubeIcon.js
        var require_CubeIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/CubeIcon.js"(exports, module) {
                var React2 = require_react();
                function CubeIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M12.378 1.602a.75.75 0 00-.756 0L3 6.632l9 5.25 9-5.25-8.622-5.03zM21.75 7.93l-9 5.25v9l8.628-5.032a.75.75 0 00.372-.648V7.93zM11.25 22.18v-9l-9-5.25v8.57a.75.75 0 00.372.648l8.628 5.033z"
                    }));
                }
                var ForwardRef = React2.forwardRef(CubeIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/CurrencyBangladeshiIcon.js
        var require_CurrencyBangladeshiIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/CurrencyBangladeshiIcon.js"(exports, module) {
                var React2 = require_react();
                function CurrencyBangladeshiIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M12 21.75c5.385 0 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25 2.25 6.615 2.25 12s4.365 9.75 9.75 9.75zM10.5 7.963a1.5 1.5 0 00-2.17-1.341l-.415.207a.75.75 0 00.67 1.342L9 7.963V9.75h-.75a.75.75 0 100 1.5H9v4.688c0 .563.26 1.198.867 1.525A4.501 4.501 0 0016.41 14.4c.199-.977-.636-1.649-1.415-1.649h-.745a.75.75 0 100 1.5h.656a3.002 3.002 0 01-4.327 1.893.113.113 0 01-.045-.051.336.336 0 01-.034-.154V11.25h5.25a.75.75 0 000-1.5H10.5V7.963z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(CurrencyBangladeshiIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/CurrencyDollarIcon.js
        var require_CurrencyDollarIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/CurrencyDollarIcon.js"(exports, module) {
                var React2 = require_react();
                function CurrencyDollarIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M10.464 8.746c.227-.18.497-.311.786-.394v2.795a2.252 2.252 0 01-.786-.393c-.394-.313-.546-.681-.546-1.004 0-.323.152-.691.546-1.004zM12.75 15.662v-2.824c.347.085.664.228.921.421.427.32.579.686.579.991 0 .305-.152.671-.579.991a2.534 2.534 0 01-.921.42z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25zM12.75 6a.75.75 0 00-1.5 0v.816a3.836 3.836 0 00-1.72.756c-.712.566-1.112 1.35-1.112 2.178 0 .829.4 1.612 1.113 2.178.502.4 1.102.647 1.719.756v2.978a2.536 2.536 0 01-.921-.421l-.879-.66a.75.75 0 00-.9 1.2l.879.66c.533.4 1.169.645 1.821.75V18a.75.75 0 001.5 0v-.81a4.124 4.124 0 001.821-.749c.745-.559 1.179-1.344 1.179-2.191 0-.847-.434-1.632-1.179-2.191a4.122 4.122 0 00-1.821-.75V8.354c.29.082.559.213.786.393l.415.33a.75.75 0 00.933-1.175l-.415-.33a3.836 3.836 0 00-1.719-.755V6z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(CurrencyDollarIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/CurrencyEuroIcon.js
        var require_CurrencyEuroIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/CurrencyEuroIcon.js"(exports, module) {
                var React2 = require_react();
                function CurrencyEuroIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25zm-1.902 7.098a3.75 3.75 0 013.903-.884.75.75 0 10.498-1.415A5.25 5.25 0 008.005 9.75H7.5a.75.75 0 000 1.5h.054a5.281 5.281 0 000 1.5H7.5a.75.75 0 000 1.5h.505a5.25 5.25 0 006.494 2.701.75.75 0 00-.498-1.415 3.75 3.75 0 01-4.252-1.286h3.001a.75.75 0 000-1.5H9.075a3.77 3.77 0 010-1.5h3.675a.75.75 0 000-1.5h-3c.105-.14.221-.274.348-.402z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(CurrencyEuroIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/CurrencyPoundIcon.js
        var require_CurrencyPoundIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/CurrencyPoundIcon.js"(exports, module) {
                var React2 = require_react();
                function CurrencyPoundIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25zM9.763 9.51a2.25 2.25 0 013.828-1.351.75.75 0 001.06-1.06 3.75 3.75 0 00-6.38 2.252c-.033.307 0 .595.032.822l.154 1.077H8.25a.75.75 0 000 1.5h.421l.138.964a3.75 3.75 0 01-.358 2.208l-.122.242a.75.75 0 00.908 1.047l1.539-.512a1.5 1.5 0 01.948 0l.655.218a3 3 0 002.29-.163l.666-.333a.75.75 0 10-.67-1.342l-.667.333a1.5 1.5 0 01-1.145.082l-.654-.218a3 3 0 00-1.898 0l-.06.02a5.25 5.25 0 00.053-1.794l-.108-.752H12a.75.75 0 000-1.5H9.972l-.184-1.29a1.863 1.863 0 01-.025-.45z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(CurrencyPoundIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/CurrencyRupeeIcon.js
        var require_CurrencyRupeeIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/CurrencyRupeeIcon.js"(exports, module) {
                var React2 = require_react();
                function CurrencyRupeeIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25zM9 7.5A.75.75 0 009 9h1.5c.98 0 1.813.626 2.122 1.5H9A.75.75 0 009 12h3.622a2.251 2.251 0 01-2.122 1.5H9a.75.75 0 00-.53 1.28l3 3a.75.75 0 101.06-1.06L10.8 14.988A3.752 3.752 0 0014.175 12H15a.75.75 0 000-1.5h-.825A3.733 3.733 0 0013.5 9H15a.75.75 0 000-1.5H9z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(CurrencyRupeeIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/CurrencyYenIcon.js
        var require_CurrencyYenIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/CurrencyYenIcon.js"(exports, module) {
                var React2 = require_react();
                function CurrencyYenIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25zM9.624 7.084a.75.75 0 00-1.248.832l2.223 3.334H9a.75.75 0 000 1.5h2.25v1.5H9a.75.75 0 000 1.5h2.25v1.5a.75.75 0 001.5 0v-1.5H15a.75.75 0 000-1.5h-2.25v-1.5H15a.75.75 0 000-1.5h-1.599l2.223-3.334a.75.75 0 10-1.248-.832L12 10.648 9.624 7.084z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(CurrencyYenIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/CursorArrowRaysIcon.js
        var require_CursorArrowRaysIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/CursorArrowRaysIcon.js"(exports, module) {
                var React2 = require_react();
                function CursorArrowRaysIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M12 1.5a.75.75 0 01.75.75V4.5a.75.75 0 01-1.5 0V2.25A.75.75 0 0112 1.5zM5.636 4.136a.75.75 0 011.06 0l1.592 1.591a.75.75 0 01-1.061 1.06l-1.591-1.59a.75.75 0 010-1.061zm12.728 0a.75.75 0 010 1.06l-1.591 1.592a.75.75 0 01-1.06-1.061l1.59-1.591a.75.75 0 011.061 0zm-6.816 4.496a.75.75 0 01.82.311l5.228 7.917a.75.75 0 01-.777 1.148l-2.097-.43 1.045 3.9a.75.75 0 01-1.45.388l-1.044-3.899-1.601 1.42a.75.75 0 01-1.247-.606l.569-9.47a.75.75 0 01.554-.68zM3 10.5a.75.75 0 01.75-.75H6a.75.75 0 010 1.5H3.75A.75.75 0 013 10.5zm14.25 0a.75.75 0 01.75-.75h2.25a.75.75 0 010 1.5H18a.75.75 0 01-.75-.75zm-8.962 3.712a.75.75 0 010 1.061l-1.591 1.591a.75.75 0 11-1.061-1.06l1.591-1.592a.75.75 0 011.06 0z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(CursorArrowRaysIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/CursorArrowRippleIcon.js
        var require_CursorArrowRippleIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/CursorArrowRippleIcon.js"(exports, module) {
                var React2 = require_react();
                function CursorArrowRippleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M17.303 5.197A7.5 7.5 0 006.697 15.803a.75.75 0 01-1.061 1.061A9 9 0 1121 10.5a.75.75 0 01-1.5 0c0-1.92-.732-3.839-2.197-5.303zm-2.121 2.121a4.5 4.5 0 00-6.364 6.364.75.75 0 11-1.06 1.06A6 6 0 1118 10.5a.75.75 0 01-1.5 0c0-1.153-.44-2.303-1.318-3.182zm-3.634 1.314a.75.75 0 01.82.311l5.228 7.917a.75.75 0 01-.777 1.148l-2.097-.43 1.045 3.9a.75.75 0 01-1.45.388l-1.044-3.899-1.601 1.42a.75.75 0 01-1.247-.606l.569-9.47a.75.75 0 01.554-.68z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(CursorArrowRippleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/DevicePhoneMobileIcon.js
        var require_DevicePhoneMobileIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/DevicePhoneMobileIcon.js"(exports, module) {
                var React2 = require_react();
                function DevicePhoneMobileIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M10.5 18.75a.75.75 0 000 1.5h3a.75.75 0 000-1.5h-3z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M8.625.75A3.375 3.375 0 005.25 4.125v15.75a3.375 3.375 0 003.375 3.375h6.75a3.375 3.375 0 003.375-3.375V4.125A3.375 3.375 0 0015.375.75h-6.75zM7.5 4.125C7.5 3.504 8.004 3 8.625 3H9.75v.375c0 .621.504 1.125 1.125 1.125h2.25c.621 0 1.125-.504 1.125-1.125V3h1.125c.621 0 1.125.504 1.125 1.125v15.75c0 .621-.504 1.125-1.125 1.125h-6.75A1.125 1.125 0 017.5 19.875V4.125z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(DevicePhoneMobileIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/DeviceTabletIcon.js
        var require_DeviceTabletIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/DeviceTabletIcon.js"(exports, module) {
                var React2 = require_react();
                function DeviceTabletIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M10.5 18a.75.75 0 000 1.5h3a.75.75 0 000-1.5h-3z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M7.125 1.5A3.375 3.375 0 003.75 4.875v14.25A3.375 3.375 0 007.125 22.5h9.75a3.375 3.375 0 003.375-3.375V4.875A3.375 3.375 0 0016.875 1.5h-9.75zM6 4.875c0-.621.504-1.125 1.125-1.125h9.75c.621 0 1.125.504 1.125 1.125v14.25c0 .621-.504 1.125-1.125 1.125h-9.75A1.125 1.125 0 016 19.125V4.875z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(DeviceTabletIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/DocumentArrowDownIcon.js
        var require_DocumentArrowDownIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/DocumentArrowDownIcon.js"(exports, module) {
                var React2 = require_react();
                function DocumentArrowDownIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M5.625 1.5H9a3.75 3.75 0 013.75 3.75v1.875c0 1.036.84 1.875 1.875 1.875H16.5a3.75 3.75 0 013.75 3.75v7.875c0 1.035-.84 1.875-1.875 1.875H5.625a1.875 1.875 0 01-1.875-1.875V3.375c0-1.036.84-1.875 1.875-1.875zm5.845 17.03a.75.75 0 001.06 0l3-3a.75.75 0 10-1.06-1.06l-1.72 1.72V12a.75.75 0 00-1.5 0v4.19l-1.72-1.72a.75.75 0 00-1.06 1.06l3 3z",
                        clipRule: "evenodd"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M14.25 5.25a5.23 5.23 0 00-1.279-3.434 9.768 9.768 0 016.963 6.963A5.23 5.23 0 0016.5 7.5h-1.875a.375.375 0 01-.375-.375V5.25z"
                    }));
                }
                var ForwardRef = React2.forwardRef(DocumentArrowDownIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/DocumentArrowUpIcon.js
        var require_DocumentArrowUpIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/DocumentArrowUpIcon.js"(exports, module) {
                var React2 = require_react();
                function DocumentArrowUpIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M5.625 1.5H9a3.75 3.75 0 013.75 3.75v1.875c0 1.036.84 1.875 1.875 1.875H16.5a3.75 3.75 0 013.75 3.75v7.875c0 1.035-.84 1.875-1.875 1.875H5.625a1.875 1.875 0 01-1.875-1.875V3.375c0-1.036.84-1.875 1.875-1.875zm6.905 9.97a.75.75 0 00-1.06 0l-3 3a.75.75 0 101.06 1.06l1.72-1.72V18a.75.75 0 001.5 0v-4.19l1.72 1.72a.75.75 0 101.06-1.06l-3-3z",
                        clipRule: "evenodd"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M14.25 5.25a5.23 5.23 0 00-1.279-3.434 9.768 9.768 0 016.963 6.963A5.23 5.23 0 0016.5 7.5h-1.875a.375.375 0 01-.375-.375V5.25z"
                    }));
                }
                var ForwardRef = React2.forwardRef(DocumentArrowUpIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/DocumentChartBarIcon.js
        var require_DocumentChartBarIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/DocumentChartBarIcon.js"(exports, module) {
                var React2 = require_react();
                function DocumentChartBarIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M5.625 1.5H9a3.75 3.75 0 013.75 3.75v1.875c0 1.036.84 1.875 1.875 1.875H16.5a3.75 3.75 0 013.75 3.75v7.875c0 1.035-.84 1.875-1.875 1.875H5.625a1.875 1.875 0 01-1.875-1.875V3.375c0-1.036.84-1.875 1.875-1.875zM9.75 17.25a.75.75 0 00-1.5 0V18a.75.75 0 001.5 0v-.75zm2.25-3a.75.75 0 01.75.75v3a.75.75 0 01-1.5 0v-3a.75.75 0 01.75-.75zm3.75-1.5a.75.75 0 00-1.5 0V18a.75.75 0 001.5 0v-5.25z",
                        clipRule: "evenodd"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M14.25 5.25a5.23 5.23 0 00-1.279-3.434 9.768 9.768 0 016.963 6.963A5.23 5.23 0 0016.5 7.5h-1.875a.375.375 0 01-.375-.375V5.25z"
                    }));
                }
                var ForwardRef = React2.forwardRef(DocumentChartBarIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/DocumentCheckIcon.js
        var require_DocumentCheckIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/DocumentCheckIcon.js"(exports, module) {
                var React2 = require_react();
                function DocumentCheckIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M9 1.5H5.625c-1.036 0-1.875.84-1.875 1.875v17.25c0 1.035.84 1.875 1.875 1.875h12.75c1.035 0 1.875-.84 1.875-1.875V12.75A3.75 3.75 0 0016.5 9h-1.875a1.875 1.875 0 01-1.875-1.875V5.25A3.75 3.75 0 009 1.5zm6.61 10.936a.75.75 0 10-1.22-.872l-3.236 4.53L9.53 14.47a.75.75 0 00-1.06 1.06l2.25 2.25a.75.75 0 001.14-.094l3.75-5.25z",
                        clipRule: "evenodd"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M12.971 1.816A5.23 5.23 0 0114.25 5.25v1.875c0 .207.168.375.375.375H16.5a5.23 5.23 0 013.434 1.279 9.768 9.768 0 00-6.963-6.963z"
                    }));
                }
                var ForwardRef = React2.forwardRef(DocumentCheckIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/DocumentDuplicateIcon.js
        var require_DocumentDuplicateIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/DocumentDuplicateIcon.js"(exports, module) {
                var React2 = require_react();
                function DocumentDuplicateIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M7.5 3.375c0-1.036.84-1.875 1.875-1.875h.375a3.75 3.75 0 013.75 3.75v1.875C13.5 8.161 14.34 9 15.375 9h1.875A3.75 3.75 0 0121 12.75v3.375C21 17.16 20.16 18 19.125 18h-9.75A1.875 1.875 0 017.5 16.125V3.375z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M15 5.25a5.23 5.23 0 00-1.279-3.434 9.768 9.768 0 016.963 6.963A5.23 5.23 0 0017.25 7.5h-1.875A.375.375 0 0115 7.125V5.25zM4.875 6H6v10.125A3.375 3.375 0 009.375 19.5H16.5v1.125c0 1.035-.84 1.875-1.875 1.875h-9.75A1.875 1.875 0 013 20.625V7.875C3 6.839 3.84 6 4.875 6z"
                    }));
                }
                var ForwardRef = React2.forwardRef(DocumentDuplicateIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/DocumentMagnifyingGlassIcon.js
        var require_DocumentMagnifyingGlassIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/DocumentMagnifyingGlassIcon.js"(exports, module) {
                var React2 = require_react();
                function DocumentMagnifyingGlassIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M11.625 16.5a1.875 1.875 0 100-3.75 1.875 1.875 0 000 3.75z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M5.625 1.5H9a3.75 3.75 0 013.75 3.75v1.875c0 1.036.84 1.875 1.875 1.875H16.5a3.75 3.75 0 013.75 3.75v7.875c0 1.035-.84 1.875-1.875 1.875H5.625a1.875 1.875 0 01-1.875-1.875V3.375c0-1.036.84-1.875 1.875-1.875zm6 16.5c.66 0 1.277-.19 1.797-.518l1.048 1.048a.75.75 0 001.06-1.06l-1.047-1.048A3.375 3.375 0 1011.625 18z",
                        clipRule: "evenodd"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M14.25 5.25a5.23 5.23 0 00-1.279-3.434 9.768 9.768 0 016.963 6.963A5.23 5.23 0 0016.5 7.5h-1.875a.375.375 0 01-.375-.375V5.25z"
                    }));
                }
                var ForwardRef = React2.forwardRef(DocumentMagnifyingGlassIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/DocumentMinusIcon.js
        var require_DocumentMinusIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/DocumentMinusIcon.js"(exports, module) {
                var React2 = require_react();
                function DocumentMinusIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M5.625 1.5H9a3.75 3.75 0 013.75 3.75v1.875c0 1.036.84 1.875 1.875 1.875H16.5a3.75 3.75 0 013.75 3.75v7.875c0 1.035-.84 1.875-1.875 1.875H5.625a1.875 1.875 0 01-1.875-1.875V3.375c0-1.036.84-1.875 1.875-1.875zM9.75 14.25a.75.75 0 000 1.5H15a.75.75 0 000-1.5H9.75z",
                        clipRule: "evenodd"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M14.25 5.25a5.23 5.23 0 00-1.279-3.434 9.768 9.768 0 016.963 6.963A5.23 5.23 0 0016.5 7.5h-1.875a.375.375 0 01-.375-.375V5.25z"
                    }));
                }
                var ForwardRef = React2.forwardRef(DocumentMinusIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/DocumentPlusIcon.js
        var require_DocumentPlusIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/DocumentPlusIcon.js"(exports, module) {
                var React2 = require_react();
                function DocumentPlusIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M5.625 1.5H9a3.75 3.75 0 013.75 3.75v1.875c0 1.036.84 1.875 1.875 1.875H16.5a3.75 3.75 0 013.75 3.75v7.875c0 1.035-.84 1.875-1.875 1.875H5.625a1.875 1.875 0 01-1.875-1.875V3.375c0-1.036.84-1.875 1.875-1.875zM12.75 12a.75.75 0 00-1.5 0v2.25H9a.75.75 0 000 1.5h2.25V18a.75.75 0 001.5 0v-2.25H15a.75.75 0 000-1.5h-2.25V12z",
                        clipRule: "evenodd"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M14.25 5.25a5.23 5.23 0 00-1.279-3.434 9.768 9.768 0 016.963 6.963A5.23 5.23 0 0016.5 7.5h-1.875a.375.375 0 01-.375-.375V5.25z"
                    }));
                }
                var ForwardRef = React2.forwardRef(DocumentPlusIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/DocumentTextIcon.js
        var require_DocumentTextIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/DocumentTextIcon.js"(exports, module) {
                var React2 = require_react();
                function DocumentTextIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M5.625 1.5c-1.036 0-1.875.84-1.875 1.875v17.25c0 1.035.84 1.875 1.875 1.875h12.75c1.035 0 1.875-.84 1.875-1.875V12.75A3.75 3.75 0 0016.5 9h-1.875a1.875 1.875 0 01-1.875-1.875V5.25A3.75 3.75 0 009 1.5H5.625zM7.5 15a.75.75 0 01.75-.75h7.5a.75.75 0 010 1.5h-7.5A.75.75 0 017.5 15zm.75 2.25a.75.75 0 000 1.5H12a.75.75 0 000-1.5H8.25z",
                        clipRule: "evenodd"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M12.971 1.816A5.23 5.23 0 0114.25 5.25v1.875c0 .207.168.375.375.375H16.5a5.23 5.23 0 013.434 1.279 9.768 9.768 0 00-6.963-6.963z"
                    }));
                }
                var ForwardRef = React2.forwardRef(DocumentTextIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/DocumentIcon.js
        var require_DocumentIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/DocumentIcon.js"(exports, module) {
                var React2 = require_react();
                function DocumentIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M5.625 1.5c-1.036 0-1.875.84-1.875 1.875v17.25c0 1.035.84 1.875 1.875 1.875h12.75c1.035 0 1.875-.84 1.875-1.875V12.75A3.75 3.75 0 0016.5 9h-1.875a1.875 1.875 0 01-1.875-1.875V5.25A3.75 3.75 0 009 1.5H5.625z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M12.971 1.816A5.23 5.23 0 0114.25 5.25v1.875c0 .207.168.375.375.375H16.5a5.23 5.23 0 013.434 1.279 9.768 9.768 0 00-6.963-6.963z"
                    }));
                }
                var ForwardRef = React2.forwardRef(DocumentIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/EllipsisHorizontalCircleIcon.js
        var require_EllipsisHorizontalCircleIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/EllipsisHorizontalCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function EllipsisHorizontalCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25zm0 8.625a1.125 1.125 0 100 2.25 1.125 1.125 0 000-2.25zM15.375 12a1.125 1.125 0 112.25 0 1.125 1.125 0 01-2.25 0zM7.5 10.875a1.125 1.125 0 100 2.25 1.125 1.125 0 000-2.25z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(EllipsisHorizontalCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/EllipsisHorizontalIcon.js
        var require_EllipsisHorizontalIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/EllipsisHorizontalIcon.js"(exports, module) {
                var React2 = require_react();
                function EllipsisHorizontalIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M4.5 12a1.5 1.5 0 113 0 1.5 1.5 0 01-3 0zm6 0a1.5 1.5 0 113 0 1.5 1.5 0 01-3 0zm6 0a1.5 1.5 0 113 0 1.5 1.5 0 01-3 0z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(EllipsisHorizontalIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/EllipsisVerticalIcon.js
        var require_EllipsisVerticalIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/EllipsisVerticalIcon.js"(exports, module) {
                var React2 = require_react();
                function EllipsisVerticalIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10.5 6a1.5 1.5 0 113 0 1.5 1.5 0 01-3 0zm0 6a1.5 1.5 0 113 0 1.5 1.5 0 01-3 0zm0 6a1.5 1.5 0 113 0 1.5 1.5 0 01-3 0z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(EllipsisVerticalIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/EnvelopeOpenIcon.js
        var require_EnvelopeOpenIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/EnvelopeOpenIcon.js"(exports, module) {
                var React2 = require_react();
                function EnvelopeOpenIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M19.5 22.5a3 3 0 003-3v-8.174l-6.879 4.022 3.485 1.876a.75.75 0 01-.712 1.321l-5.683-3.06a1.5 1.5 0 00-1.422 0l-5.683 3.06a.75.75 0 01-.712-1.32l3.485-1.877L1.5 11.326V19.5a3 3 0 003 3h15z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M1.5 9.589v-.745a3 3 0 011.578-2.641l7.5-4.039a3 3 0 012.844 0l7.5 4.039A3 3 0 0122.5 8.844v.745l-8.426 4.926-.652-.35a3 3 0 00-2.844 0l-.652.35L1.5 9.59z"
                    }));
                }
                var ForwardRef = React2.forwardRef(EnvelopeOpenIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/EnvelopeIcon.js
        var require_EnvelopeIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/EnvelopeIcon.js"(exports, module) {
                var React2 = require_react();
                function EnvelopeIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M1.5 8.67v8.58a3 3 0 003 3h15a3 3 0 003-3V8.67l-8.928 5.493a3 3 0 01-3.144 0L1.5 8.67z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M22.5 6.908V6.75a3 3 0 00-3-3h-15a3 3 0 00-3 3v.158l9.714 5.978a1.5 1.5 0 001.572 0L22.5 6.908z"
                    }));
                }
                var ForwardRef = React2.forwardRef(EnvelopeIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ExclamationCircleIcon.js
        var require_ExclamationCircleIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ExclamationCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function ExclamationCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12zM12 8.25a.75.75 0 01.75.75v3.75a.75.75 0 01-1.5 0V9a.75.75 0 01.75-.75zm0 8.25a.75.75 0 100-1.5.75.75 0 000 1.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ExclamationCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ExclamationTriangleIcon.js
        var require_ExclamationTriangleIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ExclamationTriangleIcon.js"(exports, module) {
                var React2 = require_react();
                function ExclamationTriangleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M9.401 3.003c1.155-2 4.043-2 5.197 0l7.355 12.748c1.154 2-.29 4.5-2.599 4.5H4.645c-2.309 0-3.752-2.5-2.598-4.5L9.4 3.003zM12 8.25a.75.75 0 01.75.75v3.75a.75.75 0 01-1.5 0V9a.75.75 0 01.75-.75zm0 8.25a.75.75 0 100-1.5.75.75 0 000 1.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ExclamationTriangleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/EyeDropperIcon.js
        var require_EyeDropperIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/EyeDropperIcon.js"(exports, module) {
                var React2 = require_react();
                function EyeDropperIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M16.098 2.598a3.75 3.75 0 113.622 6.275l-1.72.46V12a.75.75 0 01-.22.53l-.75.75a.75.75 0 01-1.06 0l-.97-.97-7.94 7.94a2.56 2.56 0 01-1.81.75 1.06 1.06 0 00-.75.31l-.97.97a.75.75 0 01-1.06 0l-.75-.75a.75.75 0 010-1.06l.97-.97a1.06 1.06 0 00.31-.75c0-.68.27-1.33.75-1.81L11.69 9l-.97-.97a.75.75 0 010-1.06l.75-.75A.75.75 0 0112 6h2.666l.461-1.72c.165-.617.49-1.2.971-1.682zm-3.348 7.463L4.81 18a1.06 1.06 0 00-.31.75c0 .318-.06.63-.172.922a2.56 2.56 0 01.922-.172c.281 0 .551-.112.75-.31l7.94-7.94-1.19-1.19z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(EyeDropperIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/EyeSlashIcon.js
        var require_EyeSlashIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/EyeSlashIcon.js"(exports, module) {
                var React2 = require_react();
                function EyeSlashIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M3.53 2.47a.75.75 0 00-1.06 1.06l18 18a.75.75 0 101.06-1.06l-18-18zM22.676 12.553a11.249 11.249 0 01-2.631 4.31l-3.099-3.099a5.25 5.25 0 00-6.71-6.71L7.759 4.577a11.217 11.217 0 014.242-.827c4.97 0 9.185 3.223 10.675 7.69.12.362.12.752 0 1.113z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M15.75 12c0 .18-.013.357-.037.53l-4.244-4.243A3.75 3.75 0 0115.75 12zM12.53 15.713l-4.243-4.244a3.75 3.75 0 004.243 4.243z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M6.75 12c0-.619.107-1.213.304-1.764l-3.1-3.1a11.25 11.25 0 00-2.63 4.31c-.12.362-.12.752 0 1.114 1.489 4.467 5.704 7.69 10.675 7.69 1.5 0 2.933-.294 4.242-.827l-2.477-2.477A5.25 5.25 0 016.75 12z"
                    }));
                }
                var ForwardRef = React2.forwardRef(EyeSlashIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/EyeIcon.js
        var require_EyeIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/EyeIcon.js"(exports, module) {
                var React2 = require_react();
                function EyeIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M12 15a3 3 0 100-6 3 3 0 000 6z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M1.323 11.447C2.811 6.976 7.028 3.75 12.001 3.75c4.97 0 9.185 3.223 10.675 7.69.12.362.12.752 0 1.113-1.487 4.471-5.705 7.697-10.677 7.697-4.97 0-9.186-3.223-10.675-7.69a1.762 1.762 0 010-1.113zM17.25 12a5.25 5.25 0 11-10.5 0 5.25 5.25 0 0110.5 0z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(EyeIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/FaceFrownIcon.js
        var require_FaceFrownIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/FaceFrownIcon.js"(exports, module) {
                var React2 = require_react();
                function FaceFrownIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25zm-2.625 6c-.54 0-.828.419-.936.634a1.96 1.96 0 00-.189.866c0 .298.059.605.189.866.108.215.395.634.936.634.54 0 .828-.419.936-.634.13-.26.189-.568.189-.866 0-.298-.059-.605-.189-.866-.108-.215-.395-.634-.936-.634zm4.314.634c.108-.215.395-.634.936-.634.54 0 .828.419.936.634.13.26.189.568.189.866 0 .298-.059.605-.189.866-.108.215-.395.634-.936.634-.54 0-.828-.419-.936-.634a1.96 1.96 0 01-.189-.866c0-.298.059-.605.189-.866zm-4.34 7.964a.75.75 0 01-1.061-1.06 5.236 5.236 0 013.73-1.538 5.236 5.236 0 013.695 1.538.75.75 0 11-1.061 1.06 3.736 3.736 0 00-2.639-1.098 3.736 3.736 0 00-2.664 1.098z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(FaceFrownIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/FaceSmileIcon.js
        var require_FaceSmileIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/FaceSmileIcon.js"(exports, module) {
                var React2 = require_react();
                function FaceSmileIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25zm-2.625 6c-.54 0-.828.419-.936.634a1.96 1.96 0 00-.189.866c0 .298.059.605.189.866.108.215.395.634.936.634.54 0 .828-.419.936-.634.13-.26.189-.568.189-.866 0-.298-.059-.605-.189-.866-.108-.215-.395-.634-.936-.634zm4.314.634c.108-.215.395-.634.936-.634.54 0 .828.419.936.634.13.26.189.568.189.866 0 .298-.059.605-.189.866-.108.215-.395.634-.936.634-.54 0-.828-.419-.936-.634a1.96 1.96 0 01-.189-.866c0-.298.059-.605.189-.866zm2.023 6.828a.75.75 0 10-1.06-1.06 3.75 3.75 0 01-5.304 0 .75.75 0 00-1.06 1.06 5.25 5.25 0 007.424 0z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(FaceSmileIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/FilmIcon.js
        var require_FilmIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/FilmIcon.js"(exports, module) {
                var React2 = require_react();
                function FilmIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M1.5 5.625c0-1.036.84-1.875 1.875-1.875h17.25c1.035 0 1.875.84 1.875 1.875v12.75c0 1.035-.84 1.875-1.875 1.875H3.375A1.875 1.875 0 011.5 18.375V5.625zm1.5 0v1.5c0 .207.168.375.375.375h1.5a.375.375 0 00.375-.375v-1.5a.375.375 0 00-.375-.375h-1.5A.375.375 0 003 5.625zm16.125-.375a.375.375 0 00-.375.375v1.5c0 .207.168.375.375.375h1.5A.375.375 0 0021 7.125v-1.5a.375.375 0 00-.375-.375h-1.5zM21 9.375A.375.375 0 0020.625 9h-1.5a.375.375 0 00-.375.375v1.5c0 .207.168.375.375.375h1.5a.375.375 0 00.375-.375v-1.5zm0 3.75a.375.375 0 00-.375-.375h-1.5a.375.375 0 00-.375.375v1.5c0 .207.168.375.375.375h1.5a.375.375 0 00.375-.375v-1.5zm0 3.75a.375.375 0 00-.375-.375h-1.5a.375.375 0 00-.375.375v1.5c0 .207.168.375.375.375h1.5a.375.375 0 00.375-.375v-1.5zM4.875 18.75a.375.375 0 00.375-.375v-1.5a.375.375 0 00-.375-.375h-1.5a.375.375 0 00-.375.375v1.5c0 .207.168.375.375.375h1.5zM3.375 15h1.5a.375.375 0 00.375-.375v-1.5a.375.375 0 00-.375-.375h-1.5a.375.375 0 00-.375.375v1.5c0 .207.168.375.375.375zm0-3.75h1.5a.375.375 0 00.375-.375v-1.5A.375.375 0 004.875 9h-1.5A.375.375 0 003 9.375v1.5c0 .207.168.375.375.375zm4.125 0a.75.75 0 000 1.5h9a.75.75 0 000-1.5h-9z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(FilmIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/FingerPrintIcon.js
        var require_FingerPrintIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/FingerPrintIcon.js"(exports, module) {
                var React2 = require_react();
                function FingerPrintIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M12 3.75a6.715 6.715 0 00-3.722 1.118.75.75 0 11-.828-1.25 8.25 8.25 0 0112.8 6.883c0 3.014-.574 5.897-1.62 8.543a.75.75 0 01-1.395-.551A21.69 21.69 0 0018.75 10.5 6.75 6.75 0 0012 3.75zM6.157 5.739a.75.75 0 01.21 1.04A6.715 6.715 0 005.25 10.5c0 1.613-.463 3.12-1.265 4.393a.75.75 0 01-1.27-.8A6.715 6.715 0 003.75 10.5c0-1.68.503-3.246 1.367-4.55a.75.75 0 011.04-.211zM12 7.5a3 3 0 00-3 3c0 3.1-1.176 5.927-3.105 8.056a.75.75 0 11-1.112-1.008A10.459 10.459 0 007.5 10.5a4.5 4.5 0 119 0c0 .547-.022 1.09-.067 1.626a.75.75 0 01-1.495-.123c.041-.495.062-.996.062-1.503a3 3 0 00-3-3zm0 2.25a.75.75 0 01.75.75A15.69 15.69 0 018.97 20.738a.75.75 0 01-1.14-.975A14.19 14.19 0 0011.25 10.5a.75.75 0 01.75-.75zm3.239 5.183a.75.75 0 01.515.927 19.415 19.415 0 01-2.585 5.544.75.75 0 11-1.243-.84 17.912 17.912 0 002.386-5.116.75.75 0 01.927-.515z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(FingerPrintIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/FireIcon.js
        var require_FireIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/FireIcon.js"(exports, module) {
                var React2 = require_react();
                function FireIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M12.963 2.286a.75.75 0 00-1.071-.136 9.742 9.742 0 00-3.539 6.177A7.547 7.547 0 016.648 6.61a.75.75 0 00-1.152-.082A9 9 0 1015.68 4.534a7.46 7.46 0 01-2.717-2.248zM15.75 14.25a3.75 3.75 0 11-7.313-1.172c.628.465 1.35.81 2.133 1a5.99 5.99 0 011.925-3.545 3.75 3.75 0 013.255 3.717z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(FireIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/FlagIcon.js
        var require_FlagIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/FlagIcon.js"(exports, module) {
                var React2 = require_react();
                function FlagIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M3 2.25a.75.75 0 01.75.75v.54l1.838-.46a9.75 9.75 0 016.725.738l.108.054a8.25 8.25 0 005.58.652l3.109-.732a.75.75 0 01.917.81 47.784 47.784 0 00.005 10.337.75.75 0 01-.574.812l-3.114.733a9.75 9.75 0 01-6.594-.77l-.108-.054a8.25 8.25 0 00-5.69-.625l-2.202.55V21a.75.75 0 01-1.5 0V3A.75.75 0 013 2.25z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(FlagIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/FolderArrowDownIcon.js
        var require_FolderArrowDownIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/FolderArrowDownIcon.js"(exports, module) {
                var React2 = require_react();
                function FolderArrowDownIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M19.5 21a3 3 0 003-3V9a3 3 0 00-3-3h-5.379a.75.75 0 01-.53-.22L11.47 3.66A2.25 2.25 0 009.879 3H4.5a3 3 0 00-3 3v12a3 3 0 003 3h15zm-6.75-10.5a.75.75 0 00-1.5 0v4.19l-1.72-1.72a.75.75 0 00-1.06 1.06l3 3a.75.75 0 001.06 0l3-3a.75.75 0 10-1.06-1.06l-1.72 1.72V10.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(FolderArrowDownIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/FolderMinusIcon.js
        var require_FolderMinusIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/FolderMinusIcon.js"(exports, module) {
                var React2 = require_react();
                function FolderMinusIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M19.5 21a3 3 0 003-3V9a3 3 0 00-3-3h-5.379a.75.75 0 01-.53-.22L11.47 3.66A2.25 2.25 0 009.879 3H4.5a3 3 0 00-3 3v12a3 3 0 003 3h15zM9 12.75a.75.75 0 000 1.5h6a.75.75 0 000-1.5H9z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(FolderMinusIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/FolderOpenIcon.js
        var require_FolderOpenIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/FolderOpenIcon.js"(exports, module) {
                var React2 = require_react();
                function FolderOpenIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M19.906 9c.382 0 .749.057 1.094.162V9a3 3 0 00-3-3h-3.879a.75.75 0 01-.53-.22L11.47 3.66A2.25 2.25 0 009.879 3H6a3 3 0 00-3 3v3.162A3.756 3.756 0 014.094 9h15.812zM4.094 10.5a2.25 2.25 0 00-2.227 2.568l.857 6A2.25 2.25 0 004.951 21H19.05a2.25 2.25 0 002.227-1.932l.857-6a2.25 2.25 0 00-2.227-2.568H4.094z"
                    }));
                }
                var ForwardRef = React2.forwardRef(FolderOpenIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/FolderPlusIcon.js
        var require_FolderPlusIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/FolderPlusIcon.js"(exports, module) {
                var React2 = require_react();
                function FolderPlusIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M19.5 21a3 3 0 003-3V9a3 3 0 00-3-3h-5.379a.75.75 0 01-.53-.22L11.47 3.66A2.25 2.25 0 009.879 3H4.5a3 3 0 00-3 3v12a3 3 0 003 3h15zm-6.75-10.5a.75.75 0 00-1.5 0v2.25H9a.75.75 0 000 1.5h2.25v2.25a.75.75 0 001.5 0v-2.25H15a.75.75 0 000-1.5h-2.25V10.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(FolderPlusIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/FolderIcon.js
        var require_FolderIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/FolderIcon.js"(exports, module) {
                var React2 = require_react();
                function FolderIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M19.5 21a3 3 0 003-3v-4.5a3 3 0 00-3-3h-15a3 3 0 00-3 3V18a3 3 0 003 3h15zM1.5 10.146V6a3 3 0 013-3h5.379a2.25 2.25 0 011.59.659l2.122 2.121c.14.141.331.22.53.22H19.5a3 3 0 013 3v1.146A4.483 4.483 0 0019.5 9h-15a4.483 4.483 0 00-3 1.146z"
                    }));
                }
                var ForwardRef = React2.forwardRef(FolderIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ForwardIcon.js
        var require_ForwardIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ForwardIcon.js"(exports, module) {
                var React2 = require_react();
                function ForwardIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M5.055 7.06c-1.25-.714-2.805.189-2.805 1.628v8.123c0 1.44 1.555 2.342 2.805 1.628L12 14.471v2.34c0 1.44 1.555 2.342 2.805 1.628l7.108-4.061c1.26-.72 1.26-2.536 0-3.256L14.805 7.06C13.555 6.346 12 7.25 12 8.688v2.34L5.055 7.06z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ForwardIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/FunnelIcon.js
        var require_FunnelIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/FunnelIcon.js"(exports, module) {
                var React2 = require_react();
                function FunnelIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M3.792 2.938A49.069 49.069 0 0112 2.25c2.797 0 5.54.236 8.209.688a1.857 1.857 0 011.541 1.836v1.044a3 3 0 01-.879 2.121l-6.182 6.182a1.5 1.5 0 00-.439 1.061v2.927a3 3 0 01-1.658 2.684l-1.757.878A.75.75 0 019.75 21v-5.818a1.5 1.5 0 00-.44-1.06L3.13 7.938a3 3 0 01-.879-2.121V4.774c0-.897.64-1.683 1.542-1.836z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(FunnelIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/GifIcon.js
        var require_GifIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/GifIcon.js"(exports, module) {
                var React2 = require_react();
                function GifIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M4.5 3.75a3 3 0 00-3 3v10.5a3 3 0 003 3h15a3 3 0 003-3V6.75a3 3 0 00-3-3h-15zm9 4.5a.75.75 0 00-1.5 0v7.5a.75.75 0 001.5 0v-7.5zm1.5 0a.75.75 0 01.75-.75h3a.75.75 0 010 1.5H16.5v2.25H18a.75.75 0 010 1.5h-1.5v3a.75.75 0 01-1.5 0v-7.5zM6.636 9.78c.404-.575.867-.78 1.25-.78s.846.205 1.25.78a.75.75 0 001.228-.863C9.738 8.027 8.853 7.5 7.886 7.5c-.966 0-1.852.527-2.478 1.417-.62.882-.908 2-.908 3.083 0 1.083.288 2.201.909 3.083.625.89 1.51 1.417 2.477 1.417.967 0 1.852-.527 2.478-1.417a.75.75 0 00.136-.431V12a.75.75 0 00-.75-.75h-1.5a.75.75 0 000 1.5H9v1.648c-.37.44-.774.602-1.114.602-.383 0-.846-.205-1.25-.78C6.226 13.638 6 12.837 6 12c0-.837.226-1.638.636-2.22z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(GifIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/GiftTopIcon.js
        var require_GiftTopIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/GiftTopIcon.js"(exports, module) {
                var React2 = require_react();
                function GiftTopIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M11.25 3v4.046a3 3 0 00-4.277 4.204H1.5v-6A2.25 2.25 0 013.75 3h7.5zM12.75 3v4.011a3 3 0 014.239 4.239H22.5v-6A2.25 2.25 0 0020.25 3h-7.5zM22.5 12.75h-8.983a4.125 4.125 0 004.108 3.75.75.75 0 010 1.5 5.623 5.623 0 01-4.875-2.817V21h7.5a2.25 2.25 0 002.25-2.25v-6zM11.25 21v-5.817A5.623 5.623 0 016.375 18a.75.75 0 010-1.5 4.126 4.126 0 004.108-3.75H1.5v6A2.25 2.25 0 003.75 21h7.5z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M11.085 10.354c.03.297.038.575.036.805a7.484 7.484 0 01-.805-.036c-.833-.084-1.677-.325-2.195-.843a1.5 1.5 0 012.122-2.12c.517.517.759 1.36.842 2.194zM12.877 10.354c-.03.297-.038.575-.036.805.23.002.508-.006.805-.036.833-.084 1.677-.325 2.195-.843A1.5 1.5 0 0013.72 8.16c-.518.518-.76 1.362-.843 2.194z"
                    }));
                }
                var ForwardRef = React2.forwardRef(GiftTopIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/GiftIcon.js
        var require_GiftIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/GiftIcon.js"(exports, module) {
                var React2 = require_react();
                function GiftIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M9.375 3a1.875 1.875 0 000 3.75h1.875v4.5H3.375A1.875 1.875 0 011.5 9.375v-.75c0-1.036.84-1.875 1.875-1.875h3.193A3.375 3.375 0 0112 2.753a3.375 3.375 0 015.432 3.997h3.943c1.035 0 1.875.84 1.875 1.875v.75c0 1.036-.84 1.875-1.875 1.875H12.75v-4.5h1.875a1.875 1.875 0 10-1.875-1.875V6.75h-1.5V4.875C11.25 3.839 10.41 3 9.375 3zM11.25 12.75H3v6.75a2.25 2.25 0 002.25 2.25h6v-9zM12.75 12.75v9h6.75a2.25 2.25 0 002.25-2.25v-6.75h-9z"
                    }));
                }
                var ForwardRef = React2.forwardRef(GiftIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/GlobeAltIcon.js
        var require_GlobeAltIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/GlobeAltIcon.js"(exports, module) {
                var React2 = require_react();
                function GlobeAltIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M21.721 12.752a9.711 9.711 0 00-.945-5.003 12.754 12.754 0 01-4.339 2.708 18.991 18.991 0 01-.214 4.772 17.165 17.165 0 005.498-2.477zM14.634 15.55a17.324 17.324 0 00.332-4.647c-.952.227-1.945.347-2.966.347-1.021 0-2.014-.12-2.966-.347a17.515 17.515 0 00.332 4.647 17.385 17.385 0 005.268 0zM9.772 17.119a18.963 18.963 0 004.456 0A17.182 17.182 0 0112 21.724a17.18 17.18 0 01-2.228-4.605zM7.777 15.23a18.87 18.87 0 01-.214-4.774 12.753 12.753 0 01-4.34-2.708 9.711 9.711 0 00-.944 5.004 17.165 17.165 0 005.498 2.477zM21.356 14.752a9.765 9.765 0 01-7.478 6.817 18.64 18.64 0 001.988-4.718 18.627 18.627 0 005.49-2.098zM2.644 14.752c1.682.971 3.53 1.688 5.49 2.099a18.64 18.64 0 001.988 4.718 9.765 9.765 0 01-7.478-6.816zM13.878 2.43a9.755 9.755 0 016.116 3.986 11.267 11.267 0 01-3.746 2.504 18.63 18.63 0 00-2.37-6.49zM12 2.276a17.152 17.152 0 012.805 7.121c-.897.23-1.837.353-2.805.353-.968 0-1.908-.122-2.805-.353A17.151 17.151 0 0112 2.276zM10.122 2.43a18.629 18.629 0 00-2.37 6.49 11.266 11.266 0 01-3.746-2.504 9.754 9.754 0 016.116-3.985z"
                    }));
                }
                var ForwardRef = React2.forwardRef(GlobeAltIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/GlobeAmericasIcon.js
        var require_GlobeAmericasIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/GlobeAmericasIcon.js"(exports, module) {
                var React2 = require_react();
                function GlobeAmericasIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25zM6.262 6.072a8.25 8.25 0 1010.562-.766 4.5 4.5 0 01-1.318 1.357L14.25 7.5l.165.33a.809.809 0 01-1.086 1.085l-.604-.302a1.125 1.125 0 00-1.298.21l-.132.131c-.439.44-.439 1.152 0 1.591l.296.296c.256.257.622.374.98.314l1.17-.195c.323-.054.654.036.905.245l1.33 1.108c.32.267.46.694.358 1.1a8.7 8.7 0 01-2.288 4.04l-.723.724a1.125 1.125 0 01-1.298.21l-.153-.076a1.125 1.125 0 01-.622-1.006v-1.089c0-.298-.119-.585-.33-.796l-1.347-1.347a1.125 1.125 0 01-.21-1.298L9.75 12l-1.64-1.64a6 6 0 01-1.676-3.257l-.172-1.03z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(GlobeAmericasIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/GlobeAsiaAustraliaIcon.js
        var require_GlobeAsiaAustraliaIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/GlobeAsiaAustraliaIcon.js"(exports, module) {
                var React2 = require_react();
                function GlobeAsiaAustraliaIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M15.75 8.25a.75.75 0 01.75.75c0 1.12-.492 2.126-1.27 2.812a.75.75 0 11-.992-1.124A2.243 2.243 0 0015 9a.75.75 0 01.75-.75z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25zM4.575 15.6a8.25 8.25 0 009.348 4.425 1.966 1.966 0 00-1.84-1.275.983.983 0 01-.97-.822l-.073-.437c-.094-.565.25-1.11.8-1.267l.99-.282c.427-.123.783-.418.982-.816l.036-.073a1.453 1.453 0 012.328-.377L16.5 15h.628a2.25 2.25 0 011.983 1.186 8.25 8.25 0 00-6.345-12.4c.044.262.18.503.389.676l1.068.89c.442.369.535 1.01.216 1.49l-.51.766a2.25 2.25 0 01-1.161.886l-.143.048a1.107 1.107 0 00-.57 1.664c.369.555.169 1.307-.427 1.605L9 13.125l.423 1.059a.956.956 0 01-1.652.928l-.679-.906a1.125 1.125 0 00-1.906.172L4.575 15.6z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(GlobeAsiaAustraliaIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/GlobeEuropeAfricaIcon.js
        var require_GlobeEuropeAfricaIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/GlobeEuropeAfricaIcon.js"(exports, module) {
                var React2 = require_react();
                function GlobeEuropeAfricaIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25zM8.547 4.505a8.25 8.25 0 1011.672 8.214l-.46-.46a2.252 2.252 0 01-.422-.586l-1.08-2.16a.414.414 0 00-.663-.107.827.827 0 01-.812.21l-1.273-.363a.89.89 0 00-.738 1.595l.587.39c.59.395.674 1.23.172 1.732l-.2.2c-.211.212-.33.498-.33.796v.41c0 .409-.11.809-.32 1.158l-1.315 2.191a2.11 2.11 0 01-1.81 1.025 1.055 1.055 0 01-1.055-1.055v-1.172c0-.92-.56-1.747-1.414-2.089l-.654-.261a2.25 2.25 0 01-1.384-2.46l.007-.042a2.25 2.25 0 01.29-.787l.09-.15a2.25 2.25 0 012.37-1.048l1.178.236a1.125 1.125 0 001.302-.795l.208-.73a1.125 1.125 0 00-.578-1.315l-.665-.332-.091.091a2.25 2.25 0 01-1.591.659h-.18c-.249 0-.487.1-.662.274a.931.931 0 01-1.458-1.137l1.279-2.132z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(GlobeEuropeAfricaIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/HandRaisedIcon.js
        var require_HandRaisedIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/HandRaisedIcon.js"(exports, module) {
                var React2 = require_react();
                function HandRaisedIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M10.5 1.875a1.125 1.125 0 012.25 0v8.219c.517.162 1.02.382 1.5.659V3.375a1.125 1.125 0 012.25 0v10.937a4.505 4.505 0 00-3.25 2.373 8.963 8.963 0 014-.935A.75.75 0 0018 15v-2.266a3.368 3.368 0 01.988-2.37 1.125 1.125 0 011.591 1.59 1.118 1.118 0 00-.329.79v3.006h-.005a6 6 0 01-1.752 4.007l-1.736 1.736a6 6 0 01-4.242 1.757H10.5a7.5 7.5 0 01-7.5-7.5V6.375a1.125 1.125 0 012.25 0v5.519c.46-.452.965-.832 1.5-1.141V3.375a1.125 1.125 0 012.25 0v6.526c.495-.1.997-.151 1.5-.151V1.875z"
                    }));
                }
                var ForwardRef = React2.forwardRef(HandRaisedIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/HandThumbDownIcon.js
        var require_HandThumbDownIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/HandThumbDownIcon.js"(exports, module) {
                var React2 = require_react();
                function HandThumbDownIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M15.73 5.25h1.035A7.465 7.465 0 0118 9.375a7.465 7.465 0 01-1.235 4.125h-.148c-.806 0-1.534.446-2.031 1.08a9.04 9.04 0 01-2.861 2.4c-.723.384-1.35.956-1.653 1.715a4.498 4.498 0 00-.322 1.672V21a.75.75 0 01-.75.75 2.25 2.25 0 01-2.25-2.25c0-1.152.26-2.243.723-3.218C7.74 15.724 7.366 15 6.748 15H3.622c-1.026 0-1.945-.694-2.054-1.715A12.134 12.134 0 011.5 12c0-2.848.992-5.464 2.649-7.521.388-.482.987-.729 1.605-.729H9.77a4.5 4.5 0 011.423.23l3.114 1.04a4.5 4.5 0 001.423.23zM21.669 13.773c.536-1.362.831-2.845.831-4.398 0-1.22-.182-2.398-.52-3.507-.26-.85-1.084-1.368-1.973-1.368H19.1c-.445 0-.72.498-.523.898.591 1.2.924 2.55.924 3.977a8.959 8.959 0 01-1.302 4.666c-.245.403.028.959.5.959h1.053c.832 0 1.612-.453 1.918-1.227z"
                    }));
                }
                var ForwardRef = React2.forwardRef(HandThumbDownIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/HandThumbUpIcon.js
        var require_HandThumbUpIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/HandThumbUpIcon.js"(exports, module) {
                var React2 = require_react();
                function HandThumbUpIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M7.493 18.75c-.425 0-.82-.236-.975-.632A7.48 7.48 0 016 15.375c0-1.75.599-3.358 1.602-4.634.151-.192.373-.309.6-.397.473-.183.89-.514 1.212-.924a9.042 9.042 0 012.861-2.4c.723-.384 1.35-.956 1.653-1.715a4.498 4.498 0 00.322-1.672V3a.75.75 0 01.75-.75 2.25 2.25 0 012.25 2.25c0 1.152-.26 2.243-.723 3.218-.266.558.107 1.282.725 1.282h3.126c1.026 0 1.945.694 2.054 1.715.045.422.068.85.068 1.285a11.95 11.95 0 01-2.649 7.521c-.388.482-.987.729-1.605.729H14.23c-.483 0-.964-.078-1.423-.23l-3.114-1.04a4.501 4.501 0 00-1.423-.23h-.777zM2.331 10.977a11.969 11.969 0 00-.831 4.398 12 12 0 00.52 3.507c.26.85 1.084 1.368 1.973 1.368H4.9c.445 0 .72-.498.523-.898a8.963 8.963 0 01-.924-3.977c0-1.708.476-3.305 1.302-4.666.245-.403-.028-.959-.5-.959H4.25c-.832 0-1.612.453-1.918 1.227z"
                    }));
                }
                var ForwardRef = React2.forwardRef(HandThumbUpIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/HashtagIcon.js
        var require_HashtagIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/HashtagIcon.js"(exports, module) {
                var React2 = require_react();
                function HashtagIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M11.097 1.515a.75.75 0 01.589.882L10.666 7.5h4.47l1.079-5.397a.75.75 0 111.47.294L16.665 7.5h3.585a.75.75 0 010 1.5h-3.885l-1.2 6h3.585a.75.75 0 010 1.5h-3.885l-1.08 5.397a.75.75 0 11-1.47-.294l1.02-5.103h-4.47l-1.08 5.397a.75.75 0 01-1.47-.294l1.02-5.103H3.75a.75.75 0 110-1.5h3.885l1.2-6H5.25a.75.75 0 010-1.5h3.885l1.08-5.397a.75.75 0 01.882-.588zM10.365 9l-1.2 6h4.47l1.2-6h-4.47z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(HashtagIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/HeartIcon.js
        var require_HeartIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/HeartIcon.js"(exports, module) {
                var React2 = require_react();
                function HeartIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M11.645 20.91l-.007-.003-.022-.012a15.247 15.247 0 01-.383-.218 25.18 25.18 0 01-4.244-3.17C4.688 15.36 2.25 12.174 2.25 8.25 2.25 5.322 4.714 3 7.688 3A5.5 5.5 0 0112 5.052 5.5 5.5 0 0116.313 3c2.973 0 5.437 2.322 5.437 5.25 0 3.925-2.438 7.111-4.739 9.256a25.175 25.175 0 01-4.244 3.17 15.247 15.247 0 01-.383.219l-.022.012-.007.004-.003.001a.752.752 0 01-.704 0l-.003-.001z"
                    }));
                }
                var ForwardRef = React2.forwardRef(HeartIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/HomeModernIcon.js
        var require_HomeModernIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/HomeModernIcon.js"(exports, module) {
                var React2 = require_react();
                function HomeModernIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M19.006 3.705a.75.75 0 00-.512-1.41L6 6.838V3a.75.75 0 00-.75-.75h-1.5A.75.75 0 003 3v4.93l-1.006.365a.75.75 0 00.512 1.41l16.5-6z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M3.019 11.115L18 5.667V9.09l4.006 1.456a.75.75 0 11-.512 1.41l-.494-.18v8.475h.75a.75.75 0 010 1.5H2.25a.75.75 0 010-1.5H3v-9.129l.019-.006zM18 20.25v-9.565l1.5.545v9.02H18zm-9-6a.75.75 0 00-.75.75v4.5c0 .414.336.75.75.75h3a.75.75 0 00.75-.75V15a.75.75 0 00-.75-.75H9z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(HomeModernIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/HomeIcon.js
        var require_HomeIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/HomeIcon.js"(exports, module) {
                var React2 = require_react();
                function HomeIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M11.47 3.84a.75.75 0 011.06 0l8.69 8.69a.75.75 0 101.06-1.06l-8.689-8.69a2.25 2.25 0 00-3.182 0l-8.69 8.69a.75.75 0 001.061 1.06l8.69-8.69z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M12 5.432l8.159 8.159c.03.03.06.058.091.086v6.198c0 1.035-.84 1.875-1.875 1.875H15a.75.75 0 01-.75-.75v-4.5a.75.75 0 00-.75-.75h-3a.75.75 0 00-.75.75V21a.75.75 0 01-.75.75H5.625a1.875 1.875 0 01-1.875-1.875v-6.198a2.29 2.29 0 00.091-.086L12 5.43z"
                    }));
                }
                var ForwardRef = React2.forwardRef(HomeIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/IdentificationIcon.js
        var require_IdentificationIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/IdentificationIcon.js"(exports, module) {
                var React2 = require_react();
                function IdentificationIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M4.5 3.75a3 3 0 00-3 3v10.5a3 3 0 003 3h15a3 3 0 003-3V6.75a3 3 0 00-3-3h-15zm4.125 3a2.25 2.25 0 100 4.5 2.25 2.25 0 000-4.5zm-3.873 8.703a4.126 4.126 0 017.746 0 .75.75 0 01-.351.92 7.47 7.47 0 01-3.522.877 7.47 7.47 0 01-3.522-.877.75.75 0 01-.351-.92zM15 8.25a.75.75 0 000 1.5h3.75a.75.75 0 000-1.5H15zM14.25 12a.75.75 0 01.75-.75h3.75a.75.75 0 010 1.5H15a.75.75 0 01-.75-.75zm.75 2.25a.75.75 0 000 1.5h3.75a.75.75 0 000-1.5H15z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(IdentificationIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/InboxArrowDownIcon.js
        var require_InboxArrowDownIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/InboxArrowDownIcon.js"(exports, module) {
                var React2 = require_react();
                function InboxArrowDownIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M5.478 5.559A1.5 1.5 0 016.912 4.5H9A.75.75 0 009 3H6.912a3 3 0 00-2.868 2.118l-2.411 7.838a3 3 0 00-.133.882V18a3 3 0 003 3h15a3 3 0 003-3v-4.162c0-.299-.045-.596-.133-.882l-2.412-7.838A3 3 0 0017.088 3H15a.75.75 0 000 1.5h2.088a1.5 1.5 0 011.434 1.059l2.213 7.191H17.89a3 3 0 00-2.684 1.658l-.256.513a1.5 1.5 0 01-1.342.829h-3.218a1.5 1.5 0 01-1.342-.83l-.256-.512a3 3 0 00-2.684-1.658H3.265l2.213-7.191z",
                        clipRule: "evenodd"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M12 2.25a.75.75 0 01.75.75v6.44l1.72-1.72a.75.75 0 111.06 1.06l-3 3a.75.75 0 01-1.06 0l-3-3a.75.75 0 011.06-1.06l1.72 1.72V3a.75.75 0 01.75-.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(InboxArrowDownIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/InboxStackIcon.js
        var require_InboxStackIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/InboxStackIcon.js"(exports, module) {
                var React2 = require_react();
                function InboxStackIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M1.5 9.832v1.793c0 1.036.84 1.875 1.875 1.875h17.25c1.035 0 1.875-.84 1.875-1.875V9.832a3 3 0 00-.722-1.952l-3.285-3.832A3 3 0 0016.215 3h-8.43a3 3 0 00-2.278 1.048L2.222 7.88A3 3 0 001.5 9.832zM7.785 4.5a1.5 1.5 0 00-1.139.524L3.881 8.25h3.165a3 3 0 012.496 1.336l.164.246a1.5 1.5 0 001.248.668h2.092a1.5 1.5 0 001.248-.668l.164-.246a3 3 0 012.496-1.336h3.165l-2.765-3.226a1.5 1.5 0 00-1.139-.524h-8.43z",
                        clipRule: "evenodd"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M2.813 15c-.725 0-1.313.588-1.313 1.313V18a3 3 0 003 3h15a3 3 0 003-3v-1.688c0-.724-.588-1.312-1.313-1.312h-4.233a3 3 0 00-2.496 1.336l-.164.246a1.5 1.5 0 01-1.248.668h-2.092a1.5 1.5 0 01-1.248-.668l-.164-.246A3 3 0 007.046 15H2.812z"
                    }));
                }
                var ForwardRef = React2.forwardRef(InboxStackIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/InboxIcon.js
        var require_InboxIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/InboxIcon.js"(exports, module) {
                var React2 = require_react();
                function InboxIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M6.912 3a3 3 0 00-2.868 2.118l-2.411 7.838a3 3 0 00-.133.882V18a3 3 0 003 3h15a3 3 0 003-3v-4.162c0-.299-.045-.596-.133-.882l-2.412-7.838A3 3 0 0017.088 3H6.912zm13.823 9.75l-2.213-7.191A1.5 1.5 0 0017.088 4.5H6.912a1.5 1.5 0 00-1.434 1.059L3.265 12.75H6.11a3 3 0 012.684 1.658l.256.513a1.5 1.5 0 001.342.829h3.218a1.5 1.5 0 001.342-.83l.256-.512a3 3 0 012.684-1.658h2.844z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(InboxIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/InformationCircleIcon.js
        var require_InformationCircleIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/InformationCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function InformationCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12zm8.706-1.442c1.146-.573 2.437.463 2.126 1.706l-.709 2.836.042-.02a.75.75 0 01.67 1.34l-.04.022c-1.147.573-2.438-.463-2.127-1.706l.71-2.836-.042.02a.75.75 0 11-.671-1.34l.041-.022zM12 9a.75.75 0 100-1.5.75.75 0 000 1.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(InformationCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/KeyIcon.js
        var require_KeyIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/KeyIcon.js"(exports, module) {
                var React2 = require_react();
                function KeyIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M15.75 1.5a6.75 6.75 0 00-6.651 7.906c.067.39-.032.717-.221.906l-6.5 6.499a3 3 0 00-.878 2.121v2.818c0 .414.336.75.75.75H6a.75.75 0 00.75-.75v-1.5h1.5A.75.75 0 009 19.5V18h1.5a.75.75 0 00.53-.22l2.658-2.658c.19-.189.517-.288.906-.22A6.75 6.75 0 1015.75 1.5zm0 3a.75.75 0 000 1.5A2.25 2.25 0 0118 8.25a.75.75 0 001.5 0 3.75 3.75 0 00-3.75-3.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(KeyIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/LanguageIcon.js
        var require_LanguageIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/LanguageIcon.js"(exports, module) {
                var React2 = require_react();
                function LanguageIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M9 2.25a.75.75 0 01.75.75v1.506a49.38 49.38 0 015.343.371.75.75 0 11-.186 1.489c-.66-.083-1.323-.151-1.99-.206a18.67 18.67 0 01-2.969 6.323c.317.384.65.753.998 1.107a.75.75 0 11-1.07 1.052A18.902 18.902 0 019 13.687a18.823 18.823 0 01-5.656 4.482.75.75 0 11-.688-1.333 17.323 17.323 0 005.396-4.353A18.72 18.72 0 015.89 8.598a.75.75 0 011.388-.568A17.21 17.21 0 009 11.224a17.17 17.17 0 002.391-5.165 48.038 48.038 0 00-8.298.307.75.75 0 01-.186-1.489 49.159 49.159 0 015.343-.371V3A.75.75 0 019 2.25zM15.75 9a.75.75 0 01.68.433l5.25 11.25a.75.75 0 01-1.36.634l-1.198-2.567h-6.744l-1.198 2.567a.75.75 0 01-1.36-.634l5.25-11.25A.75.75 0 0115.75 9zm-2.672 8.25h5.344l-2.672-5.726-2.672 5.726z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(LanguageIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/LifebuoyIcon.js
        var require_LifebuoyIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/LifebuoyIcon.js"(exports, module) {
                var React2 = require_react();
                function LifebuoyIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M19.449 8.448L16.388 11a4.52 4.52 0 010 2.002l3.061 2.55a8.275 8.275 0 000-7.103zM15.552 19.45L13 16.388a4.52 4.52 0 01-2.002 0l-2.55 3.061a8.275 8.275 0 007.103 0zM4.55 15.552L7.612 13a4.52 4.52 0 010-2.002L4.551 8.45a8.275 8.275 0 000 7.103zM8.448 4.55L11 7.612a4.52 4.52 0 012.002 0l2.55-3.061a8.275 8.275 0 00-7.103 0zm8.657-.86a9.776 9.776 0 011.79 1.415 9.776 9.776 0 011.414 1.788 9.764 9.764 0 010 10.211 9.777 9.777 0 01-1.415 1.79 9.777 9.777 0 01-1.788 1.414 9.764 9.764 0 01-10.212 0 9.776 9.776 0 01-1.788-1.415 9.776 9.776 0 01-1.415-1.788 9.764 9.764 0 010-10.212 9.774 9.774 0 011.415-1.788A9.774 9.774 0 016.894 3.69a9.764 9.764 0 0110.211 0zM14.121 9.88a2.985 2.985 0 00-1.11-.704 3.015 3.015 0 00-2.022 0 2.985 2.985 0 00-1.11.704c-.326.325-.56.705-.704 1.11a3.015 3.015 0 000 2.022c.144.405.378.785.704 1.11.325.326.705.56 1.11.704.652.233 1.37.233 2.022 0a2.985 2.985 0 001.11-.704c.326-.325.56-.705.704-1.11a3.016 3.016 0 000-2.022 2.985 2.985 0 00-.704-1.11z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(LifebuoyIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/LightBulbIcon.js
        var require_LightBulbIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/LightBulbIcon.js"(exports, module) {
                var React2 = require_react();
                function LightBulbIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M12 .75a8.25 8.25 0 00-4.135 15.39c.686.398 1.115 1.008 1.134 1.623a.75.75 0 00.577.706c.352.083.71.148 1.074.195.323.041.6-.218.6-.544v-4.661a6.714 6.714 0 01-.937-.171.75.75 0 11.374-1.453 5.261 5.261 0 002.626 0 .75.75 0 11.374 1.452 6.712 6.712 0 01-.937.172v4.66c0 .327.277.586.6.545.364-.047.722-.112 1.074-.195a.75.75 0 00.577-.706c.02-.615.448-1.225 1.134-1.623A8.25 8.25 0 0012 .75z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M9.013 19.9a.75.75 0 01.877-.597 11.319 11.319 0 004.22 0 .75.75 0 11.28 1.473 12.819 12.819 0 01-4.78 0 .75.75 0 01-.597-.876zM9.754 22.344a.75.75 0 01.824-.668 13.682 13.682 0 002.844 0 .75.75 0 11.156 1.492 15.156 15.156 0 01-3.156 0 .75.75 0 01-.668-.824z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(LightBulbIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/LinkIcon.js
        var require_LinkIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/LinkIcon.js"(exports, module) {
                var React2 = require_react();
                function LinkIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M19.902 4.098a3.75 3.75 0 00-5.304 0l-4.5 4.5a3.75 3.75 0 001.035 6.037.75.75 0 01-.646 1.353 5.25 5.25 0 01-1.449-8.45l4.5-4.5a5.25 5.25 0 117.424 7.424l-1.757 1.757a.75.75 0 11-1.06-1.06l1.757-1.757a3.75 3.75 0 000-5.304zm-7.389 4.267a.75.75 0 011-.353 5.25 5.25 0 011.449 8.45l-4.5 4.5a5.25 5.25 0 11-7.424-7.424l1.757-1.757a.75.75 0 111.06 1.06l-1.757 1.757a3.75 3.75 0 105.304 5.304l4.5-4.5a3.75 3.75 0 00-1.035-6.037.75.75 0 01-.354-1z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(LinkIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ListBulletIcon.js
        var require_ListBulletIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ListBulletIcon.js"(exports, module) {
                var React2 = require_react();
                function ListBulletIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M2.625 6.75a1.125 1.125 0 112.25 0 1.125 1.125 0 01-2.25 0zm4.875 0A.75.75 0 018.25 6h12a.75.75 0 010 1.5h-12a.75.75 0 01-.75-.75zM2.625 12a1.125 1.125 0 112.25 0 1.125 1.125 0 01-2.25 0zM7.5 12a.75.75 0 01.75-.75h12a.75.75 0 010 1.5h-12A.75.75 0 017.5 12zm-4.875 5.25a1.125 1.125 0 112.25 0 1.125 1.125 0 01-2.25 0zm4.875 0a.75.75 0 01.75-.75h12a.75.75 0 010 1.5h-12a.75.75 0 01-.75-.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ListBulletIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/LockClosedIcon.js
        var require_LockClosedIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/LockClosedIcon.js"(exports, module) {
                var React2 = require_react();
                function LockClosedIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M12 1.5a5.25 5.25 0 00-5.25 5.25v3a3 3 0 00-3 3v6.75a3 3 0 003 3h10.5a3 3 0 003-3v-6.75a3 3 0 00-3-3v-3c0-2.9-2.35-5.25-5.25-5.25zm3.75 8.25v-3a3.75 3.75 0 10-7.5 0v3h7.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(LockClosedIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/LockOpenIcon.js
        var require_LockOpenIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/LockOpenIcon.js"(exports, module) {
                var React2 = require_react();
                function LockOpenIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M18 1.5c2.9 0 5.25 2.35 5.25 5.25v3.75a.75.75 0 01-1.5 0V6.75a3.75 3.75 0 10-7.5 0v3a3 3 0 013 3v6.75a3 3 0 01-3 3H3.75a3 3 0 01-3-3v-6.75a3 3 0 013-3h9v-3c0-2.9 2.35-5.25 5.25-5.25z"
                    }));
                }
                var ForwardRef = React2.forwardRef(LockOpenIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/MagnifyingGlassCircleIcon.js
        var require_MagnifyingGlassCircleIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/MagnifyingGlassCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function MagnifyingGlassCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M8.25 10.875a2.625 2.625 0 115.25 0 2.625 2.625 0 01-5.25 0z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25zm-1.125 4.5a4.125 4.125 0 102.338 7.524l2.007 2.006a.75.75 0 101.06-1.06l-2.006-2.007a4.125 4.125 0 00-3.399-6.463z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(MagnifyingGlassCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/MagnifyingGlassMinusIcon.js
        var require_MagnifyingGlassMinusIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/MagnifyingGlassMinusIcon.js"(exports, module) {
                var React2 = require_react();
                function MagnifyingGlassMinusIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10.5 3.75a6.75 6.75 0 100 13.5 6.75 6.75 0 000-13.5zM2.25 10.5a8.25 8.25 0 1114.59 5.28l4.69 4.69a.75.75 0 11-1.06 1.06l-4.69-4.69A8.25 8.25 0 012.25 10.5zm4.5 0a.75.75 0 01.75-.75h6a.75.75 0 010 1.5h-6a.75.75 0 01-.75-.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(MagnifyingGlassMinusIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/MagnifyingGlassPlusIcon.js
        var require_MagnifyingGlassPlusIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/MagnifyingGlassPlusIcon.js"(exports, module) {
                var React2 = require_react();
                function MagnifyingGlassPlusIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10.5 3.75a6.75 6.75 0 100 13.5 6.75 6.75 0 000-13.5zM2.25 10.5a8.25 8.25 0 1114.59 5.28l4.69 4.69a.75.75 0 11-1.06 1.06l-4.69-4.69A8.25 8.25 0 012.25 10.5zm8.25-3.75a.75.75 0 01.75.75v2.25h2.25a.75.75 0 010 1.5h-2.25v2.25a.75.75 0 01-1.5 0v-2.25H7.5a.75.75 0 010-1.5h2.25V7.5a.75.75 0 01.75-.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(MagnifyingGlassPlusIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/MagnifyingGlassIcon.js
        var require_MagnifyingGlassIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/MagnifyingGlassIcon.js"(exports, module) {
                var React2 = require_react();
                function MagnifyingGlassIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10.5 3.75a6.75 6.75 0 100 13.5 6.75 6.75 0 000-13.5zM2.25 10.5a8.25 8.25 0 1114.59 5.28l4.69 4.69a.75.75 0 11-1.06 1.06l-4.69-4.69A8.25 8.25 0 012.25 10.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(MagnifyingGlassIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/MapPinIcon.js
        var require_MapPinIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/MapPinIcon.js"(exports, module) {
                var React2 = require_react();
                function MapPinIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M11.54 22.351l.07.04.028.016a.76.76 0 00.723 0l.028-.015.071-.041a16.975 16.975 0 001.144-.742 19.58 19.58 0 002.683-2.282c1.944-1.99 3.963-4.98 3.963-8.827a8.25 8.25 0 00-16.5 0c0 3.846 2.02 6.837 3.963 8.827a19.58 19.58 0 002.682 2.282 16.975 16.975 0 001.145.742zM12 13.5a3 3 0 100-6 3 3 0 000 6z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(MapPinIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/MapIcon.js
        var require_MapIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/MapIcon.js"(exports, module) {
                var React2 = require_react();
                function MapIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M8.161 2.58a1.875 1.875 0 011.678 0l4.993 2.498c.106.052.23.052.336 0l3.869-1.935A1.875 1.875 0 0121.75 4.82v12.485c0 .71-.401 1.36-1.037 1.677l-4.875 2.437a1.875 1.875 0 01-1.676 0l-4.994-2.497a.375.375 0 00-.336 0l-3.868 1.935A1.875 1.875 0 012.25 19.18V6.695c0-.71.401-1.36 1.036-1.677l4.875-2.437zM9 6a.75.75 0 01.75.75V15a.75.75 0 01-1.5 0V6.75A.75.75 0 019 6zm6.75 3a.75.75 0 00-1.5 0v8.25a.75.75 0 001.5 0V9z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(MapIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/MegaphoneIcon.js
        var require_MegaphoneIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/MegaphoneIcon.js"(exports, module) {
                var React2 = require_react();
                function MegaphoneIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M16.881 4.346A23.112 23.112 0 018.25 6H7.5a5.25 5.25 0 00-.88 10.427 21.593 21.593 0 001.378 3.94c.464 1.004 1.674 1.32 2.582.796l.657-.379c.88-.508 1.165-1.592.772-2.468a17.116 17.116 0 01-.628-1.607c1.918.258 3.76.75 5.5 1.446A21.727 21.727 0 0018 11.25c0-2.413-.393-4.735-1.119-6.904zM18.26 3.74a23.22 23.22 0 011.24 7.51 23.22 23.22 0 01-1.24 7.51c-.055.161-.111.322-.17.482a.75.75 0 101.409.516 24.555 24.555 0 001.415-6.43 2.992 2.992 0 00.836-2.078c0-.806-.319-1.54-.836-2.078a24.65 24.65 0 00-1.415-6.43.75.75 0 10-1.409.516c.059.16.116.321.17.483z"
                    }));
                }
                var ForwardRef = React2.forwardRef(MegaphoneIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/MicrophoneIcon.js
        var require_MicrophoneIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/MicrophoneIcon.js"(exports, module) {
                var React2 = require_react();
                function MicrophoneIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M8.25 4.5a3.75 3.75 0 117.5 0v8.25a3.75 3.75 0 11-7.5 0V4.5z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M6 10.5a.75.75 0 01.75.75v1.5a5.25 5.25 0 1010.5 0v-1.5a.75.75 0 011.5 0v1.5a6.751 6.751 0 01-6 6.709v2.291h3a.75.75 0 010 1.5h-7.5a.75.75 0 010-1.5h3v-2.291a6.751 6.751 0 01-6-6.709v-1.5A.75.75 0 016 10.5z"
                    }));
                }
                var ForwardRef = React2.forwardRef(MicrophoneIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/MinusCircleIcon.js
        var require_MinusCircleIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/MinusCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function MinusCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25zm3 10.5a.75.75 0 000-1.5H9a.75.75 0 000 1.5h6z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(MinusCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/MinusSmallIcon.js
        var require_MinusSmallIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/MinusSmallIcon.js"(exports, module) {
                var React2 = require_react();
                function MinusSmallIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M5.25 12a.75.75 0 01.75-.75h12a.75.75 0 010 1.5H6a.75.75 0 01-.75-.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(MinusSmallIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/MinusIcon.js
        var require_MinusIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/MinusIcon.js"(exports, module) {
                var React2 = require_react();
                function MinusIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M3.75 12a.75.75 0 01.75-.75h15a.75.75 0 010 1.5h-15a.75.75 0 01-.75-.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(MinusIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/MoonIcon.js
        var require_MoonIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/MoonIcon.js"(exports, module) {
                var React2 = require_react();
                function MoonIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M9.528 1.718a.75.75 0 01.162.819A8.97 8.97 0 009 6a9 9 0 009 9 8.97 8.97 0 003.463-.69.75.75 0 01.981.98 10.503 10.503 0 01-9.694 6.46c-5.799 0-10.5-4.701-10.5-10.5 0-4.368 2.667-8.112 6.46-9.694a.75.75 0 01.818.162z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(MoonIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/MusicalNoteIcon.js
        var require_MusicalNoteIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/MusicalNoteIcon.js"(exports, module) {
                var React2 = require_react();
                function MusicalNoteIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M19.952 1.651a.75.75 0 01.298.599V16.303a3 3 0 01-2.176 2.884l-1.32.377a2.553 2.553 0 11-1.403-4.909l2.311-.66a1.5 1.5 0 001.088-1.442V6.994l-9 2.572v9.737a3 3 0 01-2.176 2.884l-1.32.377a2.553 2.553 0 11-1.402-4.909l2.31-.66a1.5 1.5 0 001.088-1.442V9.017 5.25a.75.75 0 01.544-.721l10.5-3a.75.75 0 01.658.122z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(MusicalNoteIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/NewspaperIcon.js
        var require_NewspaperIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/NewspaperIcon.js"(exports, module) {
                var React2 = require_react();
                function NewspaperIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M4.125 3C3.089 3 2.25 3.84 2.25 4.875V18a3 3 0 003 3h15a3 3 0 01-3-3V4.875C17.25 3.839 16.41 3 15.375 3H4.125zM12 9.75a.75.75 0 000 1.5h1.5a.75.75 0 000-1.5H12zm-.75-2.25a.75.75 0 01.75-.75h1.5a.75.75 0 010 1.5H12a.75.75 0 01-.75-.75zM6 12.75a.75.75 0 000 1.5h7.5a.75.75 0 000-1.5H6zm-.75 3.75a.75.75 0 01.75-.75h7.5a.75.75 0 010 1.5H6a.75.75 0 01-.75-.75zM6 6.75a.75.75 0 00-.75.75v3c0 .414.336.75.75.75h3a.75.75 0 00.75-.75v-3A.75.75 0 009 6.75H6z",
                        clipRule: "evenodd"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M18.75 6.75h1.875c.621 0 1.125.504 1.125 1.125V18a1.5 1.5 0 01-3 0V6.75z"
                    }));
                }
                var ForwardRef = React2.forwardRef(NewspaperIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/NoSymbolIcon.js
        var require_NoSymbolIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/NoSymbolIcon.js"(exports, module) {
                var React2 = require_react();
                function NoSymbolIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M6.72 5.66l11.62 11.62A8.25 8.25 0 006.72 5.66zm10.56 12.68L5.66 6.72a8.25 8.25 0 0011.62 11.62zM5.105 5.106c3.807-3.808 9.98-3.808 13.788 0 3.808 3.807 3.808 9.98 0 13.788-3.807 3.808-9.98 3.808-13.788 0-3.808-3.807-3.808-9.98 0-13.788z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(NoSymbolIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/PaintBrushIcon.js
        var require_PaintBrushIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/PaintBrushIcon.js"(exports, module) {
                var React2 = require_react();
                function PaintBrushIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M20.599 1.5c-.376 0-.743.111-1.055.32l-5.08 3.385a18.747 18.747 0 00-3.471 2.987 10.04 10.04 0 014.815 4.815 18.748 18.748 0 002.987-3.472l3.386-5.079A1.902 1.902 0 0020.599 1.5zm-8.3 14.025a18.76 18.76 0 001.896-1.207 8.026 8.026 0 00-4.513-4.513A18.75 18.75 0 008.475 11.7l-.278.5a5.26 5.26 0 013.601 3.602l.502-.278zM6.75 13.5A3.75 3.75 0 003 17.25a1.5 1.5 0 01-1.601 1.497.75.75 0 00-.7 1.123 5.25 5.25 0 009.8-2.62 3.75 3.75 0 00-3.75-3.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(PaintBrushIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/PaperAirplaneIcon.js
        var require_PaperAirplaneIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/PaperAirplaneIcon.js"(exports, module) {
                var React2 = require_react();
                function PaperAirplaneIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M3.478 2.405a.75.75 0 00-.926.94l2.432 7.905H13.5a.75.75 0 010 1.5H4.984l-2.432 7.905a.75.75 0 00.926.94 60.519 60.519 0 0018.445-8.986.75.75 0 000-1.218A60.517 60.517 0 003.478 2.405z"
                    }));
                }
                var ForwardRef = React2.forwardRef(PaperAirplaneIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/PaperClipIcon.js
        var require_PaperClipIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/PaperClipIcon.js"(exports, module) {
                var React2 = require_react();
                function PaperClipIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M18.97 3.659a2.25 2.25 0 00-3.182 0l-10.94 10.94a3.75 3.75 0 105.304 5.303l7.693-7.693a.75.75 0 011.06 1.06l-7.693 7.693a5.25 5.25 0 11-7.424-7.424l10.939-10.94a3.75 3.75 0 115.303 5.304L9.097 18.835l-.008.008-.007.007-.002.002-.003.002A2.25 2.25 0 015.91 15.66l7.81-7.81a.75.75 0 011.061 1.06l-7.81 7.81a.75.75 0 001.054 1.068L18.97 6.84a2.25 2.25 0 000-3.182z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(PaperClipIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/PauseCircleIcon.js
        var require_PauseCircleIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/PauseCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function PauseCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12zM9 8.25a.75.75 0 00-.75.75v6c0 .414.336.75.75.75h.75a.75.75 0 00.75-.75V9a.75.75 0 00-.75-.75H9zm5.25 0a.75.75 0 00-.75.75v6c0 .414.336.75.75.75H15a.75.75 0 00.75-.75V9a.75.75 0 00-.75-.75h-.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(PauseCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/PauseIcon.js
        var require_PauseIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/PauseIcon.js"(exports, module) {
                var React2 = require_react();
                function PauseIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M6.75 5.25a.75.75 0 01.75-.75H9a.75.75 0 01.75.75v13.5a.75.75 0 01-.75.75H7.5a.75.75 0 01-.75-.75V5.25zm7.5 0A.75.75 0 0115 4.5h1.5a.75.75 0 01.75.75v13.5a.75.75 0 01-.75.75H15a.75.75 0 01-.75-.75V5.25z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(PauseIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/PencilSquareIcon.js
        var require_PencilSquareIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/PencilSquareIcon.js"(exports, module) {
                var React2 = require_react();
                function PencilSquareIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M21.731 2.269a2.625 2.625 0 00-3.712 0l-1.157 1.157 3.712 3.712 1.157-1.157a2.625 2.625 0 000-3.712zM19.513 8.199l-3.712-3.712-8.4 8.4a5.25 5.25 0 00-1.32 2.214l-.8 2.685a.75.75 0 00.933.933l2.685-.8a5.25 5.25 0 002.214-1.32l8.4-8.4z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M5.25 5.25a3 3 0 00-3 3v10.5a3 3 0 003 3h10.5a3 3 0 003-3V13.5a.75.75 0 00-1.5 0v5.25a1.5 1.5 0 01-1.5 1.5H5.25a1.5 1.5 0 01-1.5-1.5V8.25a1.5 1.5 0 011.5-1.5h5.25a.75.75 0 000-1.5H5.25z"
                    }));
                }
                var ForwardRef = React2.forwardRef(PencilSquareIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/PencilIcon.js
        var require_PencilIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/PencilIcon.js"(exports, module) {
                var React2 = require_react();
                function PencilIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M21.731 2.269a2.625 2.625 0 00-3.712 0l-1.157 1.157 3.712 3.712 1.157-1.157a2.625 2.625 0 000-3.712zM19.513 8.199l-3.712-3.712-12.15 12.15a5.25 5.25 0 00-1.32 2.214l-.8 2.685a.75.75 0 00.933.933l2.685-.8a5.25 5.25 0 002.214-1.32L19.513 8.2z"
                    }));
                }
                var ForwardRef = React2.forwardRef(PencilIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/PhoneArrowDownLeftIcon.js
        var require_PhoneArrowDownLeftIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/PhoneArrowDownLeftIcon.js"(exports, module) {
                var React2 = require_react();
                function PhoneArrowDownLeftIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M19.5 9.75a.75.75 0 01-.75.75h-4.5a.75.75 0 01-.75-.75v-4.5a.75.75 0 011.5 0v2.69l4.72-4.72a.75.75 0 111.06 1.06L16.06 9h2.69a.75.75 0 01.75.75z",
                        clipRule: "evenodd"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M1.5 4.5a3 3 0 013-3h1.372c.86 0 1.61.586 1.819 1.42l1.105 4.423a1.875 1.875 0 01-.694 1.955l-1.293.97c-.135.101-.164.249-.126.352a11.285 11.285 0 006.697 6.697c.103.038.25.009.352-.126l.97-1.293a1.875 1.875 0 011.955-.694l4.423 1.105c.834.209 1.42.959 1.42 1.82V19.5a3 3 0 01-3 3h-2.25C8.552 22.5 1.5 15.448 1.5 6.75V4.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(PhoneArrowDownLeftIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/PhoneArrowUpRightIcon.js
        var require_PhoneArrowUpRightIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/PhoneArrowUpRightIcon.js"(exports, module) {
                var React2 = require_react();
                function PhoneArrowUpRightIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M15 3.75a.75.75 0 01.75-.75h4.5a.75.75 0 01.75.75v4.5a.75.75 0 01-1.5 0V5.56l-4.72 4.72a.75.75 0 11-1.06-1.06l4.72-4.72h-2.69a.75.75 0 01-.75-.75z",
                        clipRule: "evenodd"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M1.5 4.5a3 3 0 013-3h1.372c.86 0 1.61.586 1.819 1.42l1.105 4.423a1.875 1.875 0 01-.694 1.955l-1.293.97c-.135.101-.164.249-.126.352a11.285 11.285 0 006.697 6.697c.103.038.25.009.352-.126l.97-1.293a1.875 1.875 0 011.955-.694l4.423 1.105c.834.209 1.42.959 1.42 1.82V19.5a3 3 0 01-3 3h-2.25C8.552 22.5 1.5 15.448 1.5 6.75V4.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(PhoneArrowUpRightIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/PhoneXMarkIcon.js
        var require_PhoneXMarkIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/PhoneXMarkIcon.js"(exports, module) {
                var React2 = require_react();
                function PhoneXMarkIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M15.22 3.22a.75.75 0 011.06 0L18 4.94l1.72-1.72a.75.75 0 111.06 1.06L19.06 6l1.72 1.72a.75.75 0 01-1.06 1.06L18 7.06l-1.72 1.72a.75.75 0 11-1.06-1.06L16.94 6l-1.72-1.72a.75.75 0 010-1.06zM1.5 4.5a3 3 0 013-3h1.372c.86 0 1.61.586 1.819 1.42l1.105 4.423a1.875 1.875 0 01-.694 1.955l-1.293.97c-.135.101-.164.249-.126.352a11.285 11.285 0 006.697 6.697c.103.038.25.009.352-.126l.97-1.293a1.875 1.875 0 011.955-.694l4.423 1.105c.834.209 1.42.959 1.42 1.82V19.5a3 3 0 01-3 3h-2.25C8.552 22.5 1.5 15.448 1.5 6.75V4.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(PhoneXMarkIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/PhoneIcon.js
        var require_PhoneIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/PhoneIcon.js"(exports, module) {
                var React2 = require_react();
                function PhoneIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M1.5 4.5a3 3 0 013-3h1.372c.86 0 1.61.586 1.819 1.42l1.105 4.423a1.875 1.875 0 01-.694 1.955l-1.293.97c-.135.101-.164.249-.126.352a11.285 11.285 0 006.697 6.697c.103.038.25.009.352-.126l.97-1.293a1.875 1.875 0 011.955-.694l4.423 1.105c.834.209 1.42.959 1.42 1.82V19.5a3 3 0 01-3 3h-2.25C8.552 22.5 1.5 15.448 1.5 6.75V4.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(PhoneIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/PhotoIcon.js
        var require_PhotoIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/PhotoIcon.js"(exports, module) {
                var React2 = require_react();
                function PhotoIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M1.5 6a2.25 2.25 0 012.25-2.25h16.5A2.25 2.25 0 0122.5 6v12a2.25 2.25 0 01-2.25 2.25H3.75A2.25 2.25 0 011.5 18V6zM3 16.06V18c0 .414.336.75.75.75h16.5A.75.75 0 0021 18v-1.94l-2.69-2.689a1.5 1.5 0 00-2.12 0l-.88.879.97.97a.75.75 0 11-1.06 1.06l-5.16-5.159a1.5 1.5 0 00-2.12 0L3 16.061zm10.125-7.81a1.125 1.125 0 112.25 0 1.125 1.125 0 01-2.25 0z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(PhotoIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/PlayCircleIcon.js
        var require_PlayCircleIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/PlayCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function PlayCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12zm14.024-.983a1.125 1.125 0 010 1.966l-5.603 3.113A1.125 1.125 0 019 15.113V8.887c0-.857.921-1.4 1.671-.983l5.603 3.113z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(PlayCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/PlayPauseIcon.js
        var require_PlayPauseIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/PlayPauseIcon.js"(exports, module) {
                var React2 = require_react();
                function PlayPauseIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M15 6.75a.75.75 0 00-.75.75V18a.75.75 0 00.75.75h.75a.75.75 0 00.75-.75V7.5a.75.75 0 00-.75-.75H15zM20.25 6.75a.75.75 0 00-.75.75V18c0 .414.336.75.75.75H21a.75.75 0 00.75-.75V7.5a.75.75 0 00-.75-.75h-.75zM5.055 7.06C3.805 6.347 2.25 7.25 2.25 8.69v8.122c0 1.44 1.555 2.343 2.805 1.628l7.108-4.061c1.26-.72 1.26-2.536 0-3.256L5.055 7.061z"
                    }));
                }
                var ForwardRef = React2.forwardRef(PlayPauseIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/PlayIcon.js
        var require_PlayIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/PlayIcon.js"(exports, module) {
                var React2 = require_react();
                function PlayIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M4.5 5.653c0-1.426 1.529-2.33 2.779-1.643l11.54 6.348c1.295.712 1.295 2.573 0 3.285L7.28 19.991c-1.25.687-2.779-.217-2.779-1.643V5.653z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(PlayIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/PlusCircleIcon.js
        var require_PlusCircleIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/PlusCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function PlusCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25zM12.75 9a.75.75 0 00-1.5 0v2.25H9a.75.75 0 000 1.5h2.25V15a.75.75 0 001.5 0v-2.25H15a.75.75 0 000-1.5h-2.25V9z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(PlusCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/PlusSmallIcon.js
        var require_PlusSmallIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/PlusSmallIcon.js"(exports, module) {
                var React2 = require_react();
                function PlusSmallIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M12 5.25a.75.75 0 01.75.75v5.25H18a.75.75 0 010 1.5h-5.25V18a.75.75 0 01-1.5 0v-5.25H6a.75.75 0 010-1.5h5.25V6a.75.75 0 01.75-.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(PlusSmallIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/PlusIcon.js
        var require_PlusIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/PlusIcon.js"(exports, module) {
                var React2 = require_react();
                function PlusIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M12 3.75a.75.75 0 01.75.75v6.75h6.75a.75.75 0 010 1.5h-6.75v6.75a.75.75 0 01-1.5 0v-6.75H4.5a.75.75 0 010-1.5h6.75V4.5a.75.75 0 01.75-.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(PlusIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/PowerIcon.js
        var require_PowerIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/PowerIcon.js"(exports, module) {
                var React2 = require_react();
                function PowerIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M12 2.25a.75.75 0 01.75.75v9a.75.75 0 01-1.5 0V3a.75.75 0 01.75-.75zM6.166 5.106a.75.75 0 010 1.06 8.25 8.25 0 1011.668 0 .75.75 0 111.06-1.06c3.808 3.807 3.808 9.98 0 13.788-3.807 3.808-9.98 3.808-13.788 0-3.808-3.807-3.808-9.98 0-13.788a.75.75 0 011.06 0z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(PowerIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/PresentationChartBarIcon.js
        var require_PresentationChartBarIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/PresentationChartBarIcon.js"(exports, module) {
                var React2 = require_react();
                function PresentationChartBarIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M2.25 2.25a.75.75 0 000 1.5H3v10.5a3 3 0 003 3h1.21l-1.172 3.513a.75.75 0 001.424.474l.329-.987h8.418l.33.987a.75.75 0 001.422-.474l-1.17-3.513H18a3 3 0 003-3V3.75h.75a.75.75 0 000-1.5H2.25zm6.04 16.5l.5-1.5h6.42l.5 1.5H8.29zm7.46-12a.75.75 0 00-1.5 0v6a.75.75 0 001.5 0v-6zm-3 2.25a.75.75 0 00-1.5 0v3.75a.75.75 0 001.5 0V9zm-3 2.25a.75.75 0 00-1.5 0v1.5a.75.75 0 001.5 0v-1.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(PresentationChartBarIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/PresentationChartLineIcon.js
        var require_PresentationChartLineIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/PresentationChartLineIcon.js"(exports, module) {
                var React2 = require_react();
                function PresentationChartLineIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M2.25 2.25a.75.75 0 000 1.5H3v10.5a3 3 0 003 3h1.21l-1.172 3.513a.75.75 0 001.424.474l.329-.987h8.418l.33.987a.75.75 0 001.422-.474l-1.17-3.513H18a3 3 0 003-3V3.75h.75a.75.75 0 000-1.5H2.25zm6.54 15h6.42l.5 1.5H8.29l.5-1.5zm8.085-8.995a.75.75 0 10-.75-1.299 12.81 12.81 0 00-3.558 3.05L11.03 8.47a.75.75 0 00-1.06 0l-3 3a.75.75 0 101.06 1.06l2.47-2.47 1.617 1.618a.75.75 0 001.146-.102 11.312 11.312 0 013.612-3.321z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(PresentationChartLineIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/PrinterIcon.js
        var require_PrinterIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/PrinterIcon.js"(exports, module) {
                var React2 = require_react();
                function PrinterIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M7.875 1.5C6.839 1.5 6 2.34 6 3.375v2.99c-.426.053-.851.11-1.274.174-1.454.218-2.476 1.483-2.476 2.917v6.294a3 3 0 003 3h.27l-.155 1.705A1.875 1.875 0 007.232 22.5h9.536a1.875 1.875 0 001.867-2.045l-.155-1.705h.27a3 3 0 003-3V9.456c0-1.434-1.022-2.7-2.476-2.917A48.716 48.716 0 0018 6.366V3.375c0-1.036-.84-1.875-1.875-1.875h-8.25zM16.5 6.205v-2.83A.375.375 0 0016.125 3h-8.25a.375.375 0 00-.375.375v2.83a49.353 49.353 0 019 0zm-.217 8.265c.178.018.317.16.333.337l.526 5.784a.375.375 0 01-.374.409H7.232a.375.375 0 01-.374-.409l.526-5.784a.373.373 0 01.333-.337 41.741 41.741 0 018.566 0zm.967-3.97a.75.75 0 01.75-.75h.008a.75.75 0 01.75.75v.008a.75.75 0 01-.75.75H18a.75.75 0 01-.75-.75V10.5zM15 9.75a.75.75 0 00-.75.75v.008c0 .414.336.75.75.75h.008a.75.75 0 00.75-.75V10.5a.75.75 0 00-.75-.75H15z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(PrinterIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/PuzzlePieceIcon.js
        var require_PuzzlePieceIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/PuzzlePieceIcon.js"(exports, module) {
                var React2 = require_react();
                function PuzzlePieceIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M11.25 5.337c0-.355-.186-.676-.401-.959a1.647 1.647 0 01-.349-1.003c0-1.036 1.007-1.875 2.25-1.875S15 2.34 15 3.375c0 .369-.128.713-.349 1.003-.215.283-.401.604-.401.959 0 .332.278.598.61.578 1.91-.114 3.79-.342 5.632-.676a.75.75 0 01.878.645 49.17 49.17 0 01.376 5.452.657.657 0 01-.66.664c-.354 0-.675-.186-.958-.401a1.647 1.647 0 00-1.003-.349c-1.035 0-1.875 1.007-1.875 2.25s.84 2.25 1.875 2.25c.369 0 .713-.128 1.003-.349.283-.215.604-.401.959-.401.31 0 .557.262.534.571a48.774 48.774 0 01-.595 4.845.75.75 0 01-.61.61c-1.82.317-3.673.533-5.555.642a.58.58 0 01-.611-.581c0-.355.186-.676.401-.959.221-.29.349-.634.349-1.003 0-1.035-1.007-1.875-2.25-1.875s-2.25.84-2.25 1.875c0 .369.128.713.349 1.003.215.283.401.604.401.959a.641.641 0 01-.658.643 49.118 49.118 0 01-4.708-.36.75.75 0 01-.645-.878c.293-1.614.504-3.257.629-4.924A.53.53 0 005.337 15c-.355 0-.676.186-.959.401-.29.221-.634.349-1.003.349-1.036 0-1.875-1.007-1.875-2.25s.84-2.25 1.875-2.25c.369 0 .713.128 1.003.349.283.215.604.401.959.401a.656.656 0 00.659-.663 47.703 47.703 0 00-.31-4.82.75.75 0 01.83-.832c1.343.155 2.703.254 4.077.294a.64.64 0 00.657-.642z"
                    }));
                }
                var ForwardRef = React2.forwardRef(PuzzlePieceIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/QrCodeIcon.js
        var require_QrCodeIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/QrCodeIcon.js"(exports, module) {
                var React2 = require_react();
                function QrCodeIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M3 4.875C3 3.839 3.84 3 4.875 3h4.5c1.036 0 1.875.84 1.875 1.875v4.5c0 1.036-.84 1.875-1.875 1.875h-4.5A1.875 1.875 0 013 9.375v-4.5zM4.875 4.5a.375.375 0 00-.375.375v4.5c0 .207.168.375.375.375h4.5a.375.375 0 00.375-.375v-4.5a.375.375 0 00-.375-.375h-4.5zm7.875.375c0-1.036.84-1.875 1.875-1.875h4.5C20.16 3 21 3.84 21 4.875v4.5c0 1.036-.84 1.875-1.875 1.875h-4.5a1.875 1.875 0 01-1.875-1.875v-4.5zm1.875-.375a.375.375 0 00-.375.375v4.5c0 .207.168.375.375.375h4.5a.375.375 0 00.375-.375v-4.5a.375.375 0 00-.375-.375h-4.5zM6 6.75A.75.75 0 016.75 6h.75a.75.75 0 01.75.75v.75a.75.75 0 01-.75.75h-.75A.75.75 0 016 7.5v-.75zm9.75 0A.75.75 0 0116.5 6h.75a.75.75 0 01.75.75v.75a.75.75 0 01-.75.75h-.75a.75.75 0 01-.75-.75v-.75zM3 14.625c0-1.036.84-1.875 1.875-1.875h4.5c1.036 0 1.875.84 1.875 1.875v4.5c0 1.035-.84 1.875-1.875 1.875h-4.5A1.875 1.875 0 013 19.125v-4.5zm1.875-.375a.375.375 0 00-.375.375v4.5c0 .207.168.375.375.375h4.5a.375.375 0 00.375-.375v-4.5a.375.375 0 00-.375-.375h-4.5zm7.875-.75a.75.75 0 01.75-.75h.75a.75.75 0 01.75.75v.75a.75.75 0 01-.75.75h-.75a.75.75 0 01-.75-.75v-.75zm6 0a.75.75 0 01.75-.75h.75a.75.75 0 01.75.75v.75a.75.75 0 01-.75.75h-.75a.75.75 0 01-.75-.75v-.75zM6 16.5a.75.75 0 01.75-.75h.75a.75.75 0 01.75.75v.75a.75.75 0 01-.75.75h-.75a.75.75 0 01-.75-.75v-.75zm9.75 0a.75.75 0 01.75-.75h.75a.75.75 0 01.75.75v.75a.75.75 0 01-.75.75h-.75a.75.75 0 01-.75-.75v-.75zm-3 3a.75.75 0 01.75-.75h.75a.75.75 0 01.75.75v.75a.75.75 0 01-.75.75h-.75a.75.75 0 01-.75-.75v-.75zm6 0a.75.75 0 01.75-.75h.75a.75.75 0 01.75.75v.75a.75.75 0 01-.75.75h-.75a.75.75 0 01-.75-.75v-.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(QrCodeIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/QuestionMarkCircleIcon.js
        var require_QuestionMarkCircleIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/QuestionMarkCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function QuestionMarkCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12zm11.378-3.917c-.89-.777-2.366-.777-3.255 0a.75.75 0 01-.988-1.129c1.454-1.272 3.776-1.272 5.23 0 1.513 1.324 1.513 3.518 0 4.842a3.75 3.75 0 01-.837.552c-.676.328-1.028.774-1.028 1.152v.75a.75.75 0 01-1.5 0v-.75c0-1.279 1.06-2.107 1.875-2.502.182-.088.351-.199.503-.331.83-.727.83-1.857 0-2.584zM12 18a.75.75 0 100-1.5.75.75 0 000 1.5z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(QuestionMarkCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/QueueListIcon.js
        var require_QueueListIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/QueueListIcon.js"(exports, module) {
                var React2 = require_react();
                function QueueListIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M5.625 3.75a2.625 2.625 0 100 5.25h12.75a2.625 2.625 0 000-5.25H5.625zM3.75 11.25a.75.75 0 000 1.5h16.5a.75.75 0 000-1.5H3.75zM3 15.75a.75.75 0 01.75-.75h16.5a.75.75 0 010 1.5H3.75a.75.75 0 01-.75-.75zM3.75 18.75a.75.75 0 000 1.5h16.5a.75.75 0 000-1.5H3.75z"
                    }));
                }
                var ForwardRef = React2.forwardRef(QueueListIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/RadioIcon.js
        var require_RadioIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/RadioIcon.js"(exports, module) {
                var React2 = require_react();
                function RadioIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M20.432 4.103a.75.75 0 00-.364-1.455L4.128 6.632l-.2.033C2.498 6.904 1.5 8.158 1.5 9.575v9.175a3 3 0 003 3h15a3 3 0 003-3V9.574c0-1.416-.997-2.67-2.429-2.909a49.016 49.016 0 00-7.255-.658l7.616-1.904zm-9.585 8.56a.75.75 0 010 1.06l-.005.006a.75.75 0 01-1.06 0l-.006-.005a.75.75 0 010-1.061l.005-.005a.75.75 0 011.06 0l.006.005zM9.781 15.85a.75.75 0 001.061 0l.005-.005a.75.75 0 000-1.061l-.005-.005a.75.75 0 00-1.06 0l-.006.005a.75.75 0 000 1.06l.005.006zm-1.055-1.066a.75.75 0 010 1.06l-.005.006a.75.75 0 01-1.061 0l-.005-.005a.75.75 0 010-1.06l.005-.006a.75.75 0 011.06 0l.006.005zM7.66 13.73a.75.75 0 001.061 0l.005-.006a.75.75 0 000-1.06l-.005-.005a.75.75 0 00-1.06 0l-.006.005a.75.75 0 000 1.06l.005.006zM9.255 9.75a.75.75 0 01.75.75v.008a.75.75 0 01-.75.75h-.008a.75.75 0 01-.75-.75V10.5a.75.75 0 01.75-.75h.008zm3.624 3.28a.75.75 0 00.275-1.025L13.15 12a.75.75 0 00-1.025-.275l-.006.004a.75.75 0 00-.275 1.024l.004.007a.75.75 0 001.024.274l.007-.003zm-1.38 5.126a.75.75 0 01-1.024-.274l-.004-.007a.75.75 0 01.275-1.024l.006-.004a.75.75 0 011.025.274l.004.007a.75.75 0 01-.275 1.024l-.006.004zm.282-6.776a.75.75 0 00-.274-1.025l-.007-.003a.75.75 0 00-1.024.274l-.004.007a.75.75 0 00.274 1.024l.007.004a.75.75 0 001.024-.274l.004-.007zm1.369 5.129a.75.75 0 01-1.025.274l-.006-.003a.75.75 0 01-.275-1.025l.004-.006a.75.75 0 011.025-.275l.006.004a.75.75 0 01.275 1.024l-.004.007zm-.145-1.502a.75.75 0 00.75-.75v-.007a.75.75 0 00-.75-.75h-.008a.75.75 0 00-.75.75v.008c0 .414.336.75.75.75h.008zm-3.75 2.243a.75.75 0 01.75.75v.008a.75.75 0 01-.75.75h-.008a.75.75 0 01-.75-.75V18a.75.75 0 01.75-.75h.008zm-2.871-.47a.75.75 0 00.274-1.025l-.003-.006a.75.75 0 00-1.025-.275l-.006.004a.75.75 0 00-.275 1.025l.004.006a.75.75 0 001.024.274l.007-.003zm1.366-5.12a.75.75 0 01-1.025-.274l-.004-.006a.75.75 0 01.275-1.025l.006-.003a.75.75 0 011.025.274l.004.007a.75.75 0 01-.275 1.024l-.006.004zm.281 6.215a.75.75 0 00-.275-1.024l-.006-.004a.75.75 0 00-1.025.274l-.003.007a.75.75 0 00.274 1.024l.007.004a.75.75 0 001.024-.274l.004-.007zM6.655 12.76a.75.75 0 01-1.025.274l-.006-.003a.75.75 0 01-.275-1.025L5.353 12a.75.75 0 011.025-.275l.006.004a.75.75 0 01.275 1.024l-.004.007zm-1.15 2.248a.75.75 0 00.75-.75v-.007a.75.75 0 00-.75-.75h-.008a.75.75 0 00-.75.75v.008c0 .414.336.75.75.75h.008zM17.25 10.5a1.5 1.5 0 110 3 1.5 1.5 0 010-3zm1.5 6a1.5 1.5 0 10-3 0 1.5 1.5 0 003 0z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(RadioIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ReceiptPercentIcon.js
        var require_ReceiptPercentIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ReceiptPercentIcon.js"(exports, module) {
                var React2 = require_react();
                function ReceiptPercentIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M12 1.5c-1.921 0-3.816.111-5.68.327-1.497.174-2.57 1.46-2.57 2.93V21.75a.75.75 0 001.029.696l3.471-1.388 3.472 1.388a.75.75 0 00.556 0l3.472-1.388 3.471 1.388a.75.75 0 001.029-.696V4.757c0-1.47-1.073-2.756-2.57-2.93A49.255 49.255 0 0012 1.5zm3.53 7.28a.75.75 0 00-1.06-1.06l-6 6a.75.75 0 101.06 1.06l6-6zM8.625 9a1.125 1.125 0 112.25 0 1.125 1.125 0 01-2.25 0zm5.625 3.375a1.125 1.125 0 100 2.25 1.125 1.125 0 000-2.25z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ReceiptPercentIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ReceiptRefundIcon.js
        var require_ReceiptRefundIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ReceiptRefundIcon.js"(exports, module) {
                var React2 = require_react();
                function ReceiptRefundIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M12 1.5c-1.921 0-3.816.111-5.68.327-1.497.174-2.57 1.46-2.57 2.93V21.75a.75.75 0 001.029.696l3.471-1.388 3.472 1.388a.75.75 0 00.556 0l3.472-1.388 3.471 1.388a.75.75 0 001.029-.696V4.757c0-1.47-1.073-2.756-2.57-2.93A49.255 49.255 0 0012 1.5zm-.97 6.53a.75.75 0 10-1.06-1.06L7.72 9.22a.75.75 0 000 1.06l2.25 2.25a.75.75 0 101.06-1.06l-.97-.97h3.065a1.875 1.875 0 010 3.75H12a.75.75 0 000 1.5h1.125a3.375 3.375 0 100-6.75h-3.064l.97-.97z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ReceiptRefundIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/RectangleGroupIcon.js
        var require_RectangleGroupIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/RectangleGroupIcon.js"(exports, module) {
                var React2 = require_react();
                function RectangleGroupIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M1.5 7.125c0-1.036.84-1.875 1.875-1.875h6c1.036 0 1.875.84 1.875 1.875v3.75c0 1.036-.84 1.875-1.875 1.875h-6A1.875 1.875 0 011.5 10.875v-3.75zm12 1.5c0-1.036.84-1.875 1.875-1.875h5.25c1.035 0 1.875.84 1.875 1.875v8.25c0 1.035-.84 1.875-1.875 1.875h-5.25a1.875 1.875 0 01-1.875-1.875v-8.25zM3 16.125c0-1.036.84-1.875 1.875-1.875h5.25c1.036 0 1.875.84 1.875 1.875v2.25c0 1.035-.84 1.875-1.875 1.875h-5.25A1.875 1.875 0 013 18.375v-2.25z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(RectangleGroupIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/RectangleStackIcon.js
        var require_RectangleStackIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/RectangleStackIcon.js"(exports, module) {
                var React2 = require_react();
                function RectangleStackIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M5.566 4.657A4.505 4.505 0 016.75 4.5h10.5c.41 0 .806.055 1.183.157A3 3 0 0015.75 3h-7.5a3 3 0 00-2.684 1.657zM2.25 12a3 3 0 013-3h13.5a3 3 0 013 3v6a3 3 0 01-3 3H5.25a3 3 0 01-3-3v-6zM5.25 7.5c-.41 0-.806.055-1.184.157A3 3 0 016.75 6h10.5a3 3 0 012.683 1.657A4.505 4.505 0 0018.75 7.5H5.25z"
                    }));
                }
                var ForwardRef = React2.forwardRef(RectangleStackIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/RocketLaunchIcon.js
        var require_RocketLaunchIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/RocketLaunchIcon.js"(exports, module) {
                var React2 = require_react();
                function RocketLaunchIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M9.315 7.584C12.195 3.883 16.695 1.5 21.75 1.5a.75.75 0 01.75.75c0 5.056-2.383 9.555-6.084 12.436A6.75 6.75 0 019.75 22.5a.75.75 0 01-.75-.75v-4.131A15.838 15.838 0 016.382 15H2.25a.75.75 0 01-.75-.75 6.75 6.75 0 017.815-6.666zM15 6.75a2.25 2.25 0 100 4.5 2.25 2.25 0 000-4.5z",
                        clipRule: "evenodd"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M5.26 17.242a.75.75 0 10-.897-1.203 5.243 5.243 0 00-2.05 5.022.75.75 0 00.625.627 5.243 5.243 0 005.022-2.051.75.75 0 10-1.202-.897 3.744 3.744 0 01-3.008 1.51c0-1.23.592-2.323 1.51-3.008z"
                    }));
                }
                var ForwardRef = React2.forwardRef(RocketLaunchIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/RssIcon.js
        var require_RssIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/RssIcon.js"(exports, module) {
                var React2 = require_react();
                function RssIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M3.75 4.5a.75.75 0 01.75-.75h.75c8.284 0 15 6.716 15 15v.75a.75.75 0 01-.75.75h-.75a.75.75 0 01-.75-.75v-.75C18 11.708 12.292 6 5.25 6H4.5a.75.75 0 01-.75-.75V4.5zm0 6.75a.75.75 0 01.75-.75h.75a8.25 8.25 0 018.25 8.25v.75a.75.75 0 01-.75.75H12a.75.75 0 01-.75-.75v-.75a6 6 0 00-6-6H4.5a.75.75 0 01-.75-.75v-.75zm0 7.5a1.5 1.5 0 113 0 1.5 1.5 0 01-3 0z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(RssIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ScaleIcon.js
        var require_ScaleIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ScaleIcon.js"(exports, module) {
                var React2 = require_react();
                function ScaleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M12 2.25a.75.75 0 01.75.75v.756a49.106 49.106 0 019.152 1 .75.75 0 01-.152 1.485h-1.918l2.474 10.124a.75.75 0 01-.375.84A6.723 6.723 0 0118.75 18a6.723 6.723 0 01-3.181-.795.75.75 0 01-.375-.84l2.474-10.124H12.75v13.28c1.293.076 2.534.343 3.697.776a.75.75 0 01-.262 1.453h-8.37a.75.75 0 01-.262-1.453c1.162-.433 2.404-.7 3.697-.775V6.24H6.332l2.474 10.124a.75.75 0 01-.375.84A6.723 6.723 0 015.25 18a6.723 6.723 0 01-3.181-.795.75.75 0 01-.375-.84L4.168 6.241H2.25a.75.75 0 01-.152-1.485 49.105 49.105 0 019.152-1V3a.75.75 0 01.75-.75zm4.878 13.543l1.872-7.662 1.872 7.662h-3.744zm-9.756 0L5.25 8.131l-1.872 7.662h3.744z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ScaleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ScissorsIcon.js
        var require_ScissorsIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ScissorsIcon.js"(exports, module) {
                var React2 = require_react();
                function ScissorsIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M8.128 9.155a3.751 3.751 0 11.713-1.321l1.136.656a.75.75 0 01.222 1.104l-.006.007a.75.75 0 01-1.032.157 1.421 1.421 0 00-.113-.072l-.92-.531zm-4.827-3.53a2.25 2.25 0 013.994 2.063.756.756 0 00-.122.23 2.25 2.25 0 01-3.872-2.293zM13.348 8.272a5.073 5.073 0 00-3.428 3.57c-.101.387-.158.79-.165 1.202a1.415 1.415 0 01-.707 1.201l-.96.554a3.751 3.751 0 10.734 1.309l13.729-7.926a.75.75 0 00-.181-1.374l-.803-.215a5.25 5.25 0 00-2.894.05l-5.325 1.629zm-9.223 7.03a2.25 2.25 0 102.25 3.897 2.25 2.25 0 00-2.25-3.897zM12 12.75a.75.75 0 100-1.5.75.75 0 000 1.5z",
                        clipRule: "evenodd"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M16.372 12.615a.75.75 0 01.75 0l5.43 3.135a.75.75 0 01-.182 1.374l-.802.215a5.25 5.25 0 01-2.894-.051l-5.147-1.574a.75.75 0 01-.156-1.367l3-1.732z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ScissorsIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ServerStackIcon.js
        var require_ServerStackIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ServerStackIcon.js"(exports, module) {
                var React2 = require_react();
                function ServerStackIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M5.507 4.048A3 3 0 017.785 3h8.43a3 3 0 012.278 1.048l1.722 2.008A4.533 4.533 0 0019.5 6h-15c-.243 0-.482.02-.715.056l1.722-2.008z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M1.5 10.5a3 3 0 013-3h15a3 3 0 110 6h-15a3 3 0 01-3-3zm15 0a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm2.25.75a.75.75 0 100-1.5.75.75 0 000 1.5zM4.5 15a3 3 0 100 6h15a3 3 0 100-6h-15zm11.25 3.75a.75.75 0 100-1.5.75.75 0 000 1.5zM19.5 18a.75.75 0 11-1.5 0 .75.75 0 011.5 0z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ServerStackIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ServerIcon.js
        var require_ServerIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ServerIcon.js"(exports, module) {
                var React2 = require_react();
                function ServerIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M4.08 5.227A3 3 0 016.979 3H17.02a3 3 0 012.9 2.227l2.113 7.926A5.228 5.228 0 0018.75 12H5.25a5.228 5.228 0 00-3.284 1.153L4.08 5.227z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M5.25 13.5a3.75 3.75 0 100 7.5h13.5a3.75 3.75 0 100-7.5H5.25zm10.5 4.5a.75.75 0 100-1.5.75.75 0 000 1.5zm3.75-.75a.75.75 0 11-1.5 0 .75.75 0 011.5 0z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ServerIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ShareIcon.js
        var require_ShareIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ShareIcon.js"(exports, module) {
                var React2 = require_react();
                function ShareIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M15.75 4.5a3 3 0 11.825 2.066l-8.421 4.679a3.002 3.002 0 010 1.51l8.421 4.679a3 3 0 11-.729 1.31l-8.421-4.678a3 3 0 110-4.132l8.421-4.679a3 3 0 01-.096-.755z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ShareIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ShieldCheckIcon.js
        var require_ShieldCheckIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ShieldCheckIcon.js"(exports, module) {
                var React2 = require_react();
                function ShieldCheckIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M12.516 2.17a.75.75 0 00-1.032 0 11.209 11.209 0 01-7.877 3.08.75.75 0 00-.722.515A12.74 12.74 0 002.25 9.75c0 5.942 4.064 10.933 9.563 12.348a.749.749 0 00.374 0c5.499-1.415 9.563-6.406 9.563-12.348 0-1.39-.223-2.73-.635-3.985a.75.75 0 00-.722-.516l-.143.001c-2.996 0-5.717-1.17-7.734-3.08zm3.094 8.016a.75.75 0 10-1.22-.872l-3.236 4.53L9.53 12.22a.75.75 0 00-1.06 1.06l2.25 2.25a.75.75 0 001.14-.094l3.75-5.25z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ShieldCheckIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ShieldExclamationIcon.js
        var require_ShieldExclamationIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ShieldExclamationIcon.js"(exports, module) {
                var React2 = require_react();
                function ShieldExclamationIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M11.484 2.17a.75.75 0 011.032 0 11.209 11.209 0 007.877 3.08.75.75 0 01.722.515 12.74 12.74 0 01.635 3.985c0 5.942-4.064 10.933-9.563 12.348a.749.749 0 01-.374 0C6.314 20.683 2.25 15.692 2.25 9.75c0-1.39.223-2.73.635-3.985a.75.75 0 01.722-.516l.143.001c2.996 0 5.718-1.17 7.734-3.08zM12 8.25a.75.75 0 01.75.75v3.75a.75.75 0 01-1.5 0V9a.75.75 0 01.75-.75zM12 15a.75.75 0 00-.75.75v.008c0 .414.336.75.75.75h.008a.75.75 0 00.75-.75v-.008a.75.75 0 00-.75-.75H12z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ShieldExclamationIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ShoppingBagIcon.js
        var require_ShoppingBagIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ShoppingBagIcon.js"(exports, module) {
                var React2 = require_react();
                function ShoppingBagIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M7.5 6v.75H5.513c-.96 0-1.764.724-1.865 1.679l-1.263 12A1.875 1.875 0 004.25 22.5h15.5a1.875 1.875 0 001.865-2.071l-1.263-12a1.875 1.875 0 00-1.865-1.679H16.5V6a4.5 4.5 0 10-9 0zM12 3a3 3 0 00-3 3v.75h6V6a3 3 0 00-3-3zm-3 8.25a3 3 0 106 0v-.75a.75.75 0 011.5 0v.75a4.5 4.5 0 11-9 0v-.75a.75.75 0 011.5 0v.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(ShoppingBagIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ShoppingCartIcon.js
        var require_ShoppingCartIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ShoppingCartIcon.js"(exports, module) {
                var React2 = require_react();
                function ShoppingCartIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M2.25 2.25a.75.75 0 000 1.5h1.386c.17 0 .318.114.362.278l2.558 9.592a3.752 3.752 0 00-2.806 3.63c0 .414.336.75.75.75h15.75a.75.75 0 000-1.5H5.378A2.25 2.25 0 017.5 15h11.218a.75.75 0 00.674-.421 60.358 60.358 0 002.96-7.228.75.75 0 00-.525-.965A60.864 60.864 0 005.68 4.509l-.232-.867A1.875 1.875 0 003.636 2.25H2.25zM3.75 20.25a1.5 1.5 0 113 0 1.5 1.5 0 01-3 0zM16.5 20.25a1.5 1.5 0 113 0 1.5 1.5 0 01-3 0z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ShoppingCartIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/SignalSlashIcon.js
        var require_SignalSlashIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/SignalSlashIcon.js"(exports, module) {
                var React2 = require_react();
                function SignalSlashIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M2.47 2.47a.75.75 0 011.06 0l8.407 8.407a1.125 1.125 0 011.186 1.186l1.462 1.461a3.001 3.001 0 00-.464-3.645.75.75 0 111.061-1.061 4.501 4.501 0 01.486 5.79l1.072 1.072a6.001 6.001 0 00-.497-7.923.75.75 0 011.06-1.06 7.501 7.501 0 01.505 10.05l1.064 1.065a9 9 0 00-.508-12.176.75.75 0 011.06-1.06c3.923 3.922 4.093 10.175.512 14.3l1.594 1.594a.75.75 0 11-1.06 1.06l-2.106-2.105-2.121-2.122h-.001l-4.705-4.706a.747.747 0 01-.127-.126L2.47 3.53a.75.75 0 010-1.061zm1.189 4.422a.75.75 0 01.326 1.01 9.004 9.004 0 001.651 10.462.75.75 0 11-1.06 1.06C1.27 16.12.63 11.165 2.648 7.219a.75.75 0 011.01-.326zM5.84 9.134a.75.75 0 01.472.95 6 6 0 001.444 6.159.75.75 0 01-1.06 1.06A7.5 7.5 0 014.89 9.606a.75.75 0 01.95-.472zm2.341 2.653a.75.75 0 01.848.638c.088.62.37 1.218.849 1.696a.75.75 0 01-1.061 1.061 4.483 4.483 0 01-1.273-2.546.75.75 0 01.637-.848z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(SignalSlashIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/SignalIcon.js
        var require_SignalIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/SignalIcon.js"(exports, module) {
                var React2 = require_react();
                function SignalIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M5.636 4.575a.75.75 0 010 1.06 9 9 0 000 12.729.75.75 0 01-1.06 1.06c-4.101-4.1-4.101-10.748 0-14.849a.75.75 0 011.06 0zm12.728 0a.75.75 0 011.06 0c4.101 4.1 4.101 10.749 0 14.85a.75.75 0 11-1.06-1.061 9 9 0 000-12.728.75.75 0 010-1.06zM7.757 6.696a.75.75 0 010 1.061 6 6 0 000 8.485.75.75 0 01-1.06 1.061 7.5 7.5 0 010-10.607.75.75 0 011.06 0zm8.486 0a.75.75 0 011.06 0 7.5 7.5 0 010 10.607.75.75 0 01-1.06-1.06 6 6 0 000-8.486.75.75 0 010-1.06zM9.879 8.818a.75.75 0 010 1.06 3 3 0 000 4.243.75.75 0 11-1.061 1.06 4.5 4.5 0 010-6.363.75.75 0 011.06 0zm4.242 0a.75.75 0 011.061 0 4.5 4.5 0 010 6.364.75.75 0 01-1.06-1.06 3 3 0 000-4.244.75.75 0 010-1.06zM10.875 12a1.125 1.125 0 112.25 0 1.125 1.125 0 01-2.25 0z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(SignalIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/SparklesIcon.js
        var require_SparklesIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/SparklesIcon.js"(exports, module) {
                var React2 = require_react();
                function SparklesIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M9 4.5a.75.75 0 01.721.544l.813 2.846a3.75 3.75 0 002.576 2.576l2.846.813a.75.75 0 010 1.442l-2.846.813a3.75 3.75 0 00-2.576 2.576l-.813 2.846a.75.75 0 01-1.442 0l-.813-2.846a3.75 3.75 0 00-2.576-2.576l-2.846-.813a.75.75 0 010-1.442l2.846-.813A3.75 3.75 0 007.466 7.89l.813-2.846A.75.75 0 019 4.5zM18 1.5a.75.75 0 01.728.568l.258 1.036c.236.94.97 1.674 1.91 1.91l1.036.258a.75.75 0 010 1.456l-1.036.258c-.94.236-1.674.97-1.91 1.91l-.258 1.036a.75.75 0 01-1.456 0l-.258-1.036a2.625 2.625 0 00-1.91-1.91l-1.036-.258a.75.75 0 010-1.456l1.036-.258a2.625 2.625 0 001.91-1.91l.258-1.036A.75.75 0 0118 1.5zM16.5 15a.75.75 0 01.712.513l.394 1.183c.15.447.5.799.948.948l1.183.395a.75.75 0 010 1.422l-1.183.395c-.447.15-.799.5-.948.948l-.395 1.183a.75.75 0 01-1.422 0l-.395-1.183a1.5 1.5 0 00-.948-.948l-1.183-.395a.75.75 0 010-1.422l1.183-.395c.447-.15.799-.5.948-.948l.395-1.183A.75.75 0 0116.5 15z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(SparklesIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/SpeakerWaveIcon.js
        var require_SpeakerWaveIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/SpeakerWaveIcon.js"(exports, module) {
                var React2 = require_react();
                function SpeakerWaveIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M13.5 4.06c0-1.336-1.616-2.005-2.56-1.06l-4.5 4.5H4.508c-1.141 0-2.318.664-2.66 1.905A9.76 9.76 0 001.5 12c0 .898.121 1.768.35 2.595.341 1.24 1.518 1.905 2.659 1.905h1.93l4.5 4.5c.945.945 2.561.276 2.561-1.06V4.06zM18.584 5.106a.75.75 0 011.06 0c3.808 3.807 3.808 9.98 0 13.788a.75.75 0 11-1.06-1.06 8.25 8.25 0 000-11.668.75.75 0 010-1.06z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M15.932 7.757a.75.75 0 011.061 0 6 6 0 010 8.486.75.75 0 01-1.06-1.061 4.5 4.5 0 000-6.364.75.75 0 010-1.06z"
                    }));
                }
                var ForwardRef = React2.forwardRef(SpeakerWaveIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/SpeakerXMarkIcon.js
        var require_SpeakerXMarkIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/SpeakerXMarkIcon.js"(exports, module) {
                var React2 = require_react();
                function SpeakerXMarkIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M13.5 4.06c0-1.336-1.616-2.005-2.56-1.06l-4.5 4.5H4.508c-1.141 0-2.318.664-2.66 1.905A9.76 9.76 0 001.5 12c0 .898.121 1.768.35 2.595.341 1.24 1.518 1.905 2.659 1.905h1.93l4.5 4.5c.945.945 2.561.276 2.561-1.06V4.06zM17.78 9.22a.75.75 0 10-1.06 1.06L18.44 12l-1.72 1.72a.75.75 0 001.06 1.06l1.72-1.72 1.72 1.72a.75.75 0 101.06-1.06L20.56 12l1.72-1.72a.75.75 0 00-1.06-1.06l-1.72 1.72-1.72-1.72z"
                    }));
                }
                var ForwardRef = React2.forwardRef(SpeakerXMarkIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/Square2StackIcon.js
        var require_Square2StackIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/Square2StackIcon.js"(exports, module) {
                var React2 = require_react();
                function Square2StackIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M16.5 6a3 3 0 00-3-3H6a3 3 0 00-3 3v7.5a3 3 0 003 3v-6A4.5 4.5 0 0110.5 6h6z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M18 7.5a3 3 0 013 3V18a3 3 0 01-3 3h-7.5a3 3 0 01-3-3v-7.5a3 3 0 013-3H18z"
                    }));
                }
                var ForwardRef = React2.forwardRef(Square2StackIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/Square3Stack3DIcon.js
        var require_Square3Stack3DIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/Square3Stack3DIcon.js"(exports, module) {
                var React2 = require_react();
                function Square3Stack3DIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M11.644 1.59a.75.75 0 01.712 0l9.75 5.25a.75.75 0 010 1.32l-9.75 5.25a.75.75 0 01-.712 0l-9.75-5.25a.75.75 0 010-1.32l9.75-5.25z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M3.265 10.602l7.668 4.129a2.25 2.25 0 002.134 0l7.668-4.13 1.37.739a.75.75 0 010 1.32l-9.75 5.25a.75.75 0 01-.71 0l-9.75-5.25a.75.75 0 010-1.32l1.37-.738z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M10.933 19.231l-7.668-4.13-1.37.739a.75.75 0 000 1.32l9.75 5.25c.221.12.489.12.71 0l9.75-5.25a.75.75 0 000-1.32l-1.37-.738-7.668 4.13a2.25 2.25 0 01-2.134-.001z"
                    }));
                }
                var ForwardRef = React2.forwardRef(Square3Stack3DIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/Squares2X2Icon.js
        var require_Squares2X2Icon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/Squares2X2Icon.js"(exports, module) {
                var React2 = require_react();
                function Squares2X2Icon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M3 6a3 3 0 013-3h2.25a3 3 0 013 3v2.25a3 3 0 01-3 3H6a3 3 0 01-3-3V6zm9.75 0a3 3 0 013-3H18a3 3 0 013 3v2.25a3 3 0 01-3 3h-2.25a3 3 0 01-3-3V6zM3 15.75a3 3 0 013-3h2.25a3 3 0 013 3V18a3 3 0 01-3 3H6a3 3 0 01-3-3v-2.25zm9.75 0a3 3 0 013-3H18a3 3 0 013 3V18a3 3 0 01-3 3h-2.25a3 3 0 01-3-3v-2.25z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(Squares2X2Icon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/SquaresPlusIcon.js
        var require_SquaresPlusIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/SquaresPlusIcon.js"(exports, module) {
                var React2 = require_react();
                function SquaresPlusIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M6 3a3 3 0 00-3 3v2.25a3 3 0 003 3h2.25a3 3 0 003-3V6a3 3 0 00-3-3H6zM15.75 3a3 3 0 00-3 3v2.25a3 3 0 003 3H18a3 3 0 003-3V6a3 3 0 00-3-3h-2.25zM6 12.75a3 3 0 00-3 3V18a3 3 0 003 3h2.25a3 3 0 003-3v-2.25a3 3 0 00-3-3H6zM17.625 13.5a.75.75 0 00-1.5 0v2.625H13.5a.75.75 0 000 1.5h2.625v2.625a.75.75 0 001.5 0v-2.625h2.625a.75.75 0 000-1.5h-2.625V13.5z"
                    }));
                }
                var ForwardRef = React2.forwardRef(SquaresPlusIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/StarIcon.js
        var require_StarIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/StarIcon.js"(exports, module) {
                var React2 = require_react();
                function StarIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M10.788 3.21c.448-1.077 1.976-1.077 2.424 0l2.082 5.007 5.404.433c1.164.093 1.636 1.545.749 2.305l-4.117 3.527 1.257 5.273c.271 1.136-.964 2.033-1.96 1.425L12 18.354 7.373 21.18c-.996.608-2.231-.29-1.96-1.425l1.257-5.273-4.117-3.527c-.887-.76-.415-2.212.749-2.305l5.404-.433 2.082-5.006z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(StarIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/StopCircleIcon.js
        var require_StopCircleIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/StopCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function StopCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12zm6-2.438c0-.724.588-1.312 1.313-1.312h4.874c.725 0 1.313.588 1.313 1.313v4.874c0 .725-.588 1.313-1.313 1.313H9.564a1.312 1.312 0 01-1.313-1.313V9.564z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(StopCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/StopIcon.js
        var require_StopIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/StopIcon.js"(exports, module) {
                var React2 = require_react();
                function StopIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M4.5 7.5a3 3 0 013-3h9a3 3 0 013 3v9a3 3 0 01-3 3h-9a3 3 0 01-3-3v-9z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(StopIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/SunIcon.js
        var require_SunIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/SunIcon.js"(exports, module) {
                var React2 = require_react();
                function SunIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M12 2.25a.75.75 0 01.75.75v2.25a.75.75 0 01-1.5 0V3a.75.75 0 01.75-.75zM7.5 12a4.5 4.5 0 119 0 4.5 4.5 0 01-9 0zM18.894 6.166a.75.75 0 00-1.06-1.06l-1.591 1.59a.75.75 0 101.06 1.061l1.591-1.59zM21.75 12a.75.75 0 01-.75.75h-2.25a.75.75 0 010-1.5H21a.75.75 0 01.75.75zM17.834 18.894a.75.75 0 001.06-1.06l-1.59-1.591a.75.75 0 10-1.061 1.06l1.59 1.591zM12 18a.75.75 0 01.75.75V21a.75.75 0 01-1.5 0v-2.25A.75.75 0 0112 18zM7.758 17.303a.75.75 0 00-1.061-1.06l-1.591 1.59a.75.75 0 001.06 1.061l1.591-1.59zM6 12a.75.75 0 01-.75.75H3a.75.75 0 010-1.5h2.25A.75.75 0 016 12zM6.697 7.757a.75.75 0 001.06-1.06l-1.59-1.591a.75.75 0 00-1.061 1.06l1.59 1.591z"
                    }));
                }
                var ForwardRef = React2.forwardRef(SunIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/SwatchIcon.js
        var require_SwatchIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/SwatchIcon.js"(exports, module) {
                var React2 = require_react();
                function SwatchIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M2.25 4.125c0-1.036.84-1.875 1.875-1.875h5.25c1.036 0 1.875.84 1.875 1.875V17.25a4.5 4.5 0 11-9 0V4.125zm4.5 14.25a1.125 1.125 0 100-2.25 1.125 1.125 0 000 2.25z",
                        clipRule: "evenodd"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M10.719 21.75h9.156c1.036 0 1.875-.84 1.875-1.875v-5.25c0-1.036-.84-1.875-1.875-1.875h-.14l-8.742 8.743c-.09.089-.18.175-.274.257zM12.738 17.625l6.474-6.474a1.875 1.875 0 000-2.651L15.5 4.787a1.875 1.875 0 00-2.651 0l-.1.099V17.25c0 .126-.003.251-.01.375z"
                    }));
                }
                var ForwardRef = React2.forwardRef(SwatchIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/TableCellsIcon.js
        var require_TableCellsIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/TableCellsIcon.js"(exports, module) {
                var React2 = require_react();
                function TableCellsIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M1.5 5.625c0-1.036.84-1.875 1.875-1.875h17.25c1.035 0 1.875.84 1.875 1.875v12.75c0 1.035-.84 1.875-1.875 1.875H3.375A1.875 1.875 0 011.5 18.375V5.625zM21 9.375A.375.375 0 0020.625 9h-7.5a.375.375 0 00-.375.375v1.5c0 .207.168.375.375.375h7.5a.375.375 0 00.375-.375v-1.5zm0 3.75a.375.375 0 00-.375-.375h-7.5a.375.375 0 00-.375.375v1.5c0 .207.168.375.375.375h7.5a.375.375 0 00.375-.375v-1.5zm0 3.75a.375.375 0 00-.375-.375h-7.5a.375.375 0 00-.375.375v1.5c0 .207.168.375.375.375h7.5a.375.375 0 00.375-.375v-1.5zM10.875 18.75a.375.375 0 00.375-.375v-1.5a.375.375 0 00-.375-.375h-7.5a.375.375 0 00-.375.375v1.5c0 .207.168.375.375.375h7.5zM3.375 15h7.5a.375.375 0 00.375-.375v-1.5a.375.375 0 00-.375-.375h-7.5a.375.375 0 00-.375.375v1.5c0 .207.168.375.375.375zm0-3.75h7.5a.375.375 0 00.375-.375v-1.5A.375.375 0 0010.875 9h-7.5A.375.375 0 003 9.375v1.5c0 .207.168.375.375.375z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(TableCellsIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/TagIcon.js
        var require_TagIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/TagIcon.js"(exports, module) {
                var React2 = require_react();
                function TagIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M5.25 2.25a3 3 0 00-3 3v4.318a3 3 0 00.879 2.121l9.58 9.581c.92.92 2.39 1.186 3.548.428a18.849 18.849 0 005.441-5.44c.758-1.16.492-2.629-.428-3.548l-9.58-9.581a3 3 0 00-2.122-.879H5.25zM6.375 7.5a1.125 1.125 0 100-2.25 1.125 1.125 0 000 2.25z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(TagIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/TicketIcon.js
        var require_TicketIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/TicketIcon.js"(exports, module) {
                var React2 = require_react();
                function TicketIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M1.5 6.375c0-1.036.84-1.875 1.875-1.875h17.25c1.035 0 1.875.84 1.875 1.875v3.026a.75.75 0 01-.375.65 2.249 2.249 0 000 3.898.75.75 0 01.375.65v3.026c0 1.035-.84 1.875-1.875 1.875H3.375A1.875 1.875 0 011.5 17.625v-3.026a.75.75 0 01.374-.65 2.249 2.249 0 000-3.898.75.75 0 01-.374-.65V6.375zm15-1.125a.75.75 0 01.75.75v.75a.75.75 0 01-1.5 0V6a.75.75 0 01.75-.75zm.75 4.5a.75.75 0 00-1.5 0v.75a.75.75 0 001.5 0v-.75zm-.75 3a.75.75 0 01.75.75v.75a.75.75 0 01-1.5 0v-.75a.75.75 0 01.75-.75zm.75 4.5a.75.75 0 00-1.5 0V18a.75.75 0 001.5 0v-.75zM6 12a.75.75 0 01.75-.75H12a.75.75 0 010 1.5H6.75A.75.75 0 016 12zm.75 2.25a.75.75 0 000 1.5h3a.75.75 0 000-1.5h-3z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(TicketIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/TrashIcon.js
        var require_TrashIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/TrashIcon.js"(exports, module) {
                var React2 = require_react();
                function TrashIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M16.5 4.478v.227a48.816 48.816 0 013.878.512.75.75 0 11-.256 1.478l-.209-.035-1.005 13.07a3 3 0 01-2.991 2.77H8.084a3 3 0 01-2.991-2.77L4.087 6.66l-.209.035a.75.75 0 01-.256-1.478A48.567 48.567 0 017.5 4.705v-.227c0-1.564 1.213-2.9 2.816-2.951a52.662 52.662 0 013.369 0c1.603.051 2.815 1.387 2.815 2.951zm-6.136-1.452a51.196 51.196 0 013.273 0C14.39 3.05 15 3.684 15 4.478v.113a49.488 49.488 0 00-6 0v-.113c0-.794.609-1.428 1.364-1.452zm-.355 5.945a.75.75 0 10-1.5.058l.347 9a.75.75 0 101.499-.058l-.346-9zm5.48.058a.75.75 0 10-1.498-.058l-.347 9a.75.75 0 001.5.058l.345-9z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(TrashIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/TrophyIcon.js
        var require_TrophyIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/TrophyIcon.js"(exports, module) {
                var React2 = require_react();
                function TrophyIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M5.166 2.621v.858c-1.035.148-2.059.33-3.071.543a.75.75 0 00-.584.859 6.753 6.753 0 006.138 5.6 6.73 6.73 0 002.743 1.346A6.707 6.707 0 019.279 15H8.54c-1.036 0-1.875.84-1.875 1.875V19.5h-.75a2.25 2.25 0 00-2.25 2.25c0 .414.336.75.75.75h15a.75.75 0 00.75-.75 2.25 2.25 0 00-2.25-2.25h-.75v-2.625c0-1.036-.84-1.875-1.875-1.875h-.739a6.706 6.706 0 01-1.112-3.173 6.73 6.73 0 002.743-1.347 6.753 6.753 0 006.139-5.6.75.75 0 00-.585-.858 47.077 47.077 0 00-3.07-.543V2.62a.75.75 0 00-.658-.744 49.22 49.22 0 00-6.093-.377c-2.063 0-4.096.128-6.093.377a.75.75 0 00-.657.744zm0 2.629c0 1.196.312 2.32.857 3.294A5.266 5.266 0 013.16 5.337a45.6 45.6 0 012.006-.343v.256zm13.5 0v-.256c.674.1 1.343.214 2.006.343a5.265 5.265 0 01-2.863 3.207 6.72 6.72 0 00.857-3.294z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(TrophyIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/TruckIcon.js
        var require_TruckIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/TruckIcon.js"(exports, module) {
                var React2 = require_react();
                function TruckIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M3.375 4.5C2.339 4.5 1.5 5.34 1.5 6.375V13.5h12V6.375c0-1.036-.84-1.875-1.875-1.875h-8.25zM13.5 15h-12v2.625c0 1.035.84 1.875 1.875 1.875h.375a3 3 0 116 0h3a.75.75 0 00.75-.75V15z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M8.25 19.5a1.5 1.5 0 10-3 0 1.5 1.5 0 003 0zM15.75 6.75a.75.75 0 00-.75.75v11.25c0 .087.015.17.042.248a3 3 0 015.958.464c.853-.175 1.522-.935 1.464-1.883a18.659 18.659 0 00-3.732-10.104 1.837 1.837 0 00-1.47-.725H15.75z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M19.5 19.5a1.5 1.5 0 10-3 0 1.5 1.5 0 003 0z"
                    }));
                }
                var ForwardRef = React2.forwardRef(TruckIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/TvIcon.js
        var require_TvIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/TvIcon.js"(exports, module) {
                var React2 = require_react();
                function TvIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M19.5 6h-15v9h15V6z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M3.375 3C2.339 3 1.5 3.84 1.5 4.875v11.25C1.5 17.16 2.34 18 3.375 18H9.75v1.5H6A.75.75 0 006 21h12a.75.75 0 000-1.5h-3.75V18h6.375c1.035 0 1.875-.84 1.875-1.875V4.875C22.5 3.839 21.66 3 20.625 3H3.375zm0 13.5h17.25a.375.375 0 00.375-.375V4.875a.375.375 0 00-.375-.375H3.375A.375.375 0 003 4.875v11.25c0 .207.168.375.375.375z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(TvIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/UserCircleIcon.js
        var require_UserCircleIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/UserCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function UserCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M18.685 19.097A9.723 9.723 0 0021.75 12c0-5.385-4.365-9.75-9.75-9.75S2.25 6.615 2.25 12a9.723 9.723 0 003.065 7.097A9.716 9.716 0 0012 21.75a9.716 9.716 0 006.685-2.653zm-12.54-1.285A7.486 7.486 0 0112 15a7.486 7.486 0 015.855 2.812A8.224 8.224 0 0112 20.25a8.224 8.224 0 01-5.855-2.438zM15.75 9a3.75 3.75 0 11-7.5 0 3.75 3.75 0 017.5 0z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(UserCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/UserGroupIcon.js
        var require_UserGroupIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/UserGroupIcon.js"(exports, module) {
                var React2 = require_react();
                function UserGroupIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M8.25 6.75a3.75 3.75 0 117.5 0 3.75 3.75 0 01-7.5 0zM15.75 9.75a3 3 0 116 0 3 3 0 01-6 0zM2.25 9.75a3 3 0 116 0 3 3 0 01-6 0zM6.31 15.117A6.745 6.745 0 0112 12a6.745 6.745 0 016.709 7.498.75.75 0 01-.372.568A12.696 12.696 0 0112 21.75c-2.305 0-4.47-.612-6.337-1.684a.75.75 0 01-.372-.568 6.787 6.787 0 011.019-4.38z",
                        clipRule: "evenodd"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M5.082 14.254a8.287 8.287 0 00-1.308 5.135 9.687 9.687 0 01-1.764-.44l-.115-.04a.563.563 0 01-.373-.487l-.01-.121a3.75 3.75 0 013.57-4.047zM20.226 19.389a8.287 8.287 0 00-1.308-5.135 3.75 3.75 0 013.57 4.047l-.01.121a.563.563 0 01-.373.486l-.115.04c-.567.2-1.156.349-1.764.441z"
                    }));
                }
                var ForwardRef = React2.forwardRef(UserGroupIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/UserMinusIcon.js
        var require_UserMinusIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/UserMinusIcon.js"(exports, module) {
                var React2 = require_react();
                function UserMinusIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M10.375 2.25a4.125 4.125 0 100 8.25 4.125 4.125 0 000-8.25zM10.375 12a7.125 7.125 0 00-7.124 7.247.75.75 0 00.363.63 13.067 13.067 0 006.761 1.873c2.472 0 4.786-.684 6.76-1.873a.75.75 0 00.364-.63l.001-.12v-.002A7.125 7.125 0 0010.375 12zM16 9.75a.75.75 0 000 1.5h6a.75.75 0 000-1.5h-6z"
                    }));
                }
                var ForwardRef = React2.forwardRef(UserMinusIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/UserPlusIcon.js
        var require_UserPlusIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/UserPlusIcon.js"(exports, module) {
                var React2 = require_react();
                function UserPlusIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M6.25 6.375a4.125 4.125 0 118.25 0 4.125 4.125 0 01-8.25 0zM3.25 19.125a7.125 7.125 0 0114.25 0v.003l-.001.119a.75.75 0 01-.363.63 13.067 13.067 0 01-6.761 1.873c-2.472 0-4.786-.684-6.76-1.873a.75.75 0 01-.364-.63l-.001-.122zM19.75 7.5a.75.75 0 00-1.5 0v2.25H16a.75.75 0 000 1.5h2.25v2.25a.75.75 0 001.5 0v-2.25H22a.75.75 0 000-1.5h-2.25V7.5z"
                    }));
                }
                var ForwardRef = React2.forwardRef(UserPlusIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/UserIcon.js
        var require_UserIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/UserIcon.js"(exports, module) {
                var React2 = require_react();
                function UserIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M7.5 6a4.5 4.5 0 119 0 4.5 4.5 0 01-9 0zM3.751 20.105a8.25 8.25 0 0116.498 0 .75.75 0 01-.437.695A18.683 18.683 0 0112 22.5c-2.786 0-5.433-.608-7.812-1.7a.75.75 0 01-.437-.695z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(UserIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/UsersIcon.js
        var require_UsersIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/UsersIcon.js"(exports, module) {
                var React2 = require_react();
                function UsersIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M4.5 6.375a4.125 4.125 0 118.25 0 4.125 4.125 0 01-8.25 0zM14.25 8.625a3.375 3.375 0 116.75 0 3.375 3.375 0 01-6.75 0zM1.5 19.125a7.125 7.125 0 0114.25 0v.003l-.001.119a.75.75 0 01-.363.63 13.067 13.067 0 01-6.761 1.873c-2.472 0-4.786-.684-6.76-1.873a.75.75 0 01-.364-.63l-.001-.122zM17.25 19.128l-.001.144a2.25 2.25 0 01-.233.96 10.088 10.088 0 005.06-1.01.75.75 0 00.42-.643 4.875 4.875 0 00-6.957-4.611 8.586 8.586 0 011.71 5.157v.003z"
                    }));
                }
                var ForwardRef = React2.forwardRef(UsersIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/VariableIcon.js
        var require_VariableIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/VariableIcon.js"(exports, module) {
                var React2 = require_react();
                function VariableIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M19.253 2.292a.75.75 0 01.955.461A28.123 28.123 0 0121.75 12c0 3.266-.547 6.388-1.542 9.247a.75.75 0 11-1.416-.494c.94-2.7 1.458-5.654 1.458-8.753s-.519-6.054-1.458-8.754a.75.75 0 01.461-.954zm-14.227.013a.75.75 0 01.414.976A23.183 23.183 0 003.75 12c0 3.085.6 6.027 1.69 8.718a.75.75 0 01-1.39.563c-1.161-2.867-1.8-6-1.8-9.281 0-3.28.639-6.414 1.8-9.281a.75.75 0 01.976-.414zm4.275 5.052a1.5 1.5 0 012.21.803l.716 2.148L13.6 8.246a2.438 2.438 0 012.978-.892l.213.09a.75.75 0 11-.584 1.381l-.214-.09a.937.937 0 00-1.145.343l-2.021 3.033 1.084 3.255 1.445-.89a.75.75 0 11.786 1.278l-1.444.889a1.5 1.5 0 01-2.21-.803l-.716-2.148-1.374 2.062a2.437 2.437 0 01-2.978.892l-.213-.09a.75.75 0 01.584-1.381l.214.09a.938.938 0 001.145-.344l2.021-3.032-1.084-3.255-1.445.89a.75.75 0 11-.786-1.278l1.444-.89z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(VariableIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/VideoCameraSlashIcon.js
        var require_VideoCameraSlashIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/VideoCameraSlashIcon.js"(exports, module) {
                var React2 = require_react();
                function VideoCameraSlashIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M3.53 2.47a.75.75 0 00-1.06 1.06l18 18a.75.75 0 101.06-1.06l-18-18zM22.5 17.69c0 .471-.202.86-.504 1.124l-4.746-4.746V7.939l2.69-2.689c.944-.945 2.56-.276 2.56 1.06v11.38zM15.75 7.5v5.068L7.682 4.5h5.068a3 3 0 013 3zM1.5 7.5c0-.782.3-1.494.79-2.028l12.846 12.846A2.995 2.995 0 0112.75 19.5H4.5a3 3 0 01-3-3v-9z"
                    }));
                }
                var ForwardRef = React2.forwardRef(VideoCameraSlashIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/VideoCameraIcon.js
        var require_VideoCameraIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/VideoCameraIcon.js"(exports, module) {
                var React2 = require_react();
                function VideoCameraIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M4.5 4.5a3 3 0 00-3 3v9a3 3 0 003 3h8.25a3 3 0 003-3v-9a3 3 0 00-3-3H4.5zM19.94 18.75l-2.69-2.69V7.94l2.69-2.69c.944-.945 2.56-.276 2.56 1.06v11.38c0 1.336-1.616 2.005-2.56 1.06z"
                    }));
                }
                var ForwardRef = React2.forwardRef(VideoCameraIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ViewColumnsIcon.js
        var require_ViewColumnsIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ViewColumnsIcon.js"(exports, module) {
                var React2 = require_react();
                function ViewColumnsIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M15 3.75H9v16.5h6V3.75zM16.5 20.25h3.375c1.035 0 1.875-.84 1.875-1.875V5.625c0-1.036-.84-1.875-1.875-1.875H16.5v16.5zM4.125 3.75H7.5v16.5H4.125a1.875 1.875 0 01-1.875-1.875V5.625c0-1.036.84-1.875 1.875-1.875z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ViewColumnsIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/ViewfinderCircleIcon.js
        var require_ViewfinderCircleIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/ViewfinderCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function ViewfinderCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M6 3a3 3 0 00-3 3v1.5a.75.75 0 001.5 0V6A1.5 1.5 0 016 4.5h1.5a.75.75 0 000-1.5H6zM16.5 3a.75.75 0 000 1.5H18A1.5 1.5 0 0119.5 6v1.5a.75.75 0 001.5 0V6a3 3 0 00-3-3h-1.5zM12 8.25a3.75 3.75 0 100 7.5 3.75 3.75 0 000-7.5zM4.5 16.5a.75.75 0 00-1.5 0V18a3 3 0 003 3h1.5a.75.75 0 000-1.5H6A1.5 1.5 0 014.5 18v-1.5zM21 16.5a.75.75 0 00-1.5 0V18a1.5 1.5 0 01-1.5 1.5h-1.5a.75.75 0 000 1.5H18a3 3 0 003-3v-1.5z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ViewfinderCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/WalletIcon.js
        var require_WalletIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/WalletIcon.js"(exports, module) {
                var React2 = require_react();
                function WalletIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        d: "M2.273 5.625A4.483 4.483 0 015.25 4.5h13.5c1.141 0 2.183.425 2.977 1.125A3 3 0 0018.75 3H5.25a3 3 0 00-2.977 2.625zM2.273 8.625A4.483 4.483 0 015.25 7.5h13.5c1.141 0 2.183.425 2.977 1.125A3 3 0 0018.75 6H5.25a3 3 0 00-2.977 2.625zM5.25 9a3 3 0 00-3 3v6a3 3 0 003 3h13.5a3 3 0 003-3v-6a3 3 0 00-3-3H15a.75.75 0 00-.75.75 2.25 2.25 0 01-4.5 0A.75.75 0 009 9H5.25z"
                    }));
                }
                var ForwardRef = React2.forwardRef(WalletIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/WifiIcon.js
        var require_WifiIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/WifiIcon.js"(exports, module) {
                var React2 = require_react();
                function WifiIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M1.371 8.143c5.858-5.857 15.356-5.857 21.213 0a.75.75 0 010 1.061l-.53.53a.75.75 0 01-1.06 0c-4.98-4.979-13.053-4.979-18.032 0a.75.75 0 01-1.06 0l-.53-.53a.75.75 0 010-1.06zm3.182 3.182c4.1-4.1 10.749-4.1 14.85 0a.75.75 0 010 1.061l-.53.53a.75.75 0 01-1.062 0 8.25 8.25 0 00-11.667 0 .75.75 0 01-1.06 0l-.53-.53a.75.75 0 010-1.06zm3.204 3.182a6 6 0 018.486 0 .75.75 0 010 1.061l-.53.53a.75.75 0 01-1.061 0 3.75 3.75 0 00-5.304 0 .75.75 0 01-1.06 0l-.53-.53a.75.75 0 010-1.06zm3.182 3.182a1.5 1.5 0 012.122 0 .75.75 0 010 1.061l-.53.53a.75.75 0 01-1.061 0l-.53-.53a.75.75 0 010-1.06z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(WifiIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/WindowIcon.js
        var require_WindowIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/WindowIcon.js"(exports, module) {
                var React2 = require_react();
                function WindowIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M2.25 6a3 3 0 013-3h13.5a3 3 0 013 3v12a3 3 0 01-3 3H5.25a3 3 0 01-3-3V6zm18 3H3.75v9a1.5 1.5 0 001.5 1.5h13.5a1.5 1.5 0 001.5-1.5V9zm-15-3.75A.75.75 0 004.5 6v.008c0 .414.336.75.75.75h.008a.75.75 0 00.75-.75V6a.75.75 0 00-.75-.75H5.25zm1.5.75a.75.75 0 01.75-.75h.008a.75.75 0 01.75.75v.008a.75.75 0 01-.75.75H7.5a.75.75 0 01-.75-.75V6zm3-.75A.75.75 0 009 6v.008c0 .414.336.75.75.75h.008a.75.75 0 00.75-.75V6a.75.75 0 00-.75-.75H9.75z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(WindowIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/WrenchScrewdriverIcon.js
        var require_WrenchScrewdriverIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/WrenchScrewdriverIcon.js"(exports, module) {
                var React2 = require_react();
                function WrenchScrewdriverIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M12 6.75a5.25 5.25 0 016.775-5.025.75.75 0 01.313 1.248l-3.32 3.319c.063.475.276.934.641 1.299.365.365.824.578 1.3.64l3.318-3.319a.75.75 0 011.248.313 5.25 5.25 0 01-5.472 6.756c-1.018-.086-1.87.1-2.309.634L7.344 21.3A3.298 3.298 0 112.7 16.657l8.684-7.151c.533-.44.72-1.291.634-2.309A5.342 5.342 0 0112 6.75zM4.117 19.125a.75.75 0 01.75-.75h.008a.75.75 0 01.75.75v.008a.75.75 0 01-.75.75h-.008a.75.75 0 01-.75-.75v-.008z",
                        clipRule: "evenodd"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        d: "M10.076 8.64l-2.201-2.2V4.874a.75.75 0 00-.364-.643l-3.75-2.25a.75.75 0 00-.916.113l-.75.75a.75.75 0 00-.113.916l2.25 3.75a.75.75 0 00.643.364h1.564l2.062 2.062 1.575-1.297z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M12.556 17.329l4.183 4.182a3.375 3.375 0 004.773-4.773l-3.306-3.305a6.803 6.803 0 01-1.53.043c-.394-.034-.682-.006-.867.042a.589.589 0 00-.167.063l-3.086 3.748zm3.414-1.36a.75.75 0 011.06 0l1.875 1.876a.75.75 0 11-1.06 1.06L15.97 17.03a.75.75 0 010-1.06z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(WrenchScrewdriverIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/WrenchIcon.js
        var require_WrenchIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/WrenchIcon.js"(exports, module) {
                var React2 = require_react();
                function WrenchIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M12 6.75a5.25 5.25 0 016.775-5.025.75.75 0 01.313 1.248l-3.32 3.319c.063.475.276.934.641 1.299.365.365.824.578 1.3.64l3.318-3.319a.75.75 0 011.248.313 5.25 5.25 0 01-5.472 6.756c-1.018-.086-1.87.1-2.309.634L7.344 21.3A3.298 3.298 0 112.7 16.657l8.684-7.151c.533-.44.72-1.291.634-2.309A5.342 5.342 0 0112 6.75zM4.117 19.125a.75.75 0 01.75-.75h.008a.75.75 0 01.75.75v.008a.75.75 0 01-.75.75h-.008a.75.75 0 01-.75-.75v-.008z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(WrenchIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/XCircleIcon.js
        var require_XCircleIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/XCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function XCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25zm-1.72 6.97a.75.75 0 10-1.06 1.06L10.94 12l-1.72 1.72a.75.75 0 101.06 1.06L12 13.06l1.72 1.72a.75.75 0 101.06-1.06L13.06 12l1.72-1.72a.75.75 0 10-1.06-1.06L12 10.94l-1.72-1.72z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(XCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/XMarkIcon.js
        var require_XMarkIcon2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/XMarkIcon.js"(exports, module) {
                var React2 = require_react();
                function XMarkIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        viewBox: "0 0 24 24",
                        fill: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        fillRule: "evenodd",
                        d: "M5.47 5.47a.75.75 0 011.06 0L12 10.94l5.47-5.47a.75.75 0 111.06 1.06L13.06 12l5.47 5.47a.75.75 0 11-1.06 1.06L12 13.06l-5.47 5.47a.75.75 0 01-1.06-1.06L10.94 12 5.47 6.53a.75.75 0 010-1.06z",
                        clipRule: "evenodd"
                    }));
                }
                var ForwardRef = React2.forwardRef(XMarkIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/solid/index.js
        var require_solid2 = __commonJS({
            "node_modules/@heroicons/react/24/solid/index.js"(exports, module) {
                module.exports.AcademicCapIcon = require_AcademicCapIcon2();
                module.exports.AdjustmentsHorizontalIcon = require_AdjustmentsHorizontalIcon2();
                module.exports.AdjustmentsVerticalIcon = require_AdjustmentsVerticalIcon2();
                module.exports.ArchiveBoxArrowDownIcon = require_ArchiveBoxArrowDownIcon2();
                module.exports.ArchiveBoxXMarkIcon = require_ArchiveBoxXMarkIcon2();
                module.exports.ArchiveBoxIcon = require_ArchiveBoxIcon2();
                module.exports.ArrowDownCircleIcon = require_ArrowDownCircleIcon2();
                module.exports.ArrowDownLeftIcon = require_ArrowDownLeftIcon2();
                module.exports.ArrowDownOnSquareStackIcon = require_ArrowDownOnSquareStackIcon2();
                module.exports.ArrowDownOnSquareIcon = require_ArrowDownOnSquareIcon2();
                module.exports.ArrowDownRightIcon = require_ArrowDownRightIcon2();
                module.exports.ArrowDownTrayIcon = require_ArrowDownTrayIcon2();
                module.exports.ArrowDownIcon = require_ArrowDownIcon2();
                module.exports.ArrowLeftCircleIcon = require_ArrowLeftCircleIcon2();
                module.exports.ArrowLeftOnRectangleIcon = require_ArrowLeftOnRectangleIcon2();
                module.exports.ArrowLeftIcon = require_ArrowLeftIcon2();
                module.exports.ArrowLongDownIcon = require_ArrowLongDownIcon2();
                module.exports.ArrowLongLeftIcon = require_ArrowLongLeftIcon2();
                module.exports.ArrowLongRightIcon = require_ArrowLongRightIcon2();
                module.exports.ArrowLongUpIcon = require_ArrowLongUpIcon2();
                module.exports.ArrowPathRoundedSquareIcon = require_ArrowPathRoundedSquareIcon2();
                module.exports.ArrowPathIcon = require_ArrowPathIcon2();
                module.exports.ArrowRightCircleIcon = require_ArrowRightCircleIcon2();
                module.exports.ArrowRightOnRectangleIcon = require_ArrowRightOnRectangleIcon2();
                module.exports.ArrowRightIcon = require_ArrowRightIcon2();
                module.exports.ArrowSmallDownIcon = require_ArrowSmallDownIcon2();
                module.exports.ArrowSmallLeftIcon = require_ArrowSmallLeftIcon2();
                module.exports.ArrowSmallRightIcon = require_ArrowSmallRightIcon2();
                module.exports.ArrowSmallUpIcon = require_ArrowSmallUpIcon2();
                module.exports.ArrowTopRightOnSquareIcon = require_ArrowTopRightOnSquareIcon2();
                module.exports.ArrowTrendingDownIcon = require_ArrowTrendingDownIcon2();
                module.exports.ArrowTrendingUpIcon = require_ArrowTrendingUpIcon2();
                module.exports.ArrowUpCircleIcon = require_ArrowUpCircleIcon2();
                module.exports.ArrowUpLeftIcon = require_ArrowUpLeftIcon2();
                module.exports.ArrowUpOnSquareStackIcon = require_ArrowUpOnSquareStackIcon2();
                module.exports.ArrowUpOnSquareIcon = require_ArrowUpOnSquareIcon2();
                module.exports.ArrowUpRightIcon = require_ArrowUpRightIcon2();
                module.exports.ArrowUpTrayIcon = require_ArrowUpTrayIcon2();
                module.exports.ArrowUpIcon = require_ArrowUpIcon2();
                module.exports.ArrowUturnDownIcon = require_ArrowUturnDownIcon2();
                module.exports.ArrowUturnLeftIcon = require_ArrowUturnLeftIcon2();
                module.exports.ArrowUturnRightIcon = require_ArrowUturnRightIcon2();
                module.exports.ArrowUturnUpIcon = require_ArrowUturnUpIcon2();
                module.exports.ArrowsPointingInIcon = require_ArrowsPointingInIcon2();
                module.exports.ArrowsPointingOutIcon = require_ArrowsPointingOutIcon2();
                module.exports.ArrowsRightLeftIcon = require_ArrowsRightLeftIcon2();
                module.exports.ArrowsUpDownIcon = require_ArrowsUpDownIcon2();
                module.exports.AtSymbolIcon = require_AtSymbolIcon2();
                module.exports.BackspaceIcon = require_BackspaceIcon2();
                module.exports.BackwardIcon = require_BackwardIcon2();
                module.exports.BanknotesIcon = require_BanknotesIcon2();
                module.exports.Bars2Icon = require_Bars2Icon2();
                module.exports.Bars3BottomLeftIcon = require_Bars3BottomLeftIcon2();
                module.exports.Bars3BottomRightIcon = require_Bars3BottomRightIcon2();
                module.exports.Bars3CenterLeftIcon = require_Bars3CenterLeftIcon2();
                module.exports.Bars3Icon = require_Bars3Icon2();
                module.exports.Bars4Icon = require_Bars4Icon2();
                module.exports.BarsArrowDownIcon = require_BarsArrowDownIcon2();
                module.exports.BarsArrowUpIcon = require_BarsArrowUpIcon2();
                module.exports.Battery0Icon = require_Battery0Icon2();
                module.exports.Battery100Icon = require_Battery100Icon2();
                module.exports.Battery50Icon = require_Battery50Icon2();
                module.exports.BeakerIcon = require_BeakerIcon2();
                module.exports.BellAlertIcon = require_BellAlertIcon2();
                module.exports.BellSlashIcon = require_BellSlashIcon2();
                module.exports.BellSnoozeIcon = require_BellSnoozeIcon2();
                module.exports.BellIcon = require_BellIcon2();
                module.exports.BoltSlashIcon = require_BoltSlashIcon2();
                module.exports.BoltIcon = require_BoltIcon2();
                module.exports.BookOpenIcon = require_BookOpenIcon2();
                module.exports.BookmarkSlashIcon = require_BookmarkSlashIcon2();
                module.exports.BookmarkSquareIcon = require_BookmarkSquareIcon2();
                module.exports.BookmarkIcon = require_BookmarkIcon2();
                module.exports.BriefcaseIcon = require_BriefcaseIcon2();
                module.exports.BugAntIcon = require_BugAntIcon2();
                module.exports.BuildingLibraryIcon = require_BuildingLibraryIcon2();
                module.exports.BuildingOffice2Icon = require_BuildingOffice2Icon2();
                module.exports.BuildingOfficeIcon = require_BuildingOfficeIcon2();
                module.exports.BuildingStorefrontIcon = require_BuildingStorefrontIcon2();
                module.exports.CakeIcon = require_CakeIcon2();
                module.exports.CalculatorIcon = require_CalculatorIcon2();
                module.exports.CalendarDaysIcon = require_CalendarDaysIcon2();
                module.exports.CalendarIcon = require_CalendarIcon2();
                module.exports.CameraIcon = require_CameraIcon2();
                module.exports.ChartBarSquareIcon = require_ChartBarSquareIcon2();
                module.exports.ChartBarIcon = require_ChartBarIcon2();
                module.exports.ChartPieIcon = require_ChartPieIcon2();
                module.exports.ChatBubbleBottomCenterTextIcon = require_ChatBubbleBottomCenterTextIcon2();
                module.exports.ChatBubbleBottomCenterIcon = require_ChatBubbleBottomCenterIcon2();
                module.exports.ChatBubbleLeftEllipsisIcon = require_ChatBubbleLeftEllipsisIcon2();
                module.exports.ChatBubbleLeftRightIcon = require_ChatBubbleLeftRightIcon2();
                module.exports.ChatBubbleLeftIcon = require_ChatBubbleLeftIcon2();
                module.exports.ChatBubbleOvalLeftEllipsisIcon = require_ChatBubbleOvalLeftEllipsisIcon2();
                module.exports.ChatBubbleOvalLeftIcon = require_ChatBubbleOvalLeftIcon2();
                module.exports.CheckBadgeIcon = require_CheckBadgeIcon2();
                module.exports.CheckCircleIcon = require_CheckCircleIcon2();
                module.exports.CheckIcon = require_CheckIcon2();
                module.exports.ChevronDoubleDownIcon = require_ChevronDoubleDownIcon2();
                module.exports.ChevronDoubleLeftIcon = require_ChevronDoubleLeftIcon2();
                module.exports.ChevronDoubleRightIcon = require_ChevronDoubleRightIcon2();
                module.exports.ChevronDoubleUpIcon = require_ChevronDoubleUpIcon2();
                module.exports.ChevronDownIcon = require_ChevronDownIcon2();
                module.exports.ChevronLeftIcon = require_ChevronLeftIcon2();
                module.exports.ChevronRightIcon = require_ChevronRightIcon2();
                module.exports.ChevronUpDownIcon = require_ChevronUpDownIcon2();
                module.exports.ChevronUpIcon = require_ChevronUpIcon2();
                module.exports.CircleStackIcon = require_CircleStackIcon2();
                module.exports.ClipboardDocumentCheckIcon = require_ClipboardDocumentCheckIcon2();
                module.exports.ClipboardDocumentListIcon = require_ClipboardDocumentListIcon2();
                module.exports.ClipboardDocumentIcon = require_ClipboardDocumentIcon2();
                module.exports.ClipboardIcon = require_ClipboardIcon2();
                module.exports.ClockIcon = require_ClockIcon2();
                module.exports.CloudArrowDownIcon = require_CloudArrowDownIcon2();
                module.exports.CloudArrowUpIcon = require_CloudArrowUpIcon2();
                module.exports.CloudIcon = require_CloudIcon2();
                module.exports.CodeBracketSquareIcon = require_CodeBracketSquareIcon2();
                module.exports.CodeBracketIcon = require_CodeBracketIcon2();
                module.exports.Cog6ToothIcon = require_Cog6ToothIcon2();
                module.exports.Cog8ToothIcon = require_Cog8ToothIcon2();
                module.exports.CogIcon = require_CogIcon2();
                module.exports.CommandLineIcon = require_CommandLineIcon2();
                module.exports.ComputerDesktopIcon = require_ComputerDesktopIcon2();
                module.exports.CpuChipIcon = require_CpuChipIcon2();
                module.exports.CreditCardIcon = require_CreditCardIcon2();
                module.exports.CubeTransparentIcon = require_CubeTransparentIcon2();
                module.exports.CubeIcon = require_CubeIcon2();
                module.exports.CurrencyBangladeshiIcon = require_CurrencyBangladeshiIcon2();
                module.exports.CurrencyDollarIcon = require_CurrencyDollarIcon2();
                module.exports.CurrencyEuroIcon = require_CurrencyEuroIcon2();
                module.exports.CurrencyPoundIcon = require_CurrencyPoundIcon2();
                module.exports.CurrencyRupeeIcon = require_CurrencyRupeeIcon2();
                module.exports.CurrencyYenIcon = require_CurrencyYenIcon2();
                module.exports.CursorArrowRaysIcon = require_CursorArrowRaysIcon2();
                module.exports.CursorArrowRippleIcon = require_CursorArrowRippleIcon2();
                module.exports.DevicePhoneMobileIcon = require_DevicePhoneMobileIcon2();
                module.exports.DeviceTabletIcon = require_DeviceTabletIcon2();
                module.exports.DocumentArrowDownIcon = require_DocumentArrowDownIcon2();
                module.exports.DocumentArrowUpIcon = require_DocumentArrowUpIcon2();
                module.exports.DocumentChartBarIcon = require_DocumentChartBarIcon2();
                module.exports.DocumentCheckIcon = require_DocumentCheckIcon2();
                module.exports.DocumentDuplicateIcon = require_DocumentDuplicateIcon2();
                module.exports.DocumentMagnifyingGlassIcon = require_DocumentMagnifyingGlassIcon2();
                module.exports.DocumentMinusIcon = require_DocumentMinusIcon2();
                module.exports.DocumentPlusIcon = require_DocumentPlusIcon2();
                module.exports.DocumentTextIcon = require_DocumentTextIcon2();
                module.exports.DocumentIcon = require_DocumentIcon2();
                module.exports.EllipsisHorizontalCircleIcon = require_EllipsisHorizontalCircleIcon2();
                module.exports.EllipsisHorizontalIcon = require_EllipsisHorizontalIcon2();
                module.exports.EllipsisVerticalIcon = require_EllipsisVerticalIcon2();
                module.exports.EnvelopeOpenIcon = require_EnvelopeOpenIcon2();
                module.exports.EnvelopeIcon = require_EnvelopeIcon2();
                module.exports.ExclamationCircleIcon = require_ExclamationCircleIcon2();
                module.exports.ExclamationTriangleIcon = require_ExclamationTriangleIcon2();
                module.exports.EyeDropperIcon = require_EyeDropperIcon2();
                module.exports.EyeSlashIcon = require_EyeSlashIcon2();
                module.exports.EyeIcon = require_EyeIcon2();
                module.exports.FaceFrownIcon = require_FaceFrownIcon2();
                module.exports.FaceSmileIcon = require_FaceSmileIcon2();
                module.exports.FilmIcon = require_FilmIcon2();
                module.exports.FingerPrintIcon = require_FingerPrintIcon2();
                module.exports.FireIcon = require_FireIcon2();
                module.exports.FlagIcon = require_FlagIcon2();
                module.exports.FolderArrowDownIcon = require_FolderArrowDownIcon2();
                module.exports.FolderMinusIcon = require_FolderMinusIcon2();
                module.exports.FolderOpenIcon = require_FolderOpenIcon2();
                module.exports.FolderPlusIcon = require_FolderPlusIcon2();
                module.exports.FolderIcon = require_FolderIcon2();
                module.exports.ForwardIcon = require_ForwardIcon2();
                module.exports.FunnelIcon = require_FunnelIcon2();
                module.exports.GifIcon = require_GifIcon2();
                module.exports.GiftTopIcon = require_GiftTopIcon2();
                module.exports.GiftIcon = require_GiftIcon2();
                module.exports.GlobeAltIcon = require_GlobeAltIcon2();
                module.exports.GlobeAmericasIcon = require_GlobeAmericasIcon2();
                module.exports.GlobeAsiaAustraliaIcon = require_GlobeAsiaAustraliaIcon2();
                module.exports.GlobeEuropeAfricaIcon = require_GlobeEuropeAfricaIcon2();
                module.exports.HandRaisedIcon = require_HandRaisedIcon2();
                module.exports.HandThumbDownIcon = require_HandThumbDownIcon2();
                module.exports.HandThumbUpIcon = require_HandThumbUpIcon2();
                module.exports.HashtagIcon = require_HashtagIcon2();
                module.exports.HeartIcon = require_HeartIcon2();
                module.exports.HomeModernIcon = require_HomeModernIcon2();
                module.exports.HomeIcon = require_HomeIcon2();
                module.exports.IdentificationIcon = require_IdentificationIcon2();
                module.exports.InboxArrowDownIcon = require_InboxArrowDownIcon2();
                module.exports.InboxStackIcon = require_InboxStackIcon2();
                module.exports.InboxIcon = require_InboxIcon2();
                module.exports.InformationCircleIcon = require_InformationCircleIcon2();
                module.exports.KeyIcon = require_KeyIcon2();
                module.exports.LanguageIcon = require_LanguageIcon2();
                module.exports.LifebuoyIcon = require_LifebuoyIcon2();
                module.exports.LightBulbIcon = require_LightBulbIcon2();
                module.exports.LinkIcon = require_LinkIcon2();
                module.exports.ListBulletIcon = require_ListBulletIcon2();
                module.exports.LockClosedIcon = require_LockClosedIcon2();
                module.exports.LockOpenIcon = require_LockOpenIcon2();
                module.exports.MagnifyingGlassCircleIcon = require_MagnifyingGlassCircleIcon2();
                module.exports.MagnifyingGlassMinusIcon = require_MagnifyingGlassMinusIcon2();
                module.exports.MagnifyingGlassPlusIcon = require_MagnifyingGlassPlusIcon2();
                module.exports.MagnifyingGlassIcon = require_MagnifyingGlassIcon2();
                module.exports.MapPinIcon = require_MapPinIcon2();
                module.exports.MapIcon = require_MapIcon2();
                module.exports.MegaphoneIcon = require_MegaphoneIcon2();
                module.exports.MicrophoneIcon = require_MicrophoneIcon2();
                module.exports.MinusCircleIcon = require_MinusCircleIcon2();
                module.exports.MinusSmallIcon = require_MinusSmallIcon2();
                module.exports.MinusIcon = require_MinusIcon2();
                module.exports.MoonIcon = require_MoonIcon2();
                module.exports.MusicalNoteIcon = require_MusicalNoteIcon2();
                module.exports.NewspaperIcon = require_NewspaperIcon2();
                module.exports.NoSymbolIcon = require_NoSymbolIcon2();
                module.exports.PaintBrushIcon = require_PaintBrushIcon2();
                module.exports.PaperAirplaneIcon = require_PaperAirplaneIcon2();
                module.exports.PaperClipIcon = require_PaperClipIcon2();
                module.exports.PauseCircleIcon = require_PauseCircleIcon2();
                module.exports.PauseIcon = require_PauseIcon2();
                module.exports.PencilSquareIcon = require_PencilSquareIcon2();
                module.exports.PencilIcon = require_PencilIcon2();
                module.exports.PhoneArrowDownLeftIcon = require_PhoneArrowDownLeftIcon2();
                module.exports.PhoneArrowUpRightIcon = require_PhoneArrowUpRightIcon2();
                module.exports.PhoneXMarkIcon = require_PhoneXMarkIcon2();
                module.exports.PhoneIcon = require_PhoneIcon2();
                module.exports.PhotoIcon = require_PhotoIcon2();
                module.exports.PlayCircleIcon = require_PlayCircleIcon2();
                module.exports.PlayPauseIcon = require_PlayPauseIcon2();
                module.exports.PlayIcon = require_PlayIcon2();
                module.exports.PlusCircleIcon = require_PlusCircleIcon2();
                module.exports.PlusSmallIcon = require_PlusSmallIcon2();
                module.exports.PlusIcon = require_PlusIcon2();
                module.exports.PowerIcon = require_PowerIcon2();
                module.exports.PresentationChartBarIcon = require_PresentationChartBarIcon2();
                module.exports.PresentationChartLineIcon = require_PresentationChartLineIcon2();
                module.exports.PrinterIcon = require_PrinterIcon2();
                module.exports.PuzzlePieceIcon = require_PuzzlePieceIcon2();
                module.exports.QrCodeIcon = require_QrCodeIcon2();
                module.exports.QuestionMarkCircleIcon = require_QuestionMarkCircleIcon2();
                module.exports.QueueListIcon = require_QueueListIcon2();
                module.exports.RadioIcon = require_RadioIcon2();
                module.exports.ReceiptPercentIcon = require_ReceiptPercentIcon2();
                module.exports.ReceiptRefundIcon = require_ReceiptRefundIcon2();
                module.exports.RectangleGroupIcon = require_RectangleGroupIcon2();
                module.exports.RectangleStackIcon = require_RectangleStackIcon2();
                module.exports.RocketLaunchIcon = require_RocketLaunchIcon2();
                module.exports.RssIcon = require_RssIcon2();
                module.exports.ScaleIcon = require_ScaleIcon2();
                module.exports.ScissorsIcon = require_ScissorsIcon2();
                module.exports.ServerStackIcon = require_ServerStackIcon2();
                module.exports.ServerIcon = require_ServerIcon2();
                module.exports.ShareIcon = require_ShareIcon2();
                module.exports.ShieldCheckIcon = require_ShieldCheckIcon2();
                module.exports.ShieldExclamationIcon = require_ShieldExclamationIcon2();
                module.exports.ShoppingBagIcon = require_ShoppingBagIcon2();
                module.exports.ShoppingCartIcon = require_ShoppingCartIcon2();
                module.exports.SignalSlashIcon = require_SignalSlashIcon2();
                module.exports.SignalIcon = require_SignalIcon2();
                module.exports.SparklesIcon = require_SparklesIcon2();
                module.exports.SpeakerWaveIcon = require_SpeakerWaveIcon2();
                module.exports.SpeakerXMarkIcon = require_SpeakerXMarkIcon2();
                module.exports.Square2StackIcon = require_Square2StackIcon2();
                module.exports.Square3Stack3DIcon = require_Square3Stack3DIcon2();
                module.exports.Squares2X2Icon = require_Squares2X2Icon2();
                module.exports.SquaresPlusIcon = require_SquaresPlusIcon2();
                module.exports.StarIcon = require_StarIcon2();
                module.exports.StopCircleIcon = require_StopCircleIcon2();
                module.exports.StopIcon = require_StopIcon2();
                module.exports.SunIcon = require_SunIcon2();
                module.exports.SwatchIcon = require_SwatchIcon2();
                module.exports.TableCellsIcon = require_TableCellsIcon2();
                module.exports.TagIcon = require_TagIcon2();
                module.exports.TicketIcon = require_TicketIcon2();
                module.exports.TrashIcon = require_TrashIcon2();
                module.exports.TrophyIcon = require_TrophyIcon2();
                module.exports.TruckIcon = require_TruckIcon2();
                module.exports.TvIcon = require_TvIcon2();
                module.exports.UserCircleIcon = require_UserCircleIcon2();
                module.exports.UserGroupIcon = require_UserGroupIcon2();
                module.exports.UserMinusIcon = require_UserMinusIcon2();
                module.exports.UserPlusIcon = require_UserPlusIcon2();
                module.exports.UserIcon = require_UserIcon2();
                module.exports.UsersIcon = require_UsersIcon2();
                module.exports.VariableIcon = require_VariableIcon2();
                module.exports.VideoCameraSlashIcon = require_VideoCameraSlashIcon2();
                module.exports.VideoCameraIcon = require_VideoCameraIcon2();
                module.exports.ViewColumnsIcon = require_ViewColumnsIcon2();
                module.exports.ViewfinderCircleIcon = require_ViewfinderCircleIcon2();
                module.exports.WalletIcon = require_WalletIcon2();
                module.exports.WifiIcon = require_WifiIcon2();
                module.exports.WindowIcon = require_WindowIcon2();
                module.exports.WrenchScrewdriverIcon = require_WrenchScrewdriverIcon2();
                module.exports.WrenchIcon = require_WrenchIcon2();
                module.exports.XCircleIcon = require_XCircleIcon2();
                module.exports.XMarkIcon = require_XMarkIcon2();
            }
        });

        // node_modules/@heroicons/react/24/outline/AcademicCapIcon.js
        var require_AcademicCapIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/AcademicCapIcon.js"(exports, module) {
                var React2 = require_react();
                function AcademicCapIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M4.26 10.147a60.436 60.436 0 00-.491 6.347A48.627 48.627 0 0112 20.904a48.627 48.627 0 018.232-4.41 60.46 60.46 0 00-.491-6.347m-15.482 0a50.57 50.57 0 00-2.658-.813A59.905 59.905 0 0112 3.493a59.902 59.902 0 0110.399 5.84c-.896.248-1.783.52-2.658.814m-15.482 0A50.697 50.697 0 0112 13.489a50.702 50.702 0 017.74-3.342M6.75 15a.75.75 0 100-1.5.75.75 0 000 1.5zm0 0v-3.675A55.378 55.378 0 0112 8.443m-7.007 11.55A5.981 5.981 0 006.75 15.75v-1.5"
                    }));
                }
                var ForwardRef = React2.forwardRef(AcademicCapIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/AdjustmentsHorizontalIcon.js
        var require_AdjustmentsHorizontalIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/AdjustmentsHorizontalIcon.js"(exports, module) {
                var React2 = require_react();
                function AdjustmentsHorizontalIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M10.5 6h9.75M10.5 6a1.5 1.5 0 11-3 0m3 0a1.5 1.5 0 10-3 0M3.75 6H7.5m3 12h9.75m-9.75 0a1.5 1.5 0 01-3 0m3 0a1.5 1.5 0 00-3 0m-3.75 0H7.5m9-6h3.75m-3.75 0a1.5 1.5 0 01-3 0m3 0a1.5 1.5 0 00-3 0m-9.75 0h9.75"
                    }));
                }
                var ForwardRef = React2.forwardRef(AdjustmentsHorizontalIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/AdjustmentsVerticalIcon.js
        var require_AdjustmentsVerticalIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/AdjustmentsVerticalIcon.js"(exports, module) {
                var React2 = require_react();
                function AdjustmentsVerticalIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M6 13.5V3.75m0 9.75a1.5 1.5 0 010 3m0-3a1.5 1.5 0 000 3m0 3.75V16.5m12-3V3.75m0 9.75a1.5 1.5 0 010 3m0-3a1.5 1.5 0 000 3m0 3.75V16.5m-6-9V3.75m0 3.75a1.5 1.5 0 010 3m0-3a1.5 1.5 0 000 3m0 9.75V10.5"
                    }));
                }
                var ForwardRef = React2.forwardRef(AdjustmentsVerticalIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ArchiveBoxArrowDownIcon.js
        var require_ArchiveBoxArrowDownIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ArchiveBoxArrowDownIcon.js"(exports, module) {
                var React2 = require_react();
                function ArchiveBoxArrowDownIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M20.25 7.5l-.625 10.632a2.25 2.25 0 01-2.247 2.118H6.622a2.25 2.25 0 01-2.247-2.118L3.75 7.5m8.25 3v6.75m0 0l-3-3m3 3l3-3M3.375 7.5h17.25c.621 0 1.125-.504 1.125-1.125v-1.5c0-.621-.504-1.125-1.125-1.125H3.375c-.621 0-1.125.504-1.125 1.125v1.5c0 .621.504 1.125 1.125 1.125z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArchiveBoxArrowDownIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ArchiveBoxXMarkIcon.js
        var require_ArchiveBoxXMarkIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ArchiveBoxXMarkIcon.js"(exports, module) {
                var React2 = require_react();
                function ArchiveBoxXMarkIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M20.25 7.5l-.625 10.632a2.25 2.25 0 01-2.247 2.118H6.622a2.25 2.25 0 01-2.247-2.118L3.75 7.5m6 4.125l2.25 2.25m0 0l2.25 2.25M12 13.875l2.25-2.25M12 13.875l-2.25 2.25M3.375 7.5h17.25c.621 0 1.125-.504 1.125-1.125v-1.5c0-.621-.504-1.125-1.125-1.125H3.375c-.621 0-1.125.504-1.125 1.125v1.5c0 .621.504 1.125 1.125 1.125z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArchiveBoxXMarkIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ArchiveBoxIcon.js
        var require_ArchiveBoxIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ArchiveBoxIcon.js"(exports, module) {
                var React2 = require_react();
                function ArchiveBoxIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M20.25 7.5l-.625 10.632a2.25 2.25 0 01-2.247 2.118H6.622a2.25 2.25 0 01-2.247-2.118L3.75 7.5M10 11.25h4M3.375 7.5h17.25c.621 0 1.125-.504 1.125-1.125v-1.5c0-.621-.504-1.125-1.125-1.125H3.375c-.621 0-1.125.504-1.125 1.125v1.5c0 .621.504 1.125 1.125 1.125z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArchiveBoxIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ArrowDownCircleIcon.js
        var require_ArrowDownCircleIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ArrowDownCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowDownCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M9 12.75l3 3m0 0l3-3m-3 3v-7.5M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowDownCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ArrowDownLeftIcon.js
        var require_ArrowDownLeftIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ArrowDownLeftIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowDownLeftIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M19.5 4.5l-15 15m0 0h11.25m-11.25 0V8.25"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowDownLeftIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ArrowDownOnSquareStackIcon.js
        var require_ArrowDownOnSquareStackIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ArrowDownOnSquareStackIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowDownOnSquareStackIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M7.5 7.5h-.75A2.25 2.25 0 004.5 9.75v7.5a2.25 2.25 0 002.25 2.25h7.5a2.25 2.25 0 002.25-2.25v-7.5a2.25 2.25 0 00-2.25-2.25h-.75m-6 3.75l3 3m0 0l3-3m-3 3V1.5m6 9h.75a2.25 2.25 0 012.25 2.25v7.5a2.25 2.25 0 01-2.25 2.25h-7.5a2.25 2.25 0 01-2.25-2.25v-.75"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowDownOnSquareStackIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ArrowDownOnSquareIcon.js
        var require_ArrowDownOnSquareIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ArrowDownOnSquareIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowDownOnSquareIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M9 8.25H7.5a2.25 2.25 0 00-2.25 2.25v9a2.25 2.25 0 002.25 2.25h9a2.25 2.25 0 002.25-2.25v-9a2.25 2.25 0 00-2.25-2.25H15M9 12l3 3m0 0l3-3m-3 3V2.25"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowDownOnSquareIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ArrowDownRightIcon.js
        var require_ArrowDownRightIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ArrowDownRightIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowDownRightIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M4.5 4.5l15 15m0 0V8.25m0 11.25H8.25"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowDownRightIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ArrowDownTrayIcon.js
        var require_ArrowDownTrayIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ArrowDownTrayIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowDownTrayIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M3 16.5v2.25A2.25 2.25 0 005.25 21h13.5A2.25 2.25 0 0021 18.75V16.5M16.5 12L12 16.5m0 0L7.5 12m4.5 4.5V3"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowDownTrayIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ArrowDownIcon.js
        var require_ArrowDownIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ArrowDownIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowDownIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M19.5 13.5L12 21m0 0l-7.5-7.5M12 21V3"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowDownIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ArrowLeftCircleIcon.js
        var require_ArrowLeftCircleIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ArrowLeftCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowLeftCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M11.25 9l-3 3m0 0l3 3m-3-3h7.5M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowLeftCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ArrowLeftOnRectangleIcon.js
        var require_ArrowLeftOnRectangleIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ArrowLeftOnRectangleIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowLeftOnRectangleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M15.75 9V5.25A2.25 2.25 0 0013.5 3h-6a2.25 2.25 0 00-2.25 2.25v13.5A2.25 2.25 0 007.5 21h6a2.25 2.25 0 002.25-2.25V15M12 9l-3 3m0 0l3 3m-3-3h12.75"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowLeftOnRectangleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ArrowLeftIcon.js
        var require_ArrowLeftIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ArrowLeftIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowLeftIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M10.5 19.5L3 12m0 0l7.5-7.5M3 12h18"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowLeftIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ArrowLongDownIcon.js
        var require_ArrowLongDownIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ArrowLongDownIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowLongDownIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M15.75 17.25L12 21m0 0l-3.75-3.75M12 21V3"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowLongDownIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ArrowLongLeftIcon.js
        var require_ArrowLongLeftIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ArrowLongLeftIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowLongLeftIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M6.75 15.75L3 12m0 0l3.75-3.75M3 12h18"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowLongLeftIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ArrowLongRightIcon.js
        var require_ArrowLongRightIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ArrowLongRightIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowLongRightIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M17.25 8.25L21 12m0 0l-3.75 3.75M21 12H3"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowLongRightIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ArrowLongUpIcon.js
        var require_ArrowLongUpIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ArrowLongUpIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowLongUpIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M8.25 6.75L12 3m0 0l3.75 3.75M12 3v18"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowLongUpIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ArrowPathRoundedSquareIcon.js
        var require_ArrowPathRoundedSquareIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ArrowPathRoundedSquareIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowPathRoundedSquareIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M19.5 12c0-1.232-.046-2.453-.138-3.662a4.006 4.006 0 00-3.7-3.7 48.678 48.678 0 00-7.324 0 4.006 4.006 0 00-3.7 3.7c-.017.22-.032.441-.046.662M19.5 12l3-3m-3 3l-3-3m-12 3c0 1.232.046 2.453.138 3.662a4.006 4.006 0 003.7 3.7 48.656 48.656 0 007.324 0 4.006 4.006 0 003.7-3.7c.017-.22.032-.441.046-.662M4.5 12l3 3m-3-3l-3 3"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowPathRoundedSquareIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ArrowPathIcon.js
        var require_ArrowPathIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ArrowPathIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowPathIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M16.023 9.348h4.992v-.001M2.985 19.644v-4.992m0 0h4.992m-4.993 0l3.181 3.183a8.25 8.25 0 0013.803-3.7M4.031 9.865a8.25 8.25 0 0113.803-3.7l3.181 3.182m0-4.991v4.99"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowPathIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ArrowRightCircleIcon.js
        var require_ArrowRightCircleIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ArrowRightCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowRightCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M12.75 15l3-3m0 0l-3-3m3 3h-7.5M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowRightCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ArrowRightOnRectangleIcon.js
        var require_ArrowRightOnRectangleIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ArrowRightOnRectangleIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowRightOnRectangleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M15.75 9V5.25A2.25 2.25 0 0013.5 3h-6a2.25 2.25 0 00-2.25 2.25v13.5A2.25 2.25 0 007.5 21h6a2.25 2.25 0 002.25-2.25V15m3 0l3-3m0 0l-3-3m3 3H9"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowRightOnRectangleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ArrowRightIcon.js
        var require_ArrowRightIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ArrowRightIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowRightIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M13.5 4.5L21 12m0 0l-7.5 7.5M21 12H3"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowRightIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ArrowSmallDownIcon.js
        var require_ArrowSmallDownIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ArrowSmallDownIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowSmallDownIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M12 4.5v15m0 0l6.75-6.75M12 19.5l-6.75-6.75"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowSmallDownIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ArrowSmallLeftIcon.js
        var require_ArrowSmallLeftIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ArrowSmallLeftIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowSmallLeftIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M19.5 12h-15m0 0l6.75 6.75M4.5 12l6.75-6.75"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowSmallLeftIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ArrowSmallRightIcon.js
        var require_ArrowSmallRightIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ArrowSmallRightIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowSmallRightIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M4.5 12h15m0 0l-6.75-6.75M19.5 12l-6.75 6.75"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowSmallRightIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ArrowSmallUpIcon.js
        var require_ArrowSmallUpIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ArrowSmallUpIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowSmallUpIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M12 19.5v-15m0 0l-6.75 6.75M12 4.5l6.75 6.75"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowSmallUpIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ArrowTopRightOnSquareIcon.js
        var require_ArrowTopRightOnSquareIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ArrowTopRightOnSquareIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowTopRightOnSquareIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M13.5 6H5.25A2.25 2.25 0 003 8.25v10.5A2.25 2.25 0 005.25 21h10.5A2.25 2.25 0 0018 18.75V10.5m-10.5 6L21 3m0 0h-5.25M21 3v5.25"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowTopRightOnSquareIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ArrowTrendingDownIcon.js
        var require_ArrowTrendingDownIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ArrowTrendingDownIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowTrendingDownIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M2.25 6L9 12.75l4.286-4.286a11.948 11.948 0 014.306 6.43l.776 2.898m0 0l3.182-5.511m-3.182 5.51l-5.511-3.181"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowTrendingDownIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ArrowTrendingUpIcon.js
        var require_ArrowTrendingUpIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ArrowTrendingUpIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowTrendingUpIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M2.25 18L9 11.25l4.306 4.307a11.95 11.95 0 015.814-5.519l2.74-1.22m0 0l-5.94-2.28m5.94 2.28l-2.28 5.941"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowTrendingUpIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ArrowUpCircleIcon.js
        var require_ArrowUpCircleIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ArrowUpCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowUpCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M15 11.25l-3-3m0 0l-3 3m3-3v7.5M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowUpCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ArrowUpLeftIcon.js
        var require_ArrowUpLeftIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ArrowUpLeftIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowUpLeftIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M19.5 19.5l-15-15m0 0v11.25m0-11.25h11.25"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowUpLeftIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ArrowUpOnSquareStackIcon.js
        var require_ArrowUpOnSquareStackIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ArrowUpOnSquareStackIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowUpOnSquareStackIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M7.5 7.5h-.75A2.25 2.25 0 004.5 9.75v7.5a2.25 2.25 0 002.25 2.25h7.5a2.25 2.25 0 002.25-2.25v-7.5a2.25 2.25 0 00-2.25-2.25h-.75m0-3l-3-3m0 0l-3 3m3-3v11.25m6-2.25h.75a2.25 2.25 0 012.25 2.25v7.5a2.25 2.25 0 01-2.25 2.25h-7.5a2.25 2.25 0 01-2.25-2.25v-.75"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowUpOnSquareStackIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ArrowUpOnSquareIcon.js
        var require_ArrowUpOnSquareIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ArrowUpOnSquareIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowUpOnSquareIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M9 8.25H7.5a2.25 2.25 0 00-2.25 2.25v9a2.25 2.25 0 002.25 2.25h9a2.25 2.25 0 002.25-2.25v-9a2.25 2.25 0 00-2.25-2.25H15m0-3l-3-3m0 0l-3 3m3-3V15"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowUpOnSquareIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ArrowUpRightIcon.js
        var require_ArrowUpRightIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ArrowUpRightIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowUpRightIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M4.5 19.5l15-15m0 0H8.25m11.25 0v11.25"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowUpRightIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ArrowUpTrayIcon.js
        var require_ArrowUpTrayIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ArrowUpTrayIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowUpTrayIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M3 16.5v2.25A2.25 2.25 0 005.25 21h13.5A2.25 2.25 0 0021 18.75V16.5m-13.5-9L12 3m0 0l4.5 4.5M12 3v13.5"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowUpTrayIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ArrowUpIcon.js
        var require_ArrowUpIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ArrowUpIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowUpIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M4.5 10.5L12 3m0 0l7.5 7.5M12 3v18"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowUpIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ArrowUturnDownIcon.js
        var require_ArrowUturnDownIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ArrowUturnDownIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowUturnDownIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M15 15l-6 6m0 0l-6-6m6 6V9a6 6 0 0112 0v3"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowUturnDownIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ArrowUturnLeftIcon.js
        var require_ArrowUturnLeftIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ArrowUturnLeftIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowUturnLeftIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M9 15L3 9m0 0l6-6M3 9h12a6 6 0 010 12h-3"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowUturnLeftIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ArrowUturnRightIcon.js
        var require_ArrowUturnRightIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ArrowUturnRightIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowUturnRightIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M15 15l6-6m0 0l-6-6m6 6H9a6 6 0 000 12h3"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowUturnRightIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ArrowUturnUpIcon.js
        var require_ArrowUturnUpIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ArrowUturnUpIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowUturnUpIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M9 9l6-6m0 0l6 6m-6-6v12a6 6 0 01-12 0v-3"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowUturnUpIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ArrowsPointingInIcon.js
        var require_ArrowsPointingInIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ArrowsPointingInIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowsPointingInIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M9 9V4.5M9 9H4.5M9 9L3.75 3.75M9 15v4.5M9 15H4.5M9 15l-5.25 5.25M15 9h4.5M15 9V4.5M15 9l5.25-5.25M15 15h4.5M15 15v4.5m0-4.5l5.25 5.25"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowsPointingInIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ArrowsPointingOutIcon.js
        var require_ArrowsPointingOutIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ArrowsPointingOutIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowsPointingOutIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M3.75 3.75v4.5m0-4.5h4.5m-4.5 0L9 9M3.75 20.25v-4.5m0 4.5h4.5m-4.5 0L9 15M20.25 3.75h-4.5m4.5 0v4.5m0-4.5L15 9m5.25 11.25h-4.5m4.5 0v-4.5m0 4.5L15 15"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowsPointingOutIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ArrowsRightLeftIcon.js
        var require_ArrowsRightLeftIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ArrowsRightLeftIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowsRightLeftIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M7.5 21L3 16.5m0 0L7.5 12M3 16.5h13.5m0-13.5L21 7.5m0 0L16.5 12M21 7.5H7.5"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowsRightLeftIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ArrowsUpDownIcon.js
        var require_ArrowsUpDownIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ArrowsUpDownIcon.js"(exports, module) {
                var React2 = require_react();
                function ArrowsUpDownIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M3 7.5L7.5 3m0 0L12 7.5M7.5 3v13.5m13.5 0L16.5 21m0 0L12 16.5m4.5 4.5V7.5"
                    }));
                }
                var ForwardRef = React2.forwardRef(ArrowsUpDownIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/AtSymbolIcon.js
        var require_AtSymbolIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/AtSymbolIcon.js"(exports, module) {
                var React2 = require_react();
                function AtSymbolIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        d: "M16.5 12a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zm0 0c0 1.657 1.007 3 2.25 3S21 13.657 21 12a9 9 0 10-2.636 6.364M16.5 12V8.25"
                    }));
                }
                var ForwardRef = React2.forwardRef(AtSymbolIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/BackspaceIcon.js
        var require_BackspaceIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/BackspaceIcon.js"(exports, module) {
                var React2 = require_react();
                function BackspaceIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M12 9.75L14.25 12m0 0l2.25 2.25M14.25 12l2.25-2.25M14.25 12L12 14.25m-2.58 4.92l-6.375-6.375a1.125 1.125 0 010-1.59L9.42 4.83c.211-.211.498-.33.796-.33H19.5a2.25 2.25 0 012.25 2.25v10.5a2.25 2.25 0 01-2.25 2.25h-9.284c-.298 0-.585-.119-.796-.33z"
                    }));
                }
                var ForwardRef = React2.forwardRef(BackspaceIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/BackwardIcon.js
        var require_BackwardIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/BackwardIcon.js"(exports, module) {
                var React2 = require_react();
                function BackwardIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M21 16.811c0 .864-.933 1.405-1.683.977l-7.108-4.062a1.125 1.125 0 010-1.953l7.108-4.062A1.125 1.125 0 0121 8.688v8.123zM11.25 16.811c0 .864-.933 1.405-1.683.977l-7.108-4.062a1.125 1.125 0 010-1.953L9.567 7.71a1.125 1.125 0 011.683.977v8.123z"
                    }));
                }
                var ForwardRef = React2.forwardRef(BackwardIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/BanknotesIcon.js
        var require_BanknotesIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/BanknotesIcon.js"(exports, module) {
                var React2 = require_react();
                function BanknotesIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M2.25 18.75a60.07 60.07 0 0115.797 2.101c.727.198 1.453-.342 1.453-1.096V18.75M3.75 4.5v.75A.75.75 0 013 6h-.75m0 0v-.375c0-.621.504-1.125 1.125-1.125H20.25M2.25 6v9m18-10.5v.75c0 .414.336.75.75.75h.75m-1.5-1.5h.375c.621 0 1.125.504 1.125 1.125v9.75c0 .621-.504 1.125-1.125 1.125h-.375m1.5-1.5H21a.75.75 0 00-.75.75v.75m0 0H3.75m0 0h-.375a1.125 1.125 0 01-1.125-1.125V15m1.5 1.5v-.75A.75.75 0 003 15h-.75M15 10.5a3 3 0 11-6 0 3 3 0 016 0zm3 0h.008v.008H18V10.5zm-12 0h.008v.008H6V10.5z"
                    }));
                }
                var ForwardRef = React2.forwardRef(BanknotesIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/Bars2Icon.js
        var require_Bars2Icon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/Bars2Icon.js"(exports, module) {
                var React2 = require_react();
                function Bars2Icon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M3.75 9h16.5m-16.5 6.75h16.5"
                    }));
                }
                var ForwardRef = React2.forwardRef(Bars2Icon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/Bars3BottomLeftIcon.js
        var require_Bars3BottomLeftIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/Bars3BottomLeftIcon.js"(exports, module) {
                var React2 = require_react();
                function Bars3BottomLeftIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25H12"
                    }));
                }
                var ForwardRef = React2.forwardRef(Bars3BottomLeftIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/Bars3BottomRightIcon.js
        var require_Bars3BottomRightIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/Bars3BottomRightIcon.js"(exports, module) {
                var React2 = require_react();
                function Bars3BottomRightIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M3.75 6.75h16.5M3.75 12h16.5M12 17.25h8.25"
                    }));
                }
                var ForwardRef = React2.forwardRef(Bars3BottomRightIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/Bars3CenterLeftIcon.js
        var require_Bars3CenterLeftIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/Bars3CenterLeftIcon.js"(exports, module) {
                var React2 = require_react();
                function Bars3CenterLeftIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M3.75 6.75h16.5M3.75 12H12m-8.25 5.25h16.5"
                    }));
                }
                var ForwardRef = React2.forwardRef(Bars3CenterLeftIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/Bars3Icon.js
        var require_Bars3Icon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/Bars3Icon.js"(exports, module) {
                var React2 = require_react();
                function Bars3Icon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M3.75 6.75h16.5M3.75 12h16.5m-16.5 5.25h16.5"
                    }));
                }
                var ForwardRef = React2.forwardRef(Bars3Icon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/Bars4Icon.js
        var require_Bars4Icon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/Bars4Icon.js"(exports, module) {
                var React2 = require_react();
                function Bars4Icon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M3.75 5.25h16.5m-16.5 4.5h16.5m-16.5 4.5h16.5m-16.5 4.5h16.5"
                    }));
                }
                var ForwardRef = React2.forwardRef(Bars4Icon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/BarsArrowDownIcon.js
        var require_BarsArrowDownIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/BarsArrowDownIcon.js"(exports, module) {
                var React2 = require_react();
                function BarsArrowDownIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M3 4.5h14.25M3 9h9.75M3 13.5h9.75m4.5-4.5v12m0 0l-3.75-3.75M17.25 21L21 17.25"
                    }));
                }
                var ForwardRef = React2.forwardRef(BarsArrowDownIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/BarsArrowUpIcon.js
        var require_BarsArrowUpIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/BarsArrowUpIcon.js"(exports, module) {
                var React2 = require_react();
                function BarsArrowUpIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M3 4.5h14.25M3 9h9.75M3 13.5h5.25m5.25-.75L17.25 9m0 0L21 12.75M17.25 9v12"
                    }));
                }
                var ForwardRef = React2.forwardRef(BarsArrowUpIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/Battery0Icon.js
        var require_Battery0Icon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/Battery0Icon.js"(exports, module) {
                var React2 = require_react();
                function Battery0Icon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M21 10.5h.375c.621 0 1.125.504 1.125 1.125v2.25c0 .621-.504 1.125-1.125 1.125H21M3.75 18h15A2.25 2.25 0 0021 15.75v-6a2.25 2.25 0 00-2.25-2.25h-15A2.25 2.25 0 001.5 9.75v6A2.25 2.25 0 003.75 18z"
                    }));
                }
                var ForwardRef = React2.forwardRef(Battery0Icon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/Battery100Icon.js
        var require_Battery100Icon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/Battery100Icon.js"(exports, module) {
                var React2 = require_react();
                function Battery100Icon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M21 10.5h.375c.621 0 1.125.504 1.125 1.125v2.25c0 .621-.504 1.125-1.125 1.125H21M4.5 10.5H18V15H4.5v-4.5zM3.75 18h15A2.25 2.25 0 0021 15.75v-6a2.25 2.25 0 00-2.25-2.25h-15A2.25 2.25 0 001.5 9.75v6A2.25 2.25 0 003.75 18z"
                    }));
                }
                var ForwardRef = React2.forwardRef(Battery100Icon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/Battery50Icon.js
        var require_Battery50Icon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/Battery50Icon.js"(exports, module) {
                var React2 = require_react();
                function Battery50Icon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M21 10.5h.375c.621 0 1.125.504 1.125 1.125v2.25c0 .621-.504 1.125-1.125 1.125H21M4.5 10.5h6.75V15H4.5v-4.5zM3.75 18h15A2.25 2.25 0 0021 15.75v-6a2.25 2.25 0 00-2.25-2.25h-15A2.25 2.25 0 001.5 9.75v6A2.25 2.25 0 003.75 18z"
                    }));
                }
                var ForwardRef = React2.forwardRef(Battery50Icon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/BeakerIcon.js
        var require_BeakerIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/BeakerIcon.js"(exports, module) {
                var React2 = require_react();
                function BeakerIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M9.75 3.104v5.714a2.25 2.25 0 01-.659 1.591L5 14.5M9.75 3.104c-.251.023-.501.05-.75.082m.75-.082a24.301 24.301 0 014.5 0m0 0v5.714c0 .597.237 1.17.659 1.591L19.8 15.3M14.25 3.104c.251.023.501.05.75.082M19.8 15.3l-1.57.393A9.065 9.065 0 0112 15a9.065 9.065 0 00-6.23-.693L5 14.5m14.8.8l1.402 1.402c1.232 1.232.65 3.318-1.067 3.611A48.309 48.309 0 0112 21c-2.773 0-5.491-.235-8.135-.687-1.718-.293-2.3-2.379-1.067-3.61L5 14.5"
                    }));
                }
                var ForwardRef = React2.forwardRef(BeakerIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/BellAlertIcon.js
        var require_BellAlertIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/BellAlertIcon.js"(exports, module) {
                var React2 = require_react();
                function BellAlertIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M14.857 17.082a23.848 23.848 0 005.454-1.31A8.967 8.967 0 0118 9.75v-.7V9A6 6 0 006 9v.75a8.967 8.967 0 01-2.312 6.022c1.733.64 3.56 1.085 5.455 1.31m5.714 0a24.255 24.255 0 01-5.714 0m5.714 0a3 3 0 11-5.714 0M3.124 7.5A8.969 8.969 0 015.292 3m13.416 0a8.969 8.969 0 012.168 4.5"
                    }));
                }
                var ForwardRef = React2.forwardRef(BellAlertIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/BellSlashIcon.js
        var require_BellSlashIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/BellSlashIcon.js"(exports, module) {
                var React2 = require_react();
                function BellSlashIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M9.143 17.082a24.248 24.248 0 003.844.148m-3.844-.148a23.856 23.856 0 01-5.455-1.31 8.964 8.964 0 002.3-5.542m3.155 6.852a3 3 0 005.667 1.97m1.965-2.277L21 21m-4.225-4.225a23.81 23.81 0 003.536-1.003A8.967 8.967 0 0118 9.75V9A6 6 0 006.53 6.53m10.245 10.245L6.53 6.53M3 3l3.53 3.53"
                    }));
                }
                var ForwardRef = React2.forwardRef(BellSlashIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/BellSnoozeIcon.js
        var require_BellSnoozeIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/BellSnoozeIcon.js"(exports, module) {
                var React2 = require_react();
                function BellSnoozeIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M14.857 17.082a23.848 23.848 0 005.454-1.31A8.967 8.967 0 0118 9.75v-.7V9A6 6 0 006 9v.75a8.967 8.967 0 01-2.312 6.022c1.733.64 3.56 1.085 5.455 1.31m5.714 0a24.255 24.255 0 01-5.714 0m5.714 0a3 3 0 11-5.714 0M10.5 8.25h3l-3 4.5h3"
                    }));
                }
                var ForwardRef = React2.forwardRef(BellSnoozeIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/BellIcon.js
        var require_BellIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/BellIcon.js"(exports, module) {
                var React2 = require_react();
                function BellIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M14.857 17.082a23.848 23.848 0 005.454-1.31A8.967 8.967 0 0118 9.75v-.7V9A6 6 0 006 9v.75a8.967 8.967 0 01-2.312 6.022c1.733.64 3.56 1.085 5.455 1.31m5.714 0a24.255 24.255 0 01-5.714 0m5.714 0a3 3 0 11-5.714 0"
                    }));
                }
                var ForwardRef = React2.forwardRef(BellIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/BoltSlashIcon.js
        var require_BoltSlashIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/BoltSlashIcon.js"(exports, module) {
                var React2 = require_react();
                function BoltSlashIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M11.412 15.655L9.75 21.75l3.745-4.012M9.257 13.5H3.75l2.659-2.849m2.048-2.194L14.25 2.25 12 10.5h8.25l-4.707 5.043M8.457 8.457L3 3m5.457 5.457l7.086 7.086m0 0L21 21"
                    }));
                }
                var ForwardRef = React2.forwardRef(BoltSlashIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/BoltIcon.js
        var require_BoltIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/BoltIcon.js"(exports, module) {
                var React2 = require_react();
                function BoltIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M3.75 13.5l10.5-11.25L12 10.5h8.25L9.75 21.75 12 13.5H3.75z"
                    }));
                }
                var ForwardRef = React2.forwardRef(BoltIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/BookOpenIcon.js
        var require_BookOpenIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/BookOpenIcon.js"(exports, module) {
                var React2 = require_react();
                function BookOpenIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M12 6.042A8.967 8.967 0 006 3.75c-1.052 0-2.062.18-3 .512v14.25A8.987 8.987 0 016 18c2.305 0 4.408.867 6 2.292m0-14.25a8.966 8.966 0 016-2.292c1.052 0 2.062.18 3 .512v14.25A8.987 8.987 0 0018 18a8.967 8.967 0 00-6 2.292m0-14.25v14.25"
                    }));
                }
                var ForwardRef = React2.forwardRef(BookOpenIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/BookmarkSlashIcon.js
        var require_BookmarkSlashIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/BookmarkSlashIcon.js"(exports, module) {
                var React2 = require_react();
                function BookmarkSlashIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M3 3l1.664 1.664M21 21l-1.5-1.5m-5.485-1.242L12 17.25 4.5 21V8.742m.164-4.078a2.15 2.15 0 011.743-1.342 48.507 48.507 0 0111.186 0c1.1.128 1.907 1.077 1.907 2.185V19.5M4.664 4.664L19.5 19.5"
                    }));
                }
                var ForwardRef = React2.forwardRef(BookmarkSlashIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/BookmarkSquareIcon.js
        var require_BookmarkSquareIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/BookmarkSquareIcon.js"(exports, module) {
                var React2 = require_react();
                function BookmarkSquareIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M16.5 3.75V16.5L12 14.25 7.5 16.5V3.75m9 0H18A2.25 2.25 0 0120.25 6v12A2.25 2.25 0 0118 20.25H6A2.25 2.25 0 013.75 18V6A2.25 2.25 0 016 3.75h1.5m9 0h-9"
                    }));
                }
                var ForwardRef = React2.forwardRef(BookmarkSquareIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/BookmarkIcon.js
        var require_BookmarkIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/BookmarkIcon.js"(exports, module) {
                var React2 = require_react();
                function BookmarkIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M17.593 3.322c1.1.128 1.907 1.077 1.907 2.185V21L12 17.25 4.5 21V5.507c0-1.108.806-2.057 1.907-2.185a48.507 48.507 0 0111.186 0z"
                    }));
                }
                var ForwardRef = React2.forwardRef(BookmarkIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/BriefcaseIcon.js
        var require_BriefcaseIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/BriefcaseIcon.js"(exports, module) {
                var React2 = require_react();
                function BriefcaseIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M20.25 14.15v4.25c0 1.094-.787 2.036-1.872 2.18-2.087.277-4.216.42-6.378.42s-4.291-.143-6.378-.42c-1.085-.144-1.872-1.086-1.872-2.18v-4.25m16.5 0a2.18 2.18 0 00.75-1.661V8.706c0-1.081-.768-2.015-1.837-2.175a48.114 48.114 0 00-3.413-.387m4.5 8.006c-.194.165-.42.295-.673.38A23.978 23.978 0 0112 15.75c-2.648 0-5.195-.429-7.577-1.22a2.016 2.016 0 01-.673-.38m0 0A2.18 2.18 0 013 12.489V8.706c0-1.081.768-2.015 1.837-2.175a48.111 48.111 0 013.413-.387m7.5 0V5.25A2.25 2.25 0 0013.5 3h-3a2.25 2.25 0 00-2.25 2.25v.894m7.5 0a48.667 48.667 0 00-7.5 0M12 12.75h.008v.008H12v-.008z"
                    }));
                }
                var ForwardRef = React2.forwardRef(BriefcaseIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/BugAntIcon.js
        var require_BugAntIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/BugAntIcon.js"(exports, module) {
                var React2 = require_react();
                function BugAntIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M12 12.75c1.148 0 2.278.08 3.383.237 1.037.146 1.866.966 1.866 2.013 0 3.728-2.35 6.75-5.25 6.75S6.75 18.728 6.75 15c0-1.046.83-1.867 1.866-2.013A24.204 24.204 0 0112 12.75zm0 0c2.883 0 5.647.508 8.207 1.44a23.91 23.91 0 01-1.152 6.06M12 12.75c-2.883 0-5.647.508-8.208 1.44.125 2.104.52 4.136 1.153 6.06M12 12.75a2.25 2.25 0 002.248-2.354M12 12.75a2.25 2.25 0 01-2.248-2.354M12 8.25c.995 0 1.971-.08 2.922-.236.403-.066.74-.358.795-.762a3.778 3.778 0 00-.399-2.25M12 8.25c-.995 0-1.97-.08-2.922-.236-.402-.066-.74-.358-.795-.762a3.734 3.734 0 01.4-2.253M12 8.25a2.25 2.25 0 00-2.248 2.146M12 8.25a2.25 2.25 0 012.248 2.146M8.683 5a6.032 6.032 0 01-1.155-1.002c.07-.63.27-1.222.574-1.747m.581 2.749A3.75 3.75 0 0115.318 5m0 0c.427-.283.815-.62 1.155-.999a4.471 4.471 0 00-.575-1.752M4.921 6a24.048 24.048 0 00-.392 3.314c1.668.546 3.416.914 5.223 1.082M19.08 6c.205 1.08.337 2.187.392 3.314a23.882 23.882 0 01-5.223 1.082"
                    }));
                }
                var ForwardRef = React2.forwardRef(BugAntIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/BuildingLibraryIcon.js
        var require_BuildingLibraryIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/BuildingLibraryIcon.js"(exports, module) {
                var React2 = require_react();
                function BuildingLibraryIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M12 21v-8.25M15.75 21v-8.25M8.25 21v-8.25M3 9l9-6 9 6m-1.5 12V10.332A48.36 48.36 0 0012 9.75c-2.551 0-5.056.2-7.5.582V21M3 21h18M12 6.75h.008v.008H12V6.75z"
                    }));
                }
                var ForwardRef = React2.forwardRef(BuildingLibraryIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/BuildingOffice2Icon.js
        var require_BuildingOffice2Icon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/BuildingOffice2Icon.js"(exports, module) {
                var React2 = require_react();
                function BuildingOffice2Icon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M2.25 21h19.5m-18-18v18m10.5-18v18m6-13.5V21M6.75 6.75h.75m-.75 3h.75m-.75 3h.75m3-6h.75m-.75 3h.75m-.75 3h.75M6.75 21v-3.375c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125V21M3 3h12m-.75 4.5H21m-3.75 3.75h.008v.008h-.008v-.008zm0 3h.008v.008h-.008v-.008zm0 3h.008v.008h-.008v-.008z"
                    }));
                }
                var ForwardRef = React2.forwardRef(BuildingOffice2Icon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/BuildingOfficeIcon.js
        var require_BuildingOfficeIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/BuildingOfficeIcon.js"(exports, module) {
                var React2 = require_react();
                function BuildingOfficeIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M3.75 21h16.5M4.5 3h15M5.25 3v18m13.5-18v18M9 6.75h1.5m-1.5 3h1.5m-1.5 3h1.5m3-6H15m-1.5 3H15m-1.5 3H15M9 21v-3.375c0-.621.504-1.125 1.125-1.125h3.75c.621 0 1.125.504 1.125 1.125V21"
                    }));
                }
                var ForwardRef = React2.forwardRef(BuildingOfficeIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/BuildingStorefrontIcon.js
        var require_BuildingStorefrontIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/BuildingStorefrontIcon.js"(exports, module) {
                var React2 = require_react();
                function BuildingStorefrontIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M13.5 21v-7.5a.75.75 0 01.75-.75h3a.75.75 0 01.75.75V21m-4.5 0H2.36m11.14 0H18m0 0h3.64m-1.39 0V9.349m-16.5 11.65V9.35m0 0a3.001 3.001 0 003.75-.615A2.993 2.993 0 009.75 9.75c.896 0 1.7-.393 2.25-1.016a2.993 2.993 0 002.25 1.016c.896 0 1.7-.393 2.25-1.016a3.001 3.001 0 003.75.614m-16.5 0a3.004 3.004 0 01-.621-4.72L4.318 3.44A1.5 1.5 0 015.378 3h13.243a1.5 1.5 0 011.06.44l1.19 1.189a3 3 0 01-.621 4.72m-13.5 8.65h3.75a.75.75 0 00.75-.75V13.5a.75.75 0 00-.75-.75H6.75a.75.75 0 00-.75.75v3.75c0 .415.336.75.75.75z"
                    }));
                }
                var ForwardRef = React2.forwardRef(BuildingStorefrontIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/CakeIcon.js
        var require_CakeIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/CakeIcon.js"(exports, module) {
                var React2 = require_react();
                function CakeIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M12 8.25v-1.5m0 1.5c-1.355 0-2.697.056-4.024.166C6.845 8.51 6 9.473 6 10.608v2.513m6-4.87c1.355 0 2.697.055 4.024.165C17.155 8.51 18 9.473 18 10.608v2.513m-3-4.87v-1.5m-6 1.5v-1.5m12 9.75l-1.5.75a3.354 3.354 0 01-3 0 3.354 3.354 0 00-3 0 3.354 3.354 0 01-3 0 3.354 3.354 0 00-3 0 3.354 3.354 0 01-3 0L3 16.5m15-3.38a48.474 48.474 0 00-6-.37c-2.032 0-4.034.125-6 .37m12 0c.39.049.777.102 1.163.16 1.07.16 1.837 1.094 1.837 2.175v5.17c0 .62-.504 1.124-1.125 1.124H4.125A1.125 1.125 0 013 20.625v-5.17c0-1.08.768-2.014 1.837-2.174A47.78 47.78 0 016 13.12M12.265 3.11a.375.375 0 11-.53 0L12 2.845l.265.265zm-3 0a.375.375 0 11-.53 0L9 2.845l.265.265zm6 0a.375.375 0 11-.53 0L15 2.845l.265.265z"
                    }));
                }
                var ForwardRef = React2.forwardRef(CakeIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/CalculatorIcon.js
        var require_CalculatorIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/CalculatorIcon.js"(exports, module) {
                var React2 = require_react();
                function CalculatorIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M15.75 15.75V18m-7.5-6.75h.008v.008H8.25v-.008zm0 2.25h.008v.008H8.25V13.5zm0 2.25h.008v.008H8.25v-.008zm0 2.25h.008v.008H8.25V18zm2.498-6.75h.007v.008h-.007v-.008zm0 2.25h.007v.008h-.007V13.5zm0 2.25h.007v.008h-.007v-.008zm0 2.25h.007v.008h-.007V18zm2.504-6.75h.008v.008h-.008v-.008zm0 2.25h.008v.008h-.008V13.5zm0 2.25h.008v.008h-.008v-.008zm0 2.25h.008v.008h-.008V18zm2.498-6.75h.008v.008h-.008v-.008zm0 2.25h.008v.008h-.008V13.5zM8.25 6h7.5v2.25h-7.5V6zM12 2.25c-1.892 0-3.758.11-5.593.322C5.307 2.7 4.5 3.65 4.5 4.757V19.5a2.25 2.25 0 002.25 2.25h10.5a2.25 2.25 0 002.25-2.25V4.757c0-1.108-.806-2.057-1.907-2.185A48.507 48.507 0 0012 2.25z"
                    }));
                }
                var ForwardRef = React2.forwardRef(CalculatorIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/CalendarDaysIcon.js
        var require_CalendarDaysIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/CalendarDaysIcon.js"(exports, module) {
                var React2 = require_react();
                function CalendarDaysIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 012.25-2.25h13.5A2.25 2.25 0 0121 7.5v11.25m-18 0A2.25 2.25 0 005.25 21h13.5A2.25 2.25 0 0021 18.75m-18 0v-7.5A2.25 2.25 0 015.25 9h13.5A2.25 2.25 0 0121 11.25v7.5m-9-6h.008v.008H12v-.008zM12 15h.008v.008H12V15zm0 2.25h.008v.008H12v-.008zM9.75 15h.008v.008H9.75V15zm0 2.25h.008v.008H9.75v-.008zM7.5 15h.008v.008H7.5V15zm0 2.25h.008v.008H7.5v-.008zm6.75-4.5h.008v.008h-.008v-.008zm0 2.25h.008v.008h-.008V15zm0 2.25h.008v.008h-.008v-.008zm2.25-4.5h.008v.008H16.5v-.008zm0 2.25h.008v.008H16.5V15z"
                    }));
                }
                var ForwardRef = React2.forwardRef(CalendarDaysIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/CalendarIcon.js
        var require_CalendarIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/CalendarIcon.js"(exports, module) {
                var React2 = require_react();
                function CalendarIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 012.25-2.25h13.5A2.25 2.25 0 0121 7.5v11.25m-18 0A2.25 2.25 0 005.25 21h13.5A2.25 2.25 0 0021 18.75m-18 0v-7.5A2.25 2.25 0 015.25 9h13.5A2.25 2.25 0 0121 11.25v7.5"
                    }));
                }
                var ForwardRef = React2.forwardRef(CalendarIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/CameraIcon.js
        var require_CameraIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/CameraIcon.js"(exports, module) {
                var React2 = require_react();
                function CameraIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M6.827 6.175A2.31 2.31 0 015.186 7.23c-.38.054-.757.112-1.134.175C2.999 7.58 2.25 8.507 2.25 9.574V18a2.25 2.25 0 002.25 2.25h15A2.25 2.25 0 0021.75 18V9.574c0-1.067-.75-1.994-1.802-2.169a47.865 47.865 0 00-1.134-.175 2.31 2.31 0 01-1.64-1.055l-.822-1.316a2.192 2.192 0 00-1.736-1.039 48.774 48.774 0 00-5.232 0 2.192 2.192 0 00-1.736 1.039l-.821 1.316z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M16.5 12.75a4.5 4.5 0 11-9 0 4.5 4.5 0 019 0zM18.75 10.5h.008v.008h-.008V10.5z"
                    }));
                }
                var ForwardRef = React2.forwardRef(CameraIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ChartBarSquareIcon.js
        var require_ChartBarSquareIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ChartBarSquareIcon.js"(exports, module) {
                var React2 = require_react();
                function ChartBarSquareIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M7.5 14.25v2.25m3-4.5v4.5m3-6.75v6.75m3-9v9M6 20.25h12A2.25 2.25 0 0020.25 18V6A2.25 2.25 0 0018 3.75H6A2.25 2.25 0 003.75 6v12A2.25 2.25 0 006 20.25z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChartBarSquareIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ChartBarIcon.js
        var require_ChartBarIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ChartBarIcon.js"(exports, module) {
                var React2 = require_react();
                function ChartBarIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M3 13.125C3 12.504 3.504 12 4.125 12h2.25c.621 0 1.125.504 1.125 1.125v6.75C7.5 20.496 6.996 21 6.375 21h-2.25A1.125 1.125 0 013 19.875v-6.75zM9.75 8.625c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125v11.25c0 .621-.504 1.125-1.125 1.125h-2.25a1.125 1.125 0 01-1.125-1.125V8.625zM16.5 4.125c0-.621.504-1.125 1.125-1.125h2.25C20.496 3 21 3.504 21 4.125v15.75c0 .621-.504 1.125-1.125 1.125h-2.25a1.125 1.125 0 01-1.125-1.125V4.125z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChartBarIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ChartPieIcon.js
        var require_ChartPieIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ChartPieIcon.js"(exports, module) {
                var React2 = require_react();
                function ChartPieIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M10.5 6a7.5 7.5 0 107.5 7.5h-7.5V6z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M13.5 10.5H21A7.5 7.5 0 0013.5 3v7.5z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChartPieIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ChatBubbleBottomCenterTextIcon.js
        var require_ChatBubbleBottomCenterTextIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ChatBubbleBottomCenterTextIcon.js"(exports, module) {
                var React2 = require_react();
                function ChatBubbleBottomCenterTextIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M7.5 8.25h9m-9 3H12m-9.75 1.51c0 1.6 1.123 2.994 2.707 3.227 1.129.166 2.27.293 3.423.379.35.026.67.21.865.501L12 21l2.755-4.133a1.14 1.14 0 01.865-.501 48.172 48.172 0 003.423-.379c1.584-.233 2.707-1.626 2.707-3.228V6.741c0-1.602-1.123-2.995-2.707-3.228A48.394 48.394 0 0012 3c-2.392 0-4.744.175-7.043.513C3.373 3.746 2.25 5.14 2.25 6.741v6.018z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChatBubbleBottomCenterTextIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ChatBubbleBottomCenterIcon.js
        var require_ChatBubbleBottomCenterIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ChatBubbleBottomCenterIcon.js"(exports, module) {
                var React2 = require_react();
                function ChatBubbleBottomCenterIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M2.25 12.76c0 1.6 1.123 2.994 2.707 3.227 1.068.157 2.148.279 3.238.364.466.037.893.281 1.153.671L12 21l2.652-3.978c.26-.39.687-.634 1.153-.67 1.09-.086 2.17-.208 3.238-.365 1.584-.233 2.707-1.626 2.707-3.228V6.741c0-1.602-1.123-2.995-2.707-3.228A48.394 48.394 0 0012 3c-2.392 0-4.744.175-7.043.513C3.373 3.746 2.25 5.14 2.25 6.741v6.018z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChatBubbleBottomCenterIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ChatBubbleLeftEllipsisIcon.js
        var require_ChatBubbleLeftEllipsisIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ChatBubbleLeftEllipsisIcon.js"(exports, module) {
                var React2 = require_react();
                function ChatBubbleLeftEllipsisIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M8.625 9.75a.375.375 0 11-.75 0 .375.375 0 01.75 0zm0 0H8.25m4.125 0a.375.375 0 11-.75 0 .375.375 0 01.75 0zm0 0H12m4.125 0a.375.375 0 11-.75 0 .375.375 0 01.75 0zm0 0h-.375m-13.5 3.01c0 1.6 1.123 2.994 2.707 3.227 1.087.16 2.185.283 3.293.369V21l4.184-4.183a1.14 1.14 0 01.778-.332 48.294 48.294 0 005.83-.498c1.585-.233 2.708-1.626 2.708-3.228V6.741c0-1.602-1.123-2.995-2.707-3.228A48.394 48.394 0 0012 3c-2.392 0-4.744.175-7.043.513C3.373 3.746 2.25 5.14 2.25 6.741v6.018z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChatBubbleLeftEllipsisIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ChatBubbleLeftRightIcon.js
        var require_ChatBubbleLeftRightIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ChatBubbleLeftRightIcon.js"(exports, module) {
                var React2 = require_react();
                function ChatBubbleLeftRightIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M20.25 8.511c.884.284 1.5 1.128 1.5 2.097v4.286c0 1.136-.847 2.1-1.98 2.193-.34.027-.68.052-1.02.072v3.091l-3-3c-1.354 0-2.694-.055-4.02-.163a2.115 2.115 0 01-.825-.242m9.345-8.334a2.126 2.126 0 00-.476-.095 48.64 48.64 0 00-8.048 0c-1.131.094-1.976 1.057-1.976 2.192v4.286c0 .837.46 1.58 1.155 1.951m9.345-8.334V6.637c0-1.621-1.152-3.026-2.76-3.235A48.455 48.455 0 0011.25 3c-2.115 0-4.198.137-6.24.402-1.608.209-2.76 1.614-2.76 3.235v6.226c0 1.621 1.152 3.026 2.76 3.235.577.075 1.157.14 1.74.194V21l4.155-4.155"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChatBubbleLeftRightIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ChatBubbleLeftIcon.js
        var require_ChatBubbleLeftIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ChatBubbleLeftIcon.js"(exports, module) {
                var React2 = require_react();
                function ChatBubbleLeftIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M2.25 12.76c0 1.6 1.123 2.994 2.707 3.227 1.087.16 2.185.283 3.293.369V21l4.076-4.076a1.526 1.526 0 011.037-.443 48.282 48.282 0 005.68-.494c1.584-.233 2.707-1.626 2.707-3.228V6.741c0-1.602-1.123-2.995-2.707-3.228A48.394 48.394 0 0012 3c-2.392 0-4.744.175-7.043.513C3.373 3.746 2.25 5.14 2.25 6.741v6.018z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChatBubbleLeftIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ChatBubbleOvalLeftEllipsisIcon.js
        var require_ChatBubbleOvalLeftEllipsisIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ChatBubbleOvalLeftEllipsisIcon.js"(exports, module) {
                var React2 = require_react();
                function ChatBubbleOvalLeftEllipsisIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M8.625 12a.375.375 0 11-.75 0 .375.375 0 01.75 0zm0 0H8.25m4.125 0a.375.375 0 11-.75 0 .375.375 0 01.75 0zm0 0H12m4.125 0a.375.375 0 11-.75 0 .375.375 0 01.75 0zm0 0h-.375M21 12c0 4.556-4.03 8.25-9 8.25a9.764 9.764 0 01-2.555-.337A5.972 5.972 0 015.41 20.97a5.969 5.969 0 01-.474-.065 4.48 4.48 0 00.978-2.025c.09-.457-.133-.901-.467-1.226C3.93 16.178 3 14.189 3 12c0-4.556 4.03-8.25 9-8.25s9 3.694 9 8.25z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChatBubbleOvalLeftEllipsisIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ChatBubbleOvalLeftIcon.js
        var require_ChatBubbleOvalLeftIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ChatBubbleOvalLeftIcon.js"(exports, module) {
                var React2 = require_react();
                function ChatBubbleOvalLeftIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M12 20.25c4.97 0 9-3.694 9-8.25s-4.03-8.25-9-8.25S3 7.444 3 12c0 2.104.859 4.023 2.273 5.48.432.447.74 1.04.586 1.641a4.483 4.483 0 01-.923 1.785A5.969 5.969 0 006 21c1.282 0 2.47-.402 3.445-1.087.81.22 1.668.337 2.555.337z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChatBubbleOvalLeftIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/CheckBadgeIcon.js
        var require_CheckBadgeIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/CheckBadgeIcon.js"(exports, module) {
                var React2 = require_react();
                function CheckBadgeIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M9 12.75L11.25 15 15 9.75M21 12c0 1.268-.63 2.39-1.593 3.068a3.745 3.745 0 01-1.043 3.296 3.745 3.745 0 01-3.296 1.043A3.745 3.745 0 0112 21c-1.268 0-2.39-.63-3.068-1.593a3.746 3.746 0 01-3.296-1.043 3.745 3.745 0 01-1.043-3.296A3.745 3.745 0 013 12c0-1.268.63-2.39 1.593-3.068a3.745 3.745 0 011.043-3.296 3.746 3.746 0 013.296-1.043A3.746 3.746 0 0112 3c1.268 0 2.39.63 3.068 1.593a3.746 3.746 0 013.296 1.043 3.746 3.746 0 011.043 3.296A3.745 3.745 0 0121 12z"
                    }));
                }
                var ForwardRef = React2.forwardRef(CheckBadgeIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/CheckCircleIcon.js
        var require_CheckCircleIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/CheckCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function CheckCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
                    }));
                }
                var ForwardRef = React2.forwardRef(CheckCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/CheckIcon.js
        var require_CheckIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/CheckIcon.js"(exports, module) {
                var React2 = require_react();
                function CheckIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M4.5 12.75l6 6 9-13.5"
                    }));
                }
                var ForwardRef = React2.forwardRef(CheckIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ChevronDoubleDownIcon.js
        var require_ChevronDoubleDownIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ChevronDoubleDownIcon.js"(exports, module) {
                var React2 = require_react();
                function ChevronDoubleDownIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M19.5 5.25l-7.5 7.5-7.5-7.5m15 6l-7.5 7.5-7.5-7.5"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChevronDoubleDownIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ChevronDoubleLeftIcon.js
        var require_ChevronDoubleLeftIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ChevronDoubleLeftIcon.js"(exports, module) {
                var React2 = require_react();
                function ChevronDoubleLeftIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M18.75 19.5l-7.5-7.5 7.5-7.5m-6 15L5.25 12l7.5-7.5"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChevronDoubleLeftIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ChevronDoubleRightIcon.js
        var require_ChevronDoubleRightIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ChevronDoubleRightIcon.js"(exports, module) {
                var React2 = require_react();
                function ChevronDoubleRightIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M11.25 4.5l7.5 7.5-7.5 7.5m-6-15l7.5 7.5-7.5 7.5"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChevronDoubleRightIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ChevronDoubleUpIcon.js
        var require_ChevronDoubleUpIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ChevronDoubleUpIcon.js"(exports, module) {
                var React2 = require_react();
                function ChevronDoubleUpIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M4.5 12.75l7.5-7.5 7.5 7.5m-15 6l7.5-7.5 7.5 7.5"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChevronDoubleUpIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ChevronDownIcon.js
        var require_ChevronDownIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ChevronDownIcon.js"(exports, module) {
                var React2 = require_react();
                function ChevronDownIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M19.5 8.25l-7.5 7.5-7.5-7.5"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChevronDownIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ChevronLeftIcon.js
        var require_ChevronLeftIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ChevronLeftIcon.js"(exports, module) {
                var React2 = require_react();
                function ChevronLeftIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M15.75 19.5L8.25 12l7.5-7.5"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChevronLeftIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ChevronRightIcon.js
        var require_ChevronRightIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ChevronRightIcon.js"(exports, module) {
                var React2 = require_react();
                function ChevronRightIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M8.25 4.5l7.5 7.5-7.5 7.5"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChevronRightIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ChevronUpDownIcon.js
        var require_ChevronUpDownIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ChevronUpDownIcon.js"(exports, module) {
                var React2 = require_react();
                function ChevronUpDownIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M8.25 15L12 18.75 15.75 15m-7.5-6L12 5.25 15.75 9"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChevronUpDownIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ChevronUpIcon.js
        var require_ChevronUpIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ChevronUpIcon.js"(exports, module) {
                var React2 = require_react();
                function ChevronUpIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M4.5 15.75l7.5-7.5 7.5 7.5"
                    }));
                }
                var ForwardRef = React2.forwardRef(ChevronUpIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/CircleStackIcon.js
        var require_CircleStackIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/CircleStackIcon.js"(exports, module) {
                var React2 = require_react();
                function CircleStackIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M20.25 6.375c0 2.278-3.694 4.125-8.25 4.125S3.75 8.653 3.75 6.375m16.5 0c0-2.278-3.694-4.125-8.25-4.125S3.75 4.097 3.75 6.375m16.5 0v11.25c0 2.278-3.694 4.125-8.25 4.125s-8.25-1.847-8.25-4.125V6.375m16.5 0v3.75m-16.5-3.75v3.75m16.5 0v3.75C20.25 16.153 16.556 18 12 18s-8.25-1.847-8.25-4.125v-3.75m16.5 0c0 2.278-3.694 4.125-8.25 4.125s-8.25-1.847-8.25-4.125"
                    }));
                }
                var ForwardRef = React2.forwardRef(CircleStackIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ClipboardDocumentCheckIcon.js
        var require_ClipboardDocumentCheckIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ClipboardDocumentCheckIcon.js"(exports, module) {
                var React2 = require_react();
                function ClipboardDocumentCheckIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M11.35 3.836c-.065.21-.1.433-.1.664 0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75 2.25 2.25 0 00-.1-.664m-5.8 0A2.251 2.251 0 0113.5 2.25H15c1.012 0 1.867.668 2.15 1.586m-5.8 0c-.376.023-.75.05-1.124.08C9.095 4.01 8.25 4.973 8.25 6.108V8.25m8.9-4.414c.376.023.75.05 1.124.08 1.131.094 1.976 1.057 1.976 2.192V16.5A2.25 2.25 0 0118 18.75h-2.25m-7.5-10.5H4.875c-.621 0-1.125.504-1.125 1.125v11.25c0 .621.504 1.125 1.125 1.125h9.75c.621 0 1.125-.504 1.125-1.125V18.75m-7.5-10.5h6.375c.621 0 1.125.504 1.125 1.125v9.375m-8.25-3l1.5 1.5 3-3.75"
                    }));
                }
                var ForwardRef = React2.forwardRef(ClipboardDocumentCheckIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ClipboardDocumentListIcon.js
        var require_ClipboardDocumentListIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ClipboardDocumentListIcon.js"(exports, module) {
                var React2 = require_react();
                function ClipboardDocumentListIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M9 12h3.75M9 15h3.75M9 18h3.75m3 .75H18a2.25 2.25 0 002.25-2.25V6.108c0-1.135-.845-2.098-1.976-2.192a48.424 48.424 0 00-1.123-.08m-5.801 0c-.065.21-.1.433-.1.664 0 .414.336.75.75.75h4.5a.75.75 0 00.75-.75 2.25 2.25 0 00-.1-.664m-5.8 0A2.251 2.251 0 0113.5 2.25H15c1.012 0 1.867.668 2.15 1.586m-5.8 0c-.376.023-.75.05-1.124.08C9.095 4.01 8.25 4.973 8.25 6.108V8.25m0 0H4.875c-.621 0-1.125.504-1.125 1.125v11.25c0 .621.504 1.125 1.125 1.125h9.75c.621 0 1.125-.504 1.125-1.125V9.375c0-.621-.504-1.125-1.125-1.125H8.25zM6.75 12h.008v.008H6.75V12zm0 3h.008v.008H6.75V15zm0 3h.008v.008H6.75V18z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ClipboardDocumentListIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ClipboardDocumentIcon.js
        var require_ClipboardDocumentIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ClipboardDocumentIcon.js"(exports, module) {
                var React2 = require_react();
                function ClipboardDocumentIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M8.25 7.5V6.108c0-1.135.845-2.098 1.976-2.192.373-.03.748-.057 1.123-.08M15.75 18H18a2.25 2.25 0 002.25-2.25V6.108c0-1.135-.845-2.098-1.976-2.192a48.424 48.424 0 00-1.123-.08M15.75 18.75v-1.875a3.375 3.375 0 00-3.375-3.375h-1.5a1.125 1.125 0 01-1.125-1.125v-1.5A3.375 3.375 0 006.375 7.5H5.25m11.9-3.664A2.251 2.251 0 0015 2.25h-1.5a2.251 2.251 0 00-2.15 1.586m5.8 0c.065.21.1.433.1.664v.75h-6V4.5c0-.231.035-.454.1-.664M6.75 7.5H4.875c-.621 0-1.125.504-1.125 1.125v12c0 .621.504 1.125 1.125 1.125h9.75c.621 0 1.125-.504 1.125-1.125V16.5a9 9 0 00-9-9z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ClipboardDocumentIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ClipboardIcon.js
        var require_ClipboardIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ClipboardIcon.js"(exports, module) {
                var React2 = require_react();
                function ClipboardIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M15.666 3.888A2.25 2.25 0 0013.5 2.25h-3c-1.03 0-1.9.693-2.166 1.638m7.332 0c.055.194.084.4.084.612v0a.75.75 0 01-.75.75H9a.75.75 0 01-.75-.75v0c0-.212.03-.418.084-.612m7.332 0c.646.049 1.288.11 1.927.184 1.1.128 1.907 1.077 1.907 2.185V19.5a2.25 2.25 0 01-2.25 2.25H6.75A2.25 2.25 0 014.5 19.5V6.257c0-1.108.806-2.057 1.907-2.185a48.208 48.208 0 011.927-.184"
                    }));
                }
                var ForwardRef = React2.forwardRef(ClipboardIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ClockIcon.js
        var require_ClockIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ClockIcon.js"(exports, module) {
                var React2 = require_react();
                function ClockIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M12 6v6h4.5m4.5 0a9 9 0 11-18 0 9 9 0 0118 0z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ClockIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/CloudArrowDownIcon.js
        var require_CloudArrowDownIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/CloudArrowDownIcon.js"(exports, module) {
                var React2 = require_react();
                function CloudArrowDownIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M12 9.75v6.75m0 0l-3-3m3 3l3-3m-8.25 6a4.5 4.5 0 01-1.41-8.775 5.25 5.25 0 0110.233-2.33 3 3 0 013.758 3.848A3.752 3.752 0 0118 19.5H6.75z"
                    }));
                }
                var ForwardRef = React2.forwardRef(CloudArrowDownIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/CloudArrowUpIcon.js
        var require_CloudArrowUpIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/CloudArrowUpIcon.js"(exports, module) {
                var React2 = require_react();
                function CloudArrowUpIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M12 16.5V9.75m0 0l3 3m-3-3l-3 3M6.75 19.5a4.5 4.5 0 01-1.41-8.775 5.25 5.25 0 0110.233-2.33 3 3 0 013.758 3.848A3.752 3.752 0 0118 19.5H6.75z"
                    }));
                }
                var ForwardRef = React2.forwardRef(CloudArrowUpIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/CloudIcon.js
        var require_CloudIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/CloudIcon.js"(exports, module) {
                var React2 = require_react();
                function CloudIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M2.25 15a4.5 4.5 0 004.5 4.5H18a3.75 3.75 0 001.332-7.257 3 3 0 00-3.758-3.848 5.25 5.25 0 00-10.233 2.33A4.502 4.502 0 002.25 15z"
                    }));
                }
                var ForwardRef = React2.forwardRef(CloudIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/CodeBracketSquareIcon.js
        var require_CodeBracketSquareIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/CodeBracketSquareIcon.js"(exports, module) {
                var React2 = require_react();
                function CodeBracketSquareIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M14.25 9.75L16.5 12l-2.25 2.25m-4.5 0L7.5 12l2.25-2.25M6 20.25h12A2.25 2.25 0 0020.25 18V6A2.25 2.25 0 0018 3.75H6A2.25 2.25 0 003.75 6v12A2.25 2.25 0 006 20.25z"
                    }));
                }
                var ForwardRef = React2.forwardRef(CodeBracketSquareIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/CodeBracketIcon.js
        var require_CodeBracketIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/CodeBracketIcon.js"(exports, module) {
                var React2 = require_react();
                function CodeBracketIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M17.25 6.75L22.5 12l-5.25 5.25m-10.5 0L1.5 12l5.25-5.25m7.5-3l-4.5 16.5"
                    }));
                }
                var ForwardRef = React2.forwardRef(CodeBracketIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/Cog6ToothIcon.js
        var require_Cog6ToothIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/Cog6ToothIcon.js"(exports, module) {
                var React2 = require_react();
                function Cog6ToothIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M9.594 3.94c.09-.542.56-.94 1.11-.94h2.593c.55 0 1.02.398 1.11.94l.213 1.281c.063.374.313.686.645.87.074.04.147.083.22.127.324.196.72.257 1.075.124l1.217-.456a1.125 1.125 0 011.37.49l1.296 2.247a1.125 1.125 0 01-.26 1.431l-1.003.827c-.293.24-.438.613-.431.992a6.759 6.759 0 010 .255c-.007.378.138.75.43.99l1.005.828c.424.35.534.954.26 1.43l-1.298 2.247a1.125 1.125 0 01-1.369.491l-1.217-.456c-.355-.133-.75-.072-1.076.124a6.57 6.57 0 01-.22.128c-.331.183-.581.495-.644.869l-.213 1.28c-.09.543-.56.941-1.11.941h-2.594c-.55 0-1.02-.398-1.11-.94l-.213-1.281c-.062-.374-.312-.686-.644-.87a6.52 6.52 0 01-.22-.127c-.325-.196-.72-.257-1.076-.124l-1.217.456a1.125 1.125 0 01-1.369-.49l-1.297-2.247a1.125 1.125 0 01.26-1.431l1.004-.827c.292-.24.437-.613.43-.992a6.932 6.932 0 010-.255c.007-.378-.138-.75-.43-.99l-1.004-.828a1.125 1.125 0 01-.26-1.43l1.297-2.247a1.125 1.125 0 011.37-.491l1.216.456c.356.133.751.072 1.076-.124.072-.044.146-.087.22-.128.332-.183.582-.495.644-.869l.214-1.281z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M15 12a3 3 0 11-6 0 3 3 0 016 0z"
                    }));
                }
                var ForwardRef = React2.forwardRef(Cog6ToothIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/Cog8ToothIcon.js
        var require_Cog8ToothIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/Cog8ToothIcon.js"(exports, module) {
                var React2 = require_react();
                function Cog8ToothIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M10.343 3.94c.09-.542.56-.94 1.11-.94h1.093c.55 0 1.02.398 1.11.94l.149.894c.07.424.384.764.78.93.398.164.855.142 1.205-.108l.737-.527a1.125 1.125 0 011.45.12l.773.774c.39.389.44 1.002.12 1.45l-.527.737c-.25.35-.272.806-.107 1.204.165.397.505.71.93.78l.893.15c.543.09.94.56.94 1.109v1.094c0 .55-.397 1.02-.94 1.11l-.893.149c-.425.07-.765.383-.93.78-.165.398-.143.854.107 1.204l.527.738c.32.447.269 1.06-.12 1.45l-.774.773a1.125 1.125 0 01-1.449.12l-.738-.527c-.35-.25-.806-.272-1.203-.107-.397.165-.71.505-.781.929l-.149.894c-.09.542-.56.94-1.11.94h-1.094c-.55 0-1.019-.398-1.11-.94l-.148-.894c-.071-.424-.384-.764-.781-.93-.398-.164-.854-.142-1.204.108l-.738.527c-.447.32-1.06.269-1.45-.12l-.773-.774a1.125 1.125 0 01-.12-1.45l.527-.737c.25-.35.273-.806.108-1.204-.165-.397-.505-.71-.93-.78l-.894-.15c-.542-.09-.94-.56-.94-1.109v-1.094c0-.55.398-1.02.94-1.11l.894-.149c.424-.07.765-.383.93-.78.165-.398.143-.854-.107-1.204l-.527-.738a1.125 1.125 0 01.12-1.45l.773-.773a1.125 1.125 0 011.45-.12l.737.527c.35.25.807.272 1.204.107.397-.165.71-.505.78-.929l.15-.894z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M15 12a3 3 0 11-6 0 3 3 0 016 0z"
                    }));
                }
                var ForwardRef = React2.forwardRef(Cog8ToothIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/CogIcon.js
        var require_CogIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/CogIcon.js"(exports, module) {
                var React2 = require_react();
                function CogIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M4.5 12a7.5 7.5 0 0015 0m-15 0a7.5 7.5 0 1115 0m-15 0H3m16.5 0H21m-1.5 0H12m-8.457 3.077l1.41-.513m14.095-5.13l1.41-.513M5.106 17.785l1.15-.964m11.49-9.642l1.149-.964M7.501 19.795l.75-1.3m7.5-12.99l.75-1.3m-6.063 16.658l.26-1.477m2.605-14.772l.26-1.477m0 17.726l-.26-1.477M10.698 4.614l-.26-1.477M16.5 19.794l-.75-1.299M7.5 4.205L12 12m6.894 5.785l-1.149-.964M6.256 7.178l-1.15-.964m15.352 8.864l-1.41-.513M4.954 9.435l-1.41-.514M12.002 12l-3.75 6.495"
                    }));
                }
                var ForwardRef = React2.forwardRef(CogIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/CommandLineIcon.js
        var require_CommandLineIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/CommandLineIcon.js"(exports, module) {
                var React2 = require_react();
                function CommandLineIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M6.75 7.5l3 2.25-3 2.25m4.5 0h3m-9 8.25h13.5A2.25 2.25 0 0021 18V6a2.25 2.25 0 00-2.25-2.25H5.25A2.25 2.25 0 003 6v12a2.25 2.25 0 002.25 2.25z"
                    }));
                }
                var ForwardRef = React2.forwardRef(CommandLineIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ComputerDesktopIcon.js
        var require_ComputerDesktopIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ComputerDesktopIcon.js"(exports, module) {
                var React2 = require_react();
                function ComputerDesktopIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M9 17.25v1.007a3 3 0 01-.879 2.122L7.5 21h9l-.621-.621A3 3 0 0115 18.257V17.25m6-12V15a2.25 2.25 0 01-2.25 2.25H5.25A2.25 2.25 0 013 15V5.25m18 0A2.25 2.25 0 0018.75 3H5.25A2.25 2.25 0 003 5.25m18 0V12a2.25 2.25 0 01-2.25 2.25H5.25A2.25 2.25 0 013 12V5.25"
                    }));
                }
                var ForwardRef = React2.forwardRef(ComputerDesktopIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/CpuChipIcon.js
        var require_CpuChipIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/CpuChipIcon.js"(exports, module) {
                var React2 = require_react();
                function CpuChipIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M8.25 3v1.5M4.5 8.25H3m18 0h-1.5M4.5 12H3m18 0h-1.5m-15 3.75H3m18 0h-1.5M8.25 19.5V21M12 3v1.5m0 15V21m3.75-18v1.5m0 15V21m-9-1.5h10.5a2.25 2.25 0 002.25-2.25V6.75a2.25 2.25 0 00-2.25-2.25H6.75A2.25 2.25 0 004.5 6.75v10.5a2.25 2.25 0 002.25 2.25zm.75-12h9v9h-9v-9z"
                    }));
                }
                var ForwardRef = React2.forwardRef(CpuChipIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/CreditCardIcon.js
        var require_CreditCardIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/CreditCardIcon.js"(exports, module) {
                var React2 = require_react();
                function CreditCardIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M2.25 8.25h19.5M2.25 9h19.5m-16.5 5.25h6m-6 2.25h3m-3.75 3h15a2.25 2.25 0 002.25-2.25V6.75A2.25 2.25 0 0019.5 4.5h-15a2.25 2.25 0 00-2.25 2.25v10.5A2.25 2.25 0 004.5 19.5z"
                    }));
                }
                var ForwardRef = React2.forwardRef(CreditCardIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/CubeTransparentIcon.js
        var require_CubeTransparentIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/CubeTransparentIcon.js"(exports, module) {
                var React2 = require_react();
                function CubeTransparentIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M21 7.5l-2.25-1.313M21 7.5v2.25m0-2.25l-2.25 1.313M3 7.5l2.25-1.313M3 7.5l2.25 1.313M3 7.5v2.25m9 3l2.25-1.313M12 12.75l-2.25-1.313M12 12.75V15m0 6.75l2.25-1.313M12 21.75V19.5m0 2.25l-2.25-1.313m0-16.875L12 2.25l2.25 1.313M21 14.25v2.25l-2.25 1.313m-13.5 0L3 16.5v-2.25"
                    }));
                }
                var ForwardRef = React2.forwardRef(CubeTransparentIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/CubeIcon.js
        var require_CubeIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/CubeIcon.js"(exports, module) {
                var React2 = require_react();
                function CubeIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M21 7.5l-9-5.25L3 7.5m18 0l-9 5.25m9-5.25v9l-9 5.25M3 7.5l9 5.25M3 7.5v9l9 5.25m0-9v9"
                    }));
                }
                var ForwardRef = React2.forwardRef(CubeIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/CurrencyBangladeshiIcon.js
        var require_CurrencyBangladeshiIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/CurrencyBangladeshiIcon.js"(exports, module) {
                var React2 = require_react();
                function CurrencyBangladeshiIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M8.25 7.5l.415-.207a.75.75 0 011.085.67V10.5m0 0h6m-6 0h-1.5m1.5 0v5.438c0 .354.161.697.473.865a3.751 3.751 0 005.452-2.553c.083-.409-.263-.75-.68-.75h-.745M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
                    }));
                }
                var ForwardRef = React2.forwardRef(CurrencyBangladeshiIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/CurrencyDollarIcon.js
        var require_CurrencyDollarIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/CurrencyDollarIcon.js"(exports, module) {
                var React2 = require_react();
                function CurrencyDollarIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M12 6v12m-3-2.818l.879.659c1.171.879 3.07.879 4.242 0 1.172-.879 1.172-2.303 0-3.182C13.536 12.219 12.768 12 12 12c-.725 0-1.45-.22-2.003-.659-1.106-.879-1.106-2.303 0-3.182s2.9-.879 4.006 0l.415.33M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
                    }));
                }
                var ForwardRef = React2.forwardRef(CurrencyDollarIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/CurrencyEuroIcon.js
        var require_CurrencyEuroIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/CurrencyEuroIcon.js"(exports, module) {
                var React2 = require_react();
                function CurrencyEuroIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M14.25 7.756a4.5 4.5 0 100 8.488M7.5 10.5h5.25m-5.25 3h5.25M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
                    }));
                }
                var ForwardRef = React2.forwardRef(CurrencyEuroIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/CurrencyPoundIcon.js
        var require_CurrencyPoundIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/CurrencyPoundIcon.js"(exports, module) {
                var React2 = require_react();
                function CurrencyPoundIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M14.121 7.629A3 3 0 009.017 9.43c-.023.212-.002.425.028.636l.506 3.541a4.5 4.5 0 01-.43 2.65L9 16.5l1.539-.513a2.25 2.25 0 011.422 0l.655.218a2.25 2.25 0 001.718-.122L15 15.75M8.25 12H12m9 0a9 9 0 11-18 0 9 9 0 0118 0z"
                    }));
                }
                var ForwardRef = React2.forwardRef(CurrencyPoundIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/CurrencyRupeeIcon.js
        var require_CurrencyRupeeIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/CurrencyRupeeIcon.js"(exports, module) {
                var React2 = require_react();
                function CurrencyRupeeIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M15 8.25H9m6 3H9m3 6l-3-3h1.5a3 3 0 100-6M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
                    }));
                }
                var ForwardRef = React2.forwardRef(CurrencyRupeeIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/CurrencyYenIcon.js
        var require_CurrencyYenIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/CurrencyYenIcon.js"(exports, module) {
                var React2 = require_react();
                function CurrencyYenIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M9 7.5l3 4.5m0 0l3-4.5M12 12v5.25M15 12H9m6 3H9m12-3a9 9 0 11-18 0 9 9 0 0118 0z"
                    }));
                }
                var ForwardRef = React2.forwardRef(CurrencyYenIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/CursorArrowRaysIcon.js
        var require_CursorArrowRaysIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/CursorArrowRaysIcon.js"(exports, module) {
                var React2 = require_react();
                function CursorArrowRaysIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M15.042 21.672L13.684 16.6m0 0l-2.51 2.225.569-9.47 5.227 7.917-3.286-.672zM12 2.25V4.5m5.834.166l-1.591 1.591M20.25 10.5H18M7.757 14.743l-1.59 1.59M6 10.5H3.75m4.007-4.243l-1.59-1.59"
                    }));
                }
                var ForwardRef = React2.forwardRef(CursorArrowRaysIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/CursorArrowRippleIcon.js
        var require_CursorArrowRippleIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/CursorArrowRippleIcon.js"(exports, module) {
                var React2 = require_react();
                function CursorArrowRippleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M15.042 21.672L13.684 16.6m0 0l-2.51 2.225.569-9.47 5.227 7.917-3.286-.672zm-7.518-.267A8.25 8.25 0 1120.25 10.5M8.288 14.212A5.25 5.25 0 1117.25 10.5"
                    }));
                }
                var ForwardRef = React2.forwardRef(CursorArrowRippleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/DevicePhoneMobileIcon.js
        var require_DevicePhoneMobileIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/DevicePhoneMobileIcon.js"(exports, module) {
                var React2 = require_react();
                function DevicePhoneMobileIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M10.5 1.5H8.25A2.25 2.25 0 006 3.75v16.5a2.25 2.25 0 002.25 2.25h7.5A2.25 2.25 0 0018 20.25V3.75a2.25 2.25 0 00-2.25-2.25H13.5m-3 0V3h3V1.5m-3 0h3m-3 18.75h3"
                    }));
                }
                var ForwardRef = React2.forwardRef(DevicePhoneMobileIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/DeviceTabletIcon.js
        var require_DeviceTabletIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/DeviceTabletIcon.js"(exports, module) {
                var React2 = require_react();
                function DeviceTabletIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M10.5 19.5h3m-6.75 2.25h10.5a2.25 2.25 0 002.25-2.25v-15a2.25 2.25 0 00-2.25-2.25H6.75A2.25 2.25 0 004.5 4.5v15a2.25 2.25 0 002.25 2.25z"
                    }));
                }
                var ForwardRef = React2.forwardRef(DeviceTabletIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/DocumentArrowDownIcon.js
        var require_DocumentArrowDownIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/DocumentArrowDownIcon.js"(exports, module) {
                var React2 = require_react();
                function DocumentArrowDownIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M19.5 14.25v-2.625a3.375 3.375 0 00-3.375-3.375h-1.5A1.125 1.125 0 0113.5 7.125v-1.5a3.375 3.375 0 00-3.375-3.375H8.25m.75 12l3 3m0 0l3-3m-3 3v-6m-1.5-9H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 00-9-9z"
                    }));
                }
                var ForwardRef = React2.forwardRef(DocumentArrowDownIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/DocumentArrowUpIcon.js
        var require_DocumentArrowUpIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/DocumentArrowUpIcon.js"(exports, module) {
                var React2 = require_react();
                function DocumentArrowUpIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M19.5 14.25v-2.625a3.375 3.375 0 00-3.375-3.375h-1.5A1.125 1.125 0 0113.5 7.125v-1.5a3.375 3.375 0 00-3.375-3.375H8.25m6.75 12l-3-3m0 0l-3 3m3-3v6m-1.5-15H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 00-9-9z"
                    }));
                }
                var ForwardRef = React2.forwardRef(DocumentArrowUpIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/DocumentChartBarIcon.js
        var require_DocumentChartBarIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/DocumentChartBarIcon.js"(exports, module) {
                var React2 = require_react();
                function DocumentChartBarIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M19.5 14.25v-2.625a3.375 3.375 0 00-3.375-3.375h-1.5A1.125 1.125 0 0113.5 7.125v-1.5a3.375 3.375 0 00-3.375-3.375H8.25M9 16.5v.75m3-3v3M15 12v5.25m-4.5-15H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 00-9-9z"
                    }));
                }
                var ForwardRef = React2.forwardRef(DocumentChartBarIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/DocumentCheckIcon.js
        var require_DocumentCheckIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/DocumentCheckIcon.js"(exports, module) {
                var React2 = require_react();
                function DocumentCheckIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M10.125 2.25h-4.5c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125v-9M10.125 2.25h.375a9 9 0 019 9v.375M10.125 2.25A3.375 3.375 0 0113.5 5.625v1.5c0 .621.504 1.125 1.125 1.125h1.5a3.375 3.375 0 013.375 3.375M9 15l2.25 2.25L15 12"
                    }));
                }
                var ForwardRef = React2.forwardRef(DocumentCheckIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/DocumentDuplicateIcon.js
        var require_DocumentDuplicateIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/DocumentDuplicateIcon.js"(exports, module) {
                var React2 = require_react();
                function DocumentDuplicateIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M15.75 17.25v3.375c0 .621-.504 1.125-1.125 1.125h-9.75a1.125 1.125 0 01-1.125-1.125V7.875c0-.621.504-1.125 1.125-1.125H6.75a9.06 9.06 0 011.5.124m7.5 10.376h3.375c.621 0 1.125-.504 1.125-1.125V11.25c0-4.46-3.243-8.161-7.5-8.876a9.06 9.06 0 00-1.5-.124H9.375c-.621 0-1.125.504-1.125 1.125v3.5m7.5 10.375H9.375a1.125 1.125 0 01-1.125-1.125v-9.25m12 6.625v-1.875a3.375 3.375 0 00-3.375-3.375h-1.5a1.125 1.125 0 01-1.125-1.125v-1.5a3.375 3.375 0 00-3.375-3.375H9.75"
                    }));
                }
                var ForwardRef = React2.forwardRef(DocumentDuplicateIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/DocumentMagnifyingGlassIcon.js
        var require_DocumentMagnifyingGlassIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/DocumentMagnifyingGlassIcon.js"(exports, module) {
                var React2 = require_react();
                function DocumentMagnifyingGlassIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M19.5 14.25v-2.625a3.375 3.375 0 00-3.375-3.375h-1.5A1.125 1.125 0 0113.5 7.125v-1.5a3.375 3.375 0 00-3.375-3.375H8.25m5.231 13.481L15 17.25m-4.5-15H5.625c-.621 0-1.125.504-1.125 1.125v16.5c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 00-9-9zm3.75 11.625a2.625 2.625 0 11-5.25 0 2.625 2.625 0 015.25 0z"
                    }));
                }
                var ForwardRef = React2.forwardRef(DocumentMagnifyingGlassIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/DocumentMinusIcon.js
        var require_DocumentMinusIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/DocumentMinusIcon.js"(exports, module) {
                var React2 = require_react();
                function DocumentMinusIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M19.5 14.25v-2.625a3.375 3.375 0 00-3.375-3.375h-1.5A1.125 1.125 0 0113.5 7.125v-1.5a3.375 3.375 0 00-3.375-3.375H8.25m6.75 12H9m1.5-12H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 00-9-9z"
                    }));
                }
                var ForwardRef = React2.forwardRef(DocumentMinusIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/DocumentPlusIcon.js
        var require_DocumentPlusIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/DocumentPlusIcon.js"(exports, module) {
                var React2 = require_react();
                function DocumentPlusIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M19.5 14.25v-2.625a3.375 3.375 0 00-3.375-3.375h-1.5A1.125 1.125 0 0113.5 7.125v-1.5a3.375 3.375 0 00-3.375-3.375H8.25m3.75 9v6m3-3H9m1.5-12H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 00-9-9z"
                    }));
                }
                var ForwardRef = React2.forwardRef(DocumentPlusIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/DocumentTextIcon.js
        var require_DocumentTextIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/DocumentTextIcon.js"(exports, module) {
                var React2 = require_react();
                function DocumentTextIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M19.5 14.25v-2.625a3.375 3.375 0 00-3.375-3.375h-1.5A1.125 1.125 0 0113.5 7.125v-1.5a3.375 3.375 0 00-3.375-3.375H8.25m0 12.75h7.5m-7.5 3H12M10.5 2.25H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 00-9-9z"
                    }));
                }
                var ForwardRef = React2.forwardRef(DocumentTextIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/DocumentIcon.js
        var require_DocumentIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/DocumentIcon.js"(exports, module) {
                var React2 = require_react();
                function DocumentIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M19.5 14.25v-2.625a3.375 3.375 0 00-3.375-3.375h-1.5A1.125 1.125 0 0113.5 7.125v-1.5a3.375 3.375 0 00-3.375-3.375H8.25m2.25 0H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 00-9-9z"
                    }));
                }
                var ForwardRef = React2.forwardRef(DocumentIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/EllipsisHorizontalCircleIcon.js
        var require_EllipsisHorizontalCircleIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/EllipsisHorizontalCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function EllipsisHorizontalCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M8.625 12a.375.375 0 11-.75 0 .375.375 0 01.75 0zm0 0H8.25m4.125 0a.375.375 0 11-.75 0 .375.375 0 01.75 0zm0 0H12m4.125 0a.375.375 0 11-.75 0 .375.375 0 01.75 0zm0 0h-.375M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
                    }));
                }
                var ForwardRef = React2.forwardRef(EllipsisHorizontalCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/EllipsisHorizontalIcon.js
        var require_EllipsisHorizontalIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/EllipsisHorizontalIcon.js"(exports, module) {
                var React2 = require_react();
                function EllipsisHorizontalIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M6.75 12a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM12.75 12a.75.75 0 11-1.5 0 .75.75 0 011.5 0zM18.75 12a.75.75 0 11-1.5 0 .75.75 0 011.5 0z"
                    }));
                }
                var ForwardRef = React2.forwardRef(EllipsisHorizontalIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/EllipsisVerticalIcon.js
        var require_EllipsisVerticalIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/EllipsisVerticalIcon.js"(exports, module) {
                var React2 = require_react();
                function EllipsisVerticalIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M12 6.75a.75.75 0 110-1.5.75.75 0 010 1.5zM12 12.75a.75.75 0 110-1.5.75.75 0 010 1.5zM12 18.75a.75.75 0 110-1.5.75.75 0 010 1.5z"
                    }));
                }
                var ForwardRef = React2.forwardRef(EllipsisVerticalIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/EnvelopeOpenIcon.js
        var require_EnvelopeOpenIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/EnvelopeOpenIcon.js"(exports, module) {
                var React2 = require_react();
                function EnvelopeOpenIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M21.75 9v.906a2.25 2.25 0 01-1.183 1.981l-6.478 3.488M2.25 9v.906a2.25 2.25 0 001.183 1.981l6.478 3.488m8.839 2.51l-4.66-2.51m0 0l-1.023-.55a2.25 2.25 0 00-2.134 0l-1.022.55m0 0l-4.661 2.51m16.5 1.615a2.25 2.25 0 01-2.25 2.25h-15a2.25 2.25 0 01-2.25-2.25V8.844a2.25 2.25 0 011.183-1.98l7.5-4.04a2.25 2.25 0 012.134 0l7.5 4.04a2.25 2.25 0 011.183 1.98V19.5z"
                    }));
                }
                var ForwardRef = React2.forwardRef(EnvelopeOpenIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/EnvelopeIcon.js
        var require_EnvelopeIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/EnvelopeIcon.js"(exports, module) {
                var React2 = require_react();
                function EnvelopeIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M21.75 6.75v10.5a2.25 2.25 0 01-2.25 2.25h-15a2.25 2.25 0 01-2.25-2.25V6.75m19.5 0A2.25 2.25 0 0019.5 4.5h-15a2.25 2.25 0 00-2.25 2.25m19.5 0v.243a2.25 2.25 0 01-1.07 1.916l-7.5 4.615a2.25 2.25 0 01-2.36 0L3.32 8.91a2.25 2.25 0 01-1.07-1.916V6.75"
                    }));
                }
                var ForwardRef = React2.forwardRef(EnvelopeIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ExclamationCircleIcon.js
        var require_ExclamationCircleIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ExclamationCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function ExclamationCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M12 9v3.75m9-.75a9 9 0 11-18 0 9 9 0 0118 0zm-9 3.75h.008v.008H12v-.008z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ExclamationCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ExclamationTriangleIcon.js
        var require_ExclamationTriangleIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ExclamationTriangleIcon.js"(exports, module) {
                var React2 = require_react();
                function ExclamationTriangleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126zM12 15.75h.007v.008H12v-.008z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ExclamationTriangleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/EyeDropperIcon.js
        var require_EyeDropperIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/EyeDropperIcon.js"(exports, module) {
                var React2 = require_react();
                function EyeDropperIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M15 11.25l1.5 1.5.75-.75V8.758l2.276-.61a3 3 0 10-3.675-3.675l-.61 2.277H12l-.75.75 1.5 1.5M15 11.25l-8.47 8.47c-.34.34-.8.53-1.28.53s-.94.19-1.28.53l-.97.97-.75-.75.97-.97c.34-.34.53-.8.53-1.28s.19-.94.53-1.28L12.75 9M15 11.25L12.75 9"
                    }));
                }
                var ForwardRef = React2.forwardRef(EyeDropperIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/EyeSlashIcon.js
        var require_EyeSlashIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/EyeSlashIcon.js"(exports, module) {
                var React2 = require_react();
                function EyeSlashIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M3.98 8.223A10.477 10.477 0 001.934 12C3.226 16.338 7.244 19.5 12 19.5c.993 0 1.953-.138 2.863-.395M6.228 6.228A10.45 10.45 0 0112 4.5c4.756 0 8.773 3.162 10.065 7.498a10.523 10.523 0 01-4.293 5.774M6.228 6.228L3 3m3.228 3.228l3.65 3.65m7.894 7.894L21 21m-3.228-3.228l-3.65-3.65m0 0a3 3 0 10-4.243-4.243m4.242 4.242L9.88 9.88"
                    }));
                }
                var ForwardRef = React2.forwardRef(EyeSlashIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/EyeIcon.js
        var require_EyeIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/EyeIcon.js"(exports, module) {
                var React2 = require_react();
                function EyeIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M2.036 12.322a1.012 1.012 0 010-.639C3.423 7.51 7.36 4.5 12 4.5c4.638 0 8.573 3.007 9.963 7.178.07.207.07.431 0 .639C20.577 16.49 16.64 19.5 12 19.5c-4.638 0-8.573-3.007-9.963-7.178z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M15 12a3 3 0 11-6 0 3 3 0 016 0z"
                    }));
                }
                var ForwardRef = React2.forwardRef(EyeIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/FaceFrownIcon.js
        var require_FaceFrownIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/FaceFrownIcon.js"(exports, module) {
                var React2 = require_react();
                function FaceFrownIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M15.182 16.318A4.486 4.486 0 0012.016 15a4.486 4.486 0 00-3.198 1.318M21 12a9 9 0 11-18 0 9 9 0 0118 0zM9.75 9.75c0 .414-.168.75-.375.75S9 10.164 9 9.75 9.168 9 9.375 9s.375.336.375.75zm-.375 0h.008v.015h-.008V9.75zm5.625 0c0 .414-.168.75-.375.75s-.375-.336-.375-.75.168-.75.375-.75.375.336.375.75zm-.375 0h.008v.015h-.008V9.75z"
                    }));
                }
                var ForwardRef = React2.forwardRef(FaceFrownIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/FaceSmileIcon.js
        var require_FaceSmileIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/FaceSmileIcon.js"(exports, module) {
                var React2 = require_react();
                function FaceSmileIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M15.182 15.182a4.5 4.5 0 01-6.364 0M21 12a9 9 0 11-18 0 9 9 0 0118 0zM9.75 9.75c0 .414-.168.75-.375.75S9 10.164 9 9.75 9.168 9 9.375 9s.375.336.375.75zm-.375 0h.008v.015h-.008V9.75zm5.625 0c0 .414-.168.75-.375.75s-.375-.336-.375-.75.168-.75.375-.75.375.336.375.75zm-.375 0h.008v.015h-.008V9.75z"
                    }));
                }
                var ForwardRef = React2.forwardRef(FaceSmileIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/FilmIcon.js
        var require_FilmIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/FilmIcon.js"(exports, module) {
                var React2 = require_react();
                function FilmIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M3.375 19.5h17.25m-17.25 0a1.125 1.125 0 01-1.125-1.125M3.375 19.5h1.5C5.496 19.5 6 18.996 6 18.375m-3.75 0V5.625m0 12.75v-1.5c0-.621.504-1.125 1.125-1.125m18.375 2.625V5.625m0 12.75c0 .621-.504 1.125-1.125 1.125m1.125-1.125v-1.5c0-.621-.504-1.125-1.125-1.125m0 3.75h-1.5A1.125 1.125 0 0118 18.375M20.625 4.5H3.375m17.25 0c.621 0 1.125.504 1.125 1.125M20.625 4.5h-1.5C18.504 4.5 18 5.004 18 5.625m3.75 0v1.5c0 .621-.504 1.125-1.125 1.125M3.375 4.5c-.621 0-1.125.504-1.125 1.125M3.375 4.5h1.5C5.496 4.5 6 5.004 6 5.625m-3.75 0v1.5c0 .621.504 1.125 1.125 1.125m0 0h1.5m-1.5 0c-.621 0-1.125.504-1.125 1.125v1.5c0 .621.504 1.125 1.125 1.125m1.5-3.75C5.496 8.25 6 7.746 6 7.125v-1.5M4.875 8.25C5.496 8.25 6 8.754 6 9.375v1.5m0-5.25v5.25m0-5.25C6 5.004 6.504 4.5 7.125 4.5h9.75c.621 0 1.125.504 1.125 1.125m1.125 2.625h1.5m-1.5 0A1.125 1.125 0 0118 7.125v-1.5m1.125 2.625c-.621 0-1.125.504-1.125 1.125v1.5m2.625-2.625c.621 0 1.125.504 1.125 1.125v1.5c0 .621-.504 1.125-1.125 1.125M18 5.625v5.25M7.125 12h9.75m-9.75 0A1.125 1.125 0 016 10.875M7.125 12C6.504 12 6 12.504 6 13.125m0-2.25C6 11.496 5.496 12 4.875 12M18 10.875c0 .621-.504 1.125-1.125 1.125M18 10.875c0 .621.504 1.125 1.125 1.125m-2.25 0c.621 0 1.125.504 1.125 1.125m-12 5.25v-5.25m0 5.25c0 .621.504 1.125 1.125 1.125h9.75c.621 0 1.125-.504 1.125-1.125m-12 0v-1.5c0-.621-.504-1.125-1.125-1.125M18 18.375v-5.25m0 5.25v-1.5c0-.621.504-1.125 1.125-1.125M18 13.125v1.5c0 .621.504 1.125 1.125 1.125M18 13.125c0-.621.504-1.125 1.125-1.125M6 13.125v1.5c0 .621-.504 1.125-1.125 1.125M6 13.125C6 12.504 5.496 12 4.875 12m-1.5 0h1.5m-1.5 0c-.621 0-1.125.504-1.125 1.125v1.5c0 .621.504 1.125 1.125 1.125M19.125 12h1.5m0 0c.621 0 1.125.504 1.125 1.125v1.5c0 .621-.504 1.125-1.125 1.125m-17.25 0h1.5m14.25 0h1.5"
                    }));
                }
                var ForwardRef = React2.forwardRef(FilmIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/FingerPrintIcon.js
        var require_FingerPrintIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/FingerPrintIcon.js"(exports, module) {
                var React2 = require_react();
                function FingerPrintIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M7.864 4.243A7.5 7.5 0 0119.5 10.5c0 2.92-.556 5.709-1.568 8.268M5.742 6.364A7.465 7.465 0 004.5 10.5a7.464 7.464 0 01-1.15 3.993m1.989 3.559A11.209 11.209 0 008.25 10.5a3.75 3.75 0 117.5 0c0 .527-.021 1.049-.064 1.565M12 10.5a14.94 14.94 0 01-3.6 9.75m6.633-4.596a18.666 18.666 0 01-2.485 5.33"
                    }));
                }
                var ForwardRef = React2.forwardRef(FingerPrintIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/FireIcon.js
        var require_FireIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/FireIcon.js"(exports, module) {
                var React2 = require_react();
                function FireIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M15.362 5.214A8.252 8.252 0 0112 21 8.25 8.25 0 016.038 7.048 8.287 8.287 0 009 9.6a8.983 8.983 0 013.361-6.867 8.21 8.21 0 003 2.48z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M12 18a3.75 3.75 0 00.495-7.467 5.99 5.99 0 00-1.925 3.546 5.974 5.974 0 01-2.133-1A3.75 3.75 0 0012 18z"
                    }));
                }
                var ForwardRef = React2.forwardRef(FireIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/FlagIcon.js
        var require_FlagIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/FlagIcon.js"(exports, module) {
                var React2 = require_react();
                function FlagIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M3 3v1.5M3 21v-6m0 0l2.77-.693a9 9 0 016.208.682l.108.054a9 9 0 006.086.71l3.114-.732a48.524 48.524 0 01-.005-10.499l-3.11.732a9 9 0 01-6.085-.711l-.108-.054a9 9 0 00-6.208-.682L3 4.5M3 15V4.5"
                    }));
                }
                var ForwardRef = React2.forwardRef(FlagIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/FolderArrowDownIcon.js
        var require_FolderArrowDownIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/FolderArrowDownIcon.js"(exports, module) {
                var React2 = require_react();
                function FolderArrowDownIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M9 13.5l3 3m0 0l3-3m-3 3v-6m1.06-4.19l-2.12-2.12a1.5 1.5 0 00-1.061-.44H4.5A2.25 2.25 0 002.25 6v12a2.25 2.25 0 002.25 2.25h15A2.25 2.25 0 0021.75 18V9a2.25 2.25 0 00-2.25-2.25h-5.379a1.5 1.5 0 01-1.06-.44z"
                    }));
                }
                var ForwardRef = React2.forwardRef(FolderArrowDownIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/FolderMinusIcon.js
        var require_FolderMinusIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/FolderMinusIcon.js"(exports, module) {
                var React2 = require_react();
                function FolderMinusIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M15 13.5H9m4.06-7.19l-2.12-2.12a1.5 1.5 0 00-1.061-.44H4.5A2.25 2.25 0 002.25 6v12a2.25 2.25 0 002.25 2.25h15A2.25 2.25 0 0021.75 18V9a2.25 2.25 0 00-2.25-2.25h-5.379a1.5 1.5 0 01-1.06-.44z"
                    }));
                }
                var ForwardRef = React2.forwardRef(FolderMinusIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/FolderOpenIcon.js
        var require_FolderOpenIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/FolderOpenIcon.js"(exports, module) {
                var React2 = require_react();
                function FolderOpenIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M3.75 9.776c.112-.017.227-.026.344-.026h15.812c.117 0 .232.009.344.026m-16.5 0a2.25 2.25 0 00-1.883 2.542l.857 6a2.25 2.25 0 002.227 1.932H19.05a2.25 2.25 0 002.227-1.932l.857-6a2.25 2.25 0 00-1.883-2.542m-16.5 0V6A2.25 2.25 0 016 3.75h3.879a1.5 1.5 0 011.06.44l2.122 2.12a1.5 1.5 0 001.06.44H18A2.25 2.25 0 0120.25 9v.776"
                    }));
                }
                var ForwardRef = React2.forwardRef(FolderOpenIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/FolderPlusIcon.js
        var require_FolderPlusIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/FolderPlusIcon.js"(exports, module) {
                var React2 = require_react();
                function FolderPlusIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M12 10.5v6m3-3H9m4.06-7.19l-2.12-2.12a1.5 1.5 0 00-1.061-.44H4.5A2.25 2.25 0 002.25 6v12a2.25 2.25 0 002.25 2.25h15A2.25 2.25 0 0021.75 18V9a2.25 2.25 0 00-2.25-2.25h-5.379a1.5 1.5 0 01-1.06-.44z"
                    }));
                }
                var ForwardRef = React2.forwardRef(FolderPlusIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/FolderIcon.js
        var require_FolderIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/FolderIcon.js"(exports, module) {
                var React2 = require_react();
                function FolderIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M2.25 12.75V12A2.25 2.25 0 014.5 9.75h15A2.25 2.25 0 0121.75 12v.75m-8.69-6.44l-2.12-2.12a1.5 1.5 0 00-1.061-.44H4.5A2.25 2.25 0 002.25 6v12a2.25 2.25 0 002.25 2.25h15A2.25 2.25 0 0021.75 18V9a2.25 2.25 0 00-2.25-2.25h-5.379a1.5 1.5 0 01-1.06-.44z"
                    }));
                }
                var ForwardRef = React2.forwardRef(FolderIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ForwardIcon.js
        var require_ForwardIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ForwardIcon.js"(exports, module) {
                var React2 = require_react();
                function ForwardIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M3 8.688c0-.864.933-1.405 1.683-.977l7.108 4.062a1.125 1.125 0 010 1.953l-7.108 4.062A1.125 1.125 0 013 16.81V8.688zM12.75 8.688c0-.864.933-1.405 1.683-.977l7.108 4.062a1.125 1.125 0 010 1.953l-7.108 4.062a1.125 1.125 0 01-1.683-.977V8.688z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ForwardIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/FunnelIcon.js
        var require_FunnelIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/FunnelIcon.js"(exports, module) {
                var React2 = require_react();
                function FunnelIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M12 3c2.755 0 5.455.232 8.083.678.533.09.917.556.917 1.096v1.044a2.25 2.25 0 01-.659 1.591l-5.432 5.432a2.25 2.25 0 00-.659 1.591v2.927a2.25 2.25 0 01-1.244 2.013L9.75 21v-6.568a2.25 2.25 0 00-.659-1.591L3.659 7.409A2.25 2.25 0 013 5.818V4.774c0-.54.384-1.006.917-1.096A48.32 48.32 0 0112 3z"
                    }));
                }
                var ForwardRef = React2.forwardRef(FunnelIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/GifIcon.js
        var require_GifIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/GifIcon.js"(exports, module) {
                var React2 = require_react();
                function GifIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M12.75 8.25v7.5m6-7.5h-3V12m0 0v3.75m0-3.75H18M9.75 9.348c-1.03-1.464-2.698-1.464-3.728 0-1.03 1.465-1.03 3.84 0 5.304 1.03 1.464 2.699 1.464 3.728 0V12h-1.5M4.5 19.5h15a2.25 2.25 0 002.25-2.25V6.75A2.25 2.25 0 0019.5 4.5h-15a2.25 2.25 0 00-2.25 2.25v10.5A2.25 2.25 0 004.5 19.5z"
                    }));
                }
                var ForwardRef = React2.forwardRef(GifIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/GiftTopIcon.js
        var require_GiftTopIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/GiftTopIcon.js"(exports, module) {
                var React2 = require_react();
                function GiftTopIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M12 3.75v16.5M2.25 12h19.5M6.375 17.25a4.875 4.875 0 004.875-4.875V12m6.375 5.25a4.875 4.875 0 01-4.875-4.875V12m-9 8.25h16.5a1.5 1.5 0 001.5-1.5V5.25a1.5 1.5 0 00-1.5-1.5H3.75a1.5 1.5 0 00-1.5 1.5v13.5a1.5 1.5 0 001.5 1.5zm12.621-9.44c-1.409 1.41-4.242 1.061-4.242 1.061s-.349-2.833 1.06-4.242a2.25 2.25 0 013.182 3.182zM10.773 7.63c1.409 1.409 1.06 4.242 1.06 4.242S9 12.22 7.592 10.811a2.25 2.25 0 113.182-3.182z"
                    }));
                }
                var ForwardRef = React2.forwardRef(GiftTopIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/GiftIcon.js
        var require_GiftIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/GiftIcon.js"(exports, module) {
                var React2 = require_react();
                function GiftIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M21 11.25v8.25a1.5 1.5 0 01-1.5 1.5H5.25a1.5 1.5 0 01-1.5-1.5v-8.25M12 4.875A2.625 2.625 0 109.375 7.5H12m0-2.625V7.5m0-2.625A2.625 2.625 0 1114.625 7.5H12m0 0V21m-8.625-9.75h18c.621 0 1.125-.504 1.125-1.125v-1.5c0-.621-.504-1.125-1.125-1.125h-18c-.621 0-1.125.504-1.125 1.125v1.5c0 .621.504 1.125 1.125 1.125z"
                    }));
                }
                var ForwardRef = React2.forwardRef(GiftIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/GlobeAltIcon.js
        var require_GlobeAltIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/GlobeAltIcon.js"(exports, module) {
                var React2 = require_react();
                function GlobeAltIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M12 21a9.004 9.004 0 008.716-6.747M12 21a9.004 9.004 0 01-8.716-6.747M12 21c2.485 0 4.5-4.03 4.5-9S14.485 3 12 3m0 18c-2.485 0-4.5-4.03-4.5-9S9.515 3 12 3m0 0a8.997 8.997 0 017.843 4.582M12 3a8.997 8.997 0 00-7.843 4.582m15.686 0A11.953 11.953 0 0112 10.5c-2.998 0-5.74-1.1-7.843-2.918m15.686 0A8.959 8.959 0 0121 12c0 .778-.099 1.533-.284 2.253m0 0A17.919 17.919 0 0112 16.5c-3.162 0-6.133-.815-8.716-2.247m0 0A9.015 9.015 0 013 12c0-1.605.42-3.113 1.157-4.418"
                    }));
                }
                var ForwardRef = React2.forwardRef(GlobeAltIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/GlobeAmericasIcon.js
        var require_GlobeAmericasIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/GlobeAmericasIcon.js"(exports, module) {
                var React2 = require_react();
                function GlobeAmericasIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M6.115 5.19l.319 1.913A6 6 0 008.11 10.36L9.75 12l-.387.775c-.217.433-.132.956.21 1.298l1.348 1.348c.21.21.329.497.329.795v1.089c0 .426.24.815.622 1.006l.153.076c.433.217.956.132 1.298-.21l.723-.723a8.7 8.7 0 002.288-4.042 1.087 1.087 0 00-.358-1.099l-1.33-1.108c-.251-.21-.582-.299-.905-.245l-1.17.195a1.125 1.125 0 01-.98-.314l-.295-.295a1.125 1.125 0 010-1.591l.13-.132a1.125 1.125 0 011.3-.21l.603.302a.809.809 0 001.086-1.086L14.25 7.5l1.256-.837a4.5 4.5 0 001.528-1.732l.146-.292M6.115 5.19A9 9 0 1017.18 4.64M6.115 5.19A8.965 8.965 0 0112 3c1.929 0 3.716.607 5.18 1.64"
                    }));
                }
                var ForwardRef = React2.forwardRef(GlobeAmericasIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/GlobeAsiaAustraliaIcon.js
        var require_GlobeAsiaAustraliaIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/GlobeAsiaAustraliaIcon.js"(exports, module) {
                var React2 = require_react();
                function GlobeAsiaAustraliaIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M12.75 3.03v.568c0 .334.148.65.405.864l1.068.89c.442.369.535 1.01.216 1.49l-.51.766a2.25 2.25 0 01-1.161.886l-.143.048a1.107 1.107 0 00-.57 1.664c.369.555.169 1.307-.427 1.605L9 13.125l.423 1.059a.956.956 0 01-1.652.928l-.679-.906a1.125 1.125 0 00-1.906.172L4.5 15.75l-.612.153M12.75 3.031a9 9 0 00-8.862 12.872M12.75 3.031a9 9 0 016.69 14.036m0 0l-.177-.529A2.25 2.25 0 0017.128 15H16.5l-.324-.324a1.453 1.453 0 00-2.328.377l-.036.073a1.586 1.586 0 01-.982.816l-.99.282c-.55.157-.894.702-.8 1.267l.073.438c.08.474.49.821.97.821.846 0 1.598.542 1.865 1.345l.215.643m5.276-3.67a9.012 9.012 0 01-5.276 3.67m0 0a9 9 0 01-10.275-4.835M15.75 9c0 .896-.393 1.7-1.016 2.25"
                    }));
                }
                var ForwardRef = React2.forwardRef(GlobeAsiaAustraliaIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/GlobeEuropeAfricaIcon.js
        var require_GlobeEuropeAfricaIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/GlobeEuropeAfricaIcon.js"(exports, module) {
                var React2 = require_react();
                function GlobeEuropeAfricaIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M20.893 13.393l-1.135-1.135a2.252 2.252 0 01-.421-.585l-1.08-2.16a.414.414 0 00-.663-.107.827.827 0 01-.812.21l-1.273-.363a.89.89 0 00-.738 1.595l.587.39c.59.395.674 1.23.172 1.732l-.2.2c-.212.212-.33.498-.33.796v.41c0 .409-.11.809-.32 1.158l-1.315 2.191a2.11 2.11 0 01-1.81 1.025 1.055 1.055 0 01-1.055-1.055v-1.172c0-.92-.56-1.747-1.414-2.089l-.655-.261a2.25 2.25 0 01-1.383-2.46l.007-.042a2.25 2.25 0 01.29-.787l.09-.15a2.25 2.25 0 012.37-1.048l1.178.236a1.125 1.125 0 001.302-.795l.208-.73a1.125 1.125 0 00-.578-1.315l-.665-.332-.091.091a2.25 2.25 0 01-1.591.659h-.18c-.249 0-.487.1-.662.274a.931.931 0 01-1.458-1.137l1.411-2.353a2.25 2.25 0 00.286-.76m11.928 9.869A9 9 0 008.965 3.525m11.928 9.868A9 9 0 118.965 3.525"
                    }));
                }
                var ForwardRef = React2.forwardRef(GlobeEuropeAfricaIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/HandRaisedIcon.js
        var require_HandRaisedIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/HandRaisedIcon.js"(exports, module) {
                var React2 = require_react();
                function HandRaisedIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M10.05 4.575a1.575 1.575 0 10-3.15 0v3m3.15-3v-1.5a1.575 1.575 0 013.15 0v1.5m-3.15 0l.075 5.925m3.075.75V4.575m0 0a1.575 1.575 0 013.15 0V15M6.9 7.575a1.575 1.575 0 10-3.15 0v8.175a6.75 6.75 0 006.75 6.75h2.018a5.25 5.25 0 003.712-1.538l1.732-1.732a5.25 5.25 0 001.538-3.712l.003-2.024a.668.668 0 01.198-.471 1.575 1.575 0 10-2.228-2.228 3.818 3.818 0 00-1.12 2.687M6.9 7.575V12m6.27 4.318A4.49 4.49 0 0116.35 15m.002 0h-.002"
                    }));
                }
                var ForwardRef = React2.forwardRef(HandRaisedIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/HandThumbDownIcon.js
        var require_HandThumbDownIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/HandThumbDownIcon.js"(exports, module) {
                var React2 = require_react();
                function HandThumbDownIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M7.5 15h2.25m8.024-9.75c.011.05.028.1.052.148.591 1.2.924 2.55.924 3.977a8.96 8.96 0 01-.999 4.125m.023-8.25c-.076-.365.183-.75.575-.75h.908c.889 0 1.713.518 1.972 1.368.339 1.11.521 2.287.521 3.507 0 1.553-.295 3.036-.831 4.398C20.613 14.547 19.833 15 19 15h-1.053c-.472 0-.745-.556-.5-.96a8.95 8.95 0 00.303-.54m.023-8.25H16.48a4.5 4.5 0 01-1.423-.23l-3.114-1.04a4.5 4.5 0 00-1.423-.23H6.504c-.618 0-1.217.247-1.605.729A11.95 11.95 0 002.25 12c0 .434.023.863.068 1.285C2.427 14.306 3.346 15 4.372 15h3.126c.618 0 .991.724.725 1.282A7.471 7.471 0 007.5 19.5a2.25 2.25 0 002.25 2.25.75.75 0 00.75-.75v-.633c0-.573.11-1.14.322-1.672.304-.76.93-1.33 1.653-1.715a9.04 9.04 0 002.86-2.4c.498-.634 1.226-1.08 2.032-1.08h.384"
                    }));
                }
                var ForwardRef = React2.forwardRef(HandThumbDownIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/HandThumbUpIcon.js
        var require_HandThumbUpIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/HandThumbUpIcon.js"(exports, module) {
                var React2 = require_react();
                function HandThumbUpIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M6.633 10.5c.806 0 1.533-.446 2.031-1.08a9.041 9.041 0 012.861-2.4c.723-.384 1.35-.956 1.653-1.715a4.498 4.498 0 00.322-1.672V3a.75.75 0 01.75-.75A2.25 2.25 0 0116.5 4.5c0 1.152-.26 2.243-.723 3.218-.266.558.107 1.282.725 1.282h3.126c1.026 0 1.945.694 2.054 1.715.045.422.068.85.068 1.285a11.95 11.95 0 01-2.649 7.521c-.388.482-.987.729-1.605.729H13.48c-.483 0-.964-.078-1.423-.23l-3.114-1.04a4.501 4.501 0 00-1.423-.23H5.904M14.25 9h2.25M5.904 18.75c.083.205.173.405.27.602.197.4-.078.898-.523.898h-.908c-.889 0-1.713-.518-1.972-1.368a12 12 0 01-.521-3.507c0-1.553.295-3.036.831-4.398C3.387 10.203 4.167 9.75 5 9.75h1.053c.472 0 .745.556.5.96a8.958 8.958 0 00-1.302 4.665c0 1.194.232 2.333.654 3.375z"
                    }));
                }
                var ForwardRef = React2.forwardRef(HandThumbUpIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/HashtagIcon.js
        var require_HashtagIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/HashtagIcon.js"(exports, module) {
                var React2 = require_react();
                function HashtagIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M5.25 8.25h15m-16.5 7.5h15m-1.8-13.5l-3.9 19.5m-2.1-19.5l-3.9 19.5"
                    }));
                }
                var ForwardRef = React2.forwardRef(HashtagIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/HeartIcon.js
        var require_HeartIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/HeartIcon.js"(exports, module) {
                var React2 = require_react();
                function HeartIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M21 8.25c0-2.485-2.099-4.5-4.688-4.5-1.935 0-3.597 1.126-4.312 2.733-.715-1.607-2.377-2.733-4.313-2.733C5.1 3.75 3 5.765 3 8.25c0 7.22 9 12 9 12s9-4.78 9-12z"
                    }));
                }
                var ForwardRef = React2.forwardRef(HeartIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/HomeModernIcon.js
        var require_HomeModernIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/HomeModernIcon.js"(exports, module) {
                var React2 = require_react();
                function HomeModernIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M8.25 21v-4.875c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125V21m0 0h4.5V3.545M12.75 21h7.5V10.75M2.25 21h1.5m18 0h-18M2.25 9l4.5-1.636M18.75 3l-1.5.545m0 6.205l3 1m1.5.5l-1.5-.5M6.75 7.364V3h-3v18m3-13.636l10.5-3.819"
                    }));
                }
                var ForwardRef = React2.forwardRef(HomeModernIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/HomeIcon.js
        var require_HomeIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/HomeIcon.js"(exports, module) {
                var React2 = require_react();
                function HomeIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M2.25 12l8.954-8.955c.44-.439 1.152-.439 1.591 0L21.75 12M4.5 9.75v10.125c0 .621.504 1.125 1.125 1.125H9.75v-4.875c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125V21h4.125c.621 0 1.125-.504 1.125-1.125V9.75M8.25 21h8.25"
                    }));
                }
                var ForwardRef = React2.forwardRef(HomeIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/IdentificationIcon.js
        var require_IdentificationIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/IdentificationIcon.js"(exports, module) {
                var React2 = require_react();
                function IdentificationIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M15 9h3.75M15 12h3.75M15 15h3.75M4.5 19.5h15a2.25 2.25 0 002.25-2.25V6.75A2.25 2.25 0 0019.5 4.5h-15a2.25 2.25 0 00-2.25 2.25v10.5A2.25 2.25 0 004.5 19.5zm6-10.125a1.875 1.875 0 11-3.75 0 1.875 1.875 0 013.75 0zm1.294 6.336a6.721 6.721 0 01-3.17.789 6.721 6.721 0 01-3.168-.789 3.376 3.376 0 016.338 0z"
                    }));
                }
                var ForwardRef = React2.forwardRef(IdentificationIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/InboxArrowDownIcon.js
        var require_InboxArrowDownIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/InboxArrowDownIcon.js"(exports, module) {
                var React2 = require_react();
                function InboxArrowDownIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M9 3.75H6.912a2.25 2.25 0 00-2.15 1.588L2.35 13.177a2.25 2.25 0 00-.1.661V18a2.25 2.25 0 002.25 2.25h15A2.25 2.25 0 0021.75 18v-4.162c0-.224-.034-.447-.1-.661L19.24 5.338a2.25 2.25 0 00-2.15-1.588H15M2.25 13.5h3.86a2.25 2.25 0 012.012 1.244l.256.512a2.25 2.25 0 002.013 1.244h3.218a2.25 2.25 0 002.013-1.244l.256-.512a2.25 2.25 0 012.013-1.244h3.859M12 3v8.25m0 0l-3-3m3 3l3-3"
                    }));
                }
                var ForwardRef = React2.forwardRef(InboxArrowDownIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/InboxStackIcon.js
        var require_InboxStackIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/InboxStackIcon.js"(exports, module) {
                var React2 = require_react();
                function InboxStackIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M7.875 14.25l1.214 1.942a2.25 2.25 0 001.908 1.058h2.006c.776 0 1.497-.4 1.908-1.058l1.214-1.942M2.41 9h4.636a2.25 2.25 0 011.872 1.002l.164.246a2.25 2.25 0 001.872 1.002h2.092a2.25 2.25 0 001.872-1.002l.164-.246A2.25 2.25 0 0116.954 9h4.636M2.41 9a2.25 2.25 0 00-.16.832V12a2.25 2.25 0 002.25 2.25h15A2.25 2.25 0 0021.75 12V9.832c0-.287-.055-.57-.16-.832M2.41 9a2.25 2.25 0 01.382-.632l3.285-3.832a2.25 2.25 0 011.708-.786h8.43c.657 0 1.281.287 1.709.786l3.284 3.832c.163.19.291.404.382.632M4.5 20.25h15A2.25 2.25 0 0021.75 18v-2.625c0-.621-.504-1.125-1.125-1.125H3.375c-.621 0-1.125.504-1.125 1.125V18a2.25 2.25 0 002.25 2.25z"
                    }));
                }
                var ForwardRef = React2.forwardRef(InboxStackIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/InboxIcon.js
        var require_InboxIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/InboxIcon.js"(exports, module) {
                var React2 = require_react();
                function InboxIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M2.25 13.5h3.86a2.25 2.25 0 012.012 1.244l.256.512a2.25 2.25 0 002.013 1.244h3.218a2.25 2.25 0 002.013-1.244l.256-.512a2.25 2.25 0 012.013-1.244h3.859m-19.5.338V18a2.25 2.25 0 002.25 2.25h15A2.25 2.25 0 0021.75 18v-4.162c0-.224-.034-.447-.1-.661L19.24 5.338a2.25 2.25 0 00-2.15-1.588H6.911a2.25 2.25 0 00-2.15 1.588L2.35 13.177a2.25 2.25 0 00-.1.661z"
                    }));
                }
                var ForwardRef = React2.forwardRef(InboxIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/InformationCircleIcon.js
        var require_InformationCircleIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/InformationCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function InformationCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M11.25 11.25l.041-.02a.75.75 0 011.063.852l-.708 2.836a.75.75 0 001.063.853l.041-.021M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9-3.75h.008v.008H12V8.25z"
                    }));
                }
                var ForwardRef = React2.forwardRef(InformationCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/KeyIcon.js
        var require_KeyIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/KeyIcon.js"(exports, module) {
                var React2 = require_react();
                function KeyIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M15.75 5.25a3 3 0 013 3m3 0a6 6 0 01-7.029 5.912c-.563-.097-1.159.026-1.563.43L10.5 17.25H8.25v2.25H6v2.25H2.25v-2.818c0-.597.237-1.17.659-1.591l6.499-6.499c.404-.404.527-1 .43-1.563A6 6 0 1121.75 8.25z"
                    }));
                }
                var ForwardRef = React2.forwardRef(KeyIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/LanguageIcon.js
        var require_LanguageIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/LanguageIcon.js"(exports, module) {
                var React2 = require_react();
                function LanguageIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M10.5 21l5.25-11.25L21 21m-9-3h7.5M3 5.621a48.474 48.474 0 016-.371m0 0c1.12 0 2.233.038 3.334.114M9 5.25V3m3.334 2.364C11.176 10.658 7.69 15.08 3 17.502m9.334-12.138c.896.061 1.785.147 2.666.257m-4.589 8.495a18.023 18.023 0 01-3.827-5.802"
                    }));
                }
                var ForwardRef = React2.forwardRef(LanguageIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/LifebuoyIcon.js
        var require_LifebuoyIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/LifebuoyIcon.js"(exports, module) {
                var React2 = require_react();
                function LifebuoyIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M16.712 4.33a9.027 9.027 0 011.652 1.306c.51.51.944 1.064 1.306 1.652M16.712 4.33l-3.448 4.138m3.448-4.138a9.014 9.014 0 00-9.424 0M19.67 7.288l-4.138 3.448m4.138-3.448a9.014 9.014 0 010 9.424m-4.138-5.976a3.736 3.736 0 00-.88-1.388 3.737 3.737 0 00-1.388-.88m2.268 2.268a3.765 3.765 0 010 2.528m-2.268-4.796a3.765 3.765 0 00-2.528 0m4.796 4.796c-.181.506-.475.982-.88 1.388a3.736 3.736 0 01-1.388.88m2.268-2.268l4.138 3.448m0 0a9.027 9.027 0 01-1.306 1.652c-.51.51-1.064.944-1.652 1.306m0 0l-3.448-4.138m3.448 4.138a9.014 9.014 0 01-9.424 0m5.976-4.138a3.765 3.765 0 01-2.528 0m0 0a3.736 3.736 0 01-1.388-.88 3.737 3.737 0 01-.88-1.388m2.268 2.268L7.288 19.67m0 0a9.024 9.024 0 01-1.652-1.306 9.027 9.027 0 01-1.306-1.652m0 0l4.138-3.448M4.33 16.712a9.014 9.014 0 010-9.424m4.138 5.976a3.765 3.765 0 010-2.528m0 0c.181-.506.475-.982.88-1.388a3.736 3.736 0 011.388-.88m-2.268 2.268L4.33 7.288m6.406 1.18L7.288 4.33m0 0a9.024 9.024 0 00-1.652 1.306A9.025 9.025 0 004.33 7.288"
                    }));
                }
                var ForwardRef = React2.forwardRef(LifebuoyIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/LightBulbIcon.js
        var require_LightBulbIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/LightBulbIcon.js"(exports, module) {
                var React2 = require_react();
                function LightBulbIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M12 18v-5.25m0 0a6.01 6.01 0 001.5-.189m-1.5.189a6.01 6.01 0 01-1.5-.189m3.75 7.478a12.06 12.06 0 01-4.5 0m3.75 2.383a14.406 14.406 0 01-3 0M14.25 18v-.192c0-.983.658-1.823 1.508-2.316a7.5 7.5 0 10-7.517 0c.85.493 1.509 1.333 1.509 2.316V18"
                    }));
                }
                var ForwardRef = React2.forwardRef(LightBulbIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/LinkIcon.js
        var require_LinkIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/LinkIcon.js"(exports, module) {
                var React2 = require_react();
                function LinkIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M13.19 8.688a4.5 4.5 0 011.242 7.244l-4.5 4.5a4.5 4.5 0 01-6.364-6.364l1.757-1.757m13.35-.622l1.757-1.757a4.5 4.5 0 00-6.364-6.364l-4.5 4.5a4.5 4.5 0 001.242 7.244"
                    }));
                }
                var ForwardRef = React2.forwardRef(LinkIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ListBulletIcon.js
        var require_ListBulletIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ListBulletIcon.js"(exports, module) {
                var React2 = require_react();
                function ListBulletIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M8.25 6.75h12M8.25 12h12m-12 5.25h12M3.75 6.75h.007v.008H3.75V6.75zm.375 0a.375.375 0 11-.75 0 .375.375 0 01.75 0zM3.75 12h.007v.008H3.75V12zm.375 0a.375.375 0 11-.75 0 .375.375 0 01.75 0zm-.375 5.25h.007v.008H3.75v-.008zm.375 0a.375.375 0 11-.75 0 .375.375 0 01.75 0z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ListBulletIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/LockClosedIcon.js
        var require_LockClosedIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/LockClosedIcon.js"(exports, module) {
                var React2 = require_react();
                function LockClosedIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M16.5 10.5V6.75a4.5 4.5 0 10-9 0v3.75m-.75 11.25h10.5a2.25 2.25 0 002.25-2.25v-6.75a2.25 2.25 0 00-2.25-2.25H6.75a2.25 2.25 0 00-2.25 2.25v6.75a2.25 2.25 0 002.25 2.25z"
                    }));
                }
                var ForwardRef = React2.forwardRef(LockClosedIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/LockOpenIcon.js
        var require_LockOpenIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/LockOpenIcon.js"(exports, module) {
                var React2 = require_react();
                function LockOpenIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M13.5 10.5V6.75a4.5 4.5 0 119 0v3.75M3.75 21.75h10.5a2.25 2.25 0 002.25-2.25v-6.75a2.25 2.25 0 00-2.25-2.25H3.75a2.25 2.25 0 00-2.25 2.25v6.75a2.25 2.25 0 002.25 2.25z"
                    }));
                }
                var ForwardRef = React2.forwardRef(LockOpenIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/MagnifyingGlassCircleIcon.js
        var require_MagnifyingGlassCircleIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/MagnifyingGlassCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function MagnifyingGlassCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M15.75 15.75l-2.489-2.489m0 0a3.375 3.375 0 10-4.773-4.773 3.375 3.375 0 004.774 4.774zM21 12a9 9 0 11-18 0 9 9 0 0118 0z"
                    }));
                }
                var ForwardRef = React2.forwardRef(MagnifyingGlassCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/MagnifyingGlassMinusIcon.js
        var require_MagnifyingGlassMinusIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/MagnifyingGlassMinusIcon.js"(exports, module) {
                var React2 = require_react();
                function MagnifyingGlassMinusIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607zM13.5 10.5h-6"
                    }));
                }
                var ForwardRef = React2.forwardRef(MagnifyingGlassMinusIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/MagnifyingGlassPlusIcon.js
        var require_MagnifyingGlassPlusIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/MagnifyingGlassPlusIcon.js"(exports, module) {
                var React2 = require_react();
                function MagnifyingGlassPlusIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607zM10.5 7.5v6m3-3h-6"
                    }));
                }
                var ForwardRef = React2.forwardRef(MagnifyingGlassPlusIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/MagnifyingGlassIcon.js
        var require_MagnifyingGlassIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/MagnifyingGlassIcon.js"(exports, module) {
                var React2 = require_react();
                function MagnifyingGlassIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z"
                    }));
                }
                var ForwardRef = React2.forwardRef(MagnifyingGlassIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/MapPinIcon.js
        var require_MapPinIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/MapPinIcon.js"(exports, module) {
                var React2 = require_react();
                function MapPinIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M15 10.5a3 3 0 11-6 0 3 3 0 016 0z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M19.5 10.5c0 7.142-7.5 11.25-7.5 11.25S4.5 17.642 4.5 10.5a7.5 7.5 0 1115 0z"
                    }));
                }
                var ForwardRef = React2.forwardRef(MapPinIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/MapIcon.js
        var require_MapIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/MapIcon.js"(exports, module) {
                var React2 = require_react();
                function MapIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M9 6.75V15m6-6v8.25m.503 3.498l4.875-2.437c.381-.19.622-.58.622-1.006V4.82c0-.836-.88-1.38-1.628-1.006l-3.869 1.934c-.317.159-.69.159-1.006 0L9.503 3.252a1.125 1.125 0 00-1.006 0L3.622 5.689C3.24 5.88 3 6.27 3 6.695V19.18c0 .836.88 1.38 1.628 1.006l3.869-1.934c.317-.159.69-.159 1.006 0l4.994 2.497c.317.158.69.158 1.006 0z"
                    }));
                }
                var ForwardRef = React2.forwardRef(MapIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/MegaphoneIcon.js
        var require_MegaphoneIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/MegaphoneIcon.js"(exports, module) {
                var React2 = require_react();
                function MegaphoneIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M10.34 15.84c-.688-.06-1.386-.09-2.09-.09H7.5a4.5 4.5 0 110-9h.75c.704 0 1.402-.03 2.09-.09m0 9.18c.253.962.584 1.892.985 2.783.247.55.06 1.21-.463 1.511l-.657.38c-.551.318-1.26.117-1.527-.461a20.845 20.845 0 01-1.44-4.282m3.102.069a18.03 18.03 0 01-.59-4.59c0-1.586.205-3.124.59-4.59m0 9.18a23.848 23.848 0 018.835 2.535M10.34 6.66a23.847 23.847 0 008.835-2.535m0 0A23.74 23.74 0 0018.795 3m.38 1.125a23.91 23.91 0 011.014 5.395m-1.014 8.855c-.118.38-.245.754-.38 1.125m.38-1.125a23.91 23.91 0 001.014-5.395m0-3.46c.495.413.811 1.035.811 1.73 0 .695-.316 1.317-.811 1.73m0-3.46a24.347 24.347 0 010 3.46"
                    }));
                }
                var ForwardRef = React2.forwardRef(MegaphoneIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/MicrophoneIcon.js
        var require_MicrophoneIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/MicrophoneIcon.js"(exports, module) {
                var React2 = require_react();
                function MicrophoneIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M12 18.75a6 6 0 006-6v-1.5m-6 7.5a6 6 0 01-6-6v-1.5m6 7.5v3.75m-3.75 0h7.5M12 15.75a3 3 0 01-3-3V4.5a3 3 0 116 0v8.25a3 3 0 01-3 3z"
                    }));
                }
                var ForwardRef = React2.forwardRef(MicrophoneIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/MinusCircleIcon.js
        var require_MinusCircleIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/MinusCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function MinusCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M15 12H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z"
                    }));
                }
                var ForwardRef = React2.forwardRef(MinusCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/MinusSmallIcon.js
        var require_MinusSmallIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/MinusSmallIcon.js"(exports, module) {
                var React2 = require_react();
                function MinusSmallIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M18 12H6"
                    }));
                }
                var ForwardRef = React2.forwardRef(MinusSmallIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/MinusIcon.js
        var require_MinusIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/MinusIcon.js"(exports, module) {
                var React2 = require_react();
                function MinusIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M19.5 12h-15"
                    }));
                }
                var ForwardRef = React2.forwardRef(MinusIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/MoonIcon.js
        var require_MoonIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/MoonIcon.js"(exports, module) {
                var React2 = require_react();
                function MoonIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M21.752 15.002A9.718 9.718 0 0118 15.75c-5.385 0-9.75-4.365-9.75-9.75 0-1.33.266-2.597.748-3.752A9.753 9.753 0 003 11.25C3 16.635 7.365 21 12.75 21a9.753 9.753 0 009.002-5.998z"
                    }));
                }
                var ForwardRef = React2.forwardRef(MoonIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/MusicalNoteIcon.js
        var require_MusicalNoteIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/MusicalNoteIcon.js"(exports, module) {
                var React2 = require_react();
                function MusicalNoteIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M9 9l10.5-3m0 6.553v3.75a2.25 2.25 0 01-1.632 2.163l-1.32.377a1.803 1.803 0 11-.99-3.467l2.31-.66a2.25 2.25 0 001.632-2.163zm0 0V2.25L9 5.25v10.303m0 0v3.75a2.25 2.25 0 01-1.632 2.163l-1.32.377a1.803 1.803 0 01-.99-3.467l2.31-.66A2.25 2.25 0 009 15.553z"
                    }));
                }
                var ForwardRef = React2.forwardRef(MusicalNoteIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/NewspaperIcon.js
        var require_NewspaperIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/NewspaperIcon.js"(exports, module) {
                var React2 = require_react();
                function NewspaperIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M12 7.5h1.5m-1.5 3h1.5m-7.5 3h7.5m-7.5 3h7.5m3-9h3.375c.621 0 1.125.504 1.125 1.125V18a2.25 2.25 0 01-2.25 2.25M16.5 7.5V18a2.25 2.25 0 002.25 2.25M16.5 7.5V4.875c0-.621-.504-1.125-1.125-1.125H4.125C3.504 3.75 3 4.254 3 4.875V18a2.25 2.25 0 002.25 2.25h13.5M6 7.5h3v3H6v-3z"
                    }));
                }
                var ForwardRef = React2.forwardRef(NewspaperIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/NoSymbolIcon.js
        var require_NoSymbolIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/NoSymbolIcon.js"(exports, module) {
                var React2 = require_react();
                function NoSymbolIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728A9 9 0 015.636 5.636m12.728 12.728L5.636 5.636"
                    }));
                }
                var ForwardRef = React2.forwardRef(NoSymbolIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/PaintBrushIcon.js
        var require_PaintBrushIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/PaintBrushIcon.js"(exports, module) {
                var React2 = require_react();
                function PaintBrushIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M9.53 16.122a3 3 0 00-5.78 1.128 2.25 2.25 0 01-2.4 2.245 4.5 4.5 0 008.4-2.245c0-.399-.078-.78-.22-1.128zm0 0a15.998 15.998 0 003.388-1.62m-5.043-.025a15.994 15.994 0 011.622-3.395m3.42 3.42a15.995 15.995 0 004.764-4.648l3.876-5.814a1.151 1.151 0 00-1.597-1.597L14.146 6.32a15.996 15.996 0 00-4.649 4.763m3.42 3.42a6.776 6.776 0 00-3.42-3.42"
                    }));
                }
                var ForwardRef = React2.forwardRef(PaintBrushIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/PaperAirplaneIcon.js
        var require_PaperAirplaneIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/PaperAirplaneIcon.js"(exports, module) {
                var React2 = require_react();
                function PaperAirplaneIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M6 12L3.269 3.126A59.768 59.768 0 0121.485 12 59.77 59.77 0 013.27 20.876L5.999 12zm0 0h7.5"
                    }));
                }
                var ForwardRef = React2.forwardRef(PaperAirplaneIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/PaperClipIcon.js
        var require_PaperClipIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/PaperClipIcon.js"(exports, module) {
                var React2 = require_react();
                function PaperClipIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M18.375 12.739l-7.693 7.693a4.5 4.5 0 01-6.364-6.364l10.94-10.94A3 3 0 1119.5 7.372L8.552 18.32m.009-.01l-.01.01m5.699-9.941l-7.81 7.81a1.5 1.5 0 002.112 2.13"
                    }));
                }
                var ForwardRef = React2.forwardRef(PaperClipIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/PauseCircleIcon.js
        var require_PauseCircleIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/PauseCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function PauseCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M14.25 9v6m-4.5 0V9M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
                    }));
                }
                var ForwardRef = React2.forwardRef(PauseCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/PauseIcon.js
        var require_PauseIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/PauseIcon.js"(exports, module) {
                var React2 = require_react();
                function PauseIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M15.75 5.25v13.5m-7.5-13.5v13.5"
                    }));
                }
                var ForwardRef = React2.forwardRef(PauseIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/PencilSquareIcon.js
        var require_PencilSquareIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/PencilSquareIcon.js"(exports, module) {
                var React2 = require_react();
                function PencilSquareIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L10.582 16.07a4.5 4.5 0 01-1.897 1.13L6 18l.8-2.685a4.5 4.5 0 011.13-1.897l8.932-8.931zm0 0L19.5 7.125M18 14v4.75A2.25 2.25 0 0115.75 21H5.25A2.25 2.25 0 013 18.75V8.25A2.25 2.25 0 015.25 6H10"
                    }));
                }
                var ForwardRef = React2.forwardRef(PencilSquareIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/PencilIcon.js
        var require_PencilIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/PencilIcon.js"(exports, module) {
                var React2 = require_react();
                function PencilIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M16.862 4.487l1.687-1.688a1.875 1.875 0 112.652 2.652L6.832 19.82a4.5 4.5 0 01-1.897 1.13l-2.685.8.8-2.685a4.5 4.5 0 011.13-1.897L16.863 4.487zm0 0L19.5 7.125"
                    }));
                }
                var ForwardRef = React2.forwardRef(PencilIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/PhoneArrowDownLeftIcon.js
        var require_PhoneArrowDownLeftIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/PhoneArrowDownLeftIcon.js"(exports, module) {
                var React2 = require_react();
                function PhoneArrowDownLeftIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M14.25 9.75v-4.5m0 4.5h4.5m-4.5 0l6-6m-3 18c-8.284 0-15-6.716-15-15V4.5A2.25 2.25 0 014.5 2.25h1.372c.516 0 .966.351 1.091.852l1.106 4.423c.11.44-.054.902-.417 1.173l-1.293.97a1.062 1.062 0 00-.38 1.21 12.035 12.035 0 007.143 7.143c.441.162.928-.004 1.21-.38l.97-1.293a1.125 1.125 0 011.173-.417l4.423 1.106c.5.125.852.575.852 1.091V19.5a2.25 2.25 0 01-2.25 2.25h-2.25z"
                    }));
                }
                var ForwardRef = React2.forwardRef(PhoneArrowDownLeftIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/PhoneArrowUpRightIcon.js
        var require_PhoneArrowUpRightIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/PhoneArrowUpRightIcon.js"(exports, module) {
                var React2 = require_react();
                function PhoneArrowUpRightIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M20.25 3.75v4.5m0-4.5h-4.5m4.5 0l-6 6m3 12c-8.284 0-15-6.716-15-15V4.5A2.25 2.25 0 014.5 2.25h1.372c.516 0 .966.351 1.091.852l1.106 4.423c.11.44-.054.902-.417 1.173l-1.293.97a1.062 1.062 0 00-.38 1.21 12.035 12.035 0 007.143 7.143c.441.162.928-.004 1.21-.38l.97-1.293a1.125 1.125 0 011.173-.417l4.423 1.106c.5.125.852.575.852 1.091V19.5a2.25 2.25 0 01-2.25 2.25h-2.25z"
                    }));
                }
                var ForwardRef = React2.forwardRef(PhoneArrowUpRightIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/PhoneXMarkIcon.js
        var require_PhoneXMarkIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/PhoneXMarkIcon.js"(exports, module) {
                var React2 = require_react();
                function PhoneXMarkIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M15.75 3.75L18 6m0 0l2.25 2.25M18 6l2.25-2.25M18 6l-2.25 2.25m1.5 13.5c-8.284 0-15-6.716-15-15V4.5A2.25 2.25 0 014.5 2.25h1.372c.516 0 .966.351 1.091.852l1.106 4.423c.11.44-.054.902-.417 1.173l-1.293.97a1.062 1.062 0 00-.38 1.21 12.035 12.035 0 007.143 7.143c.441.162.928-.004 1.21-.38l.97-1.293a1.125 1.125 0 011.173-.417l4.423 1.106c.5.125.852.575.852 1.091V19.5a2.25 2.25 0 01-2.25 2.25h-2.25z"
                    }));
                }
                var ForwardRef = React2.forwardRef(PhoneXMarkIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/PhoneIcon.js
        var require_PhoneIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/PhoneIcon.js"(exports, module) {
                var React2 = require_react();
                function PhoneIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M2.25 6.75c0 8.284 6.716 15 15 15h2.25a2.25 2.25 0 002.25-2.25v-1.372c0-.516-.351-.966-.852-1.091l-4.423-1.106c-.44-.11-.902.055-1.173.417l-.97 1.293c-.282.376-.769.542-1.21.38a12.035 12.035 0 01-7.143-7.143c-.162-.441.004-.928.38-1.21l1.293-.97c.363-.271.527-.734.417-1.173L6.963 3.102a1.125 1.125 0 00-1.091-.852H4.5A2.25 2.25 0 002.25 4.5v2.25z"
                    }));
                }
                var ForwardRef = React2.forwardRef(PhoneIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/PhotoIcon.js
        var require_PhotoIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/PhotoIcon.js"(exports, module) {
                var React2 = require_react();
                function PhotoIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M2.25 15.75l5.159-5.159a2.25 2.25 0 013.182 0l5.159 5.159m-1.5-1.5l1.409-1.409a2.25 2.25 0 013.182 0l2.909 2.909m-18 3.75h16.5a1.5 1.5 0 001.5-1.5V6a1.5 1.5 0 00-1.5-1.5H3.75A1.5 1.5 0 002.25 6v12a1.5 1.5 0 001.5 1.5zm10.5-11.25h.008v.008h-.008V8.25zm.375 0a.375.375 0 11-.75 0 .375.375 0 01.75 0z"
                    }));
                }
                var ForwardRef = React2.forwardRef(PhotoIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/PlayCircleIcon.js
        var require_PlayCircleIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/PlayCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function PlayCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M15.91 11.672a.375.375 0 010 .656l-5.603 3.113a.375.375 0 01-.557-.328V8.887c0-.286.307-.466.557-.327l5.603 3.112z"
                    }));
                }
                var ForwardRef = React2.forwardRef(PlayCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/PlayPauseIcon.js
        var require_PlayPauseIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/PlayPauseIcon.js"(exports, module) {
                var React2 = require_react();
                function PlayPauseIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M21 7.5V18M15 7.5V18M3 16.811V8.69c0-.864.933-1.406 1.683-.977l7.108 4.061a1.125 1.125 0 010 1.954l-7.108 4.061A1.125 1.125 0 013 16.811z"
                    }));
                }
                var ForwardRef = React2.forwardRef(PlayPauseIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/PlayIcon.js
        var require_PlayIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/PlayIcon.js"(exports, module) {
                var React2 = require_react();
                function PlayIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M5.25 5.653c0-.856.917-1.398 1.667-.986l11.54 6.348a1.125 1.125 0 010 1.971l-11.54 6.347a1.125 1.125 0 01-1.667-.985V5.653z"
                    }));
                }
                var ForwardRef = React2.forwardRef(PlayIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/PlusCircleIcon.js
        var require_PlusCircleIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/PlusCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function PlusCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M12 9v6m3-3H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z"
                    }));
                }
                var ForwardRef = React2.forwardRef(PlusCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/PlusSmallIcon.js
        var require_PlusSmallIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/PlusSmallIcon.js"(exports, module) {
                var React2 = require_react();
                function PlusSmallIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M12 6v12m6-6H6"
                    }));
                }
                var ForwardRef = React2.forwardRef(PlusSmallIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/PlusIcon.js
        var require_PlusIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/PlusIcon.js"(exports, module) {
                var React2 = require_react();
                function PlusIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M12 4.5v15m7.5-7.5h-15"
                    }));
                }
                var ForwardRef = React2.forwardRef(PlusIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/PowerIcon.js
        var require_PowerIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/PowerIcon.js"(exports, module) {
                var React2 = require_react();
                function PowerIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M5.636 5.636a9 9 0 1012.728 0M12 3v9"
                    }));
                }
                var ForwardRef = React2.forwardRef(PowerIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/PresentationChartBarIcon.js
        var require_PresentationChartBarIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/PresentationChartBarIcon.js"(exports, module) {
                var React2 = require_react();
                function PresentationChartBarIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M3.75 3v11.25A2.25 2.25 0 006 16.5h2.25M3.75 3h-1.5m1.5 0h16.5m0 0h1.5m-1.5 0v11.25A2.25 2.25 0 0118 16.5h-2.25m-7.5 0h7.5m-7.5 0l-1 3m8.5-3l1 3m0 0l.5 1.5m-.5-1.5h-9.5m0 0l-.5 1.5M9 11.25v1.5M12 9v3.75m3-6v6"
                    }));
                }
                var ForwardRef = React2.forwardRef(PresentationChartBarIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/PresentationChartLineIcon.js
        var require_PresentationChartLineIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/PresentationChartLineIcon.js"(exports, module) {
                var React2 = require_react();
                function PresentationChartLineIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M3.75 3v11.25A2.25 2.25 0 006 16.5h2.25M3.75 3h-1.5m1.5 0h16.5m0 0h1.5m-1.5 0v11.25A2.25 2.25 0 0118 16.5h-2.25m-7.5 0h7.5m-7.5 0l-1 3m8.5-3l1 3m0 0l.5 1.5m-.5-1.5h-9.5m0 0l-.5 1.5m.75-9l3-3 2.148 2.148A12.061 12.061 0 0116.5 7.605"
                    }));
                }
                var ForwardRef = React2.forwardRef(PresentationChartLineIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/PrinterIcon.js
        var require_PrinterIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/PrinterIcon.js"(exports, module) {
                var React2 = require_react();
                function PrinterIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M6.72 13.829c-.24.03-.48.062-.72.096m.72-.096a42.415 42.415 0 0110.56 0m-10.56 0L6.34 18m10.94-4.171c.24.03.48.062.72.096m-.72-.096L17.66 18m0 0l.229 2.523a1.125 1.125 0 01-1.12 1.227H7.231c-.662 0-1.18-.568-1.12-1.227L6.34 18m11.318 0h1.091A2.25 2.25 0 0021 15.75V9.456c0-1.081-.768-2.015-1.837-2.175a48.055 48.055 0 00-1.913-.247M6.34 18H5.25A2.25 2.25 0 013 15.75V9.456c0-1.081.768-2.015 1.837-2.175a48.041 48.041 0 011.913-.247m10.5 0a48.536 48.536 0 00-10.5 0m10.5 0V3.375c0-.621-.504-1.125-1.125-1.125h-8.25c-.621 0-1.125.504-1.125 1.125v3.659M18 10.5h.008v.008H18V10.5zm-3 0h.008v.008H15V10.5z"
                    }));
                }
                var ForwardRef = React2.forwardRef(PrinterIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/PuzzlePieceIcon.js
        var require_PuzzlePieceIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/PuzzlePieceIcon.js"(exports, module) {
                var React2 = require_react();
                function PuzzlePieceIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M14.25 6.087c0-.355.186-.676.401-.959.221-.29.349-.634.349-1.003 0-1.036-1.007-1.875-2.25-1.875s-2.25.84-2.25 1.875c0 .369.128.713.349 1.003.215.283.401.604.401.959v0a.64.64 0 01-.657.643 48.39 48.39 0 01-4.163-.3c.186 1.613.293 3.25.315 4.907a.656.656 0 01-.658.663v0c-.355 0-.676-.186-.959-.401a1.647 1.647 0 00-1.003-.349c-1.036 0-1.875 1.007-1.875 2.25s.84 2.25 1.875 2.25c.369 0 .713-.128 1.003-.349.283-.215.604-.401.959-.401v0c.31 0 .555.26.532.57a48.039 48.039 0 01-.642 5.056c1.518.19 3.058.309 4.616.354a.64.64 0 00.657-.643v0c0-.355-.186-.676-.401-.959a1.647 1.647 0 01-.349-1.003c0-1.035 1.008-1.875 2.25-1.875 1.243 0 2.25.84 2.25 1.875 0 .369-.128.713-.349 1.003-.215.283-.4.604-.4.959v0c0 .333.277.599.61.58a48.1 48.1 0 005.427-.63 48.05 48.05 0 00.582-4.717.532.532 0 00-.533-.57v0c-.355 0-.676.186-.959.401-.29.221-.634.349-1.003.349-1.035 0-1.875-1.007-1.875-2.25s.84-2.25 1.875-2.25c.37 0 .713.128 1.003.349.283.215.604.401.96.401v0a.656.656 0 00.658-.663 48.422 48.422 0 00-.37-5.36c-1.886.342-3.81.574-5.766.689a.578.578 0 01-.61-.58v0z"
                    }));
                }
                var ForwardRef = React2.forwardRef(PuzzlePieceIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/QrCodeIcon.js
        var require_QrCodeIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/QrCodeIcon.js"(exports, module) {
                var React2 = require_react();
                function QrCodeIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M3.75 4.875c0-.621.504-1.125 1.125-1.125h4.5c.621 0 1.125.504 1.125 1.125v4.5c0 .621-.504 1.125-1.125 1.125h-4.5A1.125 1.125 0 013.75 9.375v-4.5zM3.75 14.625c0-.621.504-1.125 1.125-1.125h4.5c.621 0 1.125.504 1.125 1.125v4.5c0 .621-.504 1.125-1.125 1.125h-4.5a1.125 1.125 0 01-1.125-1.125v-4.5zM13.5 4.875c0-.621.504-1.125 1.125-1.125h4.5c.621 0 1.125.504 1.125 1.125v4.5c0 .621-.504 1.125-1.125 1.125h-4.5A1.125 1.125 0 0113.5 9.375v-4.5z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M6.75 6.75h.75v.75h-.75v-.75zM6.75 16.5h.75v.75h-.75v-.75zM16.5 6.75h.75v.75h-.75v-.75zM13.5 13.5h.75v.75h-.75v-.75zM13.5 19.5h.75v.75h-.75v-.75zM19.5 13.5h.75v.75h-.75v-.75zM19.5 19.5h.75v.75h-.75v-.75zM16.5 16.5h.75v.75h-.75v-.75z"
                    }));
                }
                var ForwardRef = React2.forwardRef(QrCodeIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/QuestionMarkCircleIcon.js
        var require_QuestionMarkCircleIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/QuestionMarkCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function QuestionMarkCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M9.879 7.519c1.171-1.025 3.071-1.025 4.242 0 1.172 1.025 1.172 2.687 0 3.712-.203.179-.43.326-.67.442-.745.361-1.45.999-1.45 1.827v.75M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9 5.25h.008v.008H12v-.008z"
                    }));
                }
                var ForwardRef = React2.forwardRef(QuestionMarkCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/QueueListIcon.js
        var require_QueueListIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/QueueListIcon.js"(exports, module) {
                var React2 = require_react();
                function QueueListIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M3.75 12h16.5m-16.5 3.75h16.5M3.75 19.5h16.5M5.625 4.5h12.75a1.875 1.875 0 010 3.75H5.625a1.875 1.875 0 010-3.75z"
                    }));
                }
                var ForwardRef = React2.forwardRef(QueueListIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/RadioIcon.js
        var require_RadioIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/RadioIcon.js"(exports, module) {
                var React2 = require_react();
                function RadioIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M3.75 7.5l16.5-4.125M12 6.75c-2.708 0-5.363.224-7.948.655C2.999 7.58 2.25 8.507 2.25 9.574v9.176A2.25 2.25 0 004.5 21h15a2.25 2.25 0 002.25-2.25V9.574c0-1.067-.75-1.994-1.802-2.169A48.329 48.329 0 0012 6.75zm-1.683 6.443l-.005.005-.006-.005.006-.005.005.005zm-.005 2.127l-.005-.006.005-.005.005.005-.005.005zm-2.116-.006l-.005.006-.006-.006.005-.005.006.005zm-.005-2.116l-.006-.005.006-.005.005.005-.005.005zM9.255 10.5v.008h-.008V10.5h.008zm3.249 1.88l-.007.004-.003-.007.006-.003.004.006zm-1.38 5.126l-.003-.006.006-.004.004.007-.006.003zm.007-6.501l-.003.006-.007-.003.004-.007.006.004zm1.37 5.129l-.007-.004.004-.006.006.003-.004.007zm.504-1.877h-.008v-.007h.008v.007zM9.255 18v.008h-.008V18h.008zm-3.246-1.87l-.007.004L6 16.127l.006-.003.004.006zm1.366-5.119l-.004-.006.006-.004.004.007-.006.003zM7.38 17.5l-.003.006-.007-.003.004-.007.006.004zm-1.376-5.116L6 12.38l.003-.007.007.004-.004.007zm-.5 1.873h-.008v-.007h.008v.007zM17.25 12.75a.75.75 0 110-1.5.75.75 0 010 1.5zm0 4.5a.75.75 0 110-1.5.75.75 0 010 1.5z"
                    }));
                }
                var ForwardRef = React2.forwardRef(RadioIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ReceiptPercentIcon.js
        var require_ReceiptPercentIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ReceiptPercentIcon.js"(exports, module) {
                var React2 = require_react();
                function ReceiptPercentIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M9 14.25l6-6m4.5-3.493V21.75l-3.75-1.5-3.75 1.5-3.75-1.5-3.75 1.5V4.757c0-1.108.806-2.057 1.907-2.185a48.507 48.507 0 0111.186 0c1.1.128 1.907 1.077 1.907 2.185zM9.75 9h.008v.008H9.75V9zm.375 0a.375.375 0 11-.75 0 .375.375 0 01.75 0zm4.125 4.5h.008v.008h-.008V13.5zm.375 0a.375.375 0 11-.75 0 .375.375 0 01.75 0z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ReceiptPercentIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ReceiptRefundIcon.js
        var require_ReceiptRefundIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ReceiptRefundIcon.js"(exports, module) {
                var React2 = require_react();
                function ReceiptRefundIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M8.25 9.75h4.875a2.625 2.625 0 010 5.25H12M8.25 9.75L10.5 7.5M8.25 9.75L10.5 12m9-7.243V21.75l-3.75-1.5-3.75 1.5-3.75-1.5-3.75 1.5V4.757c0-1.108.806-2.057 1.907-2.185a48.507 48.507 0 0111.186 0c1.1.128 1.907 1.077 1.907 2.185z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ReceiptRefundIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/RectangleGroupIcon.js
        var require_RectangleGroupIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/RectangleGroupIcon.js"(exports, module) {
                var React2 = require_react();
                function RectangleGroupIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M2.25 7.125C2.25 6.504 2.754 6 3.375 6h6c.621 0 1.125.504 1.125 1.125v3.75c0 .621-.504 1.125-1.125 1.125h-6a1.125 1.125 0 01-1.125-1.125v-3.75zM14.25 8.625c0-.621.504-1.125 1.125-1.125h5.25c.621 0 1.125.504 1.125 1.125v8.25c0 .621-.504 1.125-1.125 1.125h-5.25a1.125 1.125 0 01-1.125-1.125v-8.25zM3.75 16.125c0-.621.504-1.125 1.125-1.125h5.25c.621 0 1.125.504 1.125 1.125v2.25c0 .621-.504 1.125-1.125 1.125h-5.25a1.125 1.125 0 01-1.125-1.125v-2.25z"
                    }));
                }
                var ForwardRef = React2.forwardRef(RectangleGroupIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/RectangleStackIcon.js
        var require_RectangleStackIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/RectangleStackIcon.js"(exports, module) {
                var React2 = require_react();
                function RectangleStackIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M6 6.878V6a2.25 2.25 0 012.25-2.25h7.5A2.25 2.25 0 0118 6v.878m-12 0c.235-.083.487-.128.75-.128h10.5c.263 0 .515.045.75.128m-12 0A2.25 2.25 0 004.5 9v.878m13.5-3A2.25 2.25 0 0119.5 9v.878m0 0a2.246 2.246 0 00-.75-.128H5.25c-.263 0-.515.045-.75.128m15 0A2.25 2.25 0 0121 12v6a2.25 2.25 0 01-2.25 2.25H5.25A2.25 2.25 0 013 18v-6c0-.98.626-1.813 1.5-2.122"
                    }));
                }
                var ForwardRef = React2.forwardRef(RectangleStackIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/RocketLaunchIcon.js
        var require_RocketLaunchIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/RocketLaunchIcon.js"(exports, module) {
                var React2 = require_react();
                function RocketLaunchIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M15.59 14.37a6 6 0 01-5.84 7.38v-4.8m5.84-2.58a14.98 14.98 0 006.16-12.12A14.98 14.98 0 009.631 8.41m5.96 5.96a14.926 14.926 0 01-5.841 2.58m-.119-8.54a6 6 0 00-7.381 5.84h4.8m2.581-5.84a14.927 14.927 0 00-2.58 5.84m2.699 2.7c-.103.021-.207.041-.311.06a15.09 15.09 0 01-2.448-2.448 14.9 14.9 0 01.06-.312m-2.24 2.39a4.493 4.493 0 00-1.757 4.306 4.493 4.493 0 004.306-1.758M16.5 9a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0z"
                    }));
                }
                var ForwardRef = React2.forwardRef(RocketLaunchIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/RssIcon.js
        var require_RssIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/RssIcon.js"(exports, module) {
                var React2 = require_react();
                function RssIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M12.75 19.5v-.75a7.5 7.5 0 00-7.5-7.5H4.5m0-6.75h.75c7.87 0 14.25 6.38 14.25 14.25v.75M6 18.75a.75.75 0 11-1.5 0 .75.75 0 011.5 0z"
                    }));
                }
                var ForwardRef = React2.forwardRef(RssIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ScaleIcon.js
        var require_ScaleIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ScaleIcon.js"(exports, module) {
                var React2 = require_react();
                function ScaleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M12 3v17.25m0 0c-1.472 0-2.882.265-4.185.75M12 20.25c1.472 0 2.882.265 4.185.75M18.75 4.97A48.416 48.416 0 0012 4.5c-2.291 0-4.545.16-6.75.47m13.5 0c1.01.143 2.01.317 3 .52m-3-.52l2.62 10.726c.122.499-.106 1.028-.589 1.202a5.988 5.988 0 01-2.031.352 5.988 5.988 0 01-2.031-.352c-.483-.174-.711-.703-.59-1.202L18.75 4.971zm-16.5.52c.99-.203 1.99-.377 3-.52m0 0l2.62 10.726c.122.499-.106 1.028-.589 1.202a5.989 5.989 0 01-2.031.352 5.989 5.989 0 01-2.031-.352c-.483-.174-.711-.703-.59-1.202L5.25 4.971z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ScaleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ScissorsIcon.js
        var require_ScissorsIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ScissorsIcon.js"(exports, module) {
                var React2 = require_react();
                function ScissorsIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M7.848 8.25l1.536.887M7.848 8.25a3 3 0 11-5.196-3 3 3 0 015.196 3zm1.536.887a2.165 2.165 0 011.083 1.839c.005.351.054.695.14 1.024M9.384 9.137l2.077 1.199M7.848 15.75l1.536-.887m-1.536.887a3 3 0 11-5.196 3 3 3 0 015.196-3zm1.536-.887a2.165 2.165 0 001.083-1.838c.005-.352.054-.695.14-1.025m-1.223 2.863l2.077-1.199m0-3.328a4.323 4.323 0 012.068-1.379l5.325-1.628a4.5 4.5 0 012.48-.044l.803.215-7.794 4.5m-2.882-1.664A4.331 4.331 0 0010.607 12m3.736 0l7.794 4.5-.802.215a4.5 4.5 0 01-2.48-.043l-5.326-1.629a4.324 4.324 0 01-2.068-1.379M14.343 12l-2.882 1.664"
                    }));
                }
                var ForwardRef = React2.forwardRef(ScissorsIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ServerStackIcon.js
        var require_ServerStackIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ServerStackIcon.js"(exports, module) {
                var React2 = require_react();
                function ServerStackIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M5.25 14.25h13.5m-13.5 0a3 3 0 01-3-3m3 3a3 3 0 100 6h13.5a3 3 0 100-6m-16.5-3a3 3 0 013-3h13.5a3 3 0 013 3m-19.5 0a4.5 4.5 0 01.9-2.7L5.737 5.1a3.375 3.375 0 012.7-1.35h7.126c1.062 0 2.062.5 2.7 1.35l2.587 3.45a4.5 4.5 0 01.9 2.7m0 0a3 3 0 01-3 3m0 3h.008v.008h-.008v-.008zm0-6h.008v.008h-.008v-.008zm-3 6h.008v.008h-.008v-.008zm0-6h.008v.008h-.008v-.008z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ServerStackIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ServerIcon.js
        var require_ServerIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ServerIcon.js"(exports, module) {
                var React2 = require_react();
                function ServerIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M21.75 17.25v-.228a4.5 4.5 0 00-.12-1.03l-2.268-9.64a3.375 3.375 0 00-3.285-2.602H7.923a3.375 3.375 0 00-3.285 2.602l-2.268 9.64a4.5 4.5 0 00-.12 1.03v.228m19.5 0a3 3 0 01-3 3H5.25a3 3 0 01-3-3m19.5 0a3 3 0 00-3-3H5.25a3 3 0 00-3 3m16.5 0h.008v.008h-.008v-.008zm-3 0h.008v.008h-.008v-.008z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ServerIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ShareIcon.js
        var require_ShareIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ShareIcon.js"(exports, module) {
                var React2 = require_react();
                function ShareIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M7.217 10.907a2.25 2.25 0 100 2.186m0-2.186c.18.324.283.696.283 1.093s-.103.77-.283 1.093m0-2.186l9.566-5.314m-9.566 7.5l9.566 5.314m0 0a2.25 2.25 0 103.935 2.186 2.25 2.25 0 00-3.935-2.186zm0-12.814a2.25 2.25 0 103.933-2.185 2.25 2.25 0 00-3.933 2.185z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ShareIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ShieldCheckIcon.js
        var require_ShieldCheckIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ShieldCheckIcon.js"(exports, module) {
                var React2 = require_react();
                function ShieldCheckIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M9 12.75L11.25 15 15 9.75m-3-7.036A11.959 11.959 0 013.598 6 11.99 11.99 0 003 9.749c0 5.592 3.824 10.29 9 11.623 5.176-1.332 9-6.03 9-11.622 0-1.31-.21-2.571-.598-3.751h-.152c-3.196 0-6.1-1.248-8.25-3.285z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ShieldCheckIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ShieldExclamationIcon.js
        var require_ShieldExclamationIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ShieldExclamationIcon.js"(exports, module) {
                var React2 = require_react();
                function ShieldExclamationIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M12 9v3.75m0-10.036A11.959 11.959 0 013.598 6 11.99 11.99 0 003 9.75c0 5.592 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.31-.21-2.57-.598-3.75h-.152c-3.196 0-6.1-1.249-8.25-3.286zm0 13.036h.008v.008H12v-.008z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ShieldExclamationIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ShoppingBagIcon.js
        var require_ShoppingBagIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ShoppingBagIcon.js"(exports, module) {
                var React2 = require_react();
                function ShoppingBagIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M15.75 10.5V6a3.75 3.75 0 10-7.5 0v4.5m11.356-1.993l1.263 12c.07.665-.45 1.243-1.119 1.243H4.25a1.125 1.125 0 01-1.12-1.243l1.264-12A1.125 1.125 0 015.513 7.5h12.974c.576 0 1.059.435 1.119 1.007zM8.625 10.5a.375.375 0 11-.75 0 .375.375 0 01.75 0zm7.5 0a.375.375 0 11-.75 0 .375.375 0 01.75 0z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ShoppingBagIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ShoppingCartIcon.js
        var require_ShoppingCartIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ShoppingCartIcon.js"(exports, module) {
                var React2 = require_react();
                function ShoppingCartIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M2.25 3h1.386c.51 0 .955.343 1.087.835l.383 1.437M7.5 14.25a3 3 0 00-3 3h15.75m-12.75-3h11.218c1.121-2.3 2.1-4.684 2.924-7.138a60.114 60.114 0 00-16.536-1.84M7.5 14.25L5.106 5.272M6 20.25a.75.75 0 11-1.5 0 .75.75 0 011.5 0zm12.75 0a.75.75 0 11-1.5 0 .75.75 0 011.5 0z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ShoppingCartIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/SignalSlashIcon.js
        var require_SignalSlashIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/SignalSlashIcon.js"(exports, module) {
                var React2 = require_react();
                function SignalSlashIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M3 3l8.735 8.735m0 0a.374.374 0 11.53.53m-.53-.53l.53.53m0 0L21 21M14.652 9.348a3.75 3.75 0 010 5.304m2.121-7.425a6.75 6.75 0 010 9.546m2.121-11.667c3.808 3.807 3.808 9.98 0 13.788m-9.546-4.242a3.733 3.733 0 01-1.06-2.122m-1.061 4.243a6.75 6.75 0 01-1.625-6.929m-.496 9.05c-3.068-3.067-3.664-7.67-1.79-11.334M12 12h.008v.008H12V12z"
                    }));
                }
                var ForwardRef = React2.forwardRef(SignalSlashIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/SignalIcon.js
        var require_SignalIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/SignalIcon.js"(exports, module) {
                var React2 = require_react();
                function SignalIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M9.348 14.651a3.75 3.75 0 010-5.303m5.304 0a3.75 3.75 0 010 5.303m-7.425 2.122a6.75 6.75 0 010-9.546m9.546 0a6.75 6.75 0 010 9.546M5.106 18.894c-3.808-3.808-3.808-9.98 0-13.789m13.788 0c3.808 3.808 3.808 9.981 0 13.79M12 12h.008v.007H12V12zm.375 0a.375.375 0 11-.75 0 .375.375 0 01.75 0z"
                    }));
                }
                var ForwardRef = React2.forwardRef(SignalIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/SparklesIcon.js
        var require_SparklesIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/SparklesIcon.js"(exports, module) {
                var React2 = require_react();
                function SparklesIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M9.813 15.904L9 18.75l-.813-2.846a4.5 4.5 0 00-3.09-3.09L2.25 12l2.846-.813a4.5 4.5 0 003.09-3.09L9 5.25l.813 2.846a4.5 4.5 0 003.09 3.09L15.75 12l-2.846.813a4.5 4.5 0 00-3.09 3.09zM18.259 8.715L18 9.75l-.259-1.035a3.375 3.375 0 00-2.455-2.456L14.25 6l1.036-.259a3.375 3.375 0 002.455-2.456L18 2.25l.259 1.035a3.375 3.375 0 002.456 2.456L21.75 6l-1.035.259a3.375 3.375 0 00-2.456 2.456zM16.894 20.567L16.5 21.75l-.394-1.183a2.25 2.25 0 00-1.423-1.423L13.5 18.75l1.183-.394a2.25 2.25 0 001.423-1.423l.394-1.183.394 1.183a2.25 2.25 0 001.423 1.423l1.183.394-1.183.394a2.25 2.25 0 00-1.423 1.423z"
                    }));
                }
                var ForwardRef = React2.forwardRef(SparklesIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/SpeakerWaveIcon.js
        var require_SpeakerWaveIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/SpeakerWaveIcon.js"(exports, module) {
                var React2 = require_react();
                function SpeakerWaveIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M19.114 5.636a9 9 0 010 12.728M16.463 8.288a5.25 5.25 0 010 7.424M6.75 8.25l4.72-4.72a.75.75 0 011.28.53v15.88a.75.75 0 01-1.28.53l-4.72-4.72H4.51c-.88 0-1.704-.507-1.938-1.354A9.01 9.01 0 012.25 12c0-.83.112-1.633.322-2.396C2.806 8.756 3.63 8.25 4.51 8.25H6.75z"
                    }));
                }
                var ForwardRef = React2.forwardRef(SpeakerWaveIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/SpeakerXMarkIcon.js
        var require_SpeakerXMarkIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/SpeakerXMarkIcon.js"(exports, module) {
                var React2 = require_react();
                function SpeakerXMarkIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M17.25 9.75L19.5 12m0 0l2.25 2.25M19.5 12l2.25-2.25M19.5 12l-2.25 2.25m-10.5-6l4.72-4.72a.75.75 0 011.28.531V19.94a.75.75 0 01-1.28.53l-4.72-4.72H4.51c-.88 0-1.704-.506-1.938-1.354A9.01 9.01 0 012.25 12c0-.83.112-1.633.322-2.395C2.806 8.757 3.63 8.25 4.51 8.25H6.75z"
                    }));
                }
                var ForwardRef = React2.forwardRef(SpeakerXMarkIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/Square2StackIcon.js
        var require_Square2StackIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/Square2StackIcon.js"(exports, module) {
                var React2 = require_react();
                function Square2StackIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M16.5 8.25V6a2.25 2.25 0 00-2.25-2.25H6A2.25 2.25 0 003.75 6v8.25A2.25 2.25 0 006 16.5h2.25m8.25-8.25H18a2.25 2.25 0 012.25 2.25V18A2.25 2.25 0 0118 20.25h-7.5A2.25 2.25 0 018.25 18v-1.5m8.25-8.25h-6a2.25 2.25 0 00-2.25 2.25v6"
                    }));
                }
                var ForwardRef = React2.forwardRef(Square2StackIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/Square3Stack3DIcon.js
        var require_Square3Stack3DIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/Square3Stack3DIcon.js"(exports, module) {
                var React2 = require_react();
                function Square3Stack3DIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M6.429 9.75L2.25 12l4.179 2.25m0-4.5l5.571 3 5.571-3m-11.142 0L2.25 7.5 12 2.25l9.75 5.25-4.179 2.25m0 0L21.75 12l-4.179 2.25m0 0l4.179 2.25L12 21.75 2.25 16.5l4.179-2.25m11.142 0l-5.571 3-5.571-3"
                    }));
                }
                var ForwardRef = React2.forwardRef(Square3Stack3DIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/Squares2X2Icon.js
        var require_Squares2X2Icon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/Squares2X2Icon.js"(exports, module) {
                var React2 = require_react();
                function Squares2X2Icon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M3.75 6A2.25 2.25 0 016 3.75h2.25A2.25 2.25 0 0110.5 6v2.25a2.25 2.25 0 01-2.25 2.25H6a2.25 2.25 0 01-2.25-2.25V6zM3.75 15.75A2.25 2.25 0 016 13.5h2.25a2.25 2.25 0 012.25 2.25V18a2.25 2.25 0 01-2.25 2.25H6A2.25 2.25 0 013.75 18v-2.25zM13.5 6a2.25 2.25 0 012.25-2.25H18A2.25 2.25 0 0120.25 6v2.25A2.25 2.25 0 0118 10.5h-2.25a2.25 2.25 0 01-2.25-2.25V6zM13.5 15.75a2.25 2.25 0 012.25-2.25H18a2.25 2.25 0 012.25 2.25V18A2.25 2.25 0 0118 20.25h-2.25A2.25 2.25 0 0113.5 18v-2.25z"
                    }));
                }
                var ForwardRef = React2.forwardRef(Squares2X2Icon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/SquaresPlusIcon.js
        var require_SquaresPlusIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/SquaresPlusIcon.js"(exports, module) {
                var React2 = require_react();
                function SquaresPlusIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M13.5 16.875h3.375m0 0h3.375m-3.375 0V13.5m0 3.375v3.375M6 10.5h2.25a2.25 2.25 0 002.25-2.25V6a2.25 2.25 0 00-2.25-2.25H6A2.25 2.25 0 003.75 6v2.25A2.25 2.25 0 006 10.5zm0 9.75h2.25A2.25 2.25 0 0010.5 18v-2.25a2.25 2.25 0 00-2.25-2.25H6a2.25 2.25 0 00-2.25 2.25V18A2.25 2.25 0 006 20.25zm9.75-9.75H18a2.25 2.25 0 002.25-2.25V6A2.25 2.25 0 0018 3.75h-2.25A2.25 2.25 0 0013.5 6v2.25a2.25 2.25 0 002.25 2.25z"
                    }));
                }
                var ForwardRef = React2.forwardRef(SquaresPlusIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/StarIcon.js
        var require_StarIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/StarIcon.js"(exports, module) {
                var React2 = require_react();
                function StarIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M11.48 3.499a.562.562 0 011.04 0l2.125 5.111a.563.563 0 00.475.345l5.518.442c.499.04.701.663.321.988l-4.204 3.602a.563.563 0 00-.182.557l1.285 5.385a.562.562 0 01-.84.61l-4.725-2.885a.563.563 0 00-.586 0L6.982 20.54a.562.562 0 01-.84-.61l1.285-5.386a.562.562 0 00-.182-.557l-4.204-3.602a.563.563 0 01.321-.988l5.518-.442a.563.563 0 00.475-.345L11.48 3.5z"
                    }));
                }
                var ForwardRef = React2.forwardRef(StarIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/StopCircleIcon.js
        var require_StopCircleIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/StopCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function StopCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M9 9.563C9 9.252 9.252 9 9.563 9h4.874c.311 0 .563.252.563.563v4.874c0 .311-.252.563-.563.563H9.564A.562.562 0 019 14.437V9.564z"
                    }));
                }
                var ForwardRef = React2.forwardRef(StopCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/StopIcon.js
        var require_StopIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/StopIcon.js"(exports, module) {
                var React2 = require_react();
                function StopIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M5.25 7.5A2.25 2.25 0 017.5 5.25h9a2.25 2.25 0 012.25 2.25v9a2.25 2.25 0 01-2.25 2.25h-9a2.25 2.25 0 01-2.25-2.25v-9z"
                    }));
                }
                var ForwardRef = React2.forwardRef(StopIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/SunIcon.js
        var require_SunIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/SunIcon.js"(exports, module) {
                var React2 = require_react();
                function SunIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M12 3v2.25m6.364.386l-1.591 1.591M21 12h-2.25m-.386 6.364l-1.591-1.591M12 18.75V21m-4.773-4.227l-1.591 1.591M5.25 12H3m4.227-4.773L5.636 5.636M15.75 12a3.75 3.75 0 11-7.5 0 3.75 3.75 0 017.5 0z"
                    }));
                }
                var ForwardRef = React2.forwardRef(SunIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/SwatchIcon.js
        var require_SwatchIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/SwatchIcon.js"(exports, module) {
                var React2 = require_react();
                function SwatchIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M4.098 19.902a3.75 3.75 0 005.304 0l6.401-6.402M6.75 21A3.75 3.75 0 013 17.25V4.125C3 3.504 3.504 3 4.125 3h5.25c.621 0 1.125.504 1.125 1.125v4.072M6.75 21a3.75 3.75 0 003.75-3.75V8.197M6.75 21h13.125c.621 0 1.125-.504 1.125-1.125v-5.25c0-.621-.504-1.125-1.125-1.125h-4.072M10.5 8.197l2.88-2.88c.438-.439 1.15-.439 1.59 0l3.712 3.713c.44.44.44 1.152 0 1.59l-2.879 2.88M6.75 17.25h.008v.008H6.75v-.008z"
                    }));
                }
                var ForwardRef = React2.forwardRef(SwatchIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/TableCellsIcon.js
        var require_TableCellsIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/TableCellsIcon.js"(exports, module) {
                var React2 = require_react();
                function TableCellsIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M3.375 19.5h17.25m-17.25 0a1.125 1.125 0 01-1.125-1.125M3.375 19.5h7.5c.621 0 1.125-.504 1.125-1.125m-9.75 0V5.625m0 12.75v-1.5c0-.621.504-1.125 1.125-1.125m18.375 2.625V5.625m0 12.75c0 .621-.504 1.125-1.125 1.125m1.125-1.125v-1.5c0-.621-.504-1.125-1.125-1.125m0 3.75h-7.5A1.125 1.125 0 0112 18.375m9.75-12.75c0-.621-.504-1.125-1.125-1.125H3.375c-.621 0-1.125.504-1.125 1.125m19.5 0v1.5c0 .621-.504 1.125-1.125 1.125M2.25 5.625v1.5c0 .621.504 1.125 1.125 1.125m0 0h17.25m-17.25 0h7.5c.621 0 1.125.504 1.125 1.125M3.375 8.25c-.621 0-1.125.504-1.125 1.125v1.5c0 .621.504 1.125 1.125 1.125m17.25-3.75h-7.5c-.621 0-1.125.504-1.125 1.125m8.625-1.125c.621 0 1.125.504 1.125 1.125v1.5c0 .621-.504 1.125-1.125 1.125m-17.25 0h7.5m-7.5 0c-.621 0-1.125.504-1.125 1.125v1.5c0 .621.504 1.125 1.125 1.125M12 10.875v-1.5m0 1.5c0 .621-.504 1.125-1.125 1.125M12 10.875c0 .621.504 1.125 1.125 1.125m-2.25 0c.621 0 1.125.504 1.125 1.125M13.125 12h7.5m-7.5 0c-.621 0-1.125.504-1.125 1.125M20.625 12c.621 0 1.125.504 1.125 1.125v1.5c0 .621-.504 1.125-1.125 1.125m-17.25 0h7.5M12 14.625v-1.5m0 1.5c0 .621-.504 1.125-1.125 1.125M12 14.625c0 .621.504 1.125 1.125 1.125m-2.25 0c.621 0 1.125.504 1.125 1.125m0 1.5v-1.5m0 0c0-.621.504-1.125 1.125-1.125m0 0h7.5"
                    }));
                }
                var ForwardRef = React2.forwardRef(TableCellsIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/TagIcon.js
        var require_TagIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/TagIcon.js"(exports, module) {
                var React2 = require_react();
                function TagIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M9.568 3H5.25A2.25 2.25 0 003 5.25v4.318c0 .597.237 1.17.659 1.591l9.581 9.581c.699.699 1.78.872 2.607.33a18.095 18.095 0 005.223-5.223c.542-.827.369-1.908-.33-2.607L11.16 3.66A2.25 2.25 0 009.568 3z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M6 6h.008v.008H6V6z"
                    }));
                }
                var ForwardRef = React2.forwardRef(TagIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/TicketIcon.js
        var require_TicketIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/TicketIcon.js"(exports, module) {
                var React2 = require_react();
                function TicketIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M16.5 6v.75m0 3v.75m0 3v.75m0 3V18m-9-5.25h5.25M7.5 15h3M3.375 5.25c-.621 0-1.125.504-1.125 1.125v3.026a2.999 2.999 0 010 5.198v3.026c0 .621.504 1.125 1.125 1.125h17.25c.621 0 1.125-.504 1.125-1.125v-3.026a2.999 2.999 0 010-5.198V6.375c0-.621-.504-1.125-1.125-1.125H3.375z"
                    }));
                }
                var ForwardRef = React2.forwardRef(TicketIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/TrashIcon.js
        var require_TrashIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/TrashIcon.js"(exports, module) {
                var React2 = require_react();
                function TrashIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0"
                    }));
                }
                var ForwardRef = React2.forwardRef(TrashIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/TrophyIcon.js
        var require_TrophyIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/TrophyIcon.js"(exports, module) {
                var React2 = require_react();
                function TrophyIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M16.5 18.75h-9m9 0a3 3 0 013 3h-15a3 3 0 013-3m9 0v-3.375c0-.621-.503-1.125-1.125-1.125h-.871M7.5 18.75v-3.375c0-.621.504-1.125 1.125-1.125h.872m5.007 0H9.497m5.007 0a7.454 7.454 0 01-.982-3.172M9.497 14.25a7.454 7.454 0 00.981-3.172M5.25 4.236c-.982.143-1.954.317-2.916.52A6.003 6.003 0 007.73 9.728M5.25 4.236V4.5c0 2.108.966 3.99 2.48 5.228M5.25 4.236V2.721C7.456 2.41 9.71 2.25 12 2.25c2.291 0 4.545.16 6.75.47v1.516M7.73 9.728a6.726 6.726 0 002.748 1.35m8.272-6.842V4.5c0 2.108-.966 3.99-2.48 5.228m2.48-5.492a46.32 46.32 0 012.916.52 6.003 6.003 0 01-5.395 4.972m0 0a6.726 6.726 0 01-2.749 1.35m0 0a6.772 6.772 0 01-3.044 0"
                    }));
                }
                var ForwardRef = React2.forwardRef(TrophyIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/TruckIcon.js
        var require_TruckIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/TruckIcon.js"(exports, module) {
                var React2 = require_react();
                function TruckIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M8.25 18.75a1.5 1.5 0 01-3 0m3 0a1.5 1.5 0 00-3 0m3 0h6m-9 0H3.375a1.125 1.125 0 01-1.125-1.125V14.25m17.25 4.5a1.5 1.5 0 01-3 0m3 0a1.5 1.5 0 00-3 0m3 0h1.125c.621 0 1.129-.504 1.09-1.124a17.902 17.902 0 00-3.213-9.193 2.056 2.056 0 00-1.58-.86H14.25M16.5 18.75h-2.25m0-11.177v-.958c0-.568-.422-1.048-.987-1.106a48.554 48.554 0 00-10.026 0 1.106 1.106 0 00-.987 1.106v7.635m12-6.677v6.677m0 4.5v-4.5m0 0h-12"
                    }));
                }
                var ForwardRef = React2.forwardRef(TruckIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/TvIcon.js
        var require_TvIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/TvIcon.js"(exports, module) {
                var React2 = require_react();
                function TvIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M6 20.25h12m-7.5-3v3m3-3v3m-10.125-3h17.25c.621 0 1.125-.504 1.125-1.125V4.875c0-.621-.504-1.125-1.125-1.125H3.375c-.621 0-1.125.504-1.125 1.125v11.25c0 .621.504 1.125 1.125 1.125z"
                    }));
                }
                var ForwardRef = React2.forwardRef(TvIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/UserCircleIcon.js
        var require_UserCircleIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/UserCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function UserCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M17.982 18.725A7.488 7.488 0 0012 15.75a7.488 7.488 0 00-5.982 2.975m11.963 0a9 9 0 10-11.963 0m11.963 0A8.966 8.966 0 0112 21a8.966 8.966 0 01-5.982-2.275M15 9.75a3 3 0 11-6 0 3 3 0 016 0z"
                    }));
                }
                var ForwardRef = React2.forwardRef(UserCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/UserGroupIcon.js
        var require_UserGroupIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/UserGroupIcon.js"(exports, module) {
                var React2 = require_react();
                function UserGroupIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M18 18.72a9.094 9.094 0 003.741-.479 3 3 0 00-4.682-2.72m.94 3.198l.001.031c0 .225-.012.447-.037.666A11.944 11.944 0 0112 21c-2.17 0-4.207-.576-5.963-1.584A6.062 6.062 0 016 18.719m12 0a5.971 5.971 0 00-.941-3.197m0 0A5.995 5.995 0 0012 12.75a5.995 5.995 0 00-5.058 2.772m0 0a3 3 0 00-4.681 2.72 8.986 8.986 0 003.74.477m.94-3.197a5.971 5.971 0 00-.94 3.197M15 6.75a3 3 0 11-6 0 3 3 0 016 0zm6 3a2.25 2.25 0 11-4.5 0 2.25 2.25 0 014.5 0zm-13.5 0a2.25 2.25 0 11-4.5 0 2.25 2.25 0 014.5 0z"
                    }));
                }
                var ForwardRef = React2.forwardRef(UserGroupIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/UserMinusIcon.js
        var require_UserMinusIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/UserMinusIcon.js"(exports, module) {
                var React2 = require_react();
                function UserMinusIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M22 10.5h-6m-2.25-4.125a3.375 3.375 0 11-6.75 0 3.375 3.375 0 016.75 0zM4 19.235v-.11a6.375 6.375 0 0112.75 0v.109A12.318 12.318 0 0110.374 21c-2.331 0-4.512-.645-6.374-1.766z"
                    }));
                }
                var ForwardRef = React2.forwardRef(UserMinusIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/UserPlusIcon.js
        var require_UserPlusIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/UserPlusIcon.js"(exports, module) {
                var React2 = require_react();
                function UserPlusIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M19 7.5v3m0 0v3m0-3h3m-3 0h-3m-2.25-4.125a3.375 3.375 0 11-6.75 0 3.375 3.375 0 016.75 0zM4 19.235v-.11a6.375 6.375 0 0112.75 0v.109A12.318 12.318 0 0110.374 21c-2.331 0-4.512-.645-6.374-1.766z"
                    }));
                }
                var ForwardRef = React2.forwardRef(UserPlusIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/UserIcon.js
        var require_UserIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/UserIcon.js"(exports, module) {
                var React2 = require_react();
                function UserIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M15.75 6a3.75 3.75 0 11-7.5 0 3.75 3.75 0 017.5 0zM4.501 20.118a7.5 7.5 0 0114.998 0A17.933 17.933 0 0112 21.75c-2.676 0-5.216-.584-7.499-1.632z"
                    }));
                }
                var ForwardRef = React2.forwardRef(UserIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/UsersIcon.js
        var require_UsersIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/UsersIcon.js"(exports, module) {
                var React2 = require_react();
                function UsersIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M15 19.128a9.38 9.38 0 002.625.372 9.337 9.337 0 004.121-.952 4.125 4.125 0 00-7.533-2.493M15 19.128v-.003c0-1.113-.285-2.16-.786-3.07M15 19.128v.106A12.318 12.318 0 018.624 21c-2.331 0-4.512-.645-6.374-1.766l-.001-.109a6.375 6.375 0 0111.964-3.07M12 6.375a3.375 3.375 0 11-6.75 0 3.375 3.375 0 016.75 0zm8.25 2.25a2.625 2.625 0 11-5.25 0 2.625 2.625 0 015.25 0z"
                    }));
                }
                var ForwardRef = React2.forwardRef(UsersIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/VariableIcon.js
        var require_VariableIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/VariableIcon.js"(exports, module) {
                var React2 = require_react();
                function VariableIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M4.745 3A23.933 23.933 0 003 12c0 3.183.62 6.22 1.745 9M19.5 3c.967 2.78 1.5 5.817 1.5 9s-.533 6.22-1.5 9M8.25 8.885l1.444-.89a.75.75 0 011.105.402l2.402 7.206a.75.75 0 001.104.401l1.445-.889m-8.25.75l.213.09a1.687 1.687 0 002.062-.617l4.45-6.676a1.688 1.688 0 012.062-.618l.213.09"
                    }));
                }
                var ForwardRef = React2.forwardRef(VariableIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/VideoCameraSlashIcon.js
        var require_VideoCameraSlashIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/VideoCameraSlashIcon.js"(exports, module) {
                var React2 = require_react();
                function VideoCameraSlashIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M15.75 10.5l4.72-4.72a.75.75 0 011.28.53v11.38a.75.75 0 01-1.28.53l-4.72-4.72M12 18.75H4.5a2.25 2.25 0 01-2.25-2.25V9m12.841 9.091L16.5 19.5m-1.409-1.409c.407-.407.659-.97.659-1.591v-9a2.25 2.25 0 00-2.25-2.25h-9c-.621 0-1.184.252-1.591.659m12.182 12.182L2.909 5.909M1.5 4.5l1.409 1.409"
                    }));
                }
                var ForwardRef = React2.forwardRef(VideoCameraSlashIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/VideoCameraIcon.js
        var require_VideoCameraIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/VideoCameraIcon.js"(exports, module) {
                var React2 = require_react();
                function VideoCameraIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        d: "M15.75 10.5l4.72-4.72a.75.75 0 011.28.53v11.38a.75.75 0 01-1.28.53l-4.72-4.72M4.5 18.75h9a2.25 2.25 0 002.25-2.25v-9a2.25 2.25 0 00-2.25-2.25h-9A2.25 2.25 0 002.25 7.5v9a2.25 2.25 0 002.25 2.25z"
                    }));
                }
                var ForwardRef = React2.forwardRef(VideoCameraIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ViewColumnsIcon.js
        var require_ViewColumnsIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ViewColumnsIcon.js"(exports, module) {
                var React2 = require_react();
                function ViewColumnsIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M9 4.5v15m6-15v15m-10.875 0h15.75c.621 0 1.125-.504 1.125-1.125V5.625c0-.621-.504-1.125-1.125-1.125H4.125C3.504 4.5 3 5.004 3 5.625v12.75c0 .621.504 1.125 1.125 1.125z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ViewColumnsIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/ViewfinderCircleIcon.js
        var require_ViewfinderCircleIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/ViewfinderCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function ViewfinderCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M7.5 3.75H6A2.25 2.25 0 003.75 6v1.5M16.5 3.75H18A2.25 2.25 0 0120.25 6v1.5m0 9V18A2.25 2.25 0 0118 20.25h-1.5m-9 0H6A2.25 2.25 0 013.75 18v-1.5M15 12a3 3 0 11-6 0 3 3 0 016 0z"
                    }));
                }
                var ForwardRef = React2.forwardRef(ViewfinderCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/WalletIcon.js
        var require_WalletIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/WalletIcon.js"(exports, module) {
                var React2 = require_react();
                function WalletIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M21 12a2.25 2.25 0 00-2.25-2.25H15a3 3 0 11-6 0H5.25A2.25 2.25 0 003 12m18 0v6a2.25 2.25 0 01-2.25 2.25H5.25A2.25 2.25 0 013 18v-6m18 0V9M3 12V9m18 0a2.25 2.25 0 00-2.25-2.25H5.25A2.25 2.25 0 003 9m18 0V6a2.25 2.25 0 00-2.25-2.25H5.25A2.25 2.25 0 003 6v3"
                    }));
                }
                var ForwardRef = React2.forwardRef(WalletIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/WifiIcon.js
        var require_WifiIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/WifiIcon.js"(exports, module) {
                var React2 = require_react();
                function WifiIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M8.288 15.038a5.25 5.25 0 017.424 0M5.106 11.856c3.807-3.808 9.98-3.808 13.788 0M1.924 8.674c5.565-5.565 14.587-5.565 20.152 0M12.53 18.22l-.53.53-.53-.53a.75.75 0 011.06 0z"
                    }));
                }
                var ForwardRef = React2.forwardRef(WifiIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/WindowIcon.js
        var require_WindowIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/WindowIcon.js"(exports, module) {
                var React2 = require_react();
                function WindowIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M3 8.25V18a2.25 2.25 0 002.25 2.25h13.5A2.25 2.25 0 0021 18V8.25m-18 0V6a2.25 2.25 0 012.25-2.25h13.5A2.25 2.25 0 0121 6v2.25m-18 0h18M5.25 6h.008v.008H5.25V6zM7.5 6h.008v.008H7.5V6zm2.25 0h.008v.008H9.75V6z"
                    }));
                }
                var ForwardRef = React2.forwardRef(WindowIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/WrenchScrewdriverIcon.js
        var require_WrenchScrewdriverIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/WrenchScrewdriverIcon.js"(exports, module) {
                var React2 = require_react();
                function WrenchScrewdriverIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M11.42 15.17L17.25 21A2.652 2.652 0 0021 17.25l-5.877-5.877M11.42 15.17l2.496-3.03c.317-.384.74-.626 1.208-.766M11.42 15.17l-4.655 5.653a2.548 2.548 0 11-3.586-3.586l6.837-5.63m5.108-.233c.55-.164 1.163-.188 1.743-.14a4.5 4.5 0 004.486-6.336l-3.276 3.277a3.004 3.004 0 01-2.25-2.25l3.276-3.276a4.5 4.5 0 00-6.336 4.486c.091 1.076-.071 2.264-.904 2.95l-.102.085m-1.745 1.437L5.909 7.5H4.5L2.25 3.75l1.5-1.5L7.5 4.5v1.409l4.26 4.26m-1.745 1.437l1.745-1.437m6.615 8.206L15.75 15.75M4.867 19.125h.008v.008h-.008v-.008z"
                    }));
                }
                var ForwardRef = React2.forwardRef(WrenchScrewdriverIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/WrenchIcon.js
        var require_WrenchIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/WrenchIcon.js"(exports, module) {
                var React2 = require_react();
                function WrenchIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M21.75 6.75a4.5 4.5 0 01-4.884 4.484c-1.076-.091-2.264.071-2.95.904l-7.152 8.684a2.548 2.548 0 11-3.586-3.586l8.684-7.152c.833-.686.995-1.874.904-2.95a4.5 4.5 0 016.336-4.486l-3.276 3.276a3.004 3.004 0 002.25 2.25l3.276-3.276c.256.565.398 1.192.398 1.852z"
                    }), /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M4.867 19.125h.008v.008h-.008v-.008z"
                    }));
                }
                var ForwardRef = React2.forwardRef(WrenchIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/XCircleIcon.js
        var require_XCircleIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/XCircleIcon.js"(exports, module) {
                var React2 = require_react();
                function XCircleIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M9.75 9.75l4.5 4.5m0-4.5l-4.5 4.5M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
                    }));
                }
                var ForwardRef = React2.forwardRef(XCircleIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/XMarkIcon.js
        var require_XMarkIcon3 = __commonJS({
            "node_modules/@heroicons/react/24/outline/XMarkIcon.js"(exports, module) {
                var React2 = require_react();
                function XMarkIcon({
                    title,
                    titleId,
                    ...props
                }, svgRef) {
                    return /* @__PURE__ */ React2.createElement("svg", Object.assign({
                        xmlns: "http://www.w3.org/2000/svg",
                        fill: "none",
                        viewBox: "0 0 24 24",
                        strokeWidth: 1.5,
                        stroke: "currentColor",
                        "aria-hidden": "true",
                        ref: svgRef,
                        "aria-labelledby": titleId
                    }, props), title ? /* @__PURE__ */ React2.createElement("title", {
                        id: titleId
                    }, title) : null, /* @__PURE__ */ React2.createElement("path", {
                        strokeLinecap: "round",
                        strokeLinejoin: "round",
                        d: "M6 18L18 6M6 6l12 12"
                    }));
                }
                var ForwardRef = React2.forwardRef(XMarkIcon);
                module.exports = ForwardRef;
            }
        });

        // node_modules/@heroicons/react/24/outline/index.js
        var require_outline = __commonJS({
            "node_modules/@heroicons/react/24/outline/index.js"(exports, module) {
                module.exports.AcademicCapIcon = require_AcademicCapIcon3();
                module.exports.AdjustmentsHorizontalIcon = require_AdjustmentsHorizontalIcon3();
                module.exports.AdjustmentsVerticalIcon = require_AdjustmentsVerticalIcon3();
                module.exports.ArchiveBoxArrowDownIcon = require_ArchiveBoxArrowDownIcon3();
                module.exports.ArchiveBoxXMarkIcon = require_ArchiveBoxXMarkIcon3();
                module.exports.ArchiveBoxIcon = require_ArchiveBoxIcon3();
                module.exports.ArrowDownCircleIcon = require_ArrowDownCircleIcon3();
                module.exports.ArrowDownLeftIcon = require_ArrowDownLeftIcon3();
                module.exports.ArrowDownOnSquareStackIcon = require_ArrowDownOnSquareStackIcon3();
                module.exports.ArrowDownOnSquareIcon = require_ArrowDownOnSquareIcon3();
                module.exports.ArrowDownRightIcon = require_ArrowDownRightIcon3();
                module.exports.ArrowDownTrayIcon = require_ArrowDownTrayIcon3();
                module.exports.ArrowDownIcon = require_ArrowDownIcon3();
                module.exports.ArrowLeftCircleIcon = require_ArrowLeftCircleIcon3();
                module.exports.ArrowLeftOnRectangleIcon = require_ArrowLeftOnRectangleIcon3();
                module.exports.ArrowLeftIcon = require_ArrowLeftIcon3();
                module.exports.ArrowLongDownIcon = require_ArrowLongDownIcon3();
                module.exports.ArrowLongLeftIcon = require_ArrowLongLeftIcon3();
                module.exports.ArrowLongRightIcon = require_ArrowLongRightIcon3();
                module.exports.ArrowLongUpIcon = require_ArrowLongUpIcon3();
                module.exports.ArrowPathRoundedSquareIcon = require_ArrowPathRoundedSquareIcon3();
                module.exports.ArrowPathIcon = require_ArrowPathIcon3();
                module.exports.ArrowRightCircleIcon = require_ArrowRightCircleIcon3();
                module.exports.ArrowRightOnRectangleIcon = require_ArrowRightOnRectangleIcon3();
                module.exports.ArrowRightIcon = require_ArrowRightIcon3();
                module.exports.ArrowSmallDownIcon = require_ArrowSmallDownIcon3();
                module.exports.ArrowSmallLeftIcon = require_ArrowSmallLeftIcon3();
                module.exports.ArrowSmallRightIcon = require_ArrowSmallRightIcon3();
                module.exports.ArrowSmallUpIcon = require_ArrowSmallUpIcon3();
                module.exports.ArrowTopRightOnSquareIcon = require_ArrowTopRightOnSquareIcon3();
                module.exports.ArrowTrendingDownIcon = require_ArrowTrendingDownIcon3();
                module.exports.ArrowTrendingUpIcon = require_ArrowTrendingUpIcon3();
                module.exports.ArrowUpCircleIcon = require_ArrowUpCircleIcon3();
                module.exports.ArrowUpLeftIcon = require_ArrowUpLeftIcon3();
                module.exports.ArrowUpOnSquareStackIcon = require_ArrowUpOnSquareStackIcon3();
                module.exports.ArrowUpOnSquareIcon = require_ArrowUpOnSquareIcon3();
                module.exports.ArrowUpRightIcon = require_ArrowUpRightIcon3();
                module.exports.ArrowUpTrayIcon = require_ArrowUpTrayIcon3();
                module.exports.ArrowUpIcon = require_ArrowUpIcon3();
                module.exports.ArrowUturnDownIcon = require_ArrowUturnDownIcon3();
                module.exports.ArrowUturnLeftIcon = require_ArrowUturnLeftIcon3();
                module.exports.ArrowUturnRightIcon = require_ArrowUturnRightIcon3();
                module.exports.ArrowUturnUpIcon = require_ArrowUturnUpIcon3();
                module.exports.ArrowsPointingInIcon = require_ArrowsPointingInIcon3();
                module.exports.ArrowsPointingOutIcon = require_ArrowsPointingOutIcon3();
                module.exports.ArrowsRightLeftIcon = require_ArrowsRightLeftIcon3();
                module.exports.ArrowsUpDownIcon = require_ArrowsUpDownIcon3();
                module.exports.AtSymbolIcon = require_AtSymbolIcon3();
                module.exports.BackspaceIcon = require_BackspaceIcon3();
                module.exports.BackwardIcon = require_BackwardIcon3();
                module.exports.BanknotesIcon = require_BanknotesIcon3();
                module.exports.Bars2Icon = require_Bars2Icon3();
                module.exports.Bars3BottomLeftIcon = require_Bars3BottomLeftIcon3();
                module.exports.Bars3BottomRightIcon = require_Bars3BottomRightIcon3();
                module.exports.Bars3CenterLeftIcon = require_Bars3CenterLeftIcon3();
                module.exports.Bars3Icon = require_Bars3Icon3();
                module.exports.Bars4Icon = require_Bars4Icon3();
                module.exports.BarsArrowDownIcon = require_BarsArrowDownIcon3();
                module.exports.BarsArrowUpIcon = require_BarsArrowUpIcon3();
                module.exports.Battery0Icon = require_Battery0Icon3();
                module.exports.Battery100Icon = require_Battery100Icon3();
                module.exports.Battery50Icon = require_Battery50Icon3();
                module.exports.BeakerIcon = require_BeakerIcon3();
                module.exports.BellAlertIcon = require_BellAlertIcon3();
                module.exports.BellSlashIcon = require_BellSlashIcon3();
                module.exports.BellSnoozeIcon = require_BellSnoozeIcon3();
                module.exports.BellIcon = require_BellIcon3();
                module.exports.BoltSlashIcon = require_BoltSlashIcon3();
                module.exports.BoltIcon = require_BoltIcon3();
                module.exports.BookOpenIcon = require_BookOpenIcon3();
                module.exports.BookmarkSlashIcon = require_BookmarkSlashIcon3();
                module.exports.BookmarkSquareIcon = require_BookmarkSquareIcon3();
                module.exports.BookmarkIcon = require_BookmarkIcon3();
                module.exports.BriefcaseIcon = require_BriefcaseIcon3();
                module.exports.BugAntIcon = require_BugAntIcon3();
                module.exports.BuildingLibraryIcon = require_BuildingLibraryIcon3();
                module.exports.BuildingOffice2Icon = require_BuildingOffice2Icon3();
                module.exports.BuildingOfficeIcon = require_BuildingOfficeIcon3();
                module.exports.BuildingStorefrontIcon = require_BuildingStorefrontIcon3();
                module.exports.CakeIcon = require_CakeIcon3();
                module.exports.CalculatorIcon = require_CalculatorIcon3();
                module.exports.CalendarDaysIcon = require_CalendarDaysIcon3();
                module.exports.CalendarIcon = require_CalendarIcon3();
                module.exports.CameraIcon = require_CameraIcon3();
                module.exports.ChartBarSquareIcon = require_ChartBarSquareIcon3();
                module.exports.ChartBarIcon = require_ChartBarIcon3();
                module.exports.ChartPieIcon = require_ChartPieIcon3();
                module.exports.ChatBubbleBottomCenterTextIcon = require_ChatBubbleBottomCenterTextIcon3();
                module.exports.ChatBubbleBottomCenterIcon = require_ChatBubbleBottomCenterIcon3();
                module.exports.ChatBubbleLeftEllipsisIcon = require_ChatBubbleLeftEllipsisIcon3();
                module.exports.ChatBubbleLeftRightIcon = require_ChatBubbleLeftRightIcon3();
                module.exports.ChatBubbleLeftIcon = require_ChatBubbleLeftIcon3();
                module.exports.ChatBubbleOvalLeftEllipsisIcon = require_ChatBubbleOvalLeftEllipsisIcon3();
                module.exports.ChatBubbleOvalLeftIcon = require_ChatBubbleOvalLeftIcon3();
                module.exports.CheckBadgeIcon = require_CheckBadgeIcon3();
                module.exports.CheckCircleIcon = require_CheckCircleIcon3();
                module.exports.CheckIcon = require_CheckIcon3();
                module.exports.ChevronDoubleDownIcon = require_ChevronDoubleDownIcon3();
                module.exports.ChevronDoubleLeftIcon = require_ChevronDoubleLeftIcon3();
                module.exports.ChevronDoubleRightIcon = require_ChevronDoubleRightIcon3();
                module.exports.ChevronDoubleUpIcon = require_ChevronDoubleUpIcon3();
                module.exports.ChevronDownIcon = require_ChevronDownIcon3();
                module.exports.ChevronLeftIcon = require_ChevronLeftIcon3();
                module.exports.ChevronRightIcon = require_ChevronRightIcon3();
                module.exports.ChevronUpDownIcon = require_ChevronUpDownIcon3();
                module.exports.ChevronUpIcon = require_ChevronUpIcon3();
                module.exports.CircleStackIcon = require_CircleStackIcon3();
                module.exports.ClipboardDocumentCheckIcon = require_ClipboardDocumentCheckIcon3();
                module.exports.ClipboardDocumentListIcon = require_ClipboardDocumentListIcon3();
                module.exports.ClipboardDocumentIcon = require_ClipboardDocumentIcon3();
                module.exports.ClipboardIcon = require_ClipboardIcon3();
                module.exports.ClockIcon = require_ClockIcon3();
                module.exports.CloudArrowDownIcon = require_CloudArrowDownIcon3();
                module.exports.CloudArrowUpIcon = require_CloudArrowUpIcon3();
                module.exports.CloudIcon = require_CloudIcon3();
                module.exports.CodeBracketSquareIcon = require_CodeBracketSquareIcon3();
                module.exports.CodeBracketIcon = require_CodeBracketIcon3();
                module.exports.Cog6ToothIcon = require_Cog6ToothIcon3();
                module.exports.Cog8ToothIcon = require_Cog8ToothIcon3();
                module.exports.CogIcon = require_CogIcon3();
                module.exports.CommandLineIcon = require_CommandLineIcon3();
                module.exports.ComputerDesktopIcon = require_ComputerDesktopIcon3();
                module.exports.CpuChipIcon = require_CpuChipIcon3();
                module.exports.CreditCardIcon = require_CreditCardIcon3();
                module.exports.CubeTransparentIcon = require_CubeTransparentIcon3();
                module.exports.CubeIcon = require_CubeIcon3();
                module.exports.CurrencyBangladeshiIcon = require_CurrencyBangladeshiIcon3();
                module.exports.CurrencyDollarIcon = require_CurrencyDollarIcon3();
                module.exports.CurrencyEuroIcon = require_CurrencyEuroIcon3();
                module.exports.CurrencyPoundIcon = require_CurrencyPoundIcon3();
                module.exports.CurrencyRupeeIcon = require_CurrencyRupeeIcon3();
                module.exports.CurrencyYenIcon = require_CurrencyYenIcon3();
                module.exports.CursorArrowRaysIcon = require_CursorArrowRaysIcon3();
                module.exports.CursorArrowRippleIcon = require_CursorArrowRippleIcon3();
                module.exports.DevicePhoneMobileIcon = require_DevicePhoneMobileIcon3();
                module.exports.DeviceTabletIcon = require_DeviceTabletIcon3();
                module.exports.DocumentArrowDownIcon = require_DocumentArrowDownIcon3();
                module.exports.DocumentArrowUpIcon = require_DocumentArrowUpIcon3();
                module.exports.DocumentChartBarIcon = require_DocumentChartBarIcon3();
                module.exports.DocumentCheckIcon = require_DocumentCheckIcon3();
                module.exports.DocumentDuplicateIcon = require_DocumentDuplicateIcon3();
                module.exports.DocumentMagnifyingGlassIcon = require_DocumentMagnifyingGlassIcon3();
                module.exports.DocumentMinusIcon = require_DocumentMinusIcon3();
                module.exports.DocumentPlusIcon = require_DocumentPlusIcon3();
                module.exports.DocumentTextIcon = require_DocumentTextIcon3();
                module.exports.DocumentIcon = require_DocumentIcon3();
                module.exports.EllipsisHorizontalCircleIcon = require_EllipsisHorizontalCircleIcon3();
                module.exports.EllipsisHorizontalIcon = require_EllipsisHorizontalIcon3();
                module.exports.EllipsisVerticalIcon = require_EllipsisVerticalIcon3();
                module.exports.EnvelopeOpenIcon = require_EnvelopeOpenIcon3();
                module.exports.EnvelopeIcon = require_EnvelopeIcon3();
                module.exports.ExclamationCircleIcon = require_ExclamationCircleIcon3();
                module.exports.ExclamationTriangleIcon = require_ExclamationTriangleIcon3();
                module.exports.EyeDropperIcon = require_EyeDropperIcon3();
                module.exports.EyeSlashIcon = require_EyeSlashIcon3();
                module.exports.EyeIcon = require_EyeIcon3();
                module.exports.FaceFrownIcon = require_FaceFrownIcon3();
                module.exports.FaceSmileIcon = require_FaceSmileIcon3();
                module.exports.FilmIcon = require_FilmIcon3();
                module.exports.FingerPrintIcon = require_FingerPrintIcon3();
                module.exports.FireIcon = require_FireIcon3();
                module.exports.FlagIcon = require_FlagIcon3();
                module.exports.FolderArrowDownIcon = require_FolderArrowDownIcon3();
                module.exports.FolderMinusIcon = require_FolderMinusIcon3();
                module.exports.FolderOpenIcon = require_FolderOpenIcon3();
                module.exports.FolderPlusIcon = require_FolderPlusIcon3();
                module.exports.FolderIcon = require_FolderIcon3();
                module.exports.ForwardIcon = require_ForwardIcon3();
                module.exports.FunnelIcon = require_FunnelIcon3();
                module.exports.GifIcon = require_GifIcon3();
                module.exports.GiftTopIcon = require_GiftTopIcon3();
                module.exports.GiftIcon = require_GiftIcon3();
                module.exports.GlobeAltIcon = require_GlobeAltIcon3();
                module.exports.GlobeAmericasIcon = require_GlobeAmericasIcon3();
                module.exports.GlobeAsiaAustraliaIcon = require_GlobeAsiaAustraliaIcon3();
                module.exports.GlobeEuropeAfricaIcon = require_GlobeEuropeAfricaIcon3();
                module.exports.HandRaisedIcon = require_HandRaisedIcon3();
                module.exports.HandThumbDownIcon = require_HandThumbDownIcon3();
                module.exports.HandThumbUpIcon = require_HandThumbUpIcon3();
                module.exports.HashtagIcon = require_HashtagIcon3();
                module.exports.HeartIcon = require_HeartIcon3();
                module.exports.HomeModernIcon = require_HomeModernIcon3();
                module.exports.HomeIcon = require_HomeIcon3();
                module.exports.IdentificationIcon = require_IdentificationIcon3();
                module.exports.InboxArrowDownIcon = require_InboxArrowDownIcon3();
                module.exports.InboxStackIcon = require_InboxStackIcon3();
                module.exports.InboxIcon = require_InboxIcon3();
                module.exports.InformationCircleIcon = require_InformationCircleIcon3();
                module.exports.KeyIcon = require_KeyIcon3();
                module.exports.LanguageIcon = require_LanguageIcon3();
                module.exports.LifebuoyIcon = require_LifebuoyIcon3();
                module.exports.LightBulbIcon = require_LightBulbIcon3();
                module.exports.LinkIcon = require_LinkIcon3();
                module.exports.ListBulletIcon = require_ListBulletIcon3();
                module.exports.LockClosedIcon = require_LockClosedIcon3();
                module.exports.LockOpenIcon = require_LockOpenIcon3();
                module.exports.MagnifyingGlassCircleIcon = require_MagnifyingGlassCircleIcon3();
                module.exports.MagnifyingGlassMinusIcon = require_MagnifyingGlassMinusIcon3();
                module.exports.MagnifyingGlassPlusIcon = require_MagnifyingGlassPlusIcon3();
                module.exports.MagnifyingGlassIcon = require_MagnifyingGlassIcon3();
                module.exports.MapPinIcon = require_MapPinIcon3();
                module.exports.MapIcon = require_MapIcon3();
                module.exports.MegaphoneIcon = require_MegaphoneIcon3();
                module.exports.MicrophoneIcon = require_MicrophoneIcon3();
                module.exports.MinusCircleIcon = require_MinusCircleIcon3();
                module.exports.MinusSmallIcon = require_MinusSmallIcon3();
                module.exports.MinusIcon = require_MinusIcon3();
                module.exports.MoonIcon = require_MoonIcon3();
                module.exports.MusicalNoteIcon = require_MusicalNoteIcon3();
                module.exports.NewspaperIcon = require_NewspaperIcon3();
                module.exports.NoSymbolIcon = require_NoSymbolIcon3();
                module.exports.PaintBrushIcon = require_PaintBrushIcon3();
                module.exports.PaperAirplaneIcon = require_PaperAirplaneIcon3();
                module.exports.PaperClipIcon = require_PaperClipIcon3();
                module.exports.PauseCircleIcon = require_PauseCircleIcon3();
                module.exports.PauseIcon = require_PauseIcon3();
                module.exports.PencilSquareIcon = require_PencilSquareIcon3();
                module.exports.PencilIcon = require_PencilIcon3();
                module.exports.PhoneArrowDownLeftIcon = require_PhoneArrowDownLeftIcon3();
                module.exports.PhoneArrowUpRightIcon = require_PhoneArrowUpRightIcon3();
                module.exports.PhoneXMarkIcon = require_PhoneXMarkIcon3();
                module.exports.PhoneIcon = require_PhoneIcon3();
                module.exports.PhotoIcon = require_PhotoIcon3();
                module.exports.PlayCircleIcon = require_PlayCircleIcon3();
                module.exports.PlayPauseIcon = require_PlayPauseIcon3();
                module.exports.PlayIcon = require_PlayIcon3();
                module.exports.PlusCircleIcon = require_PlusCircleIcon3();
                module.exports.PlusSmallIcon = require_PlusSmallIcon3();
                module.exports.PlusIcon = require_PlusIcon3();
                module.exports.PowerIcon = require_PowerIcon3();
                module.exports.PresentationChartBarIcon = require_PresentationChartBarIcon3();
                module.exports.PresentationChartLineIcon = require_PresentationChartLineIcon3();
                module.exports.PrinterIcon = require_PrinterIcon3();
                module.exports.PuzzlePieceIcon = require_PuzzlePieceIcon3();
                module.exports.QrCodeIcon = require_QrCodeIcon3();
                module.exports.QuestionMarkCircleIcon = require_QuestionMarkCircleIcon3();
                module.exports.QueueListIcon = require_QueueListIcon3();
                module.exports.RadioIcon = require_RadioIcon3();
                module.exports.ReceiptPercentIcon = require_ReceiptPercentIcon3();
                module.exports.ReceiptRefundIcon = require_ReceiptRefundIcon3();
                module.exports.RectangleGroupIcon = require_RectangleGroupIcon3();
                module.exports.RectangleStackIcon = require_RectangleStackIcon3();
                module.exports.RocketLaunchIcon = require_RocketLaunchIcon3();
                module.exports.RssIcon = require_RssIcon3();
                module.exports.ScaleIcon = require_ScaleIcon3();
                module.exports.ScissorsIcon = require_ScissorsIcon3();
                module.exports.ServerStackIcon = require_ServerStackIcon3();
                module.exports.ServerIcon = require_ServerIcon3();
                module.exports.ShareIcon = require_ShareIcon3();
                module.exports.ShieldCheckIcon = require_ShieldCheckIcon3();
                module.exports.ShieldExclamationIcon = require_ShieldExclamationIcon3();
                module.exports.ShoppingBagIcon = require_ShoppingBagIcon3();
                module.exports.ShoppingCartIcon = require_ShoppingCartIcon3();
                module.exports.SignalSlashIcon = require_SignalSlashIcon3();
                module.exports.SignalIcon = require_SignalIcon3();
                module.exports.SparklesIcon = require_SparklesIcon3();
                module.exports.SpeakerWaveIcon = require_SpeakerWaveIcon3();
                module.exports.SpeakerXMarkIcon = require_SpeakerXMarkIcon3();
                module.exports.Square2StackIcon = require_Square2StackIcon3();
                module.exports.Square3Stack3DIcon = require_Square3Stack3DIcon3();
                module.exports.Squares2X2Icon = require_Squares2X2Icon3();
                module.exports.SquaresPlusIcon = require_SquaresPlusIcon3();
                module.exports.StarIcon = require_StarIcon3();
                module.exports.StopCircleIcon = require_StopCircleIcon3();
                module.exports.StopIcon = require_StopIcon3();
                module.exports.SunIcon = require_SunIcon3();
                module.exports.SwatchIcon = require_SwatchIcon3();
                module.exports.TableCellsIcon = require_TableCellsIcon3();
                module.exports.TagIcon = require_TagIcon3();
                module.exports.TicketIcon = require_TicketIcon3();
                module.exports.TrashIcon = require_TrashIcon3();
                module.exports.TrophyIcon = require_TrophyIcon3();
                module.exports.TruckIcon = require_TruckIcon3();
                module.exports.TvIcon = require_TvIcon3();
                module.exports.UserCircleIcon = require_UserCircleIcon3();
                module.exports.UserGroupIcon = require_UserGroupIcon3();
                module.exports.UserMinusIcon = require_UserMinusIcon3();
                module.exports.UserPlusIcon = require_UserPlusIcon3();
                module.exports.UserIcon = require_UserIcon3();
                module.exports.UsersIcon = require_UsersIcon3();
                module.exports.VariableIcon = require_VariableIcon3();
                module.exports.VideoCameraSlashIcon = require_VideoCameraSlashIcon3();
                module.exports.VideoCameraIcon = require_VideoCameraIcon3();
                module.exports.ViewColumnsIcon = require_ViewColumnsIcon3();
                module.exports.ViewfinderCircleIcon = require_ViewfinderCircleIcon3();
                module.exports.WalletIcon = require_WalletIcon3();
                module.exports.WifiIcon = require_WifiIcon3();
                module.exports.WindowIcon = require_WindowIcon3();
                module.exports.WrenchScrewdriverIcon = require_WrenchScrewdriverIcon3();
                module.exports.WrenchIcon = require_WrenchIcon3();
                module.exports.XCircleIcon = require_XCircleIcon3();
                module.exports.XMarkIcon = require_XMarkIcon3();
            }
        });

        // node_modules/react-cmdk/dist/components/Icon.js
        var require_Icon = __commonJS({
            "node_modules/react-cmdk/dist/components/Icon.js"(exports) {
                "use strict";
                function _typeof(obj) {
                    "@babel/helpers - typeof";
                    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
                        return typeof obj2;
                    } : function(obj2) {
                        return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
                    }, _typeof(obj);
                }
                Object.defineProperty(exports, "__esModule", {
                    value: true
                });
                exports["default"] = Icon;
                var HeroIconsOutline = _interopRequireWildcard(require_outline());
                var HeroIconsSolid = _interopRequireWildcard(require_solid());
                var _react = _interopRequireDefault(require_react());
                var _excluded = ["name", "type"];
                function _interopRequireDefault(obj) {
                    return obj && obj.__esModule ? obj : { "default": obj };
                }
                function _getRequireWildcardCache(nodeInterop) {
                    if (typeof WeakMap !== "function")
                        return null;
                    var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
                    var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
                    return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
                        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
                    })(nodeInterop);
                }
                function _interopRequireWildcard(obj, nodeInterop) {
                    if (!nodeInterop && obj && obj.__esModule) {
                        return obj;
                    }
                    if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
                        return { "default": obj };
                    }
                    var cache = _getRequireWildcardCache(nodeInterop);
                    if (cache && cache.has(obj)) {
                        return cache.get(obj);
                    }
                    var newObj = {};
                    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for (var key in obj) {
                        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
                            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
                            if (desc && (desc.get || desc.set)) {
                                Object.defineProperty(newObj, key, desc);
                            } else {
                                newObj[key] = obj[key];
                            }
                        }
                    }
                    newObj["default"] = obj;
                    if (cache) {
                        cache.set(obj, newObj);
                    }
                    return newObj;
                }
                function _extends() {
                    _extends = Object.assign ? Object.assign.bind() : function(target2) {
                        for (var i = 1; i < arguments.length; i++) {
                            var source = arguments[i];
                            for (var key in source) {
                                if (Object.prototype.hasOwnProperty.call(source, key)) {
                                    target2[key] = source[key];
                                }
                            }
                        }
                        return target2;
                    };
                    return _extends.apply(this, arguments);
                }
                function _objectWithoutProperties(source, excluded) {
                    if (source == null)
                        return {};
                    var target2 = _objectWithoutPropertiesLoose(source, excluded);
                    var key, i;
                    if (Object.getOwnPropertySymbols) {
                        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
                        for (i = 0; i < sourceSymbolKeys.length; i++) {
                            key = sourceSymbolKeys[i];
                            if (excluded.indexOf(key) >= 0)
                                continue;
                            if (!Object.prototype.propertyIsEnumerable.call(source, key))
                                continue;
                            target2[key] = source[key];
                        }
                    }
                    return target2;
                }
                function _objectWithoutPropertiesLoose(source, excluded) {
                    if (source == null)
                        return {};
                    var target2 = {};
                    var sourceKeys = Object.keys(source);
                    var key, i;
                    for (i = 0; i < sourceKeys.length; i++) {
                        key = sourceKeys[i];
                        if (excluded.indexOf(key) >= 0)
                            continue;
                        target2[key] = source[key];
                    }
                    return target2;
                }
                function Icon(_ref) {
                    var name = _ref.name, _ref$type = _ref.type, type = _ref$type === void 0 ? "solid" : _ref$type, rest = _objectWithoutProperties(_ref, _excluded);
                    var Element = (type === "solid" ? HeroIconsSolid : HeroIconsOutline)[name];
                    return /* @__PURE__ */ _react["default"].createElement(Element, _extends({}, rest, {
                        className: "w-5 h-5 text-gray-500"
                    }));
                }
            }
        });

        // node_modules/react-cmdk/dist/lib/context.js
        var require_context = __commonJS({
            "node_modules/react-cmdk/dist/lib/context.js"(exports) {
                "use strict";
                Object.defineProperty(exports, "__esModule", {
                    value: true
                });
                exports.SelectContext = exports.SearchContext = exports.RenderLinkContext = exports.PageContext = exports.OpenContext = void 0;
                var _react = require_react();
                var SelectContext = /* @__PURE__ */ (0, _react.createContext)({
                    selected: 0
                });
                exports.SelectContext = SelectContext;
                var PageContext = /* @__PURE__ */ (0, _react.createContext)({
                    searchPrefix: void 0,
                    page: void 0
                });
                exports.PageContext = PageContext;
                var SearchContext = /* @__PURE__ */ (0, _react.createContext)({
                    search: ""
                });
                exports.SearchContext = SearchContext;
                var RenderLinkContext = /* @__PURE__ */ (0, _react.createContext)({
                    renderLink: void 0
                });
                exports.RenderLinkContext = RenderLinkContext;
                var OpenContext = /* @__PURE__ */ (0, _react.createContext)({
                    onChangeOpen: function onChangeOpen() {
                        return void 0;
                    },
                    isOpen: false
                });
                exports.OpenContext = OpenContext;
            }
        });

        // node_modules/react-cmdk/dist/lib/utils.js
        var require_utils = __commonJS({
            "node_modules/react-cmdk/dist/lib/utils.js"(exports) {
                "use strict";
                function _typeof(obj) {
                    "@babel/helpers - typeof";
                    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
                        return typeof obj2;
                    } : function(obj2) {
                        return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
                    }, _typeof(obj);
                }
                Object.defineProperty(exports, "__esModule", {
                    value: true
                });
                exports.classNames = classNames;
                exports.filterItems = filterItems2;
                exports.getItemIndex = getItemIndex;
                exports.renderJsonStructure = renderJsonStructure;
                exports.useHandleOpenCommandPalette = useHandleOpenCommandPalette;
                var _CommandPalette = _interopRequireDefault(require_CommandPalette());
                var _react = _interopRequireWildcard(require_react());
                var _excluded = ["id"];
                function _getRequireWildcardCache(nodeInterop) {
                    if (typeof WeakMap !== "function")
                        return null;
                    var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
                    var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
                    return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
                        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
                    })(nodeInterop);
                }
                function _interopRequireWildcard(obj, nodeInterop) {
                    if (!nodeInterop && obj && obj.__esModule) {
                        return obj;
                    }
                    if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
                        return { "default": obj };
                    }
                    var cache = _getRequireWildcardCache(nodeInterop);
                    if (cache && cache.has(obj)) {
                        return cache.get(obj);
                    }
                    var newObj = {};
                    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for (var key in obj) {
                        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
                            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
                            if (desc && (desc.get || desc.set)) {
                                Object.defineProperty(newObj, key, desc);
                            } else {
                                newObj[key] = obj[key];
                            }
                        }
                    }
                    newObj["default"] = obj;
                    if (cache) {
                        cache.set(obj, newObj);
                    }
                    return newObj;
                }
                function _interopRequireDefault(obj) {
                    return obj && obj.__esModule ? obj : { "default": obj };
                }
                function _extends() {
                    _extends = Object.assign ? Object.assign.bind() : function(target2) {
                        for (var i = 1; i < arguments.length; i++) {
                            var source = arguments[i];
                            for (var key in source) {
                                if (Object.prototype.hasOwnProperty.call(source, key)) {
                                    target2[key] = source[key];
                                }
                            }
                        }
                        return target2;
                    };
                    return _extends.apply(this, arguments);
                }
                function _objectWithoutProperties(source, excluded) {
                    if (source == null)
                        return {};
                    var target2 = _objectWithoutPropertiesLoose(source, excluded);
                    var key, i;
                    if (Object.getOwnPropertySymbols) {
                        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
                        for (i = 0; i < sourceSymbolKeys.length; i++) {
                            key = sourceSymbolKeys[i];
                            if (excluded.indexOf(key) >= 0)
                                continue;
                            if (!Object.prototype.propertyIsEnumerable.call(source, key))
                                continue;
                            target2[key] = source[key];
                        }
                    }
                    return target2;
                }
                function _objectWithoutPropertiesLoose(source, excluded) {
                    if (source == null)
                        return {};
                    var target2 = {};
                    var sourceKeys = Object.keys(source);
                    var key, i;
                    for (i = 0; i < sourceKeys.length; i++) {
                        key = sourceKeys[i];
                        if (excluded.indexOf(key) >= 0)
                            continue;
                        target2[key] = source[key];
                    }
                    return target2;
                }
                function ownKeys(object, enumerableOnly) {
                    var keys = Object.keys(object);
                    if (Object.getOwnPropertySymbols) {
                        var symbols = Object.getOwnPropertySymbols(object);
                        enumerableOnly && (symbols = symbols.filter(function(sym) {
                            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
                        })), keys.push.apply(keys, symbols);
                    }
                    return keys;
                }
                function _objectSpread(target2) {
                    for (var i = 1; i < arguments.length; i++) {
                        var source = null != arguments[i] ? arguments[i] : {};
                        i % 2 ? ownKeys(Object(source), true).forEach(function(key) {
                            _defineProperty(target2, key, source[key]);
                        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target2, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
                            Object.defineProperty(target2, key, Object.getOwnPropertyDescriptor(source, key));
                        });
                    }
                    return target2;
                }
                function _defineProperty(obj, key, value) {
                    if (key in obj) {
                        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
                    } else {
                        obj[key] = value;
                    }
                    return obj;
                }
                function getItemIndex(items, id) {
                    var startIndex = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0;
                    return items.map(function(list) {
                        return list.items;
                    }).reduce(function(a, b) {
                        return a.concat(b);
                    }).findIndex(function(i) {
                        return i.id === id;
                    }) + startIndex;
                }
                function filterItems2(items, search) {
                    var _ref = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {
                        filterOnListHeading: true
                    }, filterOnListHeading = _ref.filterOnListHeading;
                    return items.filter(function(list) {
                        var _list$heading;
                        var listHasMatchingItem = list.items.some(function(item) {
                            var _item$keywords;
                            return doesChildMatchSearch(search, item.children) || doesKeywordsMatchSearch(search, (_item$keywords = item.keywords) !== null && _item$keywords !== void 0 ? _item$keywords : []);
                        });
                        return filterOnListHeading ? ((_list$heading = list.heading) === null || _list$heading === void 0 ? void 0 : _list$heading.toLowerCase().includes(search.toLowerCase())) || listHasMatchingItem : listHasMatchingItem;
                    }).map(function(list) {
                        var matchingItems = list.items.filter(function(item) {
                            var _item$keywords2;
                            return doesChildMatchSearch(search, item.children) || doesKeywordsMatchSearch(search, (_item$keywords2 = item.keywords) !== null && _item$keywords2 !== void 0 ? _item$keywords2 : []);
                        });
                        return _objectSpread(_objectSpread({}, list), {}, {
                            items: filterOnListHeading ? matchingItems.length ? matchingItems : list.items : matchingItems
                        });
                    });
                }
                function doesChildMatchSearch(search, children) {
                    return children ? getLabelFromChildren(children).toLowerCase().includes(search.toLowerCase()) : false;
                }
                function doesKeywordsMatchSearch(search, keywords) {
                    return keywords.includes("*") ? true : keywords.some(function(keyword) {
                        return keyword.toLowerCase().includes(search.toLowerCase());
                    });
                }
                function getLabelFromChildren(children) {
                    var label = "";
                    _react.Children.map(children, function(child) {
                        if (typeof child === "string") {
                            label += child;
                        }
                    });
                    return label;
                }
                function classNames() {
                    for (var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++) {
                        classes[_key] = arguments[_key];
                    }
                    return classes.filter(Boolean).join(" ");
                }
                function renderJsonStructure(jsonStructure) {
                    return jsonStructure.map(function(list) {
                        return /* @__PURE__ */ _react["default"].createElement(_CommandPalette["default"].List, {
                            heading: list.heading,
                            key: list.id
                        }, list.items.map(function(_ref2) {
                            var id = _ref2.id, rest = _objectWithoutProperties(_ref2, _excluded);
                            return /* @__PURE__ */ _react["default"].createElement(_CommandPalette["default"].ListItem, _extends({
                                index: getItemIndex(jsonStructure, id),
                                key: id
                            }, rest));
                        }));
                    });
                }
                function useHandleOpenCommandPalette(setIsOpen) {
                    (0, _react.useEffect)(function() {
                        function handleKeyDown(e) {
                            var _navigator, _navigator$platform;
                            if (((_navigator = navigator) !== null && _navigator !== void 0 && (_navigator$platform = _navigator.platform) !== null && _navigator$platform !== void 0 && _navigator$platform.toLowerCase().includes("mac") ? e.metaKey : e.ctrlKey) && e.key === "k") {
                                e.preventDefault();
                                e.stopPropagation();
                                setIsOpen(function(currentValue) {
                                    return !currentValue;
                                });
                            }
                        }
                        document.addEventListener("keydown", handleKeyDown);
                        return function() {
                            document.removeEventListener("keydown", handleKeyDown);
                        };
                    }, []);
                }
            }
        });

        // node_modules/react-cmdk/dist/components/ListItem.js
        var require_ListItem = __commonJS({
            "node_modules/react-cmdk/dist/components/ListItem.js"(exports) {
                "use strict";
                function _typeof(obj) {
                    "@babel/helpers - typeof";
                    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
                        return typeof obj2;
                    } : function(obj2) {
                        return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
                    }, _typeof(obj);
                }
                Object.defineProperty(exports, "__esModule", {
                    value: true
                });
                exports.Button = Button;
                exports.Link = Link;
                exports["default"] = ListItem;
                var _Icon = _interopRequireDefault(require_Icon());
                var _react = _interopRequireWildcard(require_react());
                var _context = require_context();
                var _utils = require_utils();
                var _excluded = ["renderLink", "closeOnSelect", "disabled", "showType", "className", "iconType", "children", "onClick", "index", "icon"];
                var _excluded2 = ["closeOnSelect", "showType", "className", "children", "iconType", "onClick", "index", "icon"];
                function _getRequireWildcardCache(nodeInterop) {
                    if (typeof WeakMap !== "function")
                        return null;
                    var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
                    var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
                    return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
                        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
                    })(nodeInterop);
                }
                function _interopRequireWildcard(obj, nodeInterop) {
                    if (!nodeInterop && obj && obj.__esModule) {
                        return obj;
                    }
                    if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
                        return { "default": obj };
                    }
                    var cache = _getRequireWildcardCache(nodeInterop);
                    if (cache && cache.has(obj)) {
                        return cache.get(obj);
                    }
                    var newObj = {};
                    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for (var key in obj) {
                        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
                            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
                            if (desc && (desc.get || desc.set)) {
                                Object.defineProperty(newObj, key, desc);
                            } else {
                                newObj[key] = obj[key];
                            }
                        }
                    }
                    newObj["default"] = obj;
                    if (cache) {
                        cache.set(obj, newObj);
                    }
                    return newObj;
                }
                function _interopRequireDefault(obj) {
                    return obj && obj.__esModule ? obj : { "default": obj };
                }
                function _extends() {
                    _extends = Object.assign ? Object.assign.bind() : function(target2) {
                        for (var i = 1; i < arguments.length; i++) {
                            var source = arguments[i];
                            for (var key in source) {
                                if (Object.prototype.hasOwnProperty.call(source, key)) {
                                    target2[key] = source[key];
                                }
                            }
                        }
                        return target2;
                    };
                    return _extends.apply(this, arguments);
                }
                function ownKeys(object, enumerableOnly) {
                    var keys = Object.keys(object);
                    if (Object.getOwnPropertySymbols) {
                        var symbols = Object.getOwnPropertySymbols(object);
                        enumerableOnly && (symbols = symbols.filter(function(sym) {
                            return Object.getOwnPropertyDescriptor(object, sym).enumerable;
                        })), keys.push.apply(keys, symbols);
                    }
                    return keys;
                }
                function _objectSpread(target2) {
                    for (var i = 1; i < arguments.length; i++) {
                        var source = null != arguments[i] ? arguments[i] : {};
                        i % 2 ? ownKeys(Object(source), true).forEach(function(key) {
                            _defineProperty(target2, key, source[key]);
                        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target2, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function(key) {
                            Object.defineProperty(target2, key, Object.getOwnPropertyDescriptor(source, key));
                        });
                    }
                    return target2;
                }
                function _defineProperty(obj, key, value) {
                    if (key in obj) {
                        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
                    } else {
                        obj[key] = value;
                    }
                    return obj;
                }
                function _objectWithoutProperties(source, excluded) {
                    if (source == null)
                        return {};
                    var target2 = _objectWithoutPropertiesLoose(source, excluded);
                    var key, i;
                    if (Object.getOwnPropertySymbols) {
                        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
                        for (i = 0; i < sourceSymbolKeys.length; i++) {
                            key = sourceSymbolKeys[i];
                            if (excluded.indexOf(key) >= 0)
                                continue;
                            if (!Object.prototype.propertyIsEnumerable.call(source, key))
                                continue;
                            target2[key] = source[key];
                        }
                    }
                    return target2;
                }
                function _objectWithoutPropertiesLoose(source, excluded) {
                    if (source == null)
                        return {};
                    var target2 = {};
                    var sourceKeys = Object.keys(source);
                    var key, i;
                    for (i = 0; i < sourceKeys.length; i++) {
                        key = sourceKeys[i];
                        if (excluded.indexOf(key) >= 0)
                            continue;
                        target2[key] = source[key];
                    }
                    return target2;
                }
                function getListItemWrapperStyles(selected, disabled) {
                    return (0, _utils.classNames)("command-palette-list-item block w-full text-left px-3.5 py-2.5 rounded-md hover:bg-gray-100 dark:hover:bg-gray-800 focus:ring-1 focus:ring-gray-300 focus:outline-none flex items-center space-x-2.5 justify-between", selected && !disabled ? "bg-gray-200/50 dark:bg-gray-800" : "bg-transparent", disabled ? "cursor-default pointer-events-none opacity-50" : "cursor-pointer");
                }
                function Link(_ref) {
                    var localRenderLink = _ref.renderLink, _ref$closeOnSelect = _ref.closeOnSelect, closeOnSelect = _ref$closeOnSelect === void 0 ? true : _ref$closeOnSelect, _ref$disabled = _ref.disabled, disabled = _ref$disabled === void 0 ? false : _ref$disabled, _ref$showType = _ref.showType, showType = _ref$showType === void 0 ? true : _ref$showType, className = _ref.className, iconType = _ref.iconType, children = _ref.children, onClick = _ref.onClick, index = _ref.index, icon = _ref.icon, rest = _objectWithoutProperties(_ref, _excluded);
                    var _useContext = (0, _react.useContext)(_context.RenderLinkContext), globalRenderLink = _useContext.renderLink;
                    var _useContext2 = (0, _react.useContext)(_context.OpenContext), onChangeOpen = _useContext2.onChangeOpen;
                    var _useContext3 = (0, _react.useContext)(_context.SelectContext), selected = _useContext3.selected;
                    var renderLink = localRenderLink || globalRenderLink;
                    function renderLinkContent() {
                        return /* @__PURE__ */ _react["default"].createElement(ListItemContent, {
                            type: showType ? "Link" : void 0,
                            iconType,
                            icon
                        }, children);
                    }
                    var styles = (0, _utils.classNames)(getListItemWrapperStyles(selected === index, disabled), className);
                    function clickAndClose(e) {
                        if (rest.href && !disabled) {
                            if (onClick) {
                                onClick(e);
                            }
                            if (closeOnSelect) {
                                onChangeOpen(false);
                            }
                        }
                    }
                    return renderLink ? /* @__PURE__ */ _react["default"].createElement(_react.Fragment, null, renderLink(_objectSpread(_objectSpread({}, rest), {}, {
                        "data-close-on-select": closeOnSelect,
                        children: renderLinkContent(),
                        "aria-disabled": disabled,
                        onClick: clickAndClose,
                        className: styles
                    }))) : /* @__PURE__ */ _react["default"].createElement("a", _extends({}, rest, {
                        "data-close-on-select": closeOnSelect,
                        "aria-disabled": disabled,
                        onClick: clickAndClose,
                        className: styles
                    }), renderLinkContent());
                }
                function Button(_ref2) {
                    var _rest$disabled;
                    var _ref2$closeOnSelect = _ref2.closeOnSelect, closeOnSelect = _ref2$closeOnSelect === void 0 ? true : _ref2$closeOnSelect, _ref2$showType = _ref2.showType, showType = _ref2$showType === void 0 ? true : _ref2$showType, className = _ref2.className, children = _ref2.children, iconType = _ref2.iconType, onClick = _ref2.onClick, index = _ref2.index, icon = _ref2.icon, rest = _objectWithoutProperties(_ref2, _excluded2);
                    var _useContext4 = (0, _react.useContext)(_context.SelectContext), selected = _useContext4.selected;
                    var _useContext5 = (0, _react.useContext)(_context.OpenContext), onChangeOpen = _useContext5.onChangeOpen;
                    function clickAndClose(e) {
                        if (onClick) {
                            onClick(e);
                            if (closeOnSelect) {
                                onChangeOpen(false);
                            }
                        }
                    }
                    return /* @__PURE__ */ _react["default"].createElement("button", _extends({}, rest, {
                        "aria-disabled": (_rest$disabled = rest.disabled) !== null && _rest$disabled !== void 0 ? _rest$disabled : false,
                        "data-close-on-select": closeOnSelect,
                        onClick: clickAndClose,
                        className: (0, _utils.classNames)(getListItemWrapperStyles(selected === index, rest.disabled), className)
                    }), /* @__PURE__ */ _react["default"].createElement(ListItemContent, {
                        type: showType ? "Action" : void 0,
                        iconType,
                        icon
                    }, children));
                }
                function ListItemContent(_ref3) {
                    var ListItemIcon = _ref3.icon, iconType = _ref3.iconType, children = _ref3.children, type = _ref3.type;
                    return /* @__PURE__ */ _react["default"].createElement(_react["default"].Fragment, null, /* @__PURE__ */ _react["default"].createElement("div", {
                        className: "flex w-full items-center space-x-2.5"
                    }, ListItemIcon && (typeof ListItemIcon === "string" ? /* @__PURE__ */ _react["default"].createElement(_Icon["default"], {
                        name: ListItemIcon,
                        type: iconType
                    }) : /* @__PURE__ */ _react["default"].createElement(ListItemIcon, {
                        className: "w-5 h-5 text-gray-500"
                    })), typeof children === "string" ? /* @__PURE__ */ _react["default"].createElement("span", {
                        className: "truncate max-w-md dark:text-white"
                    }, children) : children), type && /* @__PURE__ */ _react["default"].createElement("span", {
                        className: "text-gray-500 text-sm"
                    }, type));
                }
                function ListItem(props) {
                    var Wrapper = props.href ? Link : Button;
                    return /* @__PURE__ */ _react["default"].createElement(Wrapper, props);
                }
            }
        });

        // node_modules/react-cmdk/dist/components/FreeSearchAction.js
        var require_FreeSearchAction = __commonJS({
            "node_modules/react-cmdk/dist/components/FreeSearchAction.js"(exports) {
                "use strict";
                function _typeof(obj) {
                    "@babel/helpers - typeof";
                    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
                        return typeof obj2;
                    } : function(obj2) {
                        return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
                    }, _typeof(obj);
                }
                Object.defineProperty(exports, "__esModule", {
                    value: true
                });
                exports["default"] = FreeSearchAction;
                var _ListItem = _interopRequireDefault(require_ListItem());
                var _react = _interopRequireWildcard(require_react());
                var _context = require_context();
                var _excluded = ["label"];
                function _getRequireWildcardCache(nodeInterop) {
                    if (typeof WeakMap !== "function")
                        return null;
                    var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
                    var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
                    return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
                        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
                    })(nodeInterop);
                }
                function _interopRequireWildcard(obj, nodeInterop) {
                    if (!nodeInterop && obj && obj.__esModule) {
                        return obj;
                    }
                    if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
                        return { "default": obj };
                    }
                    var cache = _getRequireWildcardCache(nodeInterop);
                    if (cache && cache.has(obj)) {
                        return cache.get(obj);
                    }
                    var newObj = {};
                    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for (var key in obj) {
                        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
                            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
                            if (desc && (desc.get || desc.set)) {
                                Object.defineProperty(newObj, key, desc);
                            } else {
                                newObj[key] = obj[key];
                            }
                        }
                    }
                    newObj["default"] = obj;
                    if (cache) {
                        cache.set(obj, newObj);
                    }
                    return newObj;
                }
                function _interopRequireDefault(obj) {
                    return obj && obj.__esModule ? obj : { "default": obj };
                }
                function _extends() {
                    _extends = Object.assign ? Object.assign.bind() : function(target2) {
                        for (var i = 1; i < arguments.length; i++) {
                            var source = arguments[i];
                            for (var key in source) {
                                if (Object.prototype.hasOwnProperty.call(source, key)) {
                                    target2[key] = source[key];
                                }
                            }
                        }
                        return target2;
                    };
                    return _extends.apply(this, arguments);
                }
                function _objectWithoutProperties(source, excluded) {
                    if (source == null)
                        return {};
                    var target2 = _objectWithoutPropertiesLoose(source, excluded);
                    var key, i;
                    if (Object.getOwnPropertySymbols) {
                        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
                        for (i = 0; i < sourceSymbolKeys.length; i++) {
                            key = sourceSymbolKeys[i];
                            if (excluded.indexOf(key) >= 0)
                                continue;
                            if (!Object.prototype.propertyIsEnumerable.call(source, key))
                                continue;
                            target2[key] = source[key];
                        }
                    }
                    return target2;
                }
                function _objectWithoutPropertiesLoose(source, excluded) {
                    if (source == null)
                        return {};
                    var target2 = {};
                    var sourceKeys = Object.keys(source);
                    var key, i;
                    for (i = 0; i < sourceKeys.length; i++) {
                        key = sourceKeys[i];
                        if (excluded.indexOf(key) >= 0)
                            continue;
                        target2[key] = source[key];
                    }
                    return target2;
                }
                function FreeSearchAction(_ref) {
                    var _ref$label = _ref.label, label = _ref$label === void 0 ? "Search for" : _ref$label, props = _objectWithoutProperties(_ref, _excluded);
                    var _useContext = (0, _react.useContext)(_context.SearchContext), search = _useContext.search;
                    return /* @__PURE__ */ _react["default"].createElement(_ListItem["default"], _extends({
                        index: 0,
                        icon: "MagnifyingGlassIcon",
                        showType: false
                    }, props), /* @__PURE__ */ _react["default"].createElement("span", {
                        className: "max-w-md truncate dark:text-white"
                    }, label, " ", /* @__PURE__ */ _react["default"].createElement("span", {
                        className: "font-semibold"
                    }, '"', search, '"')));
                }
            }
        });

        // node_modules/react-cmdk/dist/components/List.js
        var require_List = __commonJS({
            "node_modules/react-cmdk/dist/components/List.js"(exports) {
                "use strict";
                Object.defineProperty(exports, "__esModule", {
                    value: true
                });
                exports["default"] = List;
                var _react = _interopRequireDefault(require_react());
                function _interopRequireDefault(obj) {
                    return obj && obj.__esModule ? obj : { "default": obj };
                }
                function List(_ref) {
                    var children = _ref.children, heading = _ref.heading;
                    return /* @__PURE__ */ _react["default"].createElement("div", {
                        className: "space-y-1",
                        tabIndex: -1
                    }, heading && /* @__PURE__ */ _react["default"].createElement("h4", {
                        className: "px-3.5 text-gray-500 text-sm font-medium"
                    }, heading), /* @__PURE__ */ _react["default"].createElement("ul", {
                        tabIndex: -1
                    }, children));
                }
            }
        });

        // node_modules/react-cmdk/dist/components/Page.js
        var require_Page = __commonJS({
            "node_modules/react-cmdk/dist/components/Page.js"(exports) {
                "use strict";
                function _typeof(obj) {
                    "@babel/helpers - typeof";
                    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
                        return typeof obj2;
                    } : function(obj2) {
                        return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
                    }, _typeof(obj);
                }
                Object.defineProperty(exports, "__esModule", {
                    value: true
                });
                exports["default"] = Page;
                var _react = _interopRequireWildcard(require_react());
                var _context = require_context();
                function _getRequireWildcardCache(nodeInterop) {
                    if (typeof WeakMap !== "function")
                        return null;
                    var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
                    var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
                    return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
                        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
                    })(nodeInterop);
                }
                function _interopRequireWildcard(obj, nodeInterop) {
                    if (!nodeInterop && obj && obj.__esModule) {
                        return obj;
                    }
                    if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
                        return { "default": obj };
                    }
                    var cache = _getRequireWildcardCache(nodeInterop);
                    if (cache && cache.has(obj)) {
                        return cache.get(obj);
                    }
                    var newObj = {};
                    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for (var key in obj) {
                        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
                            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
                            if (desc && (desc.get || desc.set)) {
                                Object.defineProperty(newObj, key, desc);
                            } else {
                                newObj[key] = obj[key];
                            }
                        }
                    }
                    newObj["default"] = obj;
                    if (cache) {
                        cache.set(obj, newObj);
                    }
                    return newObj;
                }
                function Page(_ref) {
                    var searchPrefix = _ref.searchPrefix, children = _ref.children, onEscape = _ref.onEscape, id = _ref.id;
                    var _useContext = (0, _react.useContext)(_context.PageContext), page = _useContext.page, setSearchPrefix = _useContext.setSearchPrefix;
                    var _useContext2 = (0, _react.useContext)(_context.SearchContext), search = _useContext2.search;
                    var isActive = page === id;
                    (0, _react.useEffect)(function() {
                        if (onEscape && isActive) {
                            var handleKeyDown = function handleKeyDown2(e) {
                                if (e.key === "Escape") {
                                    e.preventDefault();
                                    e.stopPropagation();
                                    onEscape();
                                } else if (e.key === "Backspace" && !search) {
                                    e.preventDefault();
                                    e.stopPropagation();
                                    onEscape();
                                }
                            };
                            document.addEventListener("keydown", handleKeyDown);
                            return function() {
                                document.removeEventListener("keydown", handleKeyDown);
                            };
                        }
                    }, [isActive, search]);
                    (0, _react.useEffect)(function() {
                        if (isActive && setSearchPrefix) {
                            setSearchPrefix(searchPrefix);
                        }
                    }, [searchPrefix, isActive, setSearchPrefix]);
                    return isActive ? /* @__PURE__ */ _react["default"].createElement(_react["default"].Fragment, null, children) : null;
                }
            }
        });

        // node_modules/react-cmdk/dist/components/Search.js
        var require_Search = __commonJS({
            "node_modules/react-cmdk/dist/components/Search.js"(exports) {
                "use strict";
                function _typeof(obj) {
                    "@babel/helpers - typeof";
                    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
                        return typeof obj2;
                    } : function(obj2) {
                        return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
                    }, _typeof(obj);
                }
                Object.defineProperty(exports, "__esModule", {
                    value: true
                });
                exports["default"] = void 0;
                var _react = _interopRequireWildcard(require_react());
                var _outline = require_outline();
                var _solid = require_solid2();
                function _getRequireWildcardCache(nodeInterop) {
                    if (typeof WeakMap !== "function")
                        return null;
                    var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
                    var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
                    return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
                        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
                    })(nodeInterop);
                }
                function _interopRequireWildcard(obj, nodeInterop) {
                    if (!nodeInterop && obj && obj.__esModule) {
                        return obj;
                    }
                    if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
                        return { "default": obj };
                    }
                    var cache = _getRequireWildcardCache(nodeInterop);
                    if (cache && cache.has(obj)) {
                        return cache.get(obj);
                    }
                    var newObj = {};
                    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for (var key in obj) {
                        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
                            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
                            if (desc && (desc.get || desc.set)) {
                                Object.defineProperty(newObj, key, desc);
                            } else {
                                newObj[key] = obj[key];
                            }
                        }
                    }
                    newObj["default"] = obj;
                    if (cache) {
                        cache.set(obj, newObj);
                    }
                    return newObj;
                }
                function Search(_ref, ref) {
                    var _onChange = _ref.onChange, placeholder = _ref.placeholder, prefix = _ref.prefix, value = _ref.value;
                    return /* @__PURE__ */ _react["default"].createElement("div", {
                        className: "flex items-center space-x-1.5 pl-3"
                    }, /* @__PURE__ */ _react["default"].createElement(_outline.MagnifyingGlassIcon, {
                        className: "w-4 pointer-events-none text-gray-400 dark:text-gray-600"
                    }), prefix !== null && prefix !== void 0 && prefix.length ? prefix.map(function(p) {
                        return /* @__PURE__ */ _react["default"].createElement(_react.Fragment, {
                            key: p
                        }, /* @__PURE__ */ _react["default"].createElement("span", {
                            className: "dark:text-white"
                        }, p), /* @__PURE__ */ _react["default"].createElement("span", {
                            className: "text-gray-500"
                        }, "/"));
                    }) : null, /* @__PURE__ */ _react["default"].createElement("div", {
                        className: "flex-1 relative"
                    }, /* @__PURE__ */ _react["default"].createElement("input", {
                        ref,
                        spellCheck: false,
                        className: "py-4 px-0 border-none w-full focus:outline-none focus:border-none focus:ring-0 bg-transparent placeholder-gray-500 dark:text-white",
                        onChange: function onChange(e) {
                            _onChange(e.currentTarget.value);
                        },
                        onFocus: function onFocus(e) {
                            e.currentTarget.select();
                        },
                        onKeyDown: function onKeyDown(e) {
                            if (e.key === "Escape" && value) {
                                e.preventDefault();
                                e.stopPropagation();
                                _onChange("");
                            }
                        },
                        id: "command-palette-search-input",
                        placeholder,
                        value,
                        type: "text",
                        autoFocus: true
                    }), value && /* @__PURE__ */ _react["default"].createElement("button", {
                        tabIndex: -1,
                        type: "button",
                        onClick: function onClick() {
                            _onChange("");
                            var inputElement = document.getElementById("command-palette-search-input");
                            if (inputElement) {
                                inputElement.focus();
                            }
                        }
                    }, /* @__PURE__ */ _react["default"].createElement(_solid.XCircleIcon, {
                        className: "w-5 text-gray-300 dark:text-gray-600 hover:text-gray-500 dark:hover:text-gray-300 transition absolute right-3 top-1/2 transform -translate-y-1/2"
                    }))));
                }
                var _default = /* @__PURE__ */ (0, _react.forwardRef)(Search);
                exports["default"] = _default;
            }
        });

        // node_modules/@headlessui/react/dist/headlessui.dev.cjs
        var require_headlessui_dev = __commonJS({
            "node_modules/@headlessui/react/dist/headlessui.dev.cjs"(exports, module) {
                "use strict";
                var __create2 = Object.create;
                var __defProp2 = Object.defineProperty;
                var __getOwnPropDesc2 = Object.getOwnPropertyDescriptor;
                var __getOwnPropNames2 = Object.getOwnPropertyNames;
                var __getProtoOf2 = Object.getPrototypeOf;
                var __hasOwnProp2 = Object.prototype.hasOwnProperty;
                var __defNormalProp = (obj, key, value) => key in obj ? __defProp2(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
                var __export = (target2, all) => {
                    for (var name in all)
                        __defProp2(target2, name, { get: all[name], enumerable: true });
                };
                var __copyProps2 = (to, from, except, desc) => {
                    if (from && typeof from === "object" || typeof from === "function") {
                        for (let key of __getOwnPropNames2(from))
                            if (!__hasOwnProp2.call(to, key) && key !== except)
                                __defProp2(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc2(from, key)) || desc.enumerable });
                    }
                    return to;
                };
                var __toESM2 = (mod, isNodeMode, target2) => (target2 = mod != null ? __create2(__getProtoOf2(mod)) : {}, __copyProps2(
                    // If the importer is in node compatibility mode or this is not an ESM
                    // file that has been converted to a CommonJS file using a Babel-
                    // compatible transform (i.e. "__esModule" has not been set), then set
                    // "default" to the CommonJS "module.exports" for node compatibility.
                    isNodeMode || !mod || !mod.__esModule ? __defProp2(target2, "default", { value: mod, enumerable: true }) : target2,
                    mod
                ));
                var __toCommonJS = (mod) => __copyProps2(__defProp2({}, "__esModule", { value: true }), mod);
                var __publicField = (obj, key, value) => {
                    __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
                    return value;
                };
                var src_exports = {};
                __export(src_exports, {
                    Combobox: () => Combobox,
                    Dialog: () => Dialog,
                    Disclosure: () => Disclosure,
                    FocusTrap: () => FocusTrap,
                    Listbox: () => Listbox,
                    Menu: () => Menu,
                    Popover: () => Popover,
                    Portal: () => Portal,
                    RadioGroup: () => RadioGroup,
                    Switch: () => Switch,
                    Tab: () => Tab,
                    Transition: () => Transition
                });
                module.exports = __toCommonJS(src_exports);
                var import_react18 = __toESM2(require_react(), 1);
                var import_react3 = require_react();
                var import_react2 = require_react();
                var Env = class {
                    constructor() {
                        __publicField(this, "current", this.detect());
                        __publicField(this, "handoffState", "pending");
                        __publicField(this, "currentId", 0);
                    }
                    set(env2) {
                        if (this.current === env2)
                            return;
                        this.handoffState = "pending";
                        this.currentId = 0;
                        this.current = env2;
                    }
                    reset() {
                        this.set(this.detect());
                    }
                    nextId() {
                        return ++this.currentId;
                    }
                    get isServer() {
                        return this.current === "server";
                    }
                    get isClient() {
                        return this.current === "client";
                    }
                    detect() {
                        if (typeof window === "undefined" || typeof document === "undefined") {
                            return "server";
                        }
                        return "client";
                    }
                    handoff() {
                        if (this.handoffState === "pending") {
                            this.handoffState = "complete";
                        }
                    }
                    get isHandoffComplete() {
                        return this.handoffState === "complete";
                    }
                };
                var env = new Env();
                var useIsoMorphicEffect = (effect, deps) => {
                    if (env.isServer) {
                        (0, import_react2.useEffect)(effect, deps);
                    } else {
                        (0, import_react2.useLayoutEffect)(effect, deps);
                    }
                };
                var import_react22 = require_react();
                function useLatestValue(value) {
                    let cache = (0, import_react22.useRef)(value);
                    useIsoMorphicEffect(() => {
                        cache.current = value;
                    }, [value]);
                    return cache;
                }
                function useComputed(cb, dependencies) {
                    let [value, setValue] = (0, import_react3.useState)(cb);
                    let cbRef = useLatestValue(cb);
                    useIsoMorphicEffect(() => setValue(cbRef.current), [cbRef, setValue, ...dependencies]);
                    return value;
                }
                var import_react4 = require_react();
                function microTask(cb) {
                    if (typeof queueMicrotask === "function") {
                        queueMicrotask(cb);
                    } else {
                        Promise.resolve().then(cb).catch(
                            (e) => setTimeout(() => {
                                throw e;
                            })
                        );
                    }
                }
                function disposables() {
                    let _disposables = [];
                    let api = {
                        addEventListener(element, name, listener, options) {
                            element.addEventListener(name, listener, options);
                            return api.add(() => element.removeEventListener(name, listener, options));
                        },
                        requestAnimationFrame(...args) {
                            let raf = requestAnimationFrame(...args);
                            return api.add(() => cancelAnimationFrame(raf));
                        },
                        nextFrame(...args) {
                            return api.requestAnimationFrame(() => {
                                return api.requestAnimationFrame(...args);
                            });
                        },
                        setTimeout(...args) {
                            let timer = setTimeout(...args);
                            return api.add(() => clearTimeout(timer));
                        },
                        microTask(...args) {
                            let task = { current: true };
                            microTask(() => {
                                if (task.current) {
                                    args[0]();
                                }
                            });
                            return api.add(() => {
                                task.current = false;
                            });
                        },
                        style(node, property, value) {
                            let previous = node.style.getPropertyValue(property);
                            Object.assign(node.style, { [property]: value });
                            return this.add(() => {
                                Object.assign(node.style, { [property]: previous });
                            });
                        },
                        group(cb) {
                            let d = disposables();
                            cb(d);
                            return this.add(() => d.dispose());
                        },
                        add(cb) {
                            _disposables.push(cb);
                            return () => {
                                let idx = _disposables.indexOf(cb);
                                if (idx >= 0) {
                                    for (let dispose of _disposables.splice(idx, 1)) {
                                        dispose();
                                    }
                                }
                            };
                        },
                        dispose() {
                            for (let dispose of _disposables.splice(0)) {
                                dispose();
                            }
                        }
                    };
                    return api;
                }
                function useDisposables() {
                    let [d] = (0, import_react4.useState)(disposables);
                    (0, import_react4.useEffect)(() => () => d.dispose(), [d]);
                    return d;
                }
                var import_react5 = __toESM2(require_react(), 1);
                var useEvent = (
                    // TODO: Add React.useEvent ?? once the useEvent hook is available
                    function useEvent2(cb) {
                        let cache = useLatestValue(cb);
                        return import_react5.default.useCallback((...args) => cache.current(...args), [cache]);
                    }
                );
                var import_react7 = __toESM2(require_react(), 1);
                var import_react6 = require_react();
                function useServerHandoffComplete() {
                    let [complete, setComplete] = (0, import_react6.useState)(env.isHandoffComplete);
                    if (complete && env.isHandoffComplete === false) {
                        setComplete(false);
                    }
                    (0, import_react6.useEffect)(() => {
                        if (complete === true)
                            return;
                        setComplete(true);
                    }, [complete]);
                    (0, import_react6.useEffect)(() => env.handoff(), []);
                    return complete;
                }
                var _a;
                var useId = (
                    // Prefer React's `useId` if it's available.
                    // @ts-expect-error - `useId` doesn't exist in React < 18.
                    (_a = import_react7.default.useId) != null ? _a : function useId2() {
                        let ready = useServerHandoffComplete();
                        let [id, setId] = import_react7.default.useState(ready ? () => env.nextId() : null);
                        useIsoMorphicEffect(() => {
                            if (id === null)
                                setId(env.nextId());
                        }, [id]);
                        return id != null ? "" + id : void 0;
                    }
                );
                var import_react9 = require_react();
                function match(value, lookup, ...args) {
                    if (value in lookup) {
                        let returnValue = lookup[value];
                        return typeof returnValue === "function" ? returnValue(...args) : returnValue;
                    }
                    let error = new Error(
                        `Tried to handle "${value}" but there is no handler defined. Only defined handlers are: ${Object.keys(
                            lookup
                        ).map((key) => `"${key}"`).join(", ")}.`
                    );
                    if (Error.captureStackTrace)
                        Error.captureStackTrace(error, match);
                    throw error;
                }
                function getOwnerDocument(element) {
                    if (env.isServer)
                        return null;
                    if (element instanceof Node)
                        return element.ownerDocument;
                    if (element == null ? void 0 : element.hasOwnProperty("current")) {
                        if (element.current instanceof Node)
                            return element.current.ownerDocument;
                    }
                    return document;
                }
                var focusableSelector = [
                    "[contentEditable=true]",
                    "[tabindex]",
                    "a[href]",
                    "area[href]",
                    "button:not([disabled])",
                    "iframe",
                    "input:not([disabled])",
                    "select:not([disabled])",
                    "textarea:not([disabled])"
                ].map(
                    false ? (
                        // TODO: Remove this once JSDOM fixes the issue where an element that is
                        // "hidden" can be the document.activeElement, because this is not possible
                        // in real browsers.
                        (selector) => `${selector}:not([tabindex='-1']):not([style*='display: none'])`
                    ) : (selector) => `${selector}:not([tabindex='-1'])`
                ).join(",");
                function getFocusableElements(container = document.body) {
                    if (container == null)
                        return [];
                    return Array.from(container.querySelectorAll(focusableSelector)).sort(
                        // We want to move `tabIndex={0}` to the end of the list, this is what the browser does as well.
                        (a, z) => Math.sign((a.tabIndex || Number.MAX_SAFE_INTEGER) - (z.tabIndex || Number.MAX_SAFE_INTEGER))
                    );
                }
                function isFocusableElement(element, mode = 0) {
                    var _a3;
                    if (element === ((_a3 = getOwnerDocument(element)) == null ? void 0 : _a3.body))
                        return false;
                    return match(mode, {
                        [
                            0
                            /* Strict */
                            ]() {
                            return element.matches(focusableSelector);
                        },
                        [
                            1
                            /* Loose */
                            ]() {
                            let next = element;
                            while (next !== null) {
                                if (next.matches(focusableSelector))
                                    return true;
                                next = next.parentElement;
                            }
                            return false;
                        }
                    });
                }
                function restoreFocusIfNecessary(element) {
                    let ownerDocument = getOwnerDocument(element);
                    disposables().nextFrame(() => {
                        if (ownerDocument && !isFocusableElement(
                            ownerDocument.activeElement,
                            0
                            /* Strict */
                        )) {
                            focusElement(element);
                        }
                    });
                }
                if (typeof window !== "undefined" && typeof document !== "undefined") {
                    document.addEventListener(
                        "keydown",
                        (event) => {
                            if (event.metaKey || event.altKey || event.ctrlKey) {
                                return;
                            }
                            document.documentElement.dataset.headlessuiFocusVisible = "";
                        },
                        true
                    );
                    document.addEventListener(
                        "click",
                        (event) => {
                            if (event.detail === 1) {
                                delete document.documentElement.dataset.headlessuiFocusVisible;
                            } else if (event.detail === 0) {
                                document.documentElement.dataset.headlessuiFocusVisible = "";
                            }
                        },
                        true
                    );
                }
                function focusElement(element) {
                    element == null ? void 0 : element.focus({ preventScroll: true });
                }
                var selectableSelector = ["textarea", "input"].join(",");
                function isSelectableElement(element) {
                    var _a3, _b;
                    return (_b = (_a3 = element == null ? void 0 : element.matches) == null ? void 0 : _a3.call(element, selectableSelector)) != null ? _b : false;
                }
                function sortByDomNode(nodes, resolveKey = (i) => i) {
                    return nodes.slice().sort((aItem, zItem) => {
                        let a = resolveKey(aItem);
                        let z = resolveKey(zItem);
                        if (a === null || z === null)
                            return 0;
                        let position = a.compareDocumentPosition(z);
                        if (position & Node.DOCUMENT_POSITION_FOLLOWING)
                            return -1;
                        if (position & Node.DOCUMENT_POSITION_PRECEDING)
                            return 1;
                        return 0;
                    });
                }
                function focusFrom(current, focus) {
                    return focusIn(getFocusableElements(), focus, { relativeTo: current });
                }
                function focusIn(container, focus, {
                    sorted = true,
                    relativeTo = null,
                    skipElements = []
                } = {}) {
                    let ownerDocument = Array.isArray(container) ? container.length > 0 ? container[0].ownerDocument : document : container.ownerDocument;
                    let elements = Array.isArray(container) ? sorted ? sortByDomNode(container) : container : getFocusableElements(container);
                    if (skipElements.length > 0 && elements.length > 1) {
                        elements = elements.filter((x) => !skipElements.includes(x));
                    }
                    relativeTo = relativeTo != null ? relativeTo : ownerDocument.activeElement;
                    let direction = (() => {
                        if (focus & (1 | 4))
                            return 1;
                        if (focus & (2 | 8))
                            return -1;
                        throw new Error("Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last");
                    })();
                    let startIndex = (() => {
                        if (focus & 1)
                            return 0;
                        if (focus & 2)
                            return Math.max(0, elements.indexOf(relativeTo)) - 1;
                        if (focus & 4)
                            return Math.max(0, elements.indexOf(relativeTo)) + 1;
                        if (focus & 8)
                            return elements.length - 1;
                        throw new Error("Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last");
                    })();
                    let focusOptions = focus & 32 ? { preventScroll: true } : {};
                    let offset = 0;
                    let total = elements.length;
                    let next = void 0;
                    do {
                        if (offset >= total || offset + total <= 0)
                            return 0;
                        let nextIdx = startIndex + offset;
                        if (focus & 16) {
                            nextIdx = (nextIdx + total) % total;
                        } else {
                            if (nextIdx < 0)
                                return 3;
                            if (nextIdx >= total)
                                return 1;
                        }
                        next = elements[nextIdx];
                        next == null ? void 0 : next.focus(focusOptions);
                        offset += direction;
                    } while (next !== ownerDocument.activeElement);
                    if (focus & (4 | 2) && isSelectableElement(next)) {
                        next.select();
                    }
                    return 2;
                }
                var import_react8 = require_react();
                function useDocumentEvent(type, listener, options) {
                    let listenerRef = useLatestValue(listener);
                    (0, import_react8.useEffect)(() => {
                        function handler(event) {
                            listenerRef.current(event);
                        }
                        document.addEventListener(type, handler, options);
                        return () => document.removeEventListener(type, handler, options);
                    }, [type, options]);
                }
                function useOutsideClick(containers, cb, enabled = true) {
                    let enabledRef = (0, import_react9.useRef)(false);
                    (0, import_react9.useEffect)(
                        false ? () => {
                            enabledRef.current = enabled;
                        } : () => {
                            requestAnimationFrame(() => {
                                enabledRef.current = enabled;
                            });
                        },
                        [enabled]
                    );
                    function handleOutsideClick(event, resolveTarget) {
                        if (!enabledRef.current)
                            return;
                        if (event.defaultPrevented)
                            return;
                        let _containers = function resolve(containers2) {
                            if (typeof containers2 === "function") {
                                return resolve(containers2());
                            }
                            if (Array.isArray(containers2)) {
                                return containers2;
                            }
                            if (containers2 instanceof Set) {
                                return containers2;
                            }
                            return [containers2];
                        }(containers);
                        let target2 = resolveTarget(event);
                        if (target2 === null) {
                            return;
                        }
                        if (!target2.getRootNode().contains(target2))
                            return;
                        for (let container of _containers) {
                            if (container === null)
                                continue;
                            let domNode = container instanceof HTMLElement ? container : container.current;
                            if (domNode == null ? void 0 : domNode.contains(target2)) {
                                return;
                            }
                            if (event.composed && event.composedPath().includes(domNode)) {
                                return;
                            }
                        }
                        if (
                            // This check alllows us to know whether or not we clicked on a "focusable" element like a
                            // button or an input. This is a backwards compatibility check so that you can open a <Menu
                            // /> and click on another <Menu /> which should close Menu A and open Menu B. We might
                            // revisit that so that you will require 2 clicks instead.
                            !isFocusableElement(
                                target2,
                                1
                                /* Loose */
                            ) && // This could be improved, but the `Combobox.Button` adds tabIndex={-1} to make it
                            // unfocusable via the keyboard so that tabbing to the next item from the input doesn't
                            // first go to the button.
                            target2.tabIndex !== -1
                        ) {
                            event.preventDefault();
                        }
                        return cb(event, target2);
                    }
                    let initialClickTarget = (0, import_react9.useRef)(null);
                    useDocumentEvent(
                        "mousedown",
                        (event) => {
                            var _a3, _b;
                            if (enabledRef.current) {
                                initialClickTarget.current = ((_b = (_a3 = event.composedPath) == null ? void 0 : _a3.call(event)) == null ? void 0 : _b[0]) || event.target;
                            }
                        },
                        true
                    );
                    useDocumentEvent(
                        "click",
                        (event) => {
                            if (!initialClickTarget.current) {
                                return;
                            }
                            handleOutsideClick(event, () => {
                                return initialClickTarget.current;
                            });
                            initialClickTarget.current = null;
                        },
                        // We will use the `capture` phase so that layers in between with `event.stopPropagation()`
                        // don't "cancel" this outside click check. E.g.: A `Menu` inside a `DialogPanel` if the `Menu`
                        // is open, and you click outside of it in the `DialogPanel` the `Menu` should close. However,
                        // the `DialogPanel` has a `onClick(e) { e.stopPropagation() }` which would cancel this.
                        true
                    );
                    useDocumentEvent(
                        "blur",
                        (event) => handleOutsideClick(
                            event,
                            () => window.document.activeElement instanceof HTMLIFrameElement ? window.document.activeElement : null
                        ),
                        true
                    );
                }
                var import_react10 = require_react();
                function resolveType(props) {
                    var _a3;
                    if (props.type)
                        return props.type;
                    let tag = (_a3 = props.as) != null ? _a3 : "button";
                    if (typeof tag === "string" && tag.toLowerCase() === "button")
                        return "button";
                    return void 0;
                }
                function useResolveButtonType(props, ref) {
                    let [type, setType] = (0, import_react10.useState)(() => resolveType(props));
                    useIsoMorphicEffect(() => {
                        setType(resolveType(props));
                    }, [props.type, props.as]);
                    useIsoMorphicEffect(() => {
                        if (type)
                            return;
                        if (!ref.current)
                            return;
                        if (ref.current instanceof HTMLButtonElement && !ref.current.hasAttribute("type")) {
                            setType("button");
                        }
                    }, [type, ref]);
                    return type;
                }
                var import_react11 = require_react();
                var Optional = Symbol();
                function optionalRef(cb, isOptional = true) {
                    return Object.assign(cb, { [Optional]: isOptional });
                }
                function useSyncRefs(...refs) {
                    let cache = (0, import_react11.useRef)(refs);
                    (0, import_react11.useEffect)(() => {
                        cache.current = refs;
                    }, [refs]);
                    let syncRefs = useEvent((value) => {
                        for (let ref of cache.current) {
                            if (ref == null)
                                continue;
                            if (typeof ref === "function")
                                ref(value);
                            else
                                ref.current = value;
                        }
                    });
                    return refs.every(
                        (ref) => ref == null || // @ts-expect-error
                            (ref == null ? void 0 : ref[Optional])
                    ) ? void 0 : syncRefs;
                }
                var import_react12 = require_react();
                function useTreeWalker({
                    container,
                    accept,
                    walk,
                    enabled = true
                }) {
                    let acceptRef = (0, import_react12.useRef)(accept);
                    let walkRef = (0, import_react12.useRef)(walk);
                    (0, import_react12.useEffect)(() => {
                        acceptRef.current = accept;
                        walkRef.current = walk;
                    }, [accept, walk]);
                    useIsoMorphicEffect(() => {
                        if (!container)
                            return;
                        if (!enabled)
                            return;
                        let ownerDocument = getOwnerDocument(container);
                        if (!ownerDocument)
                            return;
                        let accept2 = acceptRef.current;
                        let walk2 = walkRef.current;
                        let acceptNode = Object.assign((node) => accept2(node), { acceptNode: accept2 });
                        let walker = ownerDocument.createTreeWalker(
                            container,
                            NodeFilter.SHOW_ELEMENT,
                            acceptNode,
                            // @ts-expect-error This `false` is a simple small fix for older browsers
                            false
                        );
                        while (walker.nextNode())
                            walk2(walker.currentNode);
                    }, [container, enabled, acceptRef, walkRef]);
                }
                function assertNever(x) {
                    throw new Error("Unexpected object: " + x);
                }
                function calculateActiveIndex(action, resolvers) {
                    let items = resolvers.resolveItems();
                    if (items.length <= 0)
                        return null;
                    let currentActiveIndex = resolvers.resolveActiveIndex();
                    let activeIndex = currentActiveIndex != null ? currentActiveIndex : -1;
                    let nextActiveIndex = (() => {
                        switch (action.focus) {
                            case 0:
                                return items.findIndex((item) => !resolvers.resolveDisabled(item));
                            case 1: {
                                let idx = items.slice().reverse().findIndex((item, idx2, all) => {
                                    if (activeIndex !== -1 && all.length - idx2 - 1 >= activeIndex)
                                        return false;
                                    return !resolvers.resolveDisabled(item);
                                });
                                if (idx === -1)
                                    return idx;
                                return items.length - 1 - idx;
                            }
                            case 2:
                                return items.findIndex((item, idx) => {
                                    if (idx <= activeIndex)
                                        return false;
                                    return !resolvers.resolveDisabled(item);
                                });
                            case 3: {
                                let idx = items.slice().reverse().findIndex((item) => !resolvers.resolveDisabled(item));
                                if (idx === -1)
                                    return idx;
                                return items.length - 1 - idx;
                            }
                            case 4:
                                return items.findIndex((item) => resolvers.resolveId(item) === action.id);
                            case 5:
                                return null;
                            default:
                                assertNever(action);
                        }
                    })();
                    return nextActiveIndex === -1 ? currentActiveIndex : nextActiveIndex;
                }
                var import_react13 = require_react();
                function classNames(...classes) {
                    return classes.filter(Boolean).join(" ");
                }
                function render({
                    ourProps,
                    theirProps,
                    slot,
                    defaultTag,
                    features,
                    visible = true,
                    name
                }) {
                    let props = mergeProps(theirProps, ourProps);
                    if (visible)
                        return _render(props, slot, defaultTag, name);
                    let featureFlags = features != null ? features : 0;
                    if (featureFlags & 2) {
                        let { static: isStatic = false, ...rest } = props;
                        if (isStatic)
                            return _render(rest, slot, defaultTag, name);
                    }
                    if (featureFlags & 1) {
                        let { unmount = true, ...rest } = props;
                        let strategy = unmount ? 0 : 1;
                        return match(strategy, {
                            [
                                0
                                /* Unmount */
                                ]() {
                                return null;
                            },
                            [
                                1
                                /* Hidden */
                                ]() {
                                return _render(
                                    { ...rest, ...{ hidden: true, style: { display: "none" } } },
                                    slot,
                                    defaultTag,
                                    name
                                );
                            }
                        });
                    }
                    return _render(props, slot, defaultTag, name);
                }
                function _render(props, slot = {}, tag, name) {
                    let {
                        as: Component = tag,
                        children,
                        refName = "ref",
                        ...rest
                    } = omit(props, ["unmount", "static"]);
                    let refRelatedProps = props.ref !== void 0 ? { [refName]: props.ref } : {};
                    let resolvedChildren = typeof children === "function" ? children(slot) : children;
                    if ("className" in rest && rest.className && typeof rest.className === "function") {
                        rest.className = rest.className(slot);
                    }
                    let dataAttributes = {};
                    if (slot) {
                        let exposeState = false;
                        let states = [];
                        for (let [k, v] of Object.entries(slot)) {
                            if (typeof v === "boolean") {
                                exposeState = true;
                            }
                            if (v === true) {
                                states.push(k);
                            }
                        }
                        if (exposeState)
                            dataAttributes[`data-headlessui-state`] = states.join(" ");
                    }
                    if (Component === import_react13.Fragment) {
                        if (Object.keys(compact(rest)).length > 0) {
                            if (!(0, import_react13.isValidElement)(resolvedChildren) || Array.isArray(resolvedChildren) && resolvedChildren.length > 1) {
                                throw new Error(
                                    [
                                        'Passing props on "Fragment"!',
                                        "",
                                        `The current component <${name} /> is rendering a "Fragment".`,
                                        `However we need to passthrough the following props:`,
                                        Object.keys(rest).map((line) => `  - ${line}`).join("\n"),
                                        "",
                                        "You can apply a few solutions:",
                                        [
                                            'Add an `as="..."` prop, to ensure that we render an actual element instead of a "Fragment".',
                                            "Render a single element as the child so that we can forward the props onto that element."
                                        ].map((line) => `  - ${line}`).join("\n")
                                    ].join("\n")
                                );
                            }
                            let childProps = resolvedChildren.props;
                            let newClassName = typeof (childProps == null ? void 0 : childProps.className) === "function" ? (...args) => classNames(childProps == null ? void 0 : childProps.className(...args), rest.className) : classNames(childProps == null ? void 0 : childProps.className, rest.className);
                            let classNameProps = newClassName ? { className: newClassName } : {};
                            return (0, import_react13.cloneElement)(
                                resolvedChildren,
                                Object.assign(
                                    {},
                                    // Filter out undefined values so that they don't override the existing values
                                    mergeProps(resolvedChildren.props, compact(omit(rest, ["ref"]))),
                                    dataAttributes,
                                    refRelatedProps,
                                    mergeRefs(resolvedChildren.ref, refRelatedProps.ref),
                                    classNameProps
                                )
                            );
                        }
                    }
                    return (0, import_react13.createElement)(
                        Component,
                        Object.assign(
                            {},
                            omit(rest, ["ref"]),
                            Component !== import_react13.Fragment && refRelatedProps,
                            Component !== import_react13.Fragment && dataAttributes
                        ),
                        resolvedChildren
                    );
                }
                function mergeRefs(...refs) {
                    return {
                        ref: refs.every((ref) => ref == null) ? void 0 : (value) => {
                            for (let ref of refs) {
                                if (ref == null)
                                    continue;
                                if (typeof ref === "function")
                                    ref(value);
                                else
                                    ref.current = value;
                            }
                        }
                    };
                }
                function mergeProps(...listOfProps) {
                    var _a3;
                    if (listOfProps.length === 0)
                        return {};
                    if (listOfProps.length === 1)
                        return listOfProps[0];
                    let target2 = {};
                    let eventHandlers = {};
                    for (let props of listOfProps) {
                        for (let prop in props) {
                            if (prop.startsWith("on") && typeof props[prop] === "function") {
                                (_a3 = eventHandlers[prop]) != null ? _a3 : eventHandlers[prop] = [];
                                eventHandlers[prop].push(props[prop]);
                            } else {
                                target2[prop] = props[prop];
                            }
                        }
                    }
                    if (target2.disabled || target2["aria-disabled"]) {
                        return Object.assign(
                            target2,
                            // Set all event listeners that we collected to `undefined`. This is
                            // important because of the `cloneElement` from above, which merges the
                            // existing and new props, they don't just override therefore we have to
                            // explicitly nullify them.
                            Object.fromEntries(Object.keys(eventHandlers).map((eventName) => [eventName, void 0]))
                        );
                    }
                    for (let eventName in eventHandlers) {
                        Object.assign(target2, {
                            [eventName](event, ...args) {
                                let handlers = eventHandlers[eventName];
                                for (let handler of handlers) {
                                    if ((event instanceof Event || (event == null ? void 0 : event.nativeEvent) instanceof Event) && event.defaultPrevented) {
                                        return;
                                    }
                                    handler(event, ...args);
                                }
                            }
                        });
                    }
                    return target2;
                }
                function forwardRefWithAs(component) {
                    var _a3;
                    return Object.assign((0, import_react13.forwardRef)(component), {
                        displayName: (_a3 = component.displayName) != null ? _a3 : component.name
                    });
                }
                function compact(object) {
                    let clone = Object.assign({}, object);
                    for (let key in clone) {
                        if (clone[key] === void 0)
                            delete clone[key];
                    }
                    return clone;
                }
                function omit(object, keysToOmit = []) {
                    let clone = Object.assign({}, object);
                    for (let key of keysToOmit) {
                        if (key in clone)
                            delete clone[key];
                    }
                    return clone;
                }
                function isDisabledReactIssue7711(element) {
                    let parent = element.parentElement;
                    let legend = null;
                    while (parent && !(parent instanceof HTMLFieldSetElement)) {
                        if (parent instanceof HTMLLegendElement)
                            legend = parent;
                        parent = parent.parentElement;
                    }
                    let isParentDisabled = (parent == null ? void 0 : parent.getAttribute("disabled")) === "";
                    if (isParentDisabled && isFirstLegend(legend))
                        return false;
                    return isParentDisabled;
                }
                function isFirstLegend(element) {
                    if (!element)
                        return false;
                    let previous = element.previousElementSibling;
                    while (previous !== null) {
                        if (previous instanceof HTMLLegendElement)
                            return false;
                        previous = previous.previousElementSibling;
                    }
                    return true;
                }
                function objectToFormEntries(source = {}, parentKey = null, entries = []) {
                    for (let [key, value] of Object.entries(source)) {
                        append(entries, composeKey(parentKey, key), value);
                    }
                    return entries;
                }
                function composeKey(parent, key) {
                    return parent ? parent + "[" + key + "]" : key;
                }
                function append(entries, key, value) {
                    if (Array.isArray(value)) {
                        for (let [subkey, subvalue] of value.entries()) {
                            append(entries, composeKey(key, subkey.toString()), subvalue);
                        }
                    } else if (value instanceof Date) {
                        entries.push([key, value.toISOString()]);
                    } else if (typeof value === "boolean") {
                        entries.push([key, value ? "1" : "0"]);
                    } else if (typeof value === "string") {
                        entries.push([key, value]);
                    } else if (typeof value === "number") {
                        entries.push([key, `${value}`]);
                    } else if (value === null || value === void 0) {
                        entries.push([key, ""]);
                    } else {
                        objectToFormEntries(value, key, entries);
                    }
                }
                function attemptSubmit(element) {
                    var _a3;
                    let form = (_a3 = element == null ? void 0 : element.form) != null ? _a3 : element.closest("form");
                    if (!form)
                        return;
                    for (let element2 of form.elements) {
                        if (element2.tagName === "INPUT" && element2.type === "submit" || element2.tagName === "BUTTON" && element2.type === "submit" || element2.nodeName === "INPUT" && element2.type === "image") {
                            element2.click();
                            return;
                        }
                    }
                }
                var DEFAULT_VISUALLY_HIDDEN_TAG = "div";
                function VisuallyHidden(props, ref) {
                    let { features = 1, ...theirProps } = props;
                    let ourProps = {
                        ref,
                        "aria-hidden": (features & 2) === 2 ? true : void 0,
                        style: {
                            position: "fixed",
                            top: 1,
                            left: 1,
                            width: 1,
                            height: 0,
                            padding: 0,
                            margin: -1,
                            overflow: "hidden",
                            clip: "rect(0, 0, 0, 0)",
                            whiteSpace: "nowrap",
                            borderWidth: "0",
                            ...(features & 4) === 4 && !((features & 2) === 2) && { display: "none" }
                        }
                    };
                    return render({
                        ourProps,
                        theirProps,
                        slot: {},
                        defaultTag: DEFAULT_VISUALLY_HIDDEN_TAG,
                        name: "Hidden"
                    });
                }
                var Hidden = forwardRefWithAs(VisuallyHidden);
                var import_react14 = __toESM2(require_react(), 1);
                var Context = (0, import_react14.createContext)(null);
                Context.displayName = "OpenClosedContext";
                function useOpenClosed() {
                    return (0, import_react14.useContext)(Context);
                }
                function OpenClosedProvider({ value, children }) {
                    return /* @__PURE__ */ import_react14.default.createElement(Context.Provider, { value }, children);
                }
                var import_react15 = require_react();
                function useControllable(controlledValue, onChange, defaultValue) {
                    let [internalValue, setInternalValue] = (0, import_react15.useState)(defaultValue);
                    let isControlled = controlledValue !== void 0;
                    let wasControlled = (0, import_react15.useRef)(isControlled);
                    let didWarnOnUncontrolledToControlled = (0, import_react15.useRef)(false);
                    let didWarnOnControlledToUncontrolled = (0, import_react15.useRef)(false);
                    if (isControlled && !wasControlled.current && !didWarnOnUncontrolledToControlled.current) {
                        didWarnOnUncontrolledToControlled.current = true;
                        wasControlled.current = isControlled;
                        console.error(
                            "A component is changing from uncontrolled to controlled. This may be caused by the value changing from undefined to a defined value, which should not happen."
                        );
                    } else if (!isControlled && wasControlled.current && !didWarnOnControlledToUncontrolled.current) {
                        didWarnOnControlledToUncontrolled.current = true;
                        wasControlled.current = isControlled;
                        console.error(
                            "A component is changing from controlled to uncontrolled. This may be caused by the value changing from a defined value to undefined, which should not happen."
                        );
                    }
                    return [
                        isControlled ? controlledValue : internalValue,
                        useEvent((value) => {
                            if (isControlled) {
                                return onChange == null ? void 0 : onChange(value);
                            } else {
                                setInternalValue(value);
                                return onChange == null ? void 0 : onChange(value);
                            }
                        })
                    ];
                }
                var import_react16 = require_react();
                function useWatch(cb, dependencies) {
                    let track = (0, import_react16.useRef)([]);
                    let action = useEvent(cb);
                    (0, import_react16.useEffect)(() => {
                        let oldValues = [...track.current];
                        for (let [idx, value] of dependencies.entries()) {
                            if (track.current[idx] !== value) {
                                let returnValue = action(dependencies, oldValues);
                                track.current = dependencies;
                                return returnValue;
                            }
                        }
                    }, [action, ...dependencies]);
                }
                var import_react17 = require_react();
                function eventToPosition(evt) {
                    return [evt.screenX, evt.screenY];
                }
                function useTrackedPointer() {
                    let lastPos = (0, import_react17.useRef)([-1, -1]);
                    return {
                        wasMoved(evt) {
                            if (false) {
                                return true;
                            }
                            let newPos = eventToPosition(evt);
                            if (lastPos.current[0] === newPos[0] && lastPos.current[1] === newPos[1]) {
                                return false;
                            }
                            lastPos.current = newPos;
                            return true;
                        },
                        update(evt) {
                            lastPos.current = eventToPosition(evt);
                        }
                    };
                }
                function isIOS() {
                    return (
                        // Check if it is an iPhone
                        /iPhone/gi.test(window.navigator.platform) || // Check if it is an iPad. iPad reports itself as "MacIntel", but we can check if it is a touch
                        // screen. Let's hope that Apple doesn't release a touch screen Mac (or maybe this would then
                        // work as expected 🤔).
                        /Mac/gi.test(window.navigator.platform) && window.navigator.maxTouchPoints > 0
                    );
                }
                function isAndroid() {
                    return /Android/gi.test(window.navigator.userAgent);
                }
                function isMobile() {
                    return isIOS() || isAndroid();
                }
                function adjustOrderedState(state, adjustment = (i) => i) {
                    let currentActiveOption = state.activeOptionIndex !== null ? state.options[state.activeOptionIndex] : null;
                    let sortedOptions = sortByDomNode(
                        adjustment(state.options.slice()),
                        (option) => option.dataRef.current.domRef.current
                    );
                    let adjustedActiveOptionIndex = currentActiveOption ? sortedOptions.indexOf(currentActiveOption) : null;
                    if (adjustedActiveOptionIndex === -1) {
                        adjustedActiveOptionIndex = null;
                    }
                    return {
                        options: sortedOptions,
                        activeOptionIndex: adjustedActiveOptionIndex
                    };
                }
                var reducers = {
                    [
                        1
                        /* CloseCombobox */
                        ](state) {
                        var _a3;
                        if ((_a3 = state.dataRef.current) == null ? void 0 : _a3.disabled)
                            return state;
                        if (state.comboboxState === 1)
                            return state;
                        return {
                            ...state,
                            activeOptionIndex: null,
                            comboboxState: 1
                            /* Closed */
                        };
                    },
                    [
                        0
                        /* OpenCombobox */
                        ](state) {
                        var _a3;
                        if ((_a3 = state.dataRef.current) == null ? void 0 : _a3.disabled)
                            return state;
                        if (state.comboboxState === 0)
                            return state;
                        let activeOptionIndex = state.activeOptionIndex;
                        if (state.dataRef.current) {
                            let { isSelected } = state.dataRef.current;
                            let optionIdx = state.options.findIndex((option) => isSelected(option.dataRef.current.value));
                            if (optionIdx !== -1) {
                                activeOptionIndex = optionIdx;
                            }
                        }
                        return { ...state, comboboxState: 0, activeOptionIndex };
                    },
                    [
                        2
                        /* GoToOption */
                        ](state, action) {
                        var _a3, _b, _c, _d;
                        if ((_a3 = state.dataRef.current) == null ? void 0 : _a3.disabled)
                            return state;
                        if (((_b = state.dataRef.current) == null ? void 0 : _b.optionsRef.current) && !((_c = state.dataRef.current) == null ? void 0 : _c.optionsPropsRef.current.static) && state.comboboxState === 1) {
                            return state;
                        }
                        let adjustedState = adjustOrderedState(state);
                        if (adjustedState.activeOptionIndex === null) {
                            let localActiveOptionIndex = adjustedState.options.findIndex(
                                (option) => !option.dataRef.current.disabled
                            );
                            if (localActiveOptionIndex !== -1) {
                                adjustedState.activeOptionIndex = localActiveOptionIndex;
                            }
                        }
                        let activeOptionIndex = calculateActiveIndex(action, {
                            resolveItems: () => adjustedState.options,
                            resolveActiveIndex: () => adjustedState.activeOptionIndex,
                            resolveId: (item) => item.id,
                            resolveDisabled: (item) => item.dataRef.current.disabled
                        });
                        return {
                            ...state,
                            ...adjustedState,
                            activeOptionIndex,
                            activationTrigger: (_d = action.trigger) != null ? _d : 1
                            /* Other */
                        };
                    },
                    [
                        3
                        /* RegisterOption */
                        ]: (state, action) => {
                        var _a3, _b;
                        let option = { id: action.id, dataRef: action.dataRef };
                        let adjustedState = adjustOrderedState(state, (options) => [...options, option]);
                        if (state.activeOptionIndex === null) {
                            if ((_a3 = state.dataRef.current) == null ? void 0 : _a3.isSelected(action.dataRef.current.value)) {
                                adjustedState.activeOptionIndex = adjustedState.options.indexOf(option);
                            }
                        }
                        let nextState = {
                            ...state,
                            ...adjustedState,
                            activationTrigger: 1
                            /* Other */
                        };
                        if (((_b = state.dataRef.current) == null ? void 0 : _b.__demoMode) && state.dataRef.current.value === void 0) {
                            nextState.activeOptionIndex = 0;
                        }
                        return nextState;
                    },
                    [
                        4
                        /* UnregisterOption */
                        ]: (state, action) => {
                        let adjustedState = adjustOrderedState(state, (options) => {
                            let idx = options.findIndex((a) => a.id === action.id);
                            if (idx !== -1)
                                options.splice(idx, 1);
                            return options;
                        });
                        return {
                            ...state,
                            ...adjustedState,
                            activationTrigger: 1
                            /* Other */
                        };
                    },
                    [
                        5
                        /* RegisterLabel */
                        ]: (state, action) => {
                        return {
                            ...state,
                            labelId: action.id
                        };
                    }
                };
                var ComboboxActionsContext = (0, import_react18.createContext)(null);
                ComboboxActionsContext.displayName = "ComboboxActionsContext";
                function useActions(component) {
                    let context = (0, import_react18.useContext)(ComboboxActionsContext);
                    if (context === null) {
                        let err = new Error(`<${component} /> is missing a parent <Combobox /> component.`);
                        if (Error.captureStackTrace)
                            Error.captureStackTrace(err, useActions);
                        throw err;
                    }
                    return context;
                }
                var ComboboxDataContext = (0, import_react18.createContext)(null);
                ComboboxDataContext.displayName = "ComboboxDataContext";
                function useData(component) {
                    let context = (0, import_react18.useContext)(ComboboxDataContext);
                    if (context === null) {
                        let err = new Error(`<${component} /> is missing a parent <Combobox /> component.`);
                        if (Error.captureStackTrace)
                            Error.captureStackTrace(err, useData);
                        throw err;
                    }
                    return context;
                }
                function stateReducer(state, action) {
                    return match(action.type, reducers, state, action);
                }
                var DEFAULT_COMBOBOX_TAG = import_react18.Fragment;
                function ComboboxFn(props, ref) {
                    let {
                        value: controlledValue,
                        defaultValue,
                        onChange: controlledOnChange,
                        form: formName,
                        name,
                        by = (a, z) => a === z,
                        disabled = false,
                        __demoMode = false,
                        nullable = false,
                        multiple = false,
                        ...theirProps
                    } = props;
                    let [value = multiple ? [] : void 0, theirOnChange] = useControllable(
                        controlledValue,
                        controlledOnChange,
                        defaultValue
                    );
                    let [state, dispatch] = (0, import_react18.useReducer)(stateReducer, {
                        dataRef: (0, import_react18.createRef)(),
                        comboboxState: __demoMode ? 0 : 1,
                        options: [],
                        activeOptionIndex: null,
                        activationTrigger: 1,
                        labelId: null
                    });
                    let defaultToFirstOption = (0, import_react18.useRef)(false);
                    let optionsPropsRef = (0, import_react18.useRef)({ static: false, hold: false });
                    let labelRef = (0, import_react18.useRef)(null);
                    let inputRef = (0, import_react18.useRef)(null);
                    let buttonRef = (0, import_react18.useRef)(null);
                    let optionsRef = (0, import_react18.useRef)(null);
                    let compare = useEvent(
                        // @ts-expect-error Eventually we'll want to tackle this, but for now this will do.
                        typeof by === "string" ? (a, z) => {
                            let property = by;
                            return (a == null ? void 0 : a[property]) === (z == null ? void 0 : z[property]);
                        } : by
                    );
                    let isSelected = (0, import_react18.useCallback)(
                        (compareValue) => match(data.mode, {
                            [
                                1
                                /* Multi */
                                ]: () => value.some((option) => compare(option, compareValue)),
                            [
                                0
                                /* Single */
                                ]: () => compare(value, compareValue)
                        }),
                        [value]
                    );
                    let data = (0, import_react18.useMemo)(
                        () => ({
                            ...state,
                            optionsPropsRef,
                            labelRef,
                            inputRef,
                            buttonRef,
                            optionsRef,
                            value,
                            defaultValue,
                            disabled,
                            mode: multiple ? 1 : 0,
                            get activeOptionIndex() {
                                if (defaultToFirstOption.current && state.activeOptionIndex === null && state.options.length > 0) {
                                    let localActiveOptionIndex = state.options.findIndex(
                                        (option) => !option.dataRef.current.disabled
                                    );
                                    if (localActiveOptionIndex !== -1) {
                                        return localActiveOptionIndex;
                                    }
                                }
                                return state.activeOptionIndex;
                            },
                            compare,
                            isSelected,
                            nullable,
                            __demoMode
                        }),
                        [value, defaultValue, disabled, multiple, nullable, __demoMode, state]
                    );
                    let lastActiveOption = (0, import_react18.useRef)(
                        data.activeOptionIndex !== null ? data.options[data.activeOptionIndex] : null
                    );
                    (0, import_react18.useEffect)(() => {
                        let currentActiveOption = data.activeOptionIndex !== null ? data.options[data.activeOptionIndex] : null;
                        if (lastActiveOption.current !== currentActiveOption) {
                            lastActiveOption.current = currentActiveOption;
                        }
                    });
                    useIsoMorphicEffect(() => {
                        state.dataRef.current = data;
                    }, [data]);
                    useOutsideClick(
                        [data.buttonRef, data.inputRef, data.optionsRef],
                        () => actions.closeCombobox(),
                        data.comboboxState === 0
                        /* Open */
                    );
                    let slot = (0, import_react18.useMemo)(
                        () => ({
                            open: data.comboboxState === 0,
                            disabled,
                            activeIndex: data.activeOptionIndex,
                            activeOption: data.activeOptionIndex === null ? null : data.options[data.activeOptionIndex].dataRef.current.value,
                            value
                        }),
                        [data, disabled, value]
                    );
                    let selectOption = useEvent((id) => {
                        let option = data.options.find((item) => item.id === id);
                        if (!option)
                            return;
                        onChange(option.dataRef.current.value);
                    });
                    let selectActiveOption = useEvent(() => {
                        if (data.activeOptionIndex !== null) {
                            let { dataRef, id } = data.options[data.activeOptionIndex];
                            onChange(dataRef.current.value);
                            actions.goToOption(4, id);
                        }
                    });
                    let openCombobox = useEvent(() => {
                        dispatch({
                            type: 0
                            /* OpenCombobox */
                        });
                        defaultToFirstOption.current = true;
                    });
                    let closeCombobox = useEvent(() => {
                        dispatch({
                            type: 1
                            /* CloseCombobox */
                        });
                        defaultToFirstOption.current = false;
                    });
                    let goToOption = useEvent((focus, id, trigger) => {
                        defaultToFirstOption.current = false;
                        if (focus === 4) {
                            return dispatch({ type: 2, focus: 4, id, trigger });
                        }
                        return dispatch({ type: 2, focus, trigger });
                    });
                    let registerOption = useEvent((id, dataRef) => {
                        dispatch({ type: 3, id, dataRef });
                        return () => {
                            var _a3;
                            if (((_a3 = lastActiveOption.current) == null ? void 0 : _a3.id) === id) {
                                defaultToFirstOption.current = true;
                            }
                            dispatch({ type: 4, id });
                        };
                    });
                    let registerLabel = useEvent((id) => {
                        dispatch({ type: 5, id });
                        return () => dispatch({ type: 5, id: null });
                    });
                    let onChange = useEvent((value2) => {
                        return match(data.mode, {
                            [
                                0
                                /* Single */
                                ]() {
                                return theirOnChange == null ? void 0 : theirOnChange(value2);
                            },
                            [
                                1
                                /* Multi */
                                ]() {
                                let copy = data.value.slice();
                                let idx = copy.findIndex((item) => compare(item, value2));
                                if (idx === -1) {
                                    copy.push(value2);
                                } else {
                                    copy.splice(idx, 1);
                                }
                                return theirOnChange == null ? void 0 : theirOnChange(copy);
                            }
                        });
                    });
                    let actions = (0, import_react18.useMemo)(
                        () => ({
                            onChange,
                            registerOption,
                            registerLabel,
                            goToOption,
                            closeCombobox,
                            openCombobox,
                            selectActiveOption,
                            selectOption
                        }),
                        []
                    );
                    let ourProps = ref === null ? {} : { ref };
                    let form = (0, import_react18.useRef)(null);
                    let d = useDisposables();
                    (0, import_react18.useEffect)(() => {
                        if (!form.current)
                            return;
                        if (defaultValue === void 0)
                            return;
                        d.addEventListener(form.current, "reset", () => {
                            onChange(defaultValue);
                        });
                    }, [
                        form,
                        onChange
                        /* Explicitly ignoring `defaultValue` */
                    ]);
                    return /* @__PURE__ */ import_react18.default.createElement(ComboboxActionsContext.Provider, { value: actions }, /* @__PURE__ */ import_react18.default.createElement(ComboboxDataContext.Provider, { value: data }, /* @__PURE__ */ import_react18.default.createElement(
                        OpenClosedProvider,
                        {
                            value: match(data.comboboxState, {
                                [
                                    0
                                    /* Open */
                                    ]: 1,
                                [
                                    1
                                    /* Closed */
                                    ]: 2
                                /* Closed */
                            })
                        },
                        name != null && value != null && objectToFormEntries({ [name]: value }).map(([name2, value2], idx) => /* @__PURE__ */ import_react18.default.createElement(
                            Hidden,
                            {
                                features: 4,
                                ref: idx === 0 ? (element) => {
                                    var _a3;
                                    form.current = (_a3 = element == null ? void 0 : element.closest("form")) != null ? _a3 : null;
                                } : void 0,
                                ...compact({
                                    key: name2,
                                    as: "input",
                                    type: "hidden",
                                    hidden: true,
                                    readOnly: true,
                                    form: formName,
                                    name: name2,
                                    value: value2
                                })
                            }
                        )),
                        render({
                            ourProps,
                            theirProps,
                            slot,
                            defaultTag: DEFAULT_COMBOBOX_TAG,
                            name: "Combobox"
                        })
                    )));
                }
                var DEFAULT_INPUT_TAG = "input";
                function InputFn(props, ref) {
                    var _a3, _b, _c, _d;
                    let internalId = useId();
                    let {
                        id = `headlessui-combobox-input-${internalId}`,
                        onChange,
                        displayValue,
                        // @ts-ignore: We know this MAY NOT exist for a given tag but we only care when it _does_ exist.
                        type = "text",
                        ...theirProps
                    } = props;
                    let data = useData("Combobox.Input");
                    let actions = useActions("Combobox.Input");
                    let inputRef = useSyncRefs(data.inputRef, ref);
                    let isTyping = (0, import_react18.useRef)(false);
                    let d = useDisposables();
                    let currentDisplayValue = function() {
                        var _a4;
                        if (typeof displayValue === "function" && data.value !== void 0) {
                            return (_a4 = displayValue(data.value)) != null ? _a4 : "";
                        } else if (typeof data.value === "string") {
                            return data.value;
                        } else {
                            return "";
                        }
                    }();
                    useWatch(
                        ([currentDisplayValue2, state], [oldCurrentDisplayValue, oldState]) => {
                            if (isTyping.current)
                                return;
                            if (!data.inputRef.current)
                                return;
                            if (oldState === 0 && state === 1) {
                                data.inputRef.current.value = currentDisplayValue2;
                            } else if (currentDisplayValue2 !== oldCurrentDisplayValue) {
                                data.inputRef.current.value = currentDisplayValue2;
                            }
                        },
                        [currentDisplayValue, data.comboboxState]
                    );
                    useWatch(
                        ([newState], [oldState]) => {
                            if (newState === 0 && oldState === 1) {
                                let input = data.inputRef.current;
                                if (!input)
                                    return;
                                let currentValue = input.value;
                                let { selectionStart, selectionEnd, selectionDirection } = input;
                                input.value = "";
                                input.value = currentValue;
                                if (selectionDirection !== null) {
                                    input.setSelectionRange(selectionStart, selectionEnd, selectionDirection);
                                } else {
                                    input.setSelectionRange(selectionStart, selectionEnd);
                                }
                            }
                        },
                        [data.comboboxState]
                    );
                    let isComposing = (0, import_react18.useRef)(false);
                    let handleCompositionStart = useEvent(() => {
                        isComposing.current = true;
                    });
                    let handleCompositionEnd = useEvent(() => {
                        setTimeout(() => {
                            isComposing.current = false;
                        });
                    });
                    let handleKeyDown = useEvent((event) => {
                        isTyping.current = true;
                        switch (event.key) {
                            case "Backspace":
                            case "Delete":
                                if (data.mode !== 0)
                                    return;
                                if (!data.nullable)
                                    return;
                                let input = event.currentTarget;
                                d.requestAnimationFrame(() => {
                                    if (input.value === "") {
                                        actions.onChange(null);
                                        if (data.optionsRef.current) {
                                            data.optionsRef.current.scrollTop = 0;
                                        }
                                        actions.goToOption(
                                            5
                                            /* Nothing */
                                        );
                                    }
                                });
                                break;
                            case "Enter":
                                isTyping.current = false;
                                if (data.comboboxState !== 0)
                                    return;
                                if (isComposing.current)
                                    return;
                                event.preventDefault();
                                event.stopPropagation();
                                if (data.activeOptionIndex === null) {
                                    actions.closeCombobox();
                                    return;
                                }
                                actions.selectActiveOption();
                                if (data.mode === 0) {
                                    actions.closeCombobox();
                                }
                                break;
                            case "ArrowDown":
                                isTyping.current = false;
                                event.preventDefault();
                                event.stopPropagation();
                                return match(data.comboboxState, {
                                    [
                                        0
                                        /* Open */
                                        ]: () => {
                                        actions.goToOption(
                                            2
                                            /* Next */
                                        );
                                    },
                                    [
                                        1
                                        /* Closed */
                                        ]: () => {
                                        actions.openCombobox();
                                    }
                                });
                            case "ArrowUp":
                                isTyping.current = false;
                                event.preventDefault();
                                event.stopPropagation();
                                return match(data.comboboxState, {
                                    [
                                        0
                                        /* Open */
                                        ]: () => {
                                        actions.goToOption(
                                            1
                                            /* Previous */
                                        );
                                    },
                                    [
                                        1
                                        /* Closed */
                                        ]: () => {
                                        actions.openCombobox();
                                        d.nextFrame(() => {
                                            if (!data.value) {
                                                actions.goToOption(
                                                    3
                                                    /* Last */
                                                );
                                            }
                                        });
                                    }
                                });
                            case "Home":
                                if (event.shiftKey) {
                                    break;
                                }
                                isTyping.current = false;
                                event.preventDefault();
                                event.stopPropagation();
                                return actions.goToOption(
                                    0
                                    /* First */
                                );
                            case "PageUp":
                                isTyping.current = false;
                                event.preventDefault();
                                event.stopPropagation();
                                return actions.goToOption(
                                    0
                                    /* First */
                                );
                            case "End":
                                if (event.shiftKey) {
                                    break;
                                }
                                isTyping.current = false;
                                event.preventDefault();
                                event.stopPropagation();
                                return actions.goToOption(
                                    3
                                    /* Last */
                                );
                            case "PageDown":
                                isTyping.current = false;
                                event.preventDefault();
                                event.stopPropagation();
                                return actions.goToOption(
                                    3
                                    /* Last */
                                );
                            case "Escape":
                                isTyping.current = false;
                                if (data.comboboxState !== 0)
                                    return;
                                event.preventDefault();
                                if (data.optionsRef.current && !data.optionsPropsRef.current.static) {
                                    event.stopPropagation();
                                }
                                return actions.closeCombobox();
                            case "Tab":
                                isTyping.current = false;
                                if (data.comboboxState !== 0)
                                    return;
                                if (data.mode === 0)
                                    actions.selectActiveOption();
                                actions.closeCombobox();
                                break;
                        }
                    });
                    let handleChange = useEvent((event) => {
                        actions.openCombobox();
                        onChange == null ? void 0 : onChange(event);
                    });
                    let handleBlur = useEvent(() => {
                        isTyping.current = false;
                    });
                    let labelledby = useComputed(() => {
                        if (!data.labelId)
                            return void 0;
                        return [data.labelId].join(" ");
                    }, [data.labelId]);
                    let slot = (0, import_react18.useMemo)(
                        () => ({ open: data.comboboxState === 0, disabled: data.disabled }),
                        [data]
                    );
                    let ourProps = {
                        ref: inputRef,
                        id,
                        role: "combobox",
                        type,
                        "aria-controls": (_a3 = data.optionsRef.current) == null ? void 0 : _a3.id,
                        "aria-expanded": data.disabled ? void 0 : data.comboboxState === 0,
                        "aria-activedescendant": data.activeOptionIndex === null ? void 0 : (_b = data.options[data.activeOptionIndex]) == null ? void 0 : _b.id,
                        "aria-labelledby": labelledby,
                        "aria-autocomplete": "list",
                        defaultValue: (_d = (_c = props.defaultValue) != null ? _c : data.defaultValue !== void 0 ? displayValue == null ? void 0 : displayValue(data.defaultValue) : null) != null ? _d : data.defaultValue,
                        disabled: data.disabled,
                        onCompositionStart: handleCompositionStart,
                        onCompositionEnd: handleCompositionEnd,
                        onKeyDown: handleKeyDown,
                        onChange: handleChange,
                        onBlur: handleBlur
                    };
                    return render({
                        ourProps,
                        theirProps,
                        slot,
                        defaultTag: DEFAULT_INPUT_TAG,
                        name: "Combobox.Input"
                    });
                }
                var DEFAULT_BUTTON_TAG = "button";
                function ButtonFn(props, ref) {
                    var _a3;
                    let data = useData("Combobox.Button");
                    let actions = useActions("Combobox.Button");
                    let buttonRef = useSyncRefs(data.buttonRef, ref);
                    let internalId = useId();
                    let { id = `headlessui-combobox-button-${internalId}`, ...theirProps } = props;
                    let d = useDisposables();
                    let handleKeyDown = useEvent((event) => {
                        switch (event.key) {
                            case "ArrowDown":
                                event.preventDefault();
                                event.stopPropagation();
                                if (data.comboboxState === 1) {
                                    actions.openCombobox();
                                }
                                return d.nextFrame(() => {
                                    var _a4;
                                    return (_a4 = data.inputRef.current) == null ? void 0 : _a4.focus({ preventScroll: true });
                                });
                            case "ArrowUp":
                                event.preventDefault();
                                event.stopPropagation();
                                if (data.comboboxState === 1) {
                                    actions.openCombobox();
                                    d.nextFrame(() => {
                                        if (!data.value) {
                                            actions.goToOption(
                                                3
                                                /* Last */
                                            );
                                        }
                                    });
                                }
                                return d.nextFrame(() => {
                                    var _a4;
                                    return (_a4 = data.inputRef.current) == null ? void 0 : _a4.focus({ preventScroll: true });
                                });
                            case "Escape":
                                if (data.comboboxState !== 0)
                                    return;
                                event.preventDefault();
                                if (data.optionsRef.current && !data.optionsPropsRef.current.static) {
                                    event.stopPropagation();
                                }
                                actions.closeCombobox();
                                return d.nextFrame(() => {
                                    var _a4;
                                    return (_a4 = data.inputRef.current) == null ? void 0 : _a4.focus({ preventScroll: true });
                                });
                            default:
                                return;
                        }
                    });
                    let handleClick = useEvent((event) => {
                        if (isDisabledReactIssue7711(event.currentTarget))
                            return event.preventDefault();
                        if (data.comboboxState === 0) {
                            actions.closeCombobox();
                        } else {
                            event.preventDefault();
                            actions.openCombobox();
                        }
                        d.nextFrame(() => {
                            var _a4;
                            return (_a4 = data.inputRef.current) == null ? void 0 : _a4.focus({ preventScroll: true });
                        });
                    });
                    let labelledby = useComputed(() => {
                        if (!data.labelId)
                            return void 0;
                        return [data.labelId, id].join(" ");
                    }, [data.labelId, id]);
                    let slot = (0, import_react18.useMemo)(
                        () => ({
                            open: data.comboboxState === 0,
                            disabled: data.disabled,
                            value: data.value
                        }),
                        [data]
                    );
                    let ourProps = {
                        ref: buttonRef,
                        id,
                        type: useResolveButtonType(props, data.buttonRef),
                        tabIndex: -1,
                        "aria-haspopup": "listbox",
                        "aria-controls": (_a3 = data.optionsRef.current) == null ? void 0 : _a3.id,
                        "aria-expanded": data.disabled ? void 0 : data.comboboxState === 0,
                        "aria-labelledby": labelledby,
                        disabled: data.disabled,
                        onClick: handleClick,
                        onKeyDown: handleKeyDown
                    };
                    return render({
                        ourProps,
                        theirProps,
                        slot,
                        defaultTag: DEFAULT_BUTTON_TAG,
                        name: "Combobox.Button"
                    });
                }
                var DEFAULT_LABEL_TAG = "label";
                function LabelFn(props, ref) {
                    let internalId = useId();
                    let { id = `headlessui-combobox-label-${internalId}`, ...theirProps } = props;
                    let data = useData("Combobox.Label");
                    let actions = useActions("Combobox.Label");
                    let labelRef = useSyncRefs(data.labelRef, ref);
                    useIsoMorphicEffect(() => actions.registerLabel(id), [id]);
                    let handleClick = useEvent(() => {
                        var _a3;
                        return (_a3 = data.inputRef.current) == null ? void 0 : _a3.focus({ preventScroll: true });
                    });
                    let slot = (0, import_react18.useMemo)(
                        () => ({ open: data.comboboxState === 0, disabled: data.disabled }),
                        [data]
                    );
                    let ourProps = { ref: labelRef, id, onClick: handleClick };
                    return render({
                        ourProps,
                        theirProps,
                        slot,
                        defaultTag: DEFAULT_LABEL_TAG,
                        name: "Combobox.Label"
                    });
                }
                var DEFAULT_OPTIONS_TAG = "ul";
                var OptionsRenderFeatures = 1 | 2;
                function OptionsFn(props, ref) {
                    let internalId = useId();
                    let { id = `headlessui-combobox-options-${internalId}`, hold = false, ...theirProps } = props;
                    let data = useData("Combobox.Options");
                    let optionsRef = useSyncRefs(data.optionsRef, ref);
                    let usesOpenClosedState = useOpenClosed();
                    let visible = (() => {
                        if (usesOpenClosedState !== null) {
                            return (usesOpenClosedState & 1) === 1;
                        }
                        return data.comboboxState === 0;
                    })();
                    useIsoMorphicEffect(() => {
                        var _a3;
                        data.optionsPropsRef.current.static = (_a3 = props.static) != null ? _a3 : false;
                    }, [data.optionsPropsRef, props.static]);
                    useIsoMorphicEffect(() => {
                        data.optionsPropsRef.current.hold = hold;
                    }, [data.optionsPropsRef, hold]);
                    useTreeWalker({
                        container: data.optionsRef.current,
                        enabled: data.comboboxState === 0,
                        accept(node) {
                            if (node.getAttribute("role") === "option")
                                return NodeFilter.FILTER_REJECT;
                            if (node.hasAttribute("role"))
                                return NodeFilter.FILTER_SKIP;
                            return NodeFilter.FILTER_ACCEPT;
                        },
                        walk(node) {
                            node.setAttribute("role", "none");
                        }
                    });
                    let labelledby = useComputed(
                        () => {
                            var _a3, _b;
                            return (_b = data.labelId) != null ? _b : (_a3 = data.buttonRef.current) == null ? void 0 : _a3.id;
                        },
                        [data.labelId, data.buttonRef.current]
                    );
                    let slot = (0, import_react18.useMemo)(
                        () => ({
                            open: data.comboboxState === 0
                            /* Open */
                        }),
                        [data]
                    );
                    let ourProps = {
                        "aria-labelledby": labelledby,
                        role: "listbox",
                        "aria-multiselectable": data.mode === 1 ? true : void 0,
                        id,
                        ref: optionsRef
                    };
                    return render({
                        ourProps,
                        theirProps,
                        slot,
                        defaultTag: DEFAULT_OPTIONS_TAG,
                        features: OptionsRenderFeatures,
                        visible,
                        name: "Combobox.Options"
                    });
                }
                var DEFAULT_OPTION_TAG = "li";
                function OptionFn(props, ref) {
                    var _a3, _b;
                    let internalId = useId();
                    let {
                        id = `headlessui-combobox-option-${internalId}`,
                        disabled = false,
                        value,
                        ...theirProps
                    } = props;
                    let data = useData("Combobox.Option");
                    let actions = useActions("Combobox.Option");
                    let active = data.activeOptionIndex !== null ? data.options[data.activeOptionIndex].id === id : false;
                    let selected = data.isSelected(value);
                    let internalOptionRef = (0, import_react18.useRef)(null);
                    let bag = useLatestValue({
                        disabled,
                        value,
                        domRef: internalOptionRef,
                        textValue: (_b = (_a3 = internalOptionRef.current) == null ? void 0 : _a3.textContent) == null ? void 0 : _b.toLowerCase()
                    });
                    let optionRef = useSyncRefs(ref, internalOptionRef);
                    let select = useEvent(() => actions.selectOption(id));
                    useIsoMorphicEffect(() => actions.registerOption(id, bag), [bag, id]);
                    let enableScrollIntoView = (0, import_react18.useRef)(data.__demoMode ? false : true);
                    useIsoMorphicEffect(() => {
                        if (!data.__demoMode)
                            return;
                        let d = disposables();
                        d.requestAnimationFrame(() => {
                            enableScrollIntoView.current = true;
                        });
                        return d.dispose;
                    }, []);
                    useIsoMorphicEffect(() => {
                        if (data.comboboxState !== 0)
                            return;
                        if (!active)
                            return;
                        if (!enableScrollIntoView.current)
                            return;
                        if (data.activationTrigger === 0)
                            return;
                        let d = disposables();
                        d.requestAnimationFrame(() => {
                            var _a4, _b2;
                            (_b2 = (_a4 = internalOptionRef.current) == null ? void 0 : _a4.scrollIntoView) == null ? void 0 : _b2.call(_a4, { block: "nearest" });
                        });
                        return d.dispose;
                    }, [
                        internalOptionRef,
                        active,
                        data.comboboxState,
                        data.activationTrigger,
                        /* We also want to trigger this when the position of the active item changes so that we can re-trigger the scrollIntoView */
                        data.activeOptionIndex
                    ]);
                    let handleClick = useEvent((event) => {
                        if (disabled)
                            return event.preventDefault();
                        select();
                        if (data.mode === 0) {
                            actions.closeCombobox();
                        }
                        if (!isMobile()) {
                            requestAnimationFrame(() => {
                                var _a4;
                                return (_a4 = data.inputRef.current) == null ? void 0 : _a4.focus();
                            });
                        }
                    });
                    let handleFocus = useEvent(() => {
                        if (disabled)
                            return actions.goToOption(
                                5
                                /* Nothing */
                            );
                        actions.goToOption(4, id);
                    });
                    let pointer = useTrackedPointer();
                    let handleEnter = useEvent((evt) => pointer.update(evt));
                    let handleMove = useEvent((evt) => {
                        if (!pointer.wasMoved(evt))
                            return;
                        if (disabled)
                            return;
                        if (active)
                            return;
                        actions.goToOption(
                            4,
                            id,
                            0
                            /* Pointer */
                        );
                    });
                    let handleLeave = useEvent((evt) => {
                        if (!pointer.wasMoved(evt))
                            return;
                        if (disabled)
                            return;
                        if (!active)
                            return;
                        if (data.optionsPropsRef.current.hold)
                            return;
                        actions.goToOption(
                            5
                            /* Nothing */
                        );
                    });
                    let slot = (0, import_react18.useMemo)(
                        () => ({ active, selected, disabled }),
                        [active, selected, disabled]
                    );
                    let ourProps = {
                        id,
                        ref: optionRef,
                        role: "option",
                        tabIndex: disabled === true ? void 0 : -1,
                        "aria-disabled": disabled === true ? true : void 0,
                        // According to the WAI-ARIA best practices, we should use aria-checked for
                        // multi-select,but Voice-Over disagrees. So we use aria-checked instead for
                        // both single and multi-select.
                        "aria-selected": selected,
                        disabled: void 0,
                        // Never forward the `disabled` prop
                        onClick: handleClick,
                        onFocus: handleFocus,
                        onPointerEnter: handleEnter,
                        onMouseEnter: handleEnter,
                        onPointerMove: handleMove,
                        onMouseMove: handleMove,
                        onPointerLeave: handleLeave,
                        onMouseLeave: handleLeave
                    };
                    return render({
                        ourProps,
                        theirProps,
                        slot,
                        defaultTag: DEFAULT_OPTION_TAG,
                        name: "Combobox.Option"
                    });
                }
                var ComboboxRoot = forwardRefWithAs(ComboboxFn);
                var Button = forwardRefWithAs(ButtonFn);
                var Input = forwardRefWithAs(InputFn);
                var Label = forwardRefWithAs(LabelFn);
                var Options = forwardRefWithAs(OptionsFn);
                var Option = forwardRefWithAs(OptionFn);
                var Combobox = Object.assign(ComboboxRoot, { Input, Button, Label, Options, Option });
                var import_react29 = __toESM2(require_react(), 1);
                var import_react24 = __toESM2(require_react(), 1);
                var import_react20 = require_react();
                var import_react19 = require_react();
                function useWindowEvent(type, listener, options) {
                    let listenerRef = useLatestValue(listener);
                    (0, import_react19.useEffect)(() => {
                        function handler(event) {
                            listenerRef.current(event);
                        }
                        window.addEventListener(type, handler, options);
                        return () => window.removeEventListener(type, handler, options);
                    }, [type, options]);
                }
                function useTabDirection() {
                    let direction = (0, import_react20.useRef)(
                        0
                        /* Forwards */
                    );
                    useWindowEvent(
                        "keydown",
                        (event) => {
                            if (event.key === "Tab") {
                                direction.current = event.shiftKey ? 1 : 0;
                            }
                        },
                        true
                    );
                    return direction;
                }
                var import_react21 = require_react();
                function useIsMounted() {
                    let mounted = (0, import_react21.useRef)(false);
                    useIsoMorphicEffect(() => {
                        mounted.current = true;
                        return () => {
                            mounted.current = false;
                        };
                    }, []);
                    return mounted;
                }
                var import_react222 = require_react();
                function useOwnerDocument(...args) {
                    return (0, import_react222.useMemo)(() => getOwnerDocument(...args), [...args]);
                }
                var import_react23 = require_react();
                function useEventListener(element, type, listener, options) {
                    let listenerRef = useLatestValue(listener);
                    (0, import_react23.useEffect)(() => {
                        element = element != null ? element : window;
                        function handler(event) {
                            listenerRef.current(event);
                        }
                        element.addEventListener(type, handler, options);
                        return () => element.removeEventListener(type, handler, options);
                    }, [element, type, options]);
                }
                function onDocumentReady(cb) {
                    function check() {
                        if (document.readyState === "loading")
                            return;
                        cb();
                        document.removeEventListener("DOMContentLoaded", check);
                    }
                    if (typeof window !== "undefined" && typeof document !== "undefined") {
                        document.addEventListener("DOMContentLoaded", check);
                        check();
                    }
                }
                function resolveContainers(containers) {
                    if (!containers)
                        return /* @__PURE__ */ new Set();
                    if (typeof containers === "function")
                        return new Set(containers());
                    let all = /* @__PURE__ */ new Set();
                    for (let container of containers.current) {
                        if (container.current instanceof HTMLElement) {
                            all.add(container.current);
                        }
                    }
                    return all;
                }
                var DEFAULT_FOCUS_TRAP_TAG = "div";
                var Features3 = /* @__PURE__ */ ((Features4) => {
                    Features4[Features4["None"] = 1] = "None";
                    Features4[Features4["InitialFocus"] = 2] = "InitialFocus";
                    Features4[Features4["TabLock"] = 4] = "TabLock";
                    Features4[Features4["FocusLock"] = 8] = "FocusLock";
                    Features4[Features4["RestoreFocus"] = 16] = "RestoreFocus";
                    Features4[Features4["All"] = 30] = "All";
                    return Features4;
                })(Features3 || {});
                function FocusTrapFn(props, ref) {
                    let container = (0, import_react24.useRef)(null);
                    let focusTrapRef = useSyncRefs(container, ref);
                    let { initialFocus, containers, features = 30, ...theirProps } = props;
                    if (!useServerHandoffComplete()) {
                        features = 1;
                    }
                    let ownerDocument = useOwnerDocument(container);
                    useRestoreFocus({ ownerDocument }, Boolean(
                        features & 16
                        /* RestoreFocus */
                    ));
                    let previousActiveElement = useInitialFocus(
                        { ownerDocument, container, initialFocus },
                        Boolean(
                            features & 2
                            /* InitialFocus */
                        )
                    );
                    useFocusLock(
                        { ownerDocument, container, containers, previousActiveElement },
                        Boolean(
                            features & 8
                            /* FocusLock */
                        )
                    );
                    let direction = useTabDirection();
                    let handleFocus = useEvent((e) => {
                        let el = container.current;
                        if (!el)
                            return;
                        let wrapper = false ? microTask : (cb) => cb();
                        wrapper(() => {
                            match(direction.current, {
                                [
                                    0
                                    /* Forwards */
                                    ]: () => {
                                    focusIn(el, 1, { skipElements: [e.relatedTarget] });
                                },
                                [
                                    1
                                    /* Backwards */
                                    ]: () => {
                                    focusIn(el, 8, { skipElements: [e.relatedTarget] });
                                }
                            });
                        });
                    });
                    let d = useDisposables();
                    let recentlyUsedTabKey = (0, import_react24.useRef)(false);
                    let ourProps = {
                        ref: focusTrapRef,
                        onKeyDown(e) {
                            if (e.key == "Tab") {
                                recentlyUsedTabKey.current = true;
                                d.requestAnimationFrame(() => {
                                    recentlyUsedTabKey.current = false;
                                });
                            }
                        },
                        onBlur(e) {
                            let allContainers = resolveContainers(containers);
                            if (container.current instanceof HTMLElement)
                                allContainers.add(container.current);
                            let relatedTarget = e.relatedTarget;
                            if (!(relatedTarget instanceof HTMLElement))
                                return;
                            if (relatedTarget.dataset.headlessuiFocusGuard === "true") {
                                return;
                            }
                            if (!contains(allContainers, relatedTarget)) {
                                if (recentlyUsedTabKey.current) {
                                    focusIn(
                                        container.current,
                                        match(direction.current, {
                                            [
                                                0
                                                /* Forwards */
                                                ]: () => 4,
                                            [
                                                1
                                                /* Backwards */
                                                ]: () => 2
                                            /* Previous */
                                        }) | 16,
                                        { relativeTo: e.target }
                                    );
                                } else if (e.target instanceof HTMLElement) {
                                    focusElement(e.target);
                                }
                            }
                        }
                    };
                    return /* @__PURE__ */ import_react24.default.createElement(import_react24.default.Fragment, null, Boolean(
                        features & 4
                        /* TabLock */
                    ) && /* @__PURE__ */ import_react24.default.createElement(
                        Hidden,
                        {
                            as: "button",
                            type: "button",
                            "data-headlessui-focus-guard": true,
                            onFocus: handleFocus,
                            features: 2
                            /* Focusable */
                        }
                    ), render({
                        ourProps,
                        theirProps,
                        defaultTag: DEFAULT_FOCUS_TRAP_TAG,
                        name: "FocusTrap"
                    }), Boolean(
                        features & 4
                        /* TabLock */
                    ) && /* @__PURE__ */ import_react24.default.createElement(
                        Hidden,
                        {
                            as: "button",
                            type: "button",
                            "data-headlessui-focus-guard": true,
                            onFocus: handleFocus,
                            features: 2
                            /* Focusable */
                        }
                    ));
                }
                var FocusTrapRoot = forwardRefWithAs(FocusTrapFn);
                var FocusTrap = Object.assign(FocusTrapRoot, {
                    features: Features3
                });
                var history = [];
                onDocumentReady(() => {
                    function handle(e) {
                        if (!(e.target instanceof HTMLElement))
                            return;
                        if (e.target === document.body)
                            return;
                        if (history[0] === e.target)
                            return;
                        history.unshift(e.target);
                        history = history.filter((x) => x != null && x.isConnected);
                        history.splice(10);
                    }
                    window.addEventListener("click", handle, { capture: true });
                    window.addEventListener("mousedown", handle, { capture: true });
                    window.addEventListener("focus", handle, { capture: true });
                    document.body.addEventListener("click", handle, { capture: true });
                    document.body.addEventListener("mousedown", handle, { capture: true });
                    document.body.addEventListener("focus", handle, { capture: true });
                });
                function useRestoreElement(enabled = true) {
                    let localHistory = (0, import_react24.useRef)(history.slice());
                    useWatch(
                        ([newEnabled], [oldEnabled]) => {
                            if (oldEnabled === true && newEnabled === false) {
                                microTask(() => {
                                    localHistory.current.splice(0);
                                });
                            }
                            if (oldEnabled === false && newEnabled === true) {
                                localHistory.current = history.slice();
                            }
                        },
                        [enabled, history, localHistory]
                    );
                    return useEvent(() => {
                        var _a3;
                        return (_a3 = localHistory.current.find((x) => x != null && x.isConnected)) != null ? _a3 : null;
                    });
                }
                function useRestoreFocus({ ownerDocument }, enabled) {
                    let getRestoreElement = useRestoreElement(enabled);
                    useWatch(() => {
                        if (enabled)
                            return;
                        if ((ownerDocument == null ? void 0 : ownerDocument.activeElement) === (ownerDocument == null ? void 0 : ownerDocument.body)) {
                            focusElement(getRestoreElement());
                        }
                    }, [enabled]);
                    let trulyUnmounted = (0, import_react24.useRef)(false);
                    (0, import_react24.useEffect)(() => {
                        trulyUnmounted.current = false;
                        return () => {
                            trulyUnmounted.current = true;
                            microTask(() => {
                                if (!trulyUnmounted.current)
                                    return;
                                focusElement(getRestoreElement());
                            });
                        };
                    }, []);
                }
                function useInitialFocus({
                    ownerDocument,
                    container,
                    initialFocus
                }, enabled) {
                    let previousActiveElement = (0, import_react24.useRef)(null);
                    let mounted = useIsMounted();
                    useWatch(() => {
                        if (!enabled)
                            return;
                        let containerElement = container.current;
                        if (!containerElement)
                            return;
                        microTask(() => {
                            if (!mounted.current) {
                                return;
                            }
                            let activeElement = ownerDocument == null ? void 0 : ownerDocument.activeElement;
                            if (initialFocus == null ? void 0 : initialFocus.current) {
                                if ((initialFocus == null ? void 0 : initialFocus.current) === activeElement) {
                                    previousActiveElement.current = activeElement;
                                    return;
                                }
                            } else if (containerElement.contains(activeElement)) {
                                previousActiveElement.current = activeElement;
                                return;
                            }
                            if (initialFocus == null ? void 0 : initialFocus.current) {
                                focusElement(initialFocus.current);
                            } else {
                                if (focusIn(
                                    containerElement,
                                    1
                                    /* First */
                                ) === 0) {
                                    console.warn("There are no focusable elements inside the <FocusTrap />");
                                }
                            }
                            previousActiveElement.current = ownerDocument == null ? void 0 : ownerDocument.activeElement;
                        });
                    }, [enabled]);
                    return previousActiveElement;
                }
                function useFocusLock({
                    ownerDocument,
                    container,
                    containers,
                    previousActiveElement
                }, enabled) {
                    let mounted = useIsMounted();
                    useEventListener(
                        ownerDocument == null ? void 0 : ownerDocument.defaultView,
                        "focus",
                        (event) => {
                            if (!enabled)
                                return;
                            if (!mounted.current)
                                return;
                            let allContainers = resolveContainers(containers);
                            if (container.current instanceof HTMLElement)
                                allContainers.add(container.current);
                            let previous = previousActiveElement.current;
                            if (!previous)
                                return;
                            let toElement = event.target;
                            if (toElement && toElement instanceof HTMLElement) {
                                if (!contains(allContainers, toElement)) {
                                    event.preventDefault();
                                    event.stopPropagation();
                                    focusElement(previous);
                                } else {
                                    previousActiveElement.current = toElement;
                                    focusElement(toElement);
                                }
                            } else {
                                focusElement(previousActiveElement.current);
                            }
                        },
                        true
                    );
                }
                function contains(containers, element) {
                    for (let container of containers) {
                        if (container.contains(element))
                            return true;
                    }
                    return false;
                }
                var import_react26 = __toESM2(require_react(), 1);
                var import_react_dom = require_react_dom();
                var import_react25 = __toESM2(require_react(), 1);
                var ForcePortalRootContext = (0, import_react25.createContext)(false);
                function usePortalRoot() {
                    return (0, import_react25.useContext)(ForcePortalRootContext);
                }
                function ForcePortalRoot(props) {
                    return /* @__PURE__ */ import_react25.default.createElement(ForcePortalRootContext.Provider, { value: props.force }, props.children);
                }
                function usePortalTarget(ref) {
                    let forceInRoot = usePortalRoot();
                    let groupTarget = (0, import_react26.useContext)(PortalGroupContext);
                    let ownerDocument = useOwnerDocument(ref);
                    let [target2, setTarget] = (0, import_react26.useState)(() => {
                        if (!forceInRoot && groupTarget !== null)
                            return null;
                        if (env.isServer)
                            return null;
                        let existingRoot = ownerDocument == null ? void 0 : ownerDocument.getElementById("headlessui-portal-root");
                        if (existingRoot)
                            return existingRoot;
                        if (ownerDocument === null)
                            return null;
                        let root = ownerDocument.createElement("div");
                        root.setAttribute("id", "headlessui-portal-root");
                        return ownerDocument.body.appendChild(root);
                    });
                    (0, import_react26.useEffect)(() => {
                        if (target2 === null)
                            return;
                        if (!(ownerDocument == null ? void 0 : ownerDocument.body.contains(target2))) {
                            ownerDocument == null ? void 0 : ownerDocument.body.appendChild(target2);
                        }
                    }, [target2, ownerDocument]);
                    (0, import_react26.useEffect)(() => {
                        if (forceInRoot)
                            return;
                        if (groupTarget === null)
                            return;
                        setTarget(groupTarget.current);
                    }, [groupTarget, setTarget, forceInRoot]);
                    return target2;
                }
                var DEFAULT_PORTAL_TAG = import_react26.Fragment;
                function PortalFn(props, ref) {
                    let theirProps = props;
                    let internalPortalRootRef = (0, import_react26.useRef)(null);
                    let portalRef = useSyncRefs(
                        optionalRef((ref2) => {
                            internalPortalRootRef.current = ref2;
                        }),
                        ref
                    );
                    let ownerDocument = useOwnerDocument(internalPortalRootRef);
                    let target2 = usePortalTarget(internalPortalRootRef);
                    let [element] = (0, import_react26.useState)(
                        () => {
                            var _a3;
                            return env.isServer ? null : (_a3 = ownerDocument == null ? void 0 : ownerDocument.createElement("div")) != null ? _a3 : null;
                        }
                    );
                    let ready = useServerHandoffComplete();
                    let trulyUnmounted = (0, import_react26.useRef)(false);
                    useIsoMorphicEffect(() => {
                        trulyUnmounted.current = false;
                        if (!target2 || !element)
                            return;
                        if (!target2.contains(element)) {
                            element.setAttribute("data-headlessui-portal", "");
                            target2.appendChild(element);
                        }
                        return () => {
                            trulyUnmounted.current = true;
                            microTask(() => {
                                var _a3;
                                if (!trulyUnmounted.current)
                                    return;
                                if (!target2 || !element)
                                    return;
                                if (element instanceof Node && target2.contains(element)) {
                                    target2.removeChild(element);
                                }
                                if (target2.childNodes.length <= 0) {
                                    (_a3 = target2.parentElement) == null ? void 0 : _a3.removeChild(target2);
                                }
                            });
                        };
                    }, [target2, element]);
                    if (!ready)
                        return null;
                    let ourProps = { ref: portalRef };
                    return !target2 || !element ? null : (0, import_react_dom.createPortal)(
                        render({
                            ourProps,
                            theirProps,
                            defaultTag: DEFAULT_PORTAL_TAG,
                            name: "Portal"
                        }),
                        element
                    );
                }
                var DEFAULT_GROUP_TAG = import_react26.Fragment;
                var PortalGroupContext = (0, import_react26.createContext)(null);
                function GroupFn(props, ref) {
                    let { target: target2, ...theirProps } = props;
                    let groupRef = useSyncRefs(ref);
                    let ourProps = { ref: groupRef };
                    return /* @__PURE__ */ import_react26.default.createElement(PortalGroupContext.Provider, { value: target2 }, render({
                        ourProps,
                        theirProps,
                        defaultTag: DEFAULT_GROUP_TAG,
                        name: "Popover.Group"
                    }));
                }
                var PortalRoot = forwardRefWithAs(PortalFn);
                var Group = forwardRefWithAs(GroupFn);
                var Portal = Object.assign(PortalRoot, { Group });
                var import_react27 = __toESM2(require_react(), 1);
                var DescriptionContext = (0, import_react27.createContext)(null);
                function useDescriptionContext() {
                    let context = (0, import_react27.useContext)(DescriptionContext);
                    if (context === null) {
                        let err = new Error(
                            "You used a <Description /> component, but it is not inside a relevant parent."
                        );
                        if (Error.captureStackTrace)
                            Error.captureStackTrace(err, useDescriptionContext);
                        throw err;
                    }
                    return context;
                }
                function useDescriptions() {
                    let [descriptionIds, setDescriptionIds] = (0, import_react27.useState)([]);
                    return [
                        // The actual id's as string or undefined
                        descriptionIds.length > 0 ? descriptionIds.join(" ") : void 0,
                        // The provider component
                        (0, import_react27.useMemo)(() => {
                            return function DescriptionProvider(props) {
                                let register = useEvent((value) => {
                                    setDescriptionIds((existing) => [...existing, value]);
                                    return () => setDescriptionIds((existing) => {
                                        let clone = existing.slice();
                                        let idx = clone.indexOf(value);
                                        if (idx !== -1)
                                            clone.splice(idx, 1);
                                        return clone;
                                    });
                                });
                                let contextBag = (0, import_react27.useMemo)(
                                    () => ({ register, slot: props.slot, name: props.name, props: props.props }),
                                    [register, props.slot, props.name, props.props]
                                );
                                return /* @__PURE__ */ import_react27.default.createElement(DescriptionContext.Provider, { value: contextBag }, props.children);
                            };
                        }, [setDescriptionIds])
                    ];
                }
                var DEFAULT_DESCRIPTION_TAG = "p";
                function DescriptionFn(props, ref) {
                    let internalId = useId();
                    let { id = `headlessui-description-${internalId}`, ...theirProps } = props;
                    let context = useDescriptionContext();
                    let descriptionRef = useSyncRefs(ref);
                    useIsoMorphicEffect(() => context.register(id), [id, context.register]);
                    let ourProps = { ref: descriptionRef, ...context.props, id };
                    return render({
                        ourProps,
                        theirProps,
                        slot: context.slot || {},
                        defaultTag: DEFAULT_DESCRIPTION_TAG,
                        name: context.name || "Description"
                    });
                }
                var DescriptionRoot = forwardRefWithAs(DescriptionFn);
                var Description = Object.assign(DescriptionRoot, {
                    //
                });
                var import_react28 = __toESM2(require_react(), 1);
                var StackContext = (0, import_react28.createContext)(() => {
                });
                StackContext.displayName = "StackContext";
                function useStackContext() {
                    return (0, import_react28.useContext)(StackContext);
                }
                function StackProvider({
                    children,
                    onUpdate,
                    type,
                    element,
                    enabled
                }) {
                    let parentUpdate = useStackContext();
                    let notify = useEvent((...args) => {
                        onUpdate == null ? void 0 : onUpdate(...args);
                        parentUpdate(...args);
                    });
                    useIsoMorphicEffect(() => {
                        let shouldNotify = enabled === void 0 || enabled === true;
                        shouldNotify && notify(0, type, element);
                        return () => {
                            shouldNotify && notify(1, type, element);
                        };
                    }, [notify, type, element, enabled]);
                    return /* @__PURE__ */ import_react28.default.createElement(StackContext.Provider, { value: notify }, children);
                }
                var React11 = __toESM2(require_react(), 1);
                var React10 = __toESM2(require_react(), 1);
                function isPolyfill(x, y) {
                    return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y;
                }
                var is = typeof Object.is === "function" ? Object.is : isPolyfill;
                var { useState: useState8, useEffect: useEffect14, useLayoutEffect: useLayoutEffect2, useDebugValue } = React10;
                var didWarnOld18Alpha = false;
                var didWarnUncachedGetSnapshot = false;
                function useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot) {
                    if (true) {
                        if (!didWarnOld18Alpha) {
                            if ("startTransition" in React10) {
                                didWarnOld18Alpha = true;
                                console.error(
                                    "You are using an outdated, pre-release alpha of React 18 that does not support useSyncExternalStore. The use-sync-external-store shim will not work correctly. Upgrade to a newer pre-release."
                                );
                            }
                        }
                    }
                    const value = getSnapshot();
                    if (true) {
                        if (!didWarnUncachedGetSnapshot) {
                            const cachedValue = getSnapshot();
                            if (!is(value, cachedValue)) {
                                console.error("The result of getSnapshot should be cached to avoid an infinite loop");
                                didWarnUncachedGetSnapshot = true;
                            }
                        }
                    }
                    const [{ inst }, forceUpdate] = useState8({ inst: { value, getSnapshot } });
                    useLayoutEffect2(() => {
                        inst.value = value;
                        inst.getSnapshot = getSnapshot;
                        if (checkIfSnapshotChanged(inst)) {
                            forceUpdate({ inst });
                        }
                    }, [subscribe, value, getSnapshot]);
                    useEffect14(() => {
                        if (checkIfSnapshotChanged(inst)) {
                            forceUpdate({ inst });
                        }
                        const handleStoreChange = () => {
                            if (checkIfSnapshotChanged(inst)) {
                                forceUpdate({ inst });
                            }
                        };
                        return subscribe(handleStoreChange);
                    }, [subscribe]);
                    useDebugValue(value);
                    return value;
                }
                function checkIfSnapshotChanged(inst) {
                    const latestGetSnapshot = inst.getSnapshot;
                    const prevValue = inst.value;
                    try {
                        const nextValue = latestGetSnapshot();
                        return !is(prevValue, nextValue);
                    } catch (error) {
                        return true;
                    }
                }
                function useSyncExternalStore2(subscribe, getSnapshot, getServerSnapshot) {
                    return getSnapshot();
                }
                var canUseDOM = !!(typeof window !== "undefined" && typeof window.document !== "undefined" && typeof window.document.createElement !== "undefined");
                var isServerEnvironment = !canUseDOM;
                var shim = isServerEnvironment ? useSyncExternalStore2 : useSyncExternalStore;
                var useSyncExternalStore3 = "useSyncExternalStore" in React11 ? ((r) => r.useSyncExternalStore)(React11) : shim;
                function useStore(store) {
                    return useSyncExternalStore3(store.subscribe, store.getSnapshot, store.getSnapshot);
                }
                function createStore(initial, actions) {
                    let state = initial();
                    let listeners = /* @__PURE__ */ new Set();
                    return {
                        getSnapshot() {
                            return state;
                        },
                        subscribe(onChange) {
                            listeners.add(onChange);
                            return () => listeners.delete(onChange);
                        },
                        dispatch(key, ...args) {
                            let newState = actions[key].call(state, ...args);
                            if (newState) {
                                state = newState;
                                listeners.forEach((listener) => listener());
                            }
                        }
                    };
                }
                function adjustScrollbarPadding() {
                    let scrollbarWidthBefore;
                    return {
                        before({ doc }) {
                            var _a3;
                            let documentElement = doc.documentElement;
                            let ownerWindow = (_a3 = doc.defaultView) != null ? _a3 : window;
                            scrollbarWidthBefore = ownerWindow.innerWidth - documentElement.clientWidth;
                        },
                        after({ doc, d }) {
                            let documentElement = doc.documentElement;
                            let scrollbarWidthAfter = documentElement.clientWidth - documentElement.offsetWidth;
                            let scrollbarWidth = scrollbarWidthBefore - scrollbarWidthAfter;
                            d.style(documentElement, "paddingRight", `${scrollbarWidth}px`);
                        }
                    };
                }
                function handleIOSLocking() {
                    if (!isIOS()) {
                        return {};
                    }
                    let scrollPosition;
                    return {
                        before() {
                            scrollPosition = window.pageYOffset;
                        },
                        after({ doc, d, meta }) {
                            function inAllowedContainer(el) {
                                return meta.containers.flatMap((resolve) => resolve()).some((container) => container.contains(el));
                            }
                            d.style(doc.body, "marginTop", `-${scrollPosition}px`);
                            window.scrollTo(0, 0);
                            let scrollToElement = null;
                            d.addEventListener(
                                doc,
                                "click",
                                (e) => {
                                    if (!(e.target instanceof HTMLElement)) {
                                        return;
                                    }
                                    try {
                                        let anchor = e.target.closest("a");
                                        if (!anchor)
                                            return;
                                        let { hash } = new URL(anchor.href);
                                        let el = doc.querySelector(hash);
                                        if (el && !inAllowedContainer(el)) {
                                            scrollToElement = el;
                                        }
                                    } catch (err) {
                                    }
                                },
                                true
                            );
                            d.addEventListener(
                                doc,
                                "touchmove",
                                (e) => {
                                    if (e.target instanceof HTMLElement && !inAllowedContainer(e.target)) {
                                        e.preventDefault();
                                    }
                                },
                                { passive: false }
                            );
                            d.add(() => {
                                window.scrollTo(0, window.pageYOffset + scrollPosition);
                                if (scrollToElement && scrollToElement.isConnected) {
                                    scrollToElement.scrollIntoView({ block: "nearest" });
                                    scrollToElement = null;
                                }
                            });
                        }
                    };
                }
                function preventScroll() {
                    return {
                        before({ doc, d }) {
                            d.style(doc.documentElement, "overflow", "hidden");
                        }
                    };
                }
                function buildMeta(fns) {
                    let tmp = {};
                    for (let fn of fns) {
                        Object.assign(tmp, fn(tmp));
                    }
                    return tmp;
                }
                var overflows = createStore(() => /* @__PURE__ */ new Map(), {
                    PUSH(doc, meta) {
                        var _a3;
                        let entry = (_a3 = this.get(doc)) != null ? _a3 : {
                            doc,
                            count: 0,
                            d: disposables(),
                            meta: /* @__PURE__ */ new Set()
                        };
                        entry.count++;
                        entry.meta.add(meta);
                        this.set(doc, entry);
                        return this;
                    },
                    POP(doc, meta) {
                        let entry = this.get(doc);
                        if (entry) {
                            entry.count--;
                            entry.meta.delete(meta);
                        }
                        return this;
                    },
                    SCROLL_PREVENT({ doc, d, meta }) {
                        let ctx = {
                            doc,
                            d,
                            meta: buildMeta(meta)
                        };
                        let steps = [
                            handleIOSLocking(),
                            adjustScrollbarPadding(),
                            preventScroll()
                        ];
                        steps.forEach(({ before }) => before == null ? void 0 : before(ctx));
                        steps.forEach(({ after }) => after == null ? void 0 : after(ctx));
                    },
                    SCROLL_ALLOW({ d }) {
                        d.dispose();
                    },
                    TEARDOWN({ doc }) {
                        this.delete(doc);
                    }
                });
                overflows.subscribe(() => {
                    let docs = overflows.getSnapshot();
                    let styles = /* @__PURE__ */ new Map();
                    for (let [doc] of docs) {
                        styles.set(doc, doc.documentElement.style.overflow);
                    }
                    for (let entry of docs.values()) {
                        let isHidden = styles.get(entry.doc) === "hidden";
                        let isLocked = entry.count !== 0;
                        let willChange = isLocked && !isHidden || !isLocked && isHidden;
                        if (willChange) {
                            overflows.dispatch(entry.count > 0 ? "SCROLL_PREVENT" : "SCROLL_ALLOW", entry);
                        }
                        if (entry.count === 0) {
                            overflows.dispatch("TEARDOWN", entry);
                        }
                    }
                });
                function useDocumentOverflowLockedEffect(doc, shouldBeLocked, meta) {
                    let store = useStore(overflows);
                    let entry = doc ? store.get(doc) : void 0;
                    let locked = entry ? entry.count > 0 : false;
                    useIsoMorphicEffect(() => {
                        if (!doc || !shouldBeLocked) {
                            return;
                        }
                        overflows.dispatch("PUSH", doc, meta);
                        return () => overflows.dispatch("POP", doc, meta);
                    }, [shouldBeLocked, doc]);
                    return locked;
                }
                var originals = /* @__PURE__ */ new Map();
                var counts = /* @__PURE__ */ new Map();
                function useInert(node, enabled = true) {
                    useIsoMorphicEffect(() => {
                        var _a3;
                        if (!enabled)
                            return;
                        let element = typeof node === "function" ? node() : node.current;
                        if (!element)
                            return;
                        function cleanup() {
                            var _a4;
                            if (!element)
                                return;
                            let count2 = (_a4 = counts.get(element)) != null ? _a4 : 1;
                            if (count2 === 1)
                                counts.delete(element);
                            else
                                counts.set(element, count2 - 1);
                            if (count2 !== 1)
                                return;
                            let original = originals.get(element);
                            if (!original)
                                return;
                            if (original["aria-hidden"] === null)
                                element.removeAttribute("aria-hidden");
                            else
                                element.setAttribute("aria-hidden", original["aria-hidden"]);
                            element.inert = original.inert;
                            originals.delete(element);
                        }
                        let count = (_a3 = counts.get(element)) != null ? _a3 : 0;
                        counts.set(element, count + 1);
                        if (count !== 0)
                            return cleanup;
                        originals.set(element, {
                            "aria-hidden": element.getAttribute("aria-hidden"),
                            inert: element.inert
                        });
                        element.setAttribute("aria-hidden", "true");
                        element.inert = true;
                        return cleanup;
                    }, [node, enabled]);
                }
                var reducers2 = {
                    [
                        0
                        /* SetTitleId */
                        ](state, action) {
                        if (state.titleId === action.id)
                            return state;
                        return { ...state, titleId: action.id };
                    }
                };
                var DialogContext = (0, import_react29.createContext)(null);
                DialogContext.displayName = "DialogContext";
                function useDialogContext(component) {
                    let context = (0, import_react29.useContext)(DialogContext);
                    if (context === null) {
                        let err = new Error(`<${component} /> is missing a parent <Dialog /> component.`);
                        if (Error.captureStackTrace)
                            Error.captureStackTrace(err, useDialogContext);
                        throw err;
                    }
                    return context;
                }
                function useScrollLock(ownerDocument, enabled, resolveAllowedContainers = () => [document.body]) {
                    useDocumentOverflowLockedEffect(ownerDocument, enabled, (meta) => {
                        var _a3;
                        return {
                            containers: [...(_a3 = meta.containers) != null ? _a3 : [], resolveAllowedContainers]
                        };
                    });
                }
                function stateReducer2(state, action) {
                    return match(action.type, reducers2, state, action);
                }
                var DEFAULT_DIALOG_TAG = "div";
                var DialogRenderFeatures = 1 | 2;
                function DialogFn(props, ref) {
                    let internalId = useId();
                    let {
                        id = `headlessui-dialog-${internalId}`,
                        open,
                        onClose,
                        initialFocus,
                        __demoMode = false,
                        ...theirProps
                    } = props;
                    let [nestedDialogCount, setNestedDialogCount] = (0, import_react29.useState)(0);
                    let usesOpenClosedState = useOpenClosed();
                    if (open === void 0 && usesOpenClosedState !== null) {
                        open = (usesOpenClosedState & 1) === 1;
                    }
                    let internalDialogRef = (0, import_react29.useRef)(null);
                    let dialogRef = useSyncRefs(internalDialogRef, ref);
                    let mainTreeNode = (0, import_react29.useRef)(null);
                    let ownerDocument = useOwnerDocument(internalDialogRef);
                    let hasOpen = props.hasOwnProperty("open") || usesOpenClosedState !== null;
                    let hasOnClose = props.hasOwnProperty("onClose");
                    if (!hasOpen && !hasOnClose) {
                        throw new Error(
                            `You have to provide an \`open\` and an \`onClose\` prop to the \`Dialog\` component.`
                        );
                    }
                    if (!hasOpen) {
                        throw new Error(
                            `You provided an \`onClose\` prop to the \`Dialog\`, but forgot an \`open\` prop.`
                        );
                    }
                    if (!hasOnClose) {
                        throw new Error(
                            `You provided an \`open\` prop to the \`Dialog\`, but forgot an \`onClose\` prop.`
                        );
                    }
                    if (typeof open !== "boolean") {
                        throw new Error(
                            `You provided an \`open\` prop to the \`Dialog\`, but the value is not a boolean. Received: ${open}`
                        );
                    }
                    if (typeof onClose !== "function") {
                        throw new Error(
                            `You provided an \`onClose\` prop to the \`Dialog\`, but the value is not a function. Received: ${onClose}`
                        );
                    }
                    let dialogState = open ? 0 : 1;
                    let [state, dispatch] = (0, import_react29.useReducer)(stateReducer2, {
                        titleId: null,
                        descriptionId: null,
                        panelRef: (0, import_react29.createRef)()
                    });
                    let close = useEvent(() => onClose(false));
                    let setTitleId = useEvent((id2) => dispatch({ type: 0, id: id2 }));
                    let ready = useServerHandoffComplete();
                    let enabled = ready ? __demoMode ? false : dialogState === 0 : false;
                    let hasNestedDialogs = nestedDialogCount > 1;
                    let hasParentDialog = (0, import_react29.useContext)(DialogContext) !== null;
                    let position = !hasNestedDialogs ? "leaf" : "parent";
                    let isClosing = usesOpenClosedState !== null ? (usesOpenClosedState & 4) === 4 : false;
                    let inertOthersEnabled = (() => {
                        if (hasParentDialog)
                            return false;
                        if (isClosing)
                            return false;
                        return enabled;
                    })();
                    let resolveRootOfMainTreeNode = (0, import_react29.useCallback)(() => {
                        var _a3, _b;
                        return (_b = Array.from((_a3 = ownerDocument == null ? void 0 : ownerDocument.querySelectorAll("body > *")) != null ? _a3 : []).find((root) => {
                            if (root.id === "headlessui-portal-root")
                                return false;
                            return root.contains(mainTreeNode.current) && root instanceof HTMLElement;
                        })) != null ? _b : null;
                    }, [mainTreeNode]);
                    useInert(resolveRootOfMainTreeNode, inertOthersEnabled);
                    let inertParentDialogs = (() => {
                        if (hasNestedDialogs)
                            return true;
                        return enabled;
                    })();
                    let resolveRootOfParentDialog = (0, import_react29.useCallback)(() => {
                        var _a3, _b;
                        return (_b = Array.from((_a3 = ownerDocument == null ? void 0 : ownerDocument.querySelectorAll("[data-headlessui-portal]")) != null ? _a3 : []).find(
                            (root) => root.contains(mainTreeNode.current) && root instanceof HTMLElement
                        )) != null ? _b : null;
                    }, [mainTreeNode]);
                    useInert(resolveRootOfParentDialog, inertParentDialogs);
                    let resolveRootContainers = useEvent(() => {
                        var _a3, _b;
                        let rootContainers = Array.from(
                            (_a3 = ownerDocument == null ? void 0 : ownerDocument.querySelectorAll("html > *, body > *, [data-headlessui-portal]")) != null ? _a3 : []
                        ).filter((container) => {
                            if (container === document.body)
                                return false;
                            if (container === document.head)
                                return false;
                            if (!(container instanceof HTMLElement))
                                return false;
                            if (container.contains(mainTreeNode.current))
                                return false;
                            if (state.panelRef.current && container.contains(state.panelRef.current))
                                return false;
                            return true;
                        });
                        return [...rootContainers, (_b = state.panelRef.current) != null ? _b : internalDialogRef.current];
                    });
                    let outsideClickEnabled = (() => {
                        if (!enabled)
                            return false;
                        if (hasNestedDialogs)
                            return false;
                        return true;
                    })();
                    useOutsideClick(() => resolveRootContainers(), close, outsideClickEnabled);
                    let escapeToCloseEnabled = (() => {
                        if (hasNestedDialogs)
                            return false;
                        if (dialogState !== 0)
                            return false;
                        return true;
                    })();
                    useEventListener(ownerDocument == null ? void 0 : ownerDocument.defaultView, "keydown", (event) => {
                        if (!escapeToCloseEnabled)
                            return;
                        if (event.defaultPrevented)
                            return;
                        if (event.key !== "Escape")
                            return;
                        event.preventDefault();
                        event.stopPropagation();
                        close();
                    });
                    let scrollLockEnabled = (() => {
                        if (isClosing)
                            return false;
                        if (dialogState !== 0)
                            return false;
                        if (hasParentDialog)
                            return false;
                        return true;
                    })();
                    useScrollLock(ownerDocument, scrollLockEnabled, resolveRootContainers);
                    (0, import_react29.useEffect)(() => {
                        if (dialogState !== 0)
                            return;
                        if (!internalDialogRef.current)
                            return;
                        let observer = new ResizeObserver((entries) => {
                            for (let entry of entries) {
                                let rect = entry.target.getBoundingClientRect();
                                if (rect.x === 0 && rect.y === 0 && rect.width === 0 && rect.height === 0) {
                                    close();
                                }
                            }
                        });
                        observer.observe(internalDialogRef.current);
                        return () => observer.disconnect();
                    }, [dialogState, internalDialogRef, close]);
                    let [describedby, DescriptionProvider] = useDescriptions();
                    let contextBag = (0, import_react29.useMemo)(
                        () => [{ dialogState, close, setTitleId }, state],
                        [dialogState, state, close, setTitleId]
                    );
                    let slot = (0, import_react29.useMemo)(
                        () => ({
                            open: dialogState === 0
                            /* Open */
                        }),
                        [dialogState]
                    );
                    let ourProps = {
                        ref: dialogRef,
                        id,
                        role: "dialog",
                        "aria-modal": dialogState === 0 ? true : void 0,
                        "aria-labelledby": state.titleId,
                        "aria-describedby": describedby
                    };
                    return /* @__PURE__ */ import_react29.default.createElement(
                        StackProvider,
                        {
                            type: "Dialog",
                            enabled: dialogState === 0,
                            element: internalDialogRef,
                            onUpdate: useEvent((message, type) => {
                                if (type !== "Dialog")
                                    return;
                                match(message, {
                                    [
                                        0
                                        /* Add */
                                        ]: () => setNestedDialogCount((count) => count + 1),
                                    [
                                        1
                                        /* Remove */
                                        ]: () => setNestedDialogCount((count) => count - 1)
                                });
                            })
                        },
                        /* @__PURE__ */ import_react29.default.createElement(ForcePortalRoot, { force: true }, /* @__PURE__ */ import_react29.default.createElement(Portal, null, /* @__PURE__ */ import_react29.default.createElement(DialogContext.Provider, { value: contextBag }, /* @__PURE__ */ import_react29.default.createElement(Portal.Group, { target: internalDialogRef }, /* @__PURE__ */ import_react29.default.createElement(ForcePortalRoot, { force: false }, /* @__PURE__ */ import_react29.default.createElement(DescriptionProvider, { slot, name: "Dialog.Description" }, /* @__PURE__ */ import_react29.default.createElement(
                            FocusTrap,
                            {
                                initialFocus,
                                containers: resolveRootContainers,
                                features: enabled ? match(position, {
                                    parent: FocusTrap.features.RestoreFocus,
                                    leaf: FocusTrap.features.All & ~FocusTrap.features.FocusLock
                                }) : FocusTrap.features.None
                            },
                            render({
                                ourProps,
                                theirProps,
                                slot,
                                defaultTag: DEFAULT_DIALOG_TAG,
                                features: DialogRenderFeatures,
                                visible: dialogState === 0,
                                name: "Dialog"
                            })
                        ))))))),
                        /* @__PURE__ */ import_react29.default.createElement(Hidden, { features: 4, ref: mainTreeNode })
                    );
                }
                var DEFAULT_OVERLAY_TAG = "div";
                function OverlayFn(props, ref) {
                    let internalId = useId();
                    let { id = `headlessui-dialog-overlay-${internalId}`, ...theirProps } = props;
                    let [{ dialogState, close }] = useDialogContext("Dialog.Overlay");
                    let overlayRef = useSyncRefs(ref);
                    let handleClick = useEvent((event) => {
                        if (event.target !== event.currentTarget)
                            return;
                        if (isDisabledReactIssue7711(event.currentTarget))
                            return event.preventDefault();
                        event.preventDefault();
                        event.stopPropagation();
                        close();
                    });
                    let slot = (0, import_react29.useMemo)(
                        () => ({
                            open: dialogState === 0
                            /* Open */
                        }),
                        [dialogState]
                    );
                    let ourProps = {
                        ref: overlayRef,
                        id,
                        "aria-hidden": true,
                        onClick: handleClick
                    };
                    return render({
                        ourProps,
                        theirProps,
                        slot,
                        defaultTag: DEFAULT_OVERLAY_TAG,
                        name: "Dialog.Overlay"
                    });
                }
                var DEFAULT_BACKDROP_TAG = "div";
                function BackdropFn(props, ref) {
                    let internalId = useId();
                    let { id = `headlessui-dialog-backdrop-${internalId}`, ...theirProps } = props;
                    let [{ dialogState }, state] = useDialogContext("Dialog.Backdrop");
                    let backdropRef = useSyncRefs(ref);
                    (0, import_react29.useEffect)(() => {
                        if (state.panelRef.current === null) {
                            throw new Error(
                                `A <Dialog.Backdrop /> component is being used, but a <Dialog.Panel /> component is missing.`
                            );
                        }
                    }, [state.panelRef]);
                    let slot = (0, import_react29.useMemo)(
                        () => ({
                            open: dialogState === 0
                            /* Open */
                        }),
                        [dialogState]
                    );
                    let ourProps = {
                        ref: backdropRef,
                        id,
                        "aria-hidden": true
                    };
                    return /* @__PURE__ */ import_react29.default.createElement(ForcePortalRoot, { force: true }, /* @__PURE__ */ import_react29.default.createElement(Portal, null, render({
                        ourProps,
                        theirProps,
                        slot,
                        defaultTag: DEFAULT_BACKDROP_TAG,
                        name: "Dialog.Backdrop"
                    })));
                }
                var DEFAULT_PANEL_TAG = "div";
                function PanelFn(props, ref) {
                    let internalId = useId();
                    let { id = `headlessui-dialog-panel-${internalId}`, ...theirProps } = props;
                    let [{ dialogState }, state] = useDialogContext("Dialog.Panel");
                    let panelRef = useSyncRefs(ref, state.panelRef);
                    let slot = (0, import_react29.useMemo)(
                        () => ({
                            open: dialogState === 0
                            /* Open */
                        }),
                        [dialogState]
                    );
                    let handleClick = useEvent((event) => {
                        event.stopPropagation();
                    });
                    let ourProps = {
                        ref: panelRef,
                        id,
                        onClick: handleClick
                    };
                    return render({
                        ourProps,
                        theirProps,
                        slot,
                        defaultTag: DEFAULT_PANEL_TAG,
                        name: "Dialog.Panel"
                    });
                }
                var DEFAULT_TITLE_TAG = "h2";
                function TitleFn(props, ref) {
                    let internalId = useId();
                    let { id = `headlessui-dialog-title-${internalId}`, ...theirProps } = props;
                    let [{ dialogState, setTitleId }] = useDialogContext("Dialog.Title");
                    let titleRef = useSyncRefs(ref);
                    (0, import_react29.useEffect)(() => {
                        setTitleId(id);
                        return () => setTitleId(null);
                    }, [id, setTitleId]);
                    let slot = (0, import_react29.useMemo)(
                        () => ({
                            open: dialogState === 0
                            /* Open */
                        }),
                        [dialogState]
                    );
                    let ourProps = { ref: titleRef, id };
                    return render({
                        ourProps,
                        theirProps,
                        slot,
                        defaultTag: DEFAULT_TITLE_TAG,
                        name: "Dialog.Title"
                    });
                }
                var DialogRoot = forwardRefWithAs(DialogFn);
                var Backdrop = forwardRefWithAs(BackdropFn);
                var Panel = forwardRefWithAs(PanelFn);
                var Overlay = forwardRefWithAs(OverlayFn);
                var Title = forwardRefWithAs(TitleFn);
                var Dialog = Object.assign(DialogRoot, {
                    Backdrop,
                    Panel,
                    Overlay,
                    Title,
                    Description
                });
                var import_react31 = __toESM2(require_react(), 1);
                var import_react30 = __toESM2(require_react(), 1);
                var _a2;
                var startTransition = (
                    // Prefer React's `startTransition` if it's available.
                    // @ts-expect-error - `startTransition` doesn't exist in React < 18.
                    (_a2 = import_react30.default.startTransition) != null ? _a2 : function startTransition2(cb) {
                        cb();
                    }
                );
                var reducers3 = {
                    [
                        0
                        /* ToggleDisclosure */
                        ]: (state) => ({
                        ...state,
                        disclosureState: match(state.disclosureState, {
                            [
                                0
                                /* Open */
                                ]: 1,
                            [
                                1
                                /* Closed */
                                ]: 0
                            /* Open */
                        })
                    }),
                    [
                        1
                        /* CloseDisclosure */
                        ]: (state) => {
                        if (state.disclosureState === 1)
                            return state;
                        return {
                            ...state,
                            disclosureState: 1
                            /* Closed */
                        };
                    },
                    [
                        4
                        /* LinkPanel */
                        ](state) {
                        if (state.linkedPanel === true)
                            return state;
                        return { ...state, linkedPanel: true };
                    },
                    [
                        5
                        /* UnlinkPanel */
                        ](state) {
                        if (state.linkedPanel === false)
                            return state;
                        return { ...state, linkedPanel: false };
                    },
                    [
                        2
                        /* SetButtonId */
                        ](state, action) {
                        if (state.buttonId === action.buttonId)
                            return state;
                        return { ...state, buttonId: action.buttonId };
                    },
                    [
                        3
                        /* SetPanelId */
                        ](state, action) {
                        if (state.panelId === action.panelId)
                            return state;
                        return { ...state, panelId: action.panelId };
                    }
                };
                var DisclosureContext = (0, import_react31.createContext)(null);
                DisclosureContext.displayName = "DisclosureContext";
                function useDisclosureContext(component) {
                    let context = (0, import_react31.useContext)(DisclosureContext);
                    if (context === null) {
                        let err = new Error(`<${component} /> is missing a parent <Disclosure /> component.`);
                        if (Error.captureStackTrace)
                            Error.captureStackTrace(err, useDisclosureContext);
                        throw err;
                    }
                    return context;
                }
                var DisclosureAPIContext = (0, import_react31.createContext)(null);
                DisclosureAPIContext.displayName = "DisclosureAPIContext";
                function useDisclosureAPIContext(component) {
                    let context = (0, import_react31.useContext)(DisclosureAPIContext);
                    if (context === null) {
                        let err = new Error(`<${component} /> is missing a parent <Disclosure /> component.`);
                        if (Error.captureStackTrace)
                            Error.captureStackTrace(err, useDisclosureAPIContext);
                        throw err;
                    }
                    return context;
                }
                var DisclosurePanelContext = (0, import_react31.createContext)(null);
                DisclosurePanelContext.displayName = "DisclosurePanelContext";
                function useDisclosurePanelContext() {
                    return (0, import_react31.useContext)(DisclosurePanelContext);
                }
                function stateReducer3(state, action) {
                    return match(action.type, reducers3, state, action);
                }
                var DEFAULT_DISCLOSURE_TAG = import_react31.Fragment;
                function DisclosureFn(props, ref) {
                    let { defaultOpen = false, ...theirProps } = props;
                    let internalDisclosureRef = (0, import_react31.useRef)(null);
                    let disclosureRef = useSyncRefs(
                        ref,
                        optionalRef(
                            (ref2) => {
                                internalDisclosureRef.current = ref2;
                            },
                            props.as === void 0 || // @ts-expect-error The `as` prop _can_ be a Fragment
                            props.as === import_react31.Fragment
                        )
                    );
                    let panelRef = (0, import_react31.useRef)(null);
                    let buttonRef = (0, import_react31.useRef)(null);
                    let reducerBag = (0, import_react31.useReducer)(stateReducer3, {
                        disclosureState: defaultOpen ? 0 : 1,
                        linkedPanel: false,
                        buttonRef,
                        panelRef,
                        buttonId: null,
                        panelId: null
                    });
                    let [{ disclosureState, buttonId }, dispatch] = reducerBag;
                    let close = useEvent((focusableElement) => {
                        dispatch({
                            type: 1
                            /* CloseDisclosure */
                        });
                        let ownerDocument = getOwnerDocument(internalDisclosureRef);
                        if (!ownerDocument)
                            return;
                        if (!buttonId)
                            return;
                        let restoreElement = (() => {
                            if (!focusableElement)
                                return ownerDocument.getElementById(buttonId);
                            if (focusableElement instanceof HTMLElement)
                                return focusableElement;
                            if (focusableElement.current instanceof HTMLElement)
                                return focusableElement.current;
                            return ownerDocument.getElementById(buttonId);
                        })();
                        restoreElement == null ? void 0 : restoreElement.focus();
                    });
                    let api = (0, import_react31.useMemo)(() => ({ close }), [close]);
                    let slot = (0, import_react31.useMemo)(
                        () => ({ open: disclosureState === 0, close }),
                        [disclosureState, close]
                    );
                    let ourProps = {
                        ref: disclosureRef
                    };
                    return /* @__PURE__ */ import_react31.default.createElement(DisclosureContext.Provider, { value: reducerBag }, /* @__PURE__ */ import_react31.default.createElement(DisclosureAPIContext.Provider, { value: api }, /* @__PURE__ */ import_react31.default.createElement(
                        OpenClosedProvider,
                        {
                            value: match(disclosureState, {
                                [
                                    0
                                    /* Open */
                                    ]: 1,
                                [
                                    1
                                    /* Closed */
                                    ]: 2
                                /* Closed */
                            })
                        },
                        render({
                            ourProps,
                            theirProps,
                            slot,
                            defaultTag: DEFAULT_DISCLOSURE_TAG,
                            name: "Disclosure"
                        })
                    )));
                }
                var DEFAULT_BUTTON_TAG2 = "button";
                function ButtonFn2(props, ref) {
                    let internalId = useId();
                    let { id = `headlessui-disclosure-button-${internalId}`, ...theirProps } = props;
                    let [state, dispatch] = useDisclosureContext("Disclosure.Button");
                    let panelContext = useDisclosurePanelContext();
                    let isWithinPanel = panelContext === null ? false : panelContext === state.panelId;
                    let internalButtonRef = (0, import_react31.useRef)(null);
                    let buttonRef = useSyncRefs(internalButtonRef, ref, !isWithinPanel ? state.buttonRef : null);
                    (0, import_react31.useEffect)(() => {
                        if (isWithinPanel)
                            return;
                        dispatch({ type: 2, buttonId: id });
                        return () => {
                            dispatch({ type: 2, buttonId: null });
                        };
                    }, [id, dispatch, isWithinPanel]);
                    let handleKeyDown = useEvent((event) => {
                        var _a3;
                        if (isWithinPanel) {
                            if (state.disclosureState === 1)
                                return;
                            switch (event.key) {
                                case " ":
                                case "Enter":
                                    event.preventDefault();
                                    event.stopPropagation();
                                    dispatch({
                                        type: 0
                                        /* ToggleDisclosure */
                                    });
                                    (_a3 = state.buttonRef.current) == null ? void 0 : _a3.focus();
                                    break;
                            }
                        } else {
                            switch (event.key) {
                                case " ":
                                case "Enter":
                                    event.preventDefault();
                                    event.stopPropagation();
                                    dispatch({
                                        type: 0
                                        /* ToggleDisclosure */
                                    });
                                    break;
                            }
                        }
                    });
                    let handleKeyUp = useEvent((event) => {
                        switch (event.key) {
                            case " ":
                                event.preventDefault();
                                break;
                        }
                    });
                    let handleClick = useEvent((event) => {
                        var _a3;
                        if (isDisabledReactIssue7711(event.currentTarget))
                            return;
                        if (props.disabled)
                            return;
                        if (isWithinPanel) {
                            dispatch({
                                type: 0
                                /* ToggleDisclosure */
                            });
                            (_a3 = state.buttonRef.current) == null ? void 0 : _a3.focus();
                        } else {
                            dispatch({
                                type: 0
                                /* ToggleDisclosure */
                            });
                        }
                    });
                    let slot = (0, import_react31.useMemo)(
                        () => ({
                            open: state.disclosureState === 0
                            /* Open */
                        }),
                        [state]
                    );
                    let type = useResolveButtonType(props, internalButtonRef);
                    let ourProps = isWithinPanel ? { ref: buttonRef, type, onKeyDown: handleKeyDown, onClick: handleClick } : {
                        ref: buttonRef,
                        id,
                        type,
                        "aria-expanded": props.disabled ? void 0 : state.disclosureState === 0,
                        "aria-controls": state.linkedPanel ? state.panelId : void 0,
                        onKeyDown: handleKeyDown,
                        onKeyUp: handleKeyUp,
                        onClick: handleClick
                    };
                    return render({
                        ourProps,
                        theirProps,
                        slot,
                        defaultTag: DEFAULT_BUTTON_TAG2,
                        name: "Disclosure.Button"
                    });
                }
                var DEFAULT_PANEL_TAG2 = "div";
                var PanelRenderFeatures = 1 | 2;
                function PanelFn2(props, ref) {
                    let internalId = useId();
                    let { id = `headlessui-disclosure-panel-${internalId}`, ...theirProps } = props;
                    let [state, dispatch] = useDisclosureContext("Disclosure.Panel");
                    let { close } = useDisclosureAPIContext("Disclosure.Panel");
                    let panelRef = useSyncRefs(ref, state.panelRef, (el) => {
                        startTransition(() => dispatch({
                            type: el ? 4 : 5
                            /* UnlinkPanel */
                        }));
                    });
                    (0, import_react31.useEffect)(() => {
                        dispatch({ type: 3, panelId: id });
                        return () => {
                            dispatch({ type: 3, panelId: null });
                        };
                    }, [id, dispatch]);
                    let usesOpenClosedState = useOpenClosed();
                    let visible = (() => {
                        if (usesOpenClosedState !== null) {
                            return (usesOpenClosedState & 1) === 1;
                        }
                        return state.disclosureState === 0;
                    })();
                    let slot = (0, import_react31.useMemo)(
                        () => ({ open: state.disclosureState === 0, close }),
                        [state, close]
                    );
                    let ourProps = {
                        ref: panelRef,
                        id
                    };
                    return /* @__PURE__ */ import_react31.default.createElement(DisclosurePanelContext.Provider, { value: state.panelId }, render({
                        ourProps,
                        theirProps,
                        slot,
                        defaultTag: DEFAULT_PANEL_TAG2,
                        features: PanelRenderFeatures,
                        visible,
                        name: "Disclosure.Panel"
                    }));
                }
                var DisclosureRoot = forwardRefWithAs(DisclosureFn);
                var Button2 = forwardRefWithAs(ButtonFn2);
                var Panel2 = forwardRefWithAs(PanelFn2);
                var Disclosure = Object.assign(DisclosureRoot, { Button: Button2, Panel: Panel2 });
                var import_react32 = __toESM2(require_react(), 1);
                function adjustOrderedState2(state, adjustment = (i) => i) {
                    let currentActiveOption = state.activeOptionIndex !== null ? state.options[state.activeOptionIndex] : null;
                    let sortedOptions = sortByDomNode(
                        adjustment(state.options.slice()),
                        (option) => option.dataRef.current.domRef.current
                    );
                    let adjustedActiveOptionIndex = currentActiveOption ? sortedOptions.indexOf(currentActiveOption) : null;
                    if (adjustedActiveOptionIndex === -1) {
                        adjustedActiveOptionIndex = null;
                    }
                    return {
                        options: sortedOptions,
                        activeOptionIndex: adjustedActiveOptionIndex
                    };
                }
                var reducers4 = {
                    [
                        1
                        /* CloseListbox */
                        ](state) {
                        if (state.dataRef.current.disabled)
                            return state;
                        if (state.listboxState === 1)
                            return state;
                        return {
                            ...state,
                            activeOptionIndex: null,
                            listboxState: 1
                            /* Closed */
                        };
                    },
                    [
                        0
                        /* OpenListbox */
                        ](state) {
                        if (state.dataRef.current.disabled)
                            return state;
                        if (state.listboxState === 0)
                            return state;
                        let activeOptionIndex = state.activeOptionIndex;
                        let { isSelected } = state.dataRef.current;
                        let optionIdx = state.options.findIndex((option) => isSelected(option.dataRef.current.value));
                        if (optionIdx !== -1) {
                            activeOptionIndex = optionIdx;
                        }
                        return { ...state, listboxState: 0, activeOptionIndex };
                    },
                    [
                        2
                        /* GoToOption */
                        ](state, action) {
                        var _a3;
                        if (state.dataRef.current.disabled)
                            return state;
                        if (state.listboxState === 1)
                            return state;
                        let adjustedState = adjustOrderedState2(state);
                        let activeOptionIndex = calculateActiveIndex(action, {
                            resolveItems: () => adjustedState.options,
                            resolveActiveIndex: () => adjustedState.activeOptionIndex,
                            resolveId: (option) => option.id,
                            resolveDisabled: (option) => option.dataRef.current.disabled
                        });
                        return {
                            ...state,
                            ...adjustedState,
                            searchQuery: "",
                            activeOptionIndex,
                            activationTrigger: (_a3 = action.trigger) != null ? _a3 : 1
                            /* Other */
                        };
                    },
                    [
                        3
                        /* Search */
                        ]: (state, action) => {
                        if (state.dataRef.current.disabled)
                            return state;
                        if (state.listboxState === 1)
                            return state;
                        let wasAlreadySearching = state.searchQuery !== "";
                        let offset = wasAlreadySearching ? 0 : 1;
                        let searchQuery = state.searchQuery + action.value.toLowerCase();
                        let reOrderedOptions = state.activeOptionIndex !== null ? state.options.slice(state.activeOptionIndex + offset).concat(state.options.slice(0, state.activeOptionIndex + offset)) : state.options;
                        let matchingOption = reOrderedOptions.find(
                            (option) => {
                                var _a3;
                                return !option.dataRef.current.disabled && ((_a3 = option.dataRef.current.textValue) == null ? void 0 : _a3.startsWith(searchQuery));
                            }
                        );
                        let matchIdx = matchingOption ? state.options.indexOf(matchingOption) : -1;
                        if (matchIdx === -1 || matchIdx === state.activeOptionIndex)
                            return { ...state, searchQuery };
                        return {
                            ...state,
                            searchQuery,
                            activeOptionIndex: matchIdx,
                            activationTrigger: 1
                            /* Other */
                        };
                    },
                    [
                        4
                        /* ClearSearch */
                        ](state) {
                        if (state.dataRef.current.disabled)
                            return state;
                        if (state.listboxState === 1)
                            return state;
                        if (state.searchQuery === "")
                            return state;
                        return { ...state, searchQuery: "" };
                    },
                    [
                        5
                        /* RegisterOption */
                        ]: (state, action) => {
                        let option = { id: action.id, dataRef: action.dataRef };
                        let adjustedState = adjustOrderedState2(state, (options) => [...options, option]);
                        if (state.activeOptionIndex === null) {
                            if (state.dataRef.current.isSelected(action.dataRef.current.value)) {
                                adjustedState.activeOptionIndex = adjustedState.options.indexOf(option);
                            }
                        }
                        return { ...state, ...adjustedState };
                    },
                    [
                        6
                        /* UnregisterOption */
                        ]: (state, action) => {
                        let adjustedState = adjustOrderedState2(state, (options) => {
                            let idx = options.findIndex((a) => a.id === action.id);
                            if (idx !== -1)
                                options.splice(idx, 1);
                            return options;
                        });
                        return {
                            ...state,
                            ...adjustedState,
                            activationTrigger: 1
                            /* Other */
                        };
                    },
                    [
                        7
                        /* RegisterLabel */
                        ]: (state, action) => {
                        return {
                            ...state,
                            labelId: action.id
                        };
                    }
                };
                var ListboxActionsContext = (0, import_react32.createContext)(null);
                ListboxActionsContext.displayName = "ListboxActionsContext";
                function useActions2(component) {
                    let context = (0, import_react32.useContext)(ListboxActionsContext);
                    if (context === null) {
                        let err = new Error(`<${component} /> is missing a parent <Listbox /> component.`);
                        if (Error.captureStackTrace)
                            Error.captureStackTrace(err, useActions2);
                        throw err;
                    }
                    return context;
                }
                var ListboxDataContext = (0, import_react32.createContext)(null);
                ListboxDataContext.displayName = "ListboxDataContext";
                function useData2(component) {
                    let context = (0, import_react32.useContext)(ListboxDataContext);
                    if (context === null) {
                        let err = new Error(`<${component} /> is missing a parent <Listbox /> component.`);
                        if (Error.captureStackTrace)
                            Error.captureStackTrace(err, useData2);
                        throw err;
                    }
                    return context;
                }
                function stateReducer4(state, action) {
                    return match(action.type, reducers4, state, action);
                }
                var DEFAULT_LISTBOX_TAG = import_react32.Fragment;
                function ListboxFn(props, ref) {
                    let {
                        value: controlledValue,
                        defaultValue,
                        form: formName,
                        name,
                        onChange: controlledOnChange,
                        by = (a, z) => a === z,
                        disabled = false,
                        horizontal = false,
                        multiple = false,
                        ...theirProps
                    } = props;
                    const orientation = horizontal ? "horizontal" : "vertical";
                    let listboxRef = useSyncRefs(ref);
                    let [value = multiple ? [] : void 0, theirOnChange] = useControllable(
                        controlledValue,
                        controlledOnChange,
                        defaultValue
                    );
                    let [state, dispatch] = (0, import_react32.useReducer)(stateReducer4, {
                        dataRef: (0, import_react32.createRef)(),
                        listboxState: 1,
                        options: [],
                        searchQuery: "",
                        labelId: null,
                        activeOptionIndex: null,
                        activationTrigger: 1
                        /* Other */
                    });
                    let optionsPropsRef = (0, import_react32.useRef)({ static: false, hold: false });
                    let labelRef = (0, import_react32.useRef)(null);
                    let buttonRef = (0, import_react32.useRef)(null);
                    let optionsRef = (0, import_react32.useRef)(null);
                    let compare = useEvent(
                        typeof by === "string" ? (a, z) => {
                            let property = by;
                            return (a == null ? void 0 : a[property]) === (z == null ? void 0 : z[property]);
                        } : by
                    );
                    let isSelected = (0, import_react32.useCallback)(
                        (compareValue) => match(data.mode, {
                            [
                                1
                                /* Multi */
                                ]: () => value.some((option) => compare(option, compareValue)),
                            [
                                0
                                /* Single */
                                ]: () => compare(value, compareValue)
                        }),
                        [value]
                    );
                    let data = (0, import_react32.useMemo)(
                        () => ({
                            ...state,
                            value,
                            disabled,
                            mode: multiple ? 1 : 0,
                            orientation,
                            compare,
                            isSelected,
                            optionsPropsRef,
                            labelRef,
                            buttonRef,
                            optionsRef
                        }),
                        [value, disabled, multiple, state]
                    );
                    useIsoMorphicEffect(() => {
                        state.dataRef.current = data;
                    }, [data]);
                    useOutsideClick(
                        [data.buttonRef, data.optionsRef],
                        (event, target2) => {
                            var _a3;
                            dispatch({
                                type: 1
                                /* CloseListbox */
                            });
                            if (!isFocusableElement(
                                target2,
                                1
                                /* Loose */
                            )) {
                                event.preventDefault();
                                (_a3 = data.buttonRef.current) == null ? void 0 : _a3.focus();
                            }
                        },
                        data.listboxState === 0
                        /* Open */
                    );
                    let slot = (0, import_react32.useMemo)(
                        () => ({ open: data.listboxState === 0, disabled, value }),
                        [data, disabled, value]
                    );
                    let selectOption = useEvent((id) => {
                        let option = data.options.find((item) => item.id === id);
                        if (!option)
                            return;
                        onChange(option.dataRef.current.value);
                    });
                    let selectActiveOption = useEvent(() => {
                        if (data.activeOptionIndex !== null) {
                            let { dataRef, id } = data.options[data.activeOptionIndex];
                            onChange(dataRef.current.value);
                            dispatch({ type: 2, focus: 4, id });
                        }
                    });
                    let openListbox = useEvent(() => dispatch({
                        type: 0
                        /* OpenListbox */
                    }));
                    let closeListbox = useEvent(() => dispatch({
                        type: 1
                        /* CloseListbox */
                    }));
                    let goToOption = useEvent((focus, id, trigger) => {
                        if (focus === 4) {
                            return dispatch({ type: 2, focus: 4, id, trigger });
                        }
                        return dispatch({ type: 2, focus, trigger });
                    });
                    let registerOption = useEvent((id, dataRef) => {
                        dispatch({ type: 5, id, dataRef });
                        return () => dispatch({ type: 6, id });
                    });
                    let registerLabel = useEvent((id) => {
                        dispatch({ type: 7, id });
                        return () => dispatch({ type: 7, id: null });
                    });
                    let onChange = useEvent((value2) => {
                        return match(data.mode, {
                            [
                                0
                                /* Single */
                                ]() {
                                return theirOnChange == null ? void 0 : theirOnChange(value2);
                            },
                            [
                                1
                                /* Multi */
                                ]() {
                                let copy = data.value.slice();
                                let idx = copy.findIndex((item) => compare(item, value2));
                                if (idx === -1) {
                                    copy.push(value2);
                                } else {
                                    copy.splice(idx, 1);
                                }
                                return theirOnChange == null ? void 0 : theirOnChange(copy);
                            }
                        });
                    });
                    let search = useEvent((value2) => dispatch({ type: 3, value: value2 }));
                    let clearSearch = useEvent(() => dispatch({
                        type: 4
                        /* ClearSearch */
                    }));
                    let actions = (0, import_react32.useMemo)(
                        () => ({
                            onChange,
                            registerOption,
                            registerLabel,
                            goToOption,
                            closeListbox,
                            openListbox,
                            selectActiveOption,
                            selectOption,
                            search,
                            clearSearch
                        }),
                        []
                    );
                    let ourProps = { ref: listboxRef };
                    let form = (0, import_react32.useRef)(null);
                    let d = useDisposables();
                    (0, import_react32.useEffect)(() => {
                        if (!form.current)
                            return;
                        if (defaultValue === void 0)
                            return;
                        d.addEventListener(form.current, "reset", () => {
                            onChange(defaultValue);
                        });
                    }, [
                        form,
                        onChange
                        /* Explicitly ignoring `defaultValue` */
                    ]);
                    return /* @__PURE__ */ import_react32.default.createElement(ListboxActionsContext.Provider, { value: actions }, /* @__PURE__ */ import_react32.default.createElement(ListboxDataContext.Provider, { value: data }, /* @__PURE__ */ import_react32.default.createElement(
                        OpenClosedProvider,
                        {
                            value: match(data.listboxState, {
                                [
                                    0
                                    /* Open */
                                    ]: 1,
                                [
                                    1
                                    /* Closed */
                                    ]: 2
                                /* Closed */
                            })
                        },
                        name != null && value != null && objectToFormEntries({ [name]: value }).map(([name2, value2], idx) => /* @__PURE__ */ import_react32.default.createElement(
                            Hidden,
                            {
                                features: 4,
                                ref: idx === 0 ? (element) => {
                                    var _a3;
                                    form.current = (_a3 = element == null ? void 0 : element.closest("form")) != null ? _a3 : null;
                                } : void 0,
                                ...compact({
                                    key: name2,
                                    as: "input",
                                    type: "hidden",
                                    hidden: true,
                                    readOnly: true,
                                    form: formName,
                                    name: name2,
                                    value: value2
                                })
                            }
                        )),
                        render({ ourProps, theirProps, slot, defaultTag: DEFAULT_LISTBOX_TAG, name: "Listbox" })
                    )));
                }
                var DEFAULT_BUTTON_TAG3 = "button";
                function ButtonFn3(props, ref) {
                    var _a3;
                    let internalId = useId();
                    let { id = `headlessui-listbox-button-${internalId}`, ...theirProps } = props;
                    let data = useData2("Listbox.Button");
                    let actions = useActions2("Listbox.Button");
                    let buttonRef = useSyncRefs(data.buttonRef, ref);
                    let d = useDisposables();
                    let handleKeyDown = useEvent((event) => {
                        switch (event.key) {
                            case " ":
                            case "Enter":
                            case "ArrowDown":
                                event.preventDefault();
                                actions.openListbox();
                                d.nextFrame(() => {
                                    if (!data.value)
                                        actions.goToOption(
                                            0
                                            /* First */
                                        );
                                });
                                break;
                            case "ArrowUp":
                                event.preventDefault();
                                actions.openListbox();
                                d.nextFrame(() => {
                                    if (!data.value)
                                        actions.goToOption(
                                            3
                                            /* Last */
                                        );
                                });
                                break;
                        }
                    });
                    let handleKeyUp = useEvent((event) => {
                        switch (event.key) {
                            case " ":
                                event.preventDefault();
                                break;
                        }
                    });
                    let handleClick = useEvent((event) => {
                        if (isDisabledReactIssue7711(event.currentTarget))
                            return event.preventDefault();
                        if (data.listboxState === 0) {
                            actions.closeListbox();
                            d.nextFrame(() => {
                                var _a4;
                                return (_a4 = data.buttonRef.current) == null ? void 0 : _a4.focus({ preventScroll: true });
                            });
                        } else {
                            event.preventDefault();
                            actions.openListbox();
                        }
                    });
                    let labelledby = useComputed(() => {
                        if (!data.labelId)
                            return void 0;
                        return [data.labelId, id].join(" ");
                    }, [data.labelId, id]);
                    let slot = (0, import_react32.useMemo)(
                        () => ({
                            open: data.listboxState === 0,
                            disabled: data.disabled,
                            value: data.value
                        }),
                        [data]
                    );
                    let ourProps = {
                        ref: buttonRef,
                        id,
                        type: useResolveButtonType(props, data.buttonRef),
                        "aria-haspopup": "listbox",
                        "aria-controls": (_a3 = data.optionsRef.current) == null ? void 0 : _a3.id,
                        "aria-expanded": data.disabled ? void 0 : data.listboxState === 0,
                        "aria-labelledby": labelledby,
                        disabled: data.disabled,
                        onKeyDown: handleKeyDown,
                        onKeyUp: handleKeyUp,
                        onClick: handleClick
                    };
                    return render({
                        ourProps,
                        theirProps,
                        slot,
                        defaultTag: DEFAULT_BUTTON_TAG3,
                        name: "Listbox.Button"
                    });
                }
                var DEFAULT_LABEL_TAG2 = "label";
                function LabelFn2(props, ref) {
                    let internalId = useId();
                    let { id = `headlessui-listbox-label-${internalId}`, ...theirProps } = props;
                    let data = useData2("Listbox.Label");
                    let actions = useActions2("Listbox.Label");
                    let labelRef = useSyncRefs(data.labelRef, ref);
                    useIsoMorphicEffect(() => actions.registerLabel(id), [id]);
                    let handleClick = useEvent(() => {
                        var _a3;
                        return (_a3 = data.buttonRef.current) == null ? void 0 : _a3.focus({ preventScroll: true });
                    });
                    let slot = (0, import_react32.useMemo)(
                        () => ({ open: data.listboxState === 0, disabled: data.disabled }),
                        [data]
                    );
                    let ourProps = { ref: labelRef, id, onClick: handleClick };
                    return render({
                        ourProps,
                        theirProps,
                        slot,
                        defaultTag: DEFAULT_LABEL_TAG2,
                        name: "Listbox.Label"
                    });
                }
                var DEFAULT_OPTIONS_TAG2 = "ul";
                var OptionsRenderFeatures2 = 1 | 2;
                function OptionsFn2(props, ref) {
                    var _a3;
                    let internalId = useId();
                    let { id = `headlessui-listbox-options-${internalId}`, ...theirProps } = props;
                    let data = useData2("Listbox.Options");
                    let actions = useActions2("Listbox.Options");
                    let optionsRef = useSyncRefs(data.optionsRef, ref);
                    let d = useDisposables();
                    let searchDisposables = useDisposables();
                    let usesOpenClosedState = useOpenClosed();
                    let visible = (() => {
                        if (usesOpenClosedState !== null) {
                            return (usesOpenClosedState & 1) === 1;
                        }
                        return data.listboxState === 0;
                    })();
                    (0, import_react32.useEffect)(() => {
                        var _a4;
                        let container = data.optionsRef.current;
                        if (!container)
                            return;
                        if (data.listboxState !== 0)
                            return;
                        if (container === ((_a4 = getOwnerDocument(container)) == null ? void 0 : _a4.activeElement))
                            return;
                        container.focus({ preventScroll: true });
                    }, [data.listboxState, data.optionsRef]);
                    let handleKeyDown = useEvent((event) => {
                        searchDisposables.dispose();
                        switch (event.key) {
                            case " ":
                                if (data.searchQuery !== "") {
                                    event.preventDefault();
                                    event.stopPropagation();
                                    return actions.search(event.key);
                                }
                            case "Enter":
                                event.preventDefault();
                                event.stopPropagation();
                                if (data.activeOptionIndex !== null) {
                                    let { dataRef } = data.options[data.activeOptionIndex];
                                    actions.onChange(dataRef.current.value);
                                }
                                if (data.mode === 0) {
                                    actions.closeListbox();
                                    disposables().nextFrame(() => {
                                        var _a4;
                                        return (_a4 = data.buttonRef.current) == null ? void 0 : _a4.focus({ preventScroll: true });
                                    });
                                }
                                break;
                            case match(data.orientation, {
                                vertical: "ArrowDown",
                                horizontal: "ArrowRight"
                                /* ArrowRight */
                            }):
                                event.preventDefault();
                                event.stopPropagation();
                                return actions.goToOption(
                                    2
                                    /* Next */
                                );
                            case match(data.orientation, {
                                vertical: "ArrowUp",
                                horizontal: "ArrowLeft"
                                /* ArrowLeft */
                            }):
                                event.preventDefault();
                                event.stopPropagation();
                                return actions.goToOption(
                                    1
                                    /* Previous */
                                );
                            case "Home":
                            case "PageUp":
                                event.preventDefault();
                                event.stopPropagation();
                                return actions.goToOption(
                                    0
                                    /* First */
                                );
                            case "End":
                            case "PageDown":
                                event.preventDefault();
                                event.stopPropagation();
                                return actions.goToOption(
                                    3
                                    /* Last */
                                );
                            case "Escape":
                                event.preventDefault();
                                event.stopPropagation();
                                actions.closeListbox();
                                return d.nextFrame(() => {
                                    var _a4;
                                    return (_a4 = data.buttonRef.current) == null ? void 0 : _a4.focus({ preventScroll: true });
                                });
                            case "Tab":
                                event.preventDefault();
                                event.stopPropagation();
                                break;
                            default:
                                if (event.key.length === 1) {
                                    actions.search(event.key);
                                    searchDisposables.setTimeout(() => actions.clearSearch(), 350);
                                }
                                break;
                        }
                    });
                    let labelledby = useComputed(
                        () => {
                            var _a4, _b, _c;
                            return (_c = (_a4 = data.labelRef.current) == null ? void 0 : _a4.id) != null ? _c : (_b = data.buttonRef.current) == null ? void 0 : _b.id;
                        },
                        [data.labelRef.current, data.buttonRef.current]
                    );
                    let slot = (0, import_react32.useMemo)(
                        () => ({
                            open: data.listboxState === 0
                            /* Open */
                        }),
                        [data]
                    );
                    let ourProps = {
                        "aria-activedescendant": data.activeOptionIndex === null ? void 0 : (_a3 = data.options[data.activeOptionIndex]) == null ? void 0 : _a3.id,
                        "aria-multiselectable": data.mode === 1 ? true : void 0,
                        "aria-labelledby": labelledby,
                        "aria-orientation": data.orientation,
                        id,
                        onKeyDown: handleKeyDown,
                        role: "listbox",
                        tabIndex: 0,
                        ref: optionsRef
                    };
                    return render({
                        ourProps,
                        theirProps,
                        slot,
                        defaultTag: DEFAULT_OPTIONS_TAG2,
                        features: OptionsRenderFeatures2,
                        visible,
                        name: "Listbox.Options"
                    });
                }
                var DEFAULT_OPTION_TAG2 = "li";
                function OptionFn2(props, ref) {
                    let internalId = useId();
                    let {
                        id = `headlessui-listbox-option-${internalId}`,
                        disabled = false,
                        value,
                        ...theirProps
                    } = props;
                    let data = useData2("Listbox.Option");
                    let actions = useActions2("Listbox.Option");
                    let active = data.activeOptionIndex !== null ? data.options[data.activeOptionIndex].id === id : false;
                    let selected = data.isSelected(value);
                    let internalOptionRef = (0, import_react32.useRef)(null);
                    let bag = useLatestValue({
                        disabled,
                        value,
                        domRef: internalOptionRef,
                        get textValue() {
                            var _a3, _b;
                            return (_b = (_a3 = internalOptionRef.current) == null ? void 0 : _a3.textContent) == null ? void 0 : _b.toLowerCase();
                        }
                    });
                    let optionRef = useSyncRefs(ref, internalOptionRef);
                    useIsoMorphicEffect(() => {
                        if (data.listboxState !== 0)
                            return;
                        if (!active)
                            return;
                        if (data.activationTrigger === 0)
                            return;
                        let d = disposables();
                        d.requestAnimationFrame(() => {
                            var _a3, _b;
                            (_b = (_a3 = internalOptionRef.current) == null ? void 0 : _a3.scrollIntoView) == null ? void 0 : _b.call(_a3, { block: "nearest" });
                        });
                        return d.dispose;
                    }, [
                        internalOptionRef,
                        active,
                        data.listboxState,
                        data.activationTrigger,
                        /* We also want to trigger this when the position of the active item changes so that we can re-trigger the scrollIntoView */
                        data.activeOptionIndex
                    ]);
                    useIsoMorphicEffect(() => actions.registerOption(id, bag), [bag, id]);
                    let handleClick = useEvent((event) => {
                        if (disabled)
                            return event.preventDefault();
                        actions.onChange(value);
                        if (data.mode === 0) {
                            actions.closeListbox();
                            disposables().nextFrame(() => {
                                var _a3;
                                return (_a3 = data.buttonRef.current) == null ? void 0 : _a3.focus({ preventScroll: true });
                            });
                        }
                    });
                    let handleFocus = useEvent(() => {
                        if (disabled)
                            return actions.goToOption(
                                5
                                /* Nothing */
                            );
                        actions.goToOption(4, id);
                    });
                    let pointer = useTrackedPointer();
                    let handleEnter = useEvent((evt) => pointer.update(evt));
                    let handleMove = useEvent((evt) => {
                        if (!pointer.wasMoved(evt))
                            return;
                        if (disabled)
                            return;
                        if (active)
                            return;
                        actions.goToOption(
                            4,
                            id,
                            0
                            /* Pointer */
                        );
                    });
                    let handleLeave = useEvent((evt) => {
                        if (!pointer.wasMoved(evt))
                            return;
                        if (disabled)
                            return;
                        if (!active)
                            return;
                        actions.goToOption(
                            5
                            /* Nothing */
                        );
                    });
                    let slot = (0, import_react32.useMemo)(
                        () => ({ active, selected, disabled }),
                        [active, selected, disabled]
                    );
                    let ourProps = {
                        id,
                        ref: optionRef,
                        role: "option",
                        tabIndex: disabled === true ? void 0 : -1,
                        "aria-disabled": disabled === true ? true : void 0,
                        // According to the WAI-ARIA best practices, we should use aria-checked for
                        // multi-select,but Voice-Over disagrees. So we use aria-checked instead for
                        // both single and multi-select.
                        "aria-selected": selected,
                        disabled: void 0,
                        // Never forward the `disabled` prop
                        onClick: handleClick,
                        onFocus: handleFocus,
                        onPointerEnter: handleEnter,
                        onMouseEnter: handleEnter,
                        onPointerMove: handleMove,
                        onMouseMove: handleMove,
                        onPointerLeave: handleLeave,
                        onMouseLeave: handleLeave
                    };
                    return render({
                        ourProps,
                        theirProps,
                        slot,
                        defaultTag: DEFAULT_OPTION_TAG2,
                        name: "Listbox.Option"
                    });
                }
                var ListboxRoot = forwardRefWithAs(ListboxFn);
                var Button3 = forwardRefWithAs(ButtonFn3);
                var Label2 = forwardRefWithAs(LabelFn2);
                var Options2 = forwardRefWithAs(OptionsFn2);
                var Option2 = forwardRefWithAs(OptionFn2);
                var Listbox = Object.assign(ListboxRoot, { Button: Button3, Label: Label2, Options: Options2, Option: Option2 });
                var import_react33 = __toESM2(require_react(), 1);
                function adjustOrderedState3(state, adjustment = (i) => i) {
                    let currentActiveItem = state.activeItemIndex !== null ? state.items[state.activeItemIndex] : null;
                    let sortedItems = sortByDomNode(
                        adjustment(state.items.slice()),
                        (item) => item.dataRef.current.domRef.current
                    );
                    let adjustedActiveItemIndex = currentActiveItem ? sortedItems.indexOf(currentActiveItem) : null;
                    if (adjustedActiveItemIndex === -1) {
                        adjustedActiveItemIndex = null;
                    }
                    return {
                        items: sortedItems,
                        activeItemIndex: adjustedActiveItemIndex
                    };
                }
                var reducers5 = {
                    [
                        1
                        /* CloseMenu */
                        ](state) {
                        if (state.menuState === 1)
                            return state;
                        return {
                            ...state,
                            activeItemIndex: null,
                            menuState: 1
                            /* Closed */
                        };
                    },
                    [
                        0
                        /* OpenMenu */
                        ](state) {
                        if (state.menuState === 0)
                            return state;
                        return {
                            ...state,
                            menuState: 0
                            /* Open */
                        };
                    },
                    [
                        2
                        /* GoToItem */
                        ]: (state, action) => {
                        var _a3;
                        let adjustedState = adjustOrderedState3(state);
                        let activeItemIndex = calculateActiveIndex(action, {
                            resolveItems: () => adjustedState.items,
                            resolveActiveIndex: () => adjustedState.activeItemIndex,
                            resolveId: (item) => item.id,
                            resolveDisabled: (item) => item.dataRef.current.disabled
                        });
                        return {
                            ...state,
                            ...adjustedState,
                            searchQuery: "",
                            activeItemIndex,
                            activationTrigger: (_a3 = action.trigger) != null ? _a3 : 1
                            /* Other */
                        };
                    },
                    [
                        3
                        /* Search */
                        ]: (state, action) => {
                        let wasAlreadySearching = state.searchQuery !== "";
                        let offset = wasAlreadySearching ? 0 : 1;
                        let searchQuery = state.searchQuery + action.value.toLowerCase();
                        let reOrderedItems = state.activeItemIndex !== null ? state.items.slice(state.activeItemIndex + offset).concat(state.items.slice(0, state.activeItemIndex + offset)) : state.items;
                        let matchingItem = reOrderedItems.find(
                            (item) => {
                                var _a3;
                                return ((_a3 = item.dataRef.current.textValue) == null ? void 0 : _a3.startsWith(searchQuery)) && !item.dataRef.current.disabled;
                            }
                        );
                        let matchIdx = matchingItem ? state.items.indexOf(matchingItem) : -1;
                        if (matchIdx === -1 || matchIdx === state.activeItemIndex)
                            return { ...state, searchQuery };
                        return {
                            ...state,
                            searchQuery,
                            activeItemIndex: matchIdx,
                            activationTrigger: 1
                            /* Other */
                        };
                    },
                    [
                        4
                        /* ClearSearch */
                        ](state) {
                        if (state.searchQuery === "")
                            return state;
                        return { ...state, searchQuery: "", searchActiveItemIndex: null };
                    },
                    [
                        5
                        /* RegisterItem */
                        ]: (state, action) => {
                        let adjustedState = adjustOrderedState3(state, (items) => [
                            ...items,
                            { id: action.id, dataRef: action.dataRef }
                        ]);
                        return { ...state, ...adjustedState };
                    },
                    [
                        6
                        /* UnregisterItem */
                        ]: (state, action) => {
                        let adjustedState = adjustOrderedState3(state, (items) => {
                            let idx = items.findIndex((a) => a.id === action.id);
                            if (idx !== -1)
                                items.splice(idx, 1);
                            return items;
                        });
                        return {
                            ...state,
                            ...adjustedState,
                            activationTrigger: 1
                            /* Other */
                        };
                    }
                };
                var MenuContext = (0, import_react33.createContext)(null);
                MenuContext.displayName = "MenuContext";
                function useMenuContext(component) {
                    let context = (0, import_react33.useContext)(MenuContext);
                    if (context === null) {
                        let err = new Error(`<${component} /> is missing a parent <Menu /> component.`);
                        if (Error.captureStackTrace)
                            Error.captureStackTrace(err, useMenuContext);
                        throw err;
                    }
                    return context;
                }
                function stateReducer5(state, action) {
                    return match(action.type, reducers5, state, action);
                }
                var DEFAULT_MENU_TAG = import_react33.Fragment;
                function MenuFn(props, ref) {
                    let reducerBag = (0, import_react33.useReducer)(stateReducer5, {
                        menuState: 1,
                        buttonRef: (0, import_react33.createRef)(),
                        itemsRef: (0, import_react33.createRef)(),
                        items: [],
                        searchQuery: "",
                        activeItemIndex: null,
                        activationTrigger: 1
                        /* Other */
                    });
                    let [{ menuState, itemsRef, buttonRef }, dispatch] = reducerBag;
                    let menuRef = useSyncRefs(ref);
                    useOutsideClick(
                        [buttonRef, itemsRef],
                        (event, target2) => {
                            var _a3;
                            dispatch({
                                type: 1
                                /* CloseMenu */
                            });
                            if (!isFocusableElement(
                                target2,
                                1
                                /* Loose */
                            )) {
                                event.preventDefault();
                                (_a3 = buttonRef.current) == null ? void 0 : _a3.focus();
                            }
                        },
                        menuState === 0
                        /* Open */
                    );
                    let close = useEvent(() => {
                        dispatch({
                            type: 1
                            /* CloseMenu */
                        });
                    });
                    let slot = (0, import_react33.useMemo)(
                        () => ({ open: menuState === 0, close }),
                        [menuState, close]
                    );
                    let theirProps = props;
                    let ourProps = { ref: menuRef };
                    return /* @__PURE__ */ import_react33.default.createElement(MenuContext.Provider, { value: reducerBag }, /* @__PURE__ */ import_react33.default.createElement(
                        OpenClosedProvider,
                        {
                            value: match(menuState, {
                                [
                                    0
                                    /* Open */
                                    ]: 1,
                                [
                                    1
                                    /* Closed */
                                    ]: 2
                                /* Closed */
                            })
                        },
                        render({
                            ourProps,
                            theirProps,
                            slot,
                            defaultTag: DEFAULT_MENU_TAG,
                            name: "Menu"
                        })
                    ));
                }
                var DEFAULT_BUTTON_TAG4 = "button";
                function ButtonFn4(props, ref) {
                    var _a3;
                    let internalId = useId();
                    let { id = `headlessui-menu-button-${internalId}`, ...theirProps } = props;
                    let [state, dispatch] = useMenuContext("Menu.Button");
                    let buttonRef = useSyncRefs(state.buttonRef, ref);
                    let d = useDisposables();
                    let handleKeyDown = useEvent((event) => {
                        switch (event.key) {
                            case " ":
                            case "Enter":
                            case "ArrowDown":
                                event.preventDefault();
                                event.stopPropagation();
                                dispatch({
                                    type: 0
                                    /* OpenMenu */
                                });
                                d.nextFrame(() => dispatch({
                                    type: 2,
                                    focus: 0
                                    /* First */
                                }));
                                break;
                            case "ArrowUp":
                                event.preventDefault();
                                event.stopPropagation();
                                dispatch({
                                    type: 0
                                    /* OpenMenu */
                                });
                                d.nextFrame(() => dispatch({
                                    type: 2,
                                    focus: 3
                                    /* Last */
                                }));
                                break;
                        }
                    });
                    let handleKeyUp = useEvent((event) => {
                        switch (event.key) {
                            case " ":
                                event.preventDefault();
                                break;
                        }
                    });
                    let handleClick = useEvent((event) => {
                        if (isDisabledReactIssue7711(event.currentTarget))
                            return event.preventDefault();
                        if (props.disabled)
                            return;
                        if (state.menuState === 0) {
                            dispatch({
                                type: 1
                                /* CloseMenu */
                            });
                            d.nextFrame(() => {
                                var _a4;
                                return (_a4 = state.buttonRef.current) == null ? void 0 : _a4.focus({ preventScroll: true });
                            });
                        } else {
                            event.preventDefault();
                            dispatch({
                                type: 0
                                /* OpenMenu */
                            });
                        }
                    });
                    let slot = (0, import_react33.useMemo)(
                        () => ({
                            open: state.menuState === 0
                            /* Open */
                        }),
                        [state]
                    );
                    let ourProps = {
                        ref: buttonRef,
                        id,
                        type: useResolveButtonType(props, state.buttonRef),
                        "aria-haspopup": "menu",
                        "aria-controls": (_a3 = state.itemsRef.current) == null ? void 0 : _a3.id,
                        "aria-expanded": props.disabled ? void 0 : state.menuState === 0,
                        onKeyDown: handleKeyDown,
                        onKeyUp: handleKeyUp,
                        onClick: handleClick
                    };
                    return render({
                        ourProps,
                        theirProps,
                        slot,
                        defaultTag: DEFAULT_BUTTON_TAG4,
                        name: "Menu.Button"
                    });
                }
                var DEFAULT_ITEMS_TAG = "div";
                var ItemsRenderFeatures = 1 | 2;
                function ItemsFn(props, ref) {
                    var _a3, _b;
                    let internalId = useId();
                    let { id = `headlessui-menu-items-${internalId}`, ...theirProps } = props;
                    let [state, dispatch] = useMenuContext("Menu.Items");
                    let itemsRef = useSyncRefs(state.itemsRef, ref);
                    let ownerDocument = useOwnerDocument(state.itemsRef);
                    let searchDisposables = useDisposables();
                    let usesOpenClosedState = useOpenClosed();
                    let visible = (() => {
                        if (usesOpenClosedState !== null) {
                            return (usesOpenClosedState & 1) === 1;
                        }
                        return state.menuState === 0;
                    })();
                    (0, import_react33.useEffect)(() => {
                        let container = state.itemsRef.current;
                        if (!container)
                            return;
                        if (state.menuState !== 0)
                            return;
                        if (container === (ownerDocument == null ? void 0 : ownerDocument.activeElement))
                            return;
                        container.focus({ preventScroll: true });
                    }, [state.menuState, state.itemsRef, ownerDocument]);
                    useTreeWalker({
                        container: state.itemsRef.current,
                        enabled: state.menuState === 0,
                        accept(node) {
                            if (node.getAttribute("role") === "menuitem")
                                return NodeFilter.FILTER_REJECT;
                            if (node.hasAttribute("role"))
                                return NodeFilter.FILTER_SKIP;
                            return NodeFilter.FILTER_ACCEPT;
                        },
                        walk(node) {
                            node.setAttribute("role", "none");
                        }
                    });
                    let handleKeyDown = useEvent((event) => {
                        var _a4, _b2;
                        searchDisposables.dispose();
                        switch (event.key) {
                            case " ":
                                if (state.searchQuery !== "") {
                                    event.preventDefault();
                                    event.stopPropagation();
                                    return dispatch({ type: 3, value: event.key });
                                }
                            case "Enter":
                                event.preventDefault();
                                event.stopPropagation();
                                dispatch({
                                    type: 1
                                    /* CloseMenu */
                                });
                                if (state.activeItemIndex !== null) {
                                    let { dataRef } = state.items[state.activeItemIndex];
                                    (_b2 = (_a4 = dataRef.current) == null ? void 0 : _a4.domRef.current) == null ? void 0 : _b2.click();
                                }
                                restoreFocusIfNecessary(state.buttonRef.current);
                                break;
                            case "ArrowDown":
                                event.preventDefault();
                                event.stopPropagation();
                                return dispatch({
                                    type: 2,
                                    focus: 2
                                    /* Next */
                                });
                            case "ArrowUp":
                                event.preventDefault();
                                event.stopPropagation();
                                return dispatch({
                                    type: 2,
                                    focus: 1
                                    /* Previous */
                                });
                            case "Home":
                            case "PageUp":
                                event.preventDefault();
                                event.stopPropagation();
                                return dispatch({
                                    type: 2,
                                    focus: 0
                                    /* First */
                                });
                            case "End":
                            case "PageDown":
                                event.preventDefault();
                                event.stopPropagation();
                                return dispatch({
                                    type: 2,
                                    focus: 3
                                    /* Last */
                                });
                            case "Escape":
                                event.preventDefault();
                                event.stopPropagation();
                                dispatch({
                                    type: 1
                                    /* CloseMenu */
                                });
                                disposables().nextFrame(() => {
                                    var _a5;
                                    return (_a5 = state.buttonRef.current) == null ? void 0 : _a5.focus({ preventScroll: true });
                                });
                                break;
                            case "Tab":
                                event.preventDefault();
                                event.stopPropagation();
                                dispatch({
                                    type: 1
                                    /* CloseMenu */
                                });
                                disposables().nextFrame(() => {
                                    focusFrom(
                                        state.buttonRef.current,
                                        event.shiftKey ? 2 : 4
                                        /* Next */
                                    );
                                });
                                break;
                            default:
                                if (event.key.length === 1) {
                                    dispatch({ type: 3, value: event.key });
                                    searchDisposables.setTimeout(() => dispatch({
                                        type: 4
                                        /* ClearSearch */
                                    }), 350);
                                }
                                break;
                        }
                    });
                    let handleKeyUp = useEvent((event) => {
                        switch (event.key) {
                            case " ":
                                event.preventDefault();
                                break;
                        }
                    });
                    let slot = (0, import_react33.useMemo)(
                        () => ({
                            open: state.menuState === 0
                            /* Open */
                        }),
                        [state]
                    );
                    let ourProps = {
                        "aria-activedescendant": state.activeItemIndex === null ? void 0 : (_a3 = state.items[state.activeItemIndex]) == null ? void 0 : _a3.id,
                        "aria-labelledby": (_b = state.buttonRef.current) == null ? void 0 : _b.id,
                        id,
                        onKeyDown: handleKeyDown,
                        onKeyUp: handleKeyUp,
                        role: "menu",
                        tabIndex: 0,
                        ref: itemsRef
                    };
                    return render({
                        ourProps,
                        theirProps,
                        slot,
                        defaultTag: DEFAULT_ITEMS_TAG,
                        features: ItemsRenderFeatures,
                        visible,
                        name: "Menu.Items"
                    });
                }
                var DEFAULT_ITEM_TAG = import_react33.Fragment;
                function ItemFn(props, ref) {
                    let internalId = useId();
                    let { id = `headlessui-menu-item-${internalId}`, disabled = false, ...theirProps } = props;
                    let [state, dispatch] = useMenuContext("Menu.Item");
                    let active = state.activeItemIndex !== null ? state.items[state.activeItemIndex].id === id : false;
                    let internalItemRef = (0, import_react33.useRef)(null);
                    let itemRef = useSyncRefs(ref, internalItemRef);
                    useIsoMorphicEffect(() => {
                        if (state.menuState !== 0)
                            return;
                        if (!active)
                            return;
                        if (state.activationTrigger === 0)
                            return;
                        let d = disposables();
                        d.requestAnimationFrame(() => {
                            var _a3, _b;
                            (_b = (_a3 = internalItemRef.current) == null ? void 0 : _a3.scrollIntoView) == null ? void 0 : _b.call(_a3, { block: "nearest" });
                        });
                        return d.dispose;
                    }, [
                        internalItemRef,
                        active,
                        state.menuState,
                        state.activationTrigger,
                        /* We also want to trigger this when the position of the active item changes so that we can re-trigger the scrollIntoView */
                        state.activeItemIndex
                    ]);
                    let bag = (0, import_react33.useRef)({ disabled, domRef: internalItemRef });
                    useIsoMorphicEffect(() => {
                        bag.current.disabled = disabled;
                    }, [bag, disabled]);
                    useIsoMorphicEffect(() => {
                        var _a3, _b;
                        bag.current.textValue = (_b = (_a3 = internalItemRef.current) == null ? void 0 : _a3.textContent) == null ? void 0 : _b.toLowerCase();
                    }, [bag, internalItemRef]);
                    useIsoMorphicEffect(() => {
                        dispatch({ type: 5, id, dataRef: bag });
                        return () => dispatch({ type: 6, id });
                    }, [bag, id]);
                    let close = useEvent(() => {
                        dispatch({
                            type: 1
                            /* CloseMenu */
                        });
                    });
                    let handleClick = useEvent((event) => {
                        if (disabled)
                            return event.preventDefault();
                        dispatch({
                            type: 1
                            /* CloseMenu */
                        });
                        restoreFocusIfNecessary(state.buttonRef.current);
                    });
                    let handleFocus = useEvent(() => {
                        if (disabled)
                            return dispatch({
                                type: 2,
                                focus: 5
                                /* Nothing */
                            });
                        dispatch({ type: 2, focus: 4, id });
                    });
                    let pointer = useTrackedPointer();
                    let handleEnter = useEvent((evt) => pointer.update(evt));
                    let handleMove = useEvent((evt) => {
                        if (!pointer.wasMoved(evt))
                            return;
                        if (disabled)
                            return;
                        if (active)
                            return;
                        dispatch({
                            type: 2,
                            focus: 4,
                            id,
                            trigger: 0
                            /* Pointer */
                        });
                    });
                    let handleLeave = useEvent((evt) => {
                        if (!pointer.wasMoved(evt))
                            return;
                        if (disabled)
                            return;
                        if (!active)
                            return;
                        dispatch({
                            type: 2,
                            focus: 5
                            /* Nothing */
                        });
                    });
                    let slot = (0, import_react33.useMemo)(
                        () => ({ active, disabled, close }),
                        [active, disabled, close]
                    );
                    let ourProps = {
                        id,
                        ref: itemRef,
                        role: "menuitem",
                        tabIndex: disabled === true ? void 0 : -1,
                        "aria-disabled": disabled === true ? true : void 0,
                        disabled: void 0,
                        // Never forward the `disabled` prop
                        onClick: handleClick,
                        onFocus: handleFocus,
                        onPointerEnter: handleEnter,
                        onMouseEnter: handleEnter,
                        onPointerMove: handleMove,
                        onMouseMove: handleMove,
                        onPointerLeave: handleLeave,
                        onMouseLeave: handleLeave
                    };
                    return render({
                        ourProps,
                        theirProps,
                        slot,
                        defaultTag: DEFAULT_ITEM_TAG,
                        name: "Menu.Item"
                    });
                }
                var MenuRoot = forwardRefWithAs(MenuFn);
                var Button4 = forwardRefWithAs(ButtonFn4);
                var Items = forwardRefWithAs(ItemsFn);
                var Item = forwardRefWithAs(ItemFn);
                var Menu = Object.assign(MenuRoot, { Button: Button4, Items, Item });
                var import_react34 = __toESM2(require_react(), 1);
                var reducers6 = {
                    [
                        0
                        /* TogglePopover */
                        ]: (state) => ({
                        ...state,
                        popoverState: match(state.popoverState, {
                            [
                                0
                                /* Open */
                                ]: 1,
                            [
                                1
                                /* Closed */
                                ]: 0
                            /* Open */
                        })
                    }),
                    [
                        1
                        /* ClosePopover */
                        ](state) {
                        if (state.popoverState === 1)
                            return state;
                        return {
                            ...state,
                            popoverState: 1
                            /* Closed */
                        };
                    },
                    [
                        2
                        /* SetButton */
                        ](state, action) {
                        if (state.button === action.button)
                            return state;
                        return { ...state, button: action.button };
                    },
                    [
                        3
                        /* SetButtonId */
                        ](state, action) {
                        if (state.buttonId === action.buttonId)
                            return state;
                        return { ...state, buttonId: action.buttonId };
                    },
                    [
                        4
                        /* SetPanel */
                        ](state, action) {
                        if (state.panel === action.panel)
                            return state;
                        return { ...state, panel: action.panel };
                    },
                    [
                        5
                        /* SetPanelId */
                        ](state, action) {
                        if (state.panelId === action.panelId)
                            return state;
                        return { ...state, panelId: action.panelId };
                    }
                };
                var PopoverContext = (0, import_react34.createContext)(null);
                PopoverContext.displayName = "PopoverContext";
                function usePopoverContext(component) {
                    let context = (0, import_react34.useContext)(PopoverContext);
                    if (context === null) {
                        let err = new Error(`<${component} /> is missing a parent <Popover /> component.`);
                        if (Error.captureStackTrace)
                            Error.captureStackTrace(err, usePopoverContext);
                        throw err;
                    }
                    return context;
                }
                var PopoverAPIContext = (0, import_react34.createContext)(null);
                PopoverAPIContext.displayName = "PopoverAPIContext";
                function usePopoverAPIContext(component) {
                    let context = (0, import_react34.useContext)(PopoverAPIContext);
                    if (context === null) {
                        let err = new Error(`<${component} /> is missing a parent <Popover /> component.`);
                        if (Error.captureStackTrace)
                            Error.captureStackTrace(err, usePopoverAPIContext);
                        throw err;
                    }
                    return context;
                }
                var PopoverGroupContext = (0, import_react34.createContext)(null);
                PopoverGroupContext.displayName = "PopoverGroupContext";
                function usePopoverGroupContext() {
                    return (0, import_react34.useContext)(PopoverGroupContext);
                }
                var PopoverPanelContext = (0, import_react34.createContext)(null);
                PopoverPanelContext.displayName = "PopoverPanelContext";
                function usePopoverPanelContext() {
                    return (0, import_react34.useContext)(PopoverPanelContext);
                }
                function stateReducer6(state, action) {
                    return match(action.type, reducers6, state, action);
                }
                var DEFAULT_POPOVER_TAG = "div";
                function PopoverFn(props, ref) {
                    var _a3;
                    let internalPopoverRef = (0, import_react34.useRef)(null);
                    let popoverRef = useSyncRefs(
                        ref,
                        optionalRef((ref2) => {
                            internalPopoverRef.current = ref2;
                        })
                    );
                    let buttons = (0, import_react34.useRef)([]);
                    let reducerBag = (0, import_react34.useReducer)(stateReducer6, {
                        popoverState: 1,
                        buttons,
                        button: null,
                        buttonId: null,
                        panel: null,
                        panelId: null,
                        beforePanelSentinel: (0, import_react34.createRef)(),
                        afterPanelSentinel: (0, import_react34.createRef)()
                    });
                    let [
                        { popoverState, button, buttonId, panel, panelId, beforePanelSentinel, afterPanelSentinel },
                        dispatch
                    ] = reducerBag;
                    let ownerDocument = useOwnerDocument((_a3 = internalPopoverRef.current) != null ? _a3 : button);
                    let isPortalled = (0, import_react34.useMemo)(() => {
                        if (!button)
                            return false;
                        if (!panel)
                            return false;
                        for (let root of document.querySelectorAll("body > *")) {
                            if (Number(root == null ? void 0 : root.contains(button)) ^ Number(root == null ? void 0 : root.contains(panel))) {
                                return true;
                            }
                        }
                        let elements = getFocusableElements();
                        let buttonIdx = elements.indexOf(button);
                        let beforeIdx = (buttonIdx + elements.length - 1) % elements.length;
                        let afterIdx = (buttonIdx + 1) % elements.length;
                        let beforeElement = elements[beforeIdx];
                        let afterElement = elements[afterIdx];
                        if (!panel.contains(beforeElement) && !panel.contains(afterElement)) {
                            return true;
                        }
                        return false;
                    }, [button, panel]);
                    let buttonIdRef = useLatestValue(buttonId);
                    let panelIdRef = useLatestValue(panelId);
                    let registerBag = (0, import_react34.useMemo)(
                        () => ({
                            buttonId: buttonIdRef,
                            panelId: panelIdRef,
                            close: () => dispatch({
                                type: 1
                                /* ClosePopover */
                            })
                        }),
                        [buttonIdRef, panelIdRef, dispatch]
                    );
                    let groupContext = usePopoverGroupContext();
                    let registerPopover = groupContext == null ? void 0 : groupContext.registerPopover;
                    let isFocusWithinPopoverGroup = useEvent(() => {
                        var _a4;
                        return (_a4 = groupContext == null ? void 0 : groupContext.isFocusWithinPopoverGroup()) != null ? _a4 : (ownerDocument == null ? void 0 : ownerDocument.activeElement) && ((button == null ? void 0 : button.contains(ownerDocument.activeElement)) || (panel == null ? void 0 : panel.contains(ownerDocument.activeElement)));
                    });
                    (0, import_react34.useEffect)(() => registerPopover == null ? void 0 : registerPopover(registerBag), [registerPopover, registerBag]);
                    useEventListener(
                        ownerDocument == null ? void 0 : ownerDocument.defaultView,
                        "focus",
                        (event) => {
                            var _a4, _b, _c, _d;
                            if (popoverState !== 0)
                                return;
                            if (isFocusWithinPopoverGroup())
                                return;
                            if (!button)
                                return;
                            if (!panel)
                                return;
                            if (event.target === window)
                                return;
                            if ((_b = (_a4 = beforePanelSentinel.current) == null ? void 0 : _a4.contains) == null ? void 0 : _b.call(_a4, event.target))
                                return;
                            if ((_d = (_c = afterPanelSentinel.current) == null ? void 0 : _c.contains) == null ? void 0 : _d.call(_c, event.target))
                                return;
                            dispatch({
                                type: 1
                                /* ClosePopover */
                            });
                        },
                        true
                    );
                    useOutsideClick(
                        [button, panel],
                        (event, target2) => {
                            dispatch({
                                type: 1
                                /* ClosePopover */
                            });
                            if (!isFocusableElement(
                                target2,
                                1
                                /* Loose */
                            )) {
                                event.preventDefault();
                                button == null ? void 0 : button.focus();
                            }
                        },
                        popoverState === 0
                        /* Open */
                    );
                    let close = useEvent(
                        (focusableElement) => {
                            dispatch({
                                type: 1
                                /* ClosePopover */
                            });
                            let restoreElement = (() => {
                                if (!focusableElement)
                                    return button;
                                if (focusableElement instanceof HTMLElement)
                                    return focusableElement;
                                if ("current" in focusableElement && focusableElement.current instanceof HTMLElement)
                                    return focusableElement.current;
                                return button;
                            })();
                            restoreElement == null ? void 0 : restoreElement.focus();
                        }
                    );
                    let api = (0, import_react34.useMemo)(
                        () => ({ close, isPortalled }),
                        [close, isPortalled]
                    );
                    let slot = (0, import_react34.useMemo)(
                        () => ({ open: popoverState === 0, close }),
                        [popoverState, close]
                    );
                    let theirProps = props;
                    let ourProps = { ref: popoverRef };
                    return /* @__PURE__ */ import_react34.default.createElement(PopoverPanelContext.Provider, { value: null }, /* @__PURE__ */ import_react34.default.createElement(PopoverContext.Provider, { value: reducerBag }, /* @__PURE__ */ import_react34.default.createElement(PopoverAPIContext.Provider, { value: api }, /* @__PURE__ */ import_react34.default.createElement(
                        OpenClosedProvider,
                        {
                            value: match(popoverState, {
                                [
                                    0
                                    /* Open */
                                    ]: 1,
                                [
                                    1
                                    /* Closed */
                                    ]: 2
                                /* Closed */
                            })
                        },
                        render({
                            ourProps,
                            theirProps,
                            slot,
                            defaultTag: DEFAULT_POPOVER_TAG,
                            name: "Popover"
                        })
                    ))));
                }
                var DEFAULT_BUTTON_TAG5 = "button";
                function ButtonFn5(props, ref) {
                    let internalId = useId();
                    let { id = `headlessui-popover-button-${internalId}`, ...theirProps } = props;
                    let [state, dispatch] = usePopoverContext("Popover.Button");
                    let { isPortalled } = usePopoverAPIContext("Popover.Button");
                    let internalButtonRef = (0, import_react34.useRef)(null);
                    let sentinelId = `headlessui-focus-sentinel-${useId()}`;
                    let groupContext = usePopoverGroupContext();
                    let closeOthers = groupContext == null ? void 0 : groupContext.closeOthers;
                    let panelContext = usePopoverPanelContext();
                    let isWithinPanel = panelContext !== null;
                    (0, import_react34.useEffect)(() => {
                        if (isWithinPanel)
                            return;
                        dispatch({ type: 3, buttonId: id });
                        return () => {
                            dispatch({ type: 3, buttonId: null });
                        };
                    }, [isWithinPanel, id, dispatch]);
                    let [uniqueIdentifier] = (0, import_react34.useState)(() => Symbol());
                    let buttonRef = useSyncRefs(
                        internalButtonRef,
                        ref,
                        isWithinPanel ? null : (button) => {
                            if (button) {
                                state.buttons.current.push(uniqueIdentifier);
                            } else {
                                let idx = state.buttons.current.indexOf(uniqueIdentifier);
                                if (idx !== -1)
                                    state.buttons.current.splice(idx, 1);
                            }
                            if (state.buttons.current.length > 1) {
                                console.warn(
                                    "You are already using a <Popover.Button /> but only 1 <Popover.Button /> is supported."
                                );
                            }
                            button && dispatch({ type: 2, button });
                        }
                    );
                    let withinPanelButtonRef = useSyncRefs(internalButtonRef, ref);
                    let ownerDocument = useOwnerDocument(internalButtonRef);
                    let handleKeyDown = useEvent((event) => {
                        var _a3, _b, _c;
                        if (isWithinPanel) {
                            if (state.popoverState === 1)
                                return;
                            switch (event.key) {
                                case " ":
                                case "Enter":
                                    event.preventDefault();
                                    (_b = (_a3 = event.target).click) == null ? void 0 : _b.call(_a3);
                                    dispatch({
                                        type: 1
                                        /* ClosePopover */
                                    });
                                    (_c = state.button) == null ? void 0 : _c.focus();
                                    break;
                            }
                        } else {
                            switch (event.key) {
                                case " ":
                                case "Enter":
                                    event.preventDefault();
                                    event.stopPropagation();
                                    if (state.popoverState === 1)
                                        closeOthers == null ? void 0 : closeOthers(state.buttonId);
                                    dispatch({
                                        type: 0
                                        /* TogglePopover */
                                    });
                                    break;
                                case "Escape":
                                    if (state.popoverState !== 0)
                                        return closeOthers == null ? void 0 : closeOthers(state.buttonId);
                                    if (!internalButtonRef.current)
                                        return;
                                    if ((ownerDocument == null ? void 0 : ownerDocument.activeElement) && !internalButtonRef.current.contains(ownerDocument.activeElement)) {
                                        return;
                                    }
                                    event.preventDefault();
                                    event.stopPropagation();
                                    dispatch({
                                        type: 1
                                        /* ClosePopover */
                                    });
                                    break;
                            }
                        }
                    });
                    let handleKeyUp = useEvent((event) => {
                        if (isWithinPanel)
                            return;
                        if (event.key === " ") {
                            event.preventDefault();
                        }
                    });
                    let handleClick = useEvent((event) => {
                        var _a3, _b;
                        if (isDisabledReactIssue7711(event.currentTarget))
                            return;
                        if (props.disabled)
                            return;
                        if (isWithinPanel) {
                            dispatch({
                                type: 1
                                /* ClosePopover */
                            });
                            (_a3 = state.button) == null ? void 0 : _a3.focus();
                        } else {
                            event.preventDefault();
                            event.stopPropagation();
                            if (state.popoverState === 1)
                                closeOthers == null ? void 0 : closeOthers(state.buttonId);
                            dispatch({
                                type: 0
                                /* TogglePopover */
                            });
                            (_b = state.button) == null ? void 0 : _b.focus();
                        }
                    });
                    let handleMouseDown = useEvent((event) => {
                        event.preventDefault();
                        event.stopPropagation();
                    });
                    let visible = state.popoverState === 0;
                    let slot = (0, import_react34.useMemo)(() => ({ open: visible }), [visible]);
                    let type = useResolveButtonType(props, internalButtonRef);
                    let ourProps = isWithinPanel ? {
                        ref: withinPanelButtonRef,
                        type,
                        onKeyDown: handleKeyDown,
                        onClick: handleClick
                    } : {
                        ref: buttonRef,
                        id: state.buttonId,
                        type,
                        "aria-expanded": props.disabled ? void 0 : state.popoverState === 0,
                        "aria-controls": state.panel ? state.panelId : void 0,
                        onKeyDown: handleKeyDown,
                        onKeyUp: handleKeyUp,
                        onClick: handleClick,
                        onMouseDown: handleMouseDown
                    };
                    let direction = useTabDirection();
                    let handleFocus = useEvent(() => {
                        let el = state.panel;
                        if (!el)
                            return;
                        function run() {
                            let result = match(direction.current, {
                                [
                                    0
                                    /* Forwards */
                                    ]: () => focusIn(
                                    el,
                                    1
                                    /* First */
                                ),
                                [
                                    1
                                    /* Backwards */
                                    ]: () => focusIn(
                                    el,
                                    8
                                    /* Last */
                                )
                            });
                            if (result === 0) {
                                focusIn(
                                    getFocusableElements().filter((el2) => el2.dataset.headlessuiFocusGuard !== "true"),
                                    match(direction.current, {
                                        [
                                            0
                                            /* Forwards */
                                            ]: 4,
                                        [
                                            1
                                            /* Backwards */
                                            ]: 2
                                        /* Previous */
                                    }),
                                    { relativeTo: state.button }
                                );
                            }
                        }
                        if (false) {
                            microTask(run);
                        } else {
                            run();
                        }
                    });
                    return /* @__PURE__ */ import_react34.default.createElement(import_react34.default.Fragment, null, render({
                        ourProps,
                        theirProps,
                        slot,
                        defaultTag: DEFAULT_BUTTON_TAG5,
                        name: "Popover.Button"
                    }), visible && !isWithinPanel && isPortalled && /* @__PURE__ */ import_react34.default.createElement(
                        Hidden,
                        {
                            id: sentinelId,
                            features: 2,
                            "data-headlessui-focus-guard": true,
                            as: "button",
                            type: "button",
                            onFocus: handleFocus
                        }
                    ));
                }
                var DEFAULT_OVERLAY_TAG2 = "div";
                var OverlayRenderFeatures = 1 | 2;
                function OverlayFn2(props, ref) {
                    let internalId = useId();
                    let { id = `headlessui-popover-overlay-${internalId}`, ...theirProps } = props;
                    let [{ popoverState }, dispatch] = usePopoverContext("Popover.Overlay");
                    let overlayRef = useSyncRefs(ref);
                    let usesOpenClosedState = useOpenClosed();
                    let visible = (() => {
                        if (usesOpenClosedState !== null) {
                            return (usesOpenClosedState & 1) === 1;
                        }
                        return popoverState === 0;
                    })();
                    let handleClick = useEvent((event) => {
                        if (isDisabledReactIssue7711(event.currentTarget))
                            return event.preventDefault();
                        dispatch({
                            type: 1
                            /* ClosePopover */
                        });
                    });
                    let slot = (0, import_react34.useMemo)(
                        () => ({
                            open: popoverState === 0
                            /* Open */
                        }),
                        [popoverState]
                    );
                    let ourProps = {
                        ref: overlayRef,
                        id,
                        "aria-hidden": true,
                        onClick: handleClick
                    };
                    return render({
                        ourProps,
                        theirProps,
                        slot,
                        defaultTag: DEFAULT_OVERLAY_TAG2,
                        features: OverlayRenderFeatures,
                        visible,
                        name: "Popover.Overlay"
                    });
                }
                var DEFAULT_PANEL_TAG3 = "div";
                var PanelRenderFeatures2 = 1 | 2;
                function PanelFn3(props, ref) {
                    let internalId = useId();
                    let { id = `headlessui-popover-panel-${internalId}`, focus = false, ...theirProps } = props;
                    let [state, dispatch] = usePopoverContext("Popover.Panel");
                    let { close, isPortalled } = usePopoverAPIContext("Popover.Panel");
                    let beforePanelSentinelId = `headlessui-focus-sentinel-before-${useId()}`;
                    let afterPanelSentinelId = `headlessui-focus-sentinel-after-${useId()}`;
                    let internalPanelRef = (0, import_react34.useRef)(null);
                    let panelRef = useSyncRefs(internalPanelRef, ref, (panel) => {
                        dispatch({ type: 4, panel });
                    });
                    let ownerDocument = useOwnerDocument(internalPanelRef);
                    useIsoMorphicEffect(() => {
                        dispatch({ type: 5, panelId: id });
                        return () => {
                            dispatch({ type: 5, panelId: null });
                        };
                    }, [id, dispatch]);
                    let usesOpenClosedState = useOpenClosed();
                    let visible = (() => {
                        if (usesOpenClosedState !== null) {
                            return (usesOpenClosedState & 1) === 1;
                        }
                        return state.popoverState === 0;
                    })();
                    let handleKeyDown = useEvent((event) => {
                        var _a3;
                        switch (event.key) {
                            case "Escape":
                                if (state.popoverState !== 0)
                                    return;
                                if (!internalPanelRef.current)
                                    return;
                                if ((ownerDocument == null ? void 0 : ownerDocument.activeElement) && !internalPanelRef.current.contains(ownerDocument.activeElement)) {
                                    return;
                                }
                                event.preventDefault();
                                event.stopPropagation();
                                dispatch({
                                    type: 1
                                    /* ClosePopover */
                                });
                                (_a3 = state.button) == null ? void 0 : _a3.focus();
                                break;
                        }
                    });
                    (0, import_react34.useEffect)(() => {
                        var _a3;
                        if (props.static)
                            return;
                        if (state.popoverState === 1 && ((_a3 = props.unmount) != null ? _a3 : true)) {
                            dispatch({ type: 4, panel: null });
                        }
                    }, [state.popoverState, props.unmount, props.static, dispatch]);
                    (0, import_react34.useEffect)(() => {
                        if (!focus)
                            return;
                        if (state.popoverState !== 0)
                            return;
                        if (!internalPanelRef.current)
                            return;
                        let activeElement = ownerDocument == null ? void 0 : ownerDocument.activeElement;
                        if (internalPanelRef.current.contains(activeElement))
                            return;
                        focusIn(
                            internalPanelRef.current,
                            1
                            /* First */
                        );
                    }, [focus, internalPanelRef, state.popoverState]);
                    let slot = (0, import_react34.useMemo)(
                        () => ({ open: state.popoverState === 0, close }),
                        [state, close]
                    );
                    let ourProps = {
                        ref: panelRef,
                        id,
                        onKeyDown: handleKeyDown,
                        onBlur: focus && state.popoverState === 0 ? (event) => {
                            var _a3, _b, _c, _d, _e;
                            let el = event.relatedTarget;
                            if (!el)
                                return;
                            if (!internalPanelRef.current)
                                return;
                            if ((_a3 = internalPanelRef.current) == null ? void 0 : _a3.contains(el))
                                return;
                            dispatch({
                                type: 1
                                /* ClosePopover */
                            });
                            if (((_c = (_b = state.beforePanelSentinel.current) == null ? void 0 : _b.contains) == null ? void 0 : _c.call(_b, el)) || ((_e = (_d = state.afterPanelSentinel.current) == null ? void 0 : _d.contains) == null ? void 0 : _e.call(_d, el))) {
                                el.focus({ preventScroll: true });
                            }
                        } : void 0,
                        tabIndex: -1
                    };
                    let direction = useTabDirection();
                    let handleBeforeFocus = useEvent(() => {
                        let el = internalPanelRef.current;
                        if (!el)
                            return;
                        function run() {
                            match(direction.current, {
                                [
                                    0
                                    /* Forwards */
                                    ]: () => {
                                    var _a3;
                                    let result = focusIn(
                                        el,
                                        1
                                        /* First */
                                    );
                                    if (result === 0) {
                                        (_a3 = state.afterPanelSentinel.current) == null ? void 0 : _a3.focus();
                                    }
                                },
                                [
                                    1
                                    /* Backwards */
                                    ]: () => {
                                    var _a3;
                                    (_a3 = state.button) == null ? void 0 : _a3.focus({ preventScroll: true });
                                }
                            });
                        }
                        if (false) {
                            microTask(run);
                        } else {
                            run();
                        }
                    });
                    let handleAfterFocus = useEvent(() => {
                        let el = internalPanelRef.current;
                        if (!el)
                            return;
                        function run() {
                            match(direction.current, {
                                [
                                    0
                                    /* Forwards */
                                    ]: () => {
                                    var _a3;
                                    if (!state.button)
                                        return;
                                    let elements = getFocusableElements();
                                    let idx = elements.indexOf(state.button);
                                    let before = elements.slice(0, idx + 1);
                                    let after = elements.slice(idx + 1);
                                    let combined = [...after, ...before];
                                    for (let element of combined.slice()) {
                                        if (element.dataset.headlessuiFocusGuard === "true" || ((_a3 = state.panel) == null ? void 0 : _a3.contains(element))) {
                                            let idx2 = combined.indexOf(element);
                                            if (idx2 !== -1)
                                                combined.splice(idx2, 1);
                                        }
                                    }
                                    focusIn(combined, 1, { sorted: false });
                                },
                                [
                                    1
                                    /* Backwards */
                                    ]: () => {
                                    var _a3;
                                    let result = focusIn(
                                        el,
                                        2
                                        /* Previous */
                                    );
                                    if (result === 0) {
                                        (_a3 = state.button) == null ? void 0 : _a3.focus();
                                    }
                                }
                            });
                        }
                        if (false) {
                            microTask(run);
                        } else {
                            run();
                        }
                    });
                    return /* @__PURE__ */ import_react34.default.createElement(PopoverPanelContext.Provider, { value: id }, visible && isPortalled && /* @__PURE__ */ import_react34.default.createElement(
                        Hidden,
                        {
                            id: beforePanelSentinelId,
                            ref: state.beforePanelSentinel,
                            features: 2,
                            "data-headlessui-focus-guard": true,
                            as: "button",
                            type: "button",
                            onFocus: handleBeforeFocus
                        }
                    ), render({
                        ourProps,
                        theirProps,
                        slot,
                        defaultTag: DEFAULT_PANEL_TAG3,
                        features: PanelRenderFeatures2,
                        visible,
                        name: "Popover.Panel"
                    }), visible && isPortalled && /* @__PURE__ */ import_react34.default.createElement(
                        Hidden,
                        {
                            id: afterPanelSentinelId,
                            ref: state.afterPanelSentinel,
                            features: 2,
                            "data-headlessui-focus-guard": true,
                            as: "button",
                            type: "button",
                            onFocus: handleAfterFocus
                        }
                    ));
                }
                var DEFAULT_GROUP_TAG2 = "div";
                function GroupFn2(props, ref) {
                    let internalGroupRef = (0, import_react34.useRef)(null);
                    let groupRef = useSyncRefs(internalGroupRef, ref);
                    let [popovers, setPopovers] = (0, import_react34.useState)([]);
                    let unregisterPopover = useEvent((registerbag) => {
                        setPopovers((existing) => {
                            let idx = existing.indexOf(registerbag);
                            if (idx !== -1) {
                                let clone = existing.slice();
                                clone.splice(idx, 1);
                                return clone;
                            }
                            return existing;
                        });
                    });
                    let registerPopover = useEvent((registerbag) => {
                        setPopovers((existing) => [...existing, registerbag]);
                        return () => unregisterPopover(registerbag);
                    });
                    let isFocusWithinPopoverGroup = useEvent(() => {
                        var _a3;
                        let ownerDocument = getOwnerDocument(internalGroupRef);
                        if (!ownerDocument)
                            return false;
                        let element = ownerDocument.activeElement;
                        if ((_a3 = internalGroupRef.current) == null ? void 0 : _a3.contains(element))
                            return true;
                        return popovers.some((bag) => {
                            var _a4, _b;
                            return ((_a4 = ownerDocument.getElementById(bag.buttonId.current)) == null ? void 0 : _a4.contains(element)) || ((_b = ownerDocument.getElementById(bag.panelId.current)) == null ? void 0 : _b.contains(element));
                        });
                    });
                    let closeOthers = useEvent((buttonId) => {
                        for (let popover of popovers) {
                            if (popover.buttonId.current !== buttonId)
                                popover.close();
                        }
                    });
                    let contextBag = (0, import_react34.useMemo)(
                        () => ({
                            registerPopover,
                            unregisterPopover,
                            isFocusWithinPopoverGroup,
                            closeOthers
                        }),
                        [registerPopover, unregisterPopover, isFocusWithinPopoverGroup, closeOthers]
                    );
                    let slot = (0, import_react34.useMemo)(() => ({}), []);
                    let theirProps = props;
                    let ourProps = { ref: groupRef };
                    return /* @__PURE__ */ import_react34.default.createElement(PopoverGroupContext.Provider, { value: contextBag }, render({
                        ourProps,
                        theirProps,
                        slot,
                        defaultTag: DEFAULT_GROUP_TAG2,
                        name: "Popover.Group"
                    }));
                }
                var PopoverRoot = forwardRefWithAs(PopoverFn);
                var Button5 = forwardRefWithAs(ButtonFn5);
                var Overlay2 = forwardRefWithAs(OverlayFn2);
                var Panel3 = forwardRefWithAs(PanelFn3);
                var Group2 = forwardRefWithAs(GroupFn2);
                var Popover = Object.assign(PopoverRoot, { Button: Button5, Overlay: Overlay2, Panel: Panel3, Group: Group2 });
                var import_react37 = __toESM2(require_react(), 1);
                var import_react35 = require_react();
                function useFlags(initialFlags = 0) {
                    let [flags, setFlags] = (0, import_react35.useState)(initialFlags);
                    let mounted = useIsMounted();
                    let addFlag = (0, import_react35.useCallback)(
                        (flag) => {
                            if (!mounted.current)
                                return;
                            setFlags((flags2) => flags2 | flag);
                        },
                        [flags, mounted]
                    );
                    let hasFlag = (0, import_react35.useCallback)((flag) => Boolean(flags & flag), [flags]);
                    let removeFlag = (0, import_react35.useCallback)(
                        (flag) => {
                            if (!mounted.current)
                                return;
                            setFlags((flags2) => flags2 & ~flag);
                        },
                        [setFlags, mounted]
                    );
                    let toggleFlag = (0, import_react35.useCallback)(
                        (flag) => {
                            if (!mounted.current)
                                return;
                            setFlags((flags2) => flags2 ^ flag);
                        },
                        [setFlags]
                    );
                    return { flags, addFlag, hasFlag, removeFlag, toggleFlag };
                }
                var import_react36 = __toESM2(require_react(), 1);
                var LabelContext = (0, import_react36.createContext)(
                    null
                );
                function useLabelContext() {
                    let context = (0, import_react36.useContext)(LabelContext);
                    if (context === null) {
                        let err = new Error("You used a <Label /> component, but it is not inside a relevant parent.");
                        if (Error.captureStackTrace)
                            Error.captureStackTrace(err, useLabelContext);
                        throw err;
                    }
                    return context;
                }
                function useLabels() {
                    let [labelIds, setLabelIds] = (0, import_react36.useState)([]);
                    return [
                        // The actual id's as string or undefined.
                        labelIds.length > 0 ? labelIds.join(" ") : void 0,
                        // The provider component
                        (0, import_react36.useMemo)(() => {
                            return function LabelProvider(props) {
                                let register = useEvent((value) => {
                                    setLabelIds((existing) => [...existing, value]);
                                    return () => setLabelIds((existing) => {
                                        let clone = existing.slice();
                                        let idx = clone.indexOf(value);
                                        if (idx !== -1)
                                            clone.splice(idx, 1);
                                        return clone;
                                    });
                                });
                                let contextBag = (0, import_react36.useMemo)(
                                    () => ({ register, slot: props.slot, name: props.name, props: props.props }),
                                    [register, props.slot, props.name, props.props]
                                );
                                return /* @__PURE__ */ import_react36.default.createElement(LabelContext.Provider, { value: contextBag }, props.children);
                            };
                        }, [setLabelIds])
                    ];
                }
                var DEFAULT_LABEL_TAG3 = "label";
                function LabelFn3(props, ref) {
                    let internalId = useId();
                    let { id = `headlessui-label-${internalId}`, passive = false, ...theirProps } = props;
                    let context = useLabelContext();
                    let labelRef = useSyncRefs(ref);
                    useIsoMorphicEffect(() => context.register(id), [id, context.register]);
                    let ourProps = { ref: labelRef, ...context.props, id };
                    if (passive) {
                        if ("onClick" in ourProps) {
                            delete ourProps["htmlFor"];
                            delete ourProps["onClick"];
                        }
                        if ("onClick" in theirProps) {
                            delete theirProps["onClick"];
                        }
                    }
                    return render({
                        ourProps,
                        theirProps,
                        slot: context.slot || {},
                        defaultTag: DEFAULT_LABEL_TAG3,
                        name: context.name || "Label"
                    });
                }
                var LabelRoot = forwardRefWithAs(LabelFn3);
                var Label3 = Object.assign(LabelRoot, {
                    //
                });
                var reducers7 = {
                    [
                        0
                        /* RegisterOption */
                        ](state, action) {
                        let nextOptions = [
                            ...state.options,
                            { id: action.id, element: action.element, propsRef: action.propsRef }
                        ];
                        return {
                            ...state,
                            options: sortByDomNode(nextOptions, (option) => option.element.current)
                        };
                    },
                    [
                        1
                        /* UnregisterOption */
                        ](state, action) {
                        let options = state.options.slice();
                        let idx = state.options.findIndex((radio) => radio.id === action.id);
                        if (idx === -1)
                            return state;
                        options.splice(idx, 1);
                        return { ...state, options };
                    }
                };
                var RadioGroupDataContext = (0, import_react37.createContext)(null);
                RadioGroupDataContext.displayName = "RadioGroupDataContext";
                function useData3(component) {
                    let context = (0, import_react37.useContext)(RadioGroupDataContext);
                    if (context === null) {
                        let err = new Error(`<${component} /> is missing a parent <RadioGroup /> component.`);
                        if (Error.captureStackTrace)
                            Error.captureStackTrace(err, useData3);
                        throw err;
                    }
                    return context;
                }
                var RadioGroupActionsContext = (0, import_react37.createContext)(null);
                RadioGroupActionsContext.displayName = "RadioGroupActionsContext";
                function useActions3(component) {
                    let context = (0, import_react37.useContext)(RadioGroupActionsContext);
                    if (context === null) {
                        let err = new Error(`<${component} /> is missing a parent <RadioGroup /> component.`);
                        if (Error.captureStackTrace)
                            Error.captureStackTrace(err, useActions3);
                        throw err;
                    }
                    return context;
                }
                function stateReducer7(state, action) {
                    return match(action.type, reducers7, state, action);
                }
                var DEFAULT_RADIO_GROUP_TAG = "div";
                function RadioGroupFn(props, ref) {
                    let internalId = useId();
                    let {
                        id = `headlessui-radiogroup-${internalId}`,
                        value: controlledValue,
                        defaultValue,
                        form: formName,
                        name,
                        onChange: controlledOnChange,
                        by = (a, z) => a === z,
                        disabled = false,
                        ...theirProps
                    } = props;
                    let compare = useEvent(
                        typeof by === "string" ? (a, z) => {
                            let property = by;
                            return (a == null ? void 0 : a[property]) === (z == null ? void 0 : z[property]);
                        } : by
                    );
                    let [state, dispatch] = (0, import_react37.useReducer)(stateReducer7, { options: [] });
                    let options = state.options;
                    let [labelledby, LabelProvider] = useLabels();
                    let [describedby, DescriptionProvider] = useDescriptions();
                    let internalRadioGroupRef = (0, import_react37.useRef)(null);
                    let radioGroupRef = useSyncRefs(internalRadioGroupRef, ref);
                    let [value, onChange] = useControllable(controlledValue, controlledOnChange, defaultValue);
                    let firstOption = (0, import_react37.useMemo)(
                        () => options.find((option) => {
                            if (option.propsRef.current.disabled)
                                return false;
                            return true;
                        }),
                        [options]
                    );
                    let containsCheckedOption = (0, import_react37.useMemo)(
                        () => options.some((option) => compare(option.propsRef.current.value, value)),
                        [options, value]
                    );
                    let triggerChange = useEvent((nextValue) => {
                        var _a3;
                        if (disabled)
                            return false;
                        if (compare(nextValue, value))
                            return false;
                        let nextOption = (_a3 = options.find(
                            (option) => compare(option.propsRef.current.value, nextValue)
                        )) == null ? void 0 : _a3.propsRef.current;
                        if (nextOption == null ? void 0 : nextOption.disabled)
                            return false;
                        onChange == null ? void 0 : onChange(nextValue);
                        return true;
                    });
                    useTreeWalker({
                        container: internalRadioGroupRef.current,
                        accept(node) {
                            if (node.getAttribute("role") === "radio")
                                return NodeFilter.FILTER_REJECT;
                            if (node.hasAttribute("role"))
                                return NodeFilter.FILTER_SKIP;
                            return NodeFilter.FILTER_ACCEPT;
                        },
                        walk(node) {
                            node.setAttribute("role", "none");
                        }
                    });
                    let handleKeyDown = useEvent((event) => {
                        let container = internalRadioGroupRef.current;
                        if (!container)
                            return;
                        let ownerDocument = getOwnerDocument(container);
                        let all = options.filter((option) => option.propsRef.current.disabled === false).map((radio) => radio.element.current);
                        switch (event.key) {
                            case "Enter":
                                attemptSubmit(event.currentTarget);
                                break;
                            case "ArrowLeft":
                            case "ArrowUp":
                            {
                                event.preventDefault();
                                event.stopPropagation();
                                let result = focusIn(
                                    all,
                                    2 | 16
                                    /* WrapAround */
                                );
                                if (result === 2) {
                                    let activeOption = options.find(
                                        (option) => option.element.current === (ownerDocument == null ? void 0 : ownerDocument.activeElement)
                                    );
                                    if (activeOption)
                                        triggerChange(activeOption.propsRef.current.value);
                                }
                            }
                                break;
                            case "ArrowRight":
                            case "ArrowDown":
                            {
                                event.preventDefault();
                                event.stopPropagation();
                                let result = focusIn(
                                    all,
                                    4 | 16
                                    /* WrapAround */
                                );
                                if (result === 2) {
                                    let activeOption = options.find(
                                        (option) => option.element.current === (ownerDocument == null ? void 0 : ownerDocument.activeElement)
                                    );
                                    if (activeOption)
                                        triggerChange(activeOption.propsRef.current.value);
                                }
                            }
                                break;
                            case " ":
                            {
                                event.preventDefault();
                                event.stopPropagation();
                                let activeOption = options.find(
                                    (option) => option.element.current === (ownerDocument == null ? void 0 : ownerDocument.activeElement)
                                );
                                if (activeOption)
                                    triggerChange(activeOption.propsRef.current.value);
                            }
                                break;
                        }
                    });
                    let registerOption = useEvent((option) => {
                        dispatch({ type: 0, ...option });
                        return () => dispatch({ type: 1, id: option.id });
                    });
                    let radioGroupData = (0, import_react37.useMemo)(
                        () => ({ value, firstOption, containsCheckedOption, disabled, compare, ...state }),
                        [value, firstOption, containsCheckedOption, disabled, compare, state]
                    );
                    let radioGroupActions = (0, import_react37.useMemo)(
                        () => ({ registerOption, change: triggerChange }),
                        [registerOption, triggerChange]
                    );
                    let ourProps = {
                        ref: radioGroupRef,
                        id,
                        role: "radiogroup",
                        "aria-labelledby": labelledby,
                        "aria-describedby": describedby,
                        onKeyDown: handleKeyDown
                    };
                    let slot = (0, import_react37.useMemo)(() => ({ value }), [value]);
                    let form = (0, import_react37.useRef)(null);
                    let d = useDisposables();
                    (0, import_react37.useEffect)(() => {
                        if (!form.current)
                            return;
                        if (defaultValue === void 0)
                            return;
                        d.addEventListener(form.current, "reset", () => {
                            triggerChange(defaultValue);
                        });
                    }, [
                        form,
                        triggerChange
                        /* Explicitly ignoring `defaultValue` */
                    ]);
                    return /* @__PURE__ */ import_react37.default.createElement(DescriptionProvider, { name: "RadioGroup.Description" }, /* @__PURE__ */ import_react37.default.createElement(LabelProvider, { name: "RadioGroup.Label" }, /* @__PURE__ */ import_react37.default.createElement(RadioGroupActionsContext.Provider, { value: radioGroupActions }, /* @__PURE__ */ import_react37.default.createElement(RadioGroupDataContext.Provider, { value: radioGroupData }, name != null && value != null && objectToFormEntries({ [name]: value }).map(([name2, value2], idx) => /* @__PURE__ */ import_react37.default.createElement(
                        Hidden,
                        {
                            features: 4,
                            ref: idx === 0 ? (element) => {
                                var _a3;
                                form.current = (_a3 = element == null ? void 0 : element.closest("form")) != null ? _a3 : null;
                            } : void 0,
                            ...compact({
                                key: name2,
                                as: "input",
                                type: "radio",
                                checked: value2 != null,
                                hidden: true,
                                readOnly: true,
                                form: formName,
                                name: name2,
                                value: value2
                            })
                        }
                    )), render({
                        ourProps,
                        theirProps,
                        slot,
                        defaultTag: DEFAULT_RADIO_GROUP_TAG,
                        name: "RadioGroup"
                    })))));
                }
                var DEFAULT_OPTION_TAG3 = "div";
                function OptionFn3(props, ref) {
                    var _a3;
                    let internalId = useId();
                    let {
                        id = `headlessui-radiogroup-option-${internalId}`,
                        value,
                        disabled = false,
                        ...theirProps
                    } = props;
                    let internalOptionRef = (0, import_react37.useRef)(null);
                    let optionRef = useSyncRefs(internalOptionRef, ref);
                    let [labelledby, LabelProvider] = useLabels();
                    let [describedby, DescriptionProvider] = useDescriptions();
                    let { addFlag, removeFlag, hasFlag } = useFlags(
                        1
                        /* Empty */
                    );
                    let propsRef = useLatestValue({ value, disabled });
                    let data = useData3("RadioGroup.Option");
                    let actions = useActions3("RadioGroup.Option");
                    useIsoMorphicEffect(
                        () => actions.registerOption({ id, element: internalOptionRef, propsRef }),
                        [id, actions, internalOptionRef, props]
                    );
                    let handleClick = useEvent((event) => {
                        var _a4;
                        if (isDisabledReactIssue7711(event.currentTarget))
                            return event.preventDefault();
                        if (!actions.change(value))
                            return;
                        addFlag(
                            2
                            /* Active */
                        );
                        (_a4 = internalOptionRef.current) == null ? void 0 : _a4.focus();
                    });
                    let handleFocus = useEvent((event) => {
                        if (isDisabledReactIssue7711(event.currentTarget))
                            return event.preventDefault();
                        addFlag(
                            2
                            /* Active */
                        );
                    });
                    let handleBlur = useEvent(() => removeFlag(
                        2
                        /* Active */
                    ));
                    let isFirstOption = ((_a3 = data.firstOption) == null ? void 0 : _a3.id) === id;
                    let isDisabled = data.disabled || disabled;
                    let checked = data.compare(data.value, value);
                    let ourProps = {
                        ref: optionRef,
                        id,
                        role: "radio",
                        "aria-checked": checked ? "true" : "false",
                        "aria-labelledby": labelledby,
                        "aria-describedby": describedby,
                        "aria-disabled": isDisabled ? true : void 0,
                        tabIndex: (() => {
                            if (isDisabled)
                                return -1;
                            if (checked)
                                return 0;
                            if (!data.containsCheckedOption && isFirstOption)
                                return 0;
                            return -1;
                        })(),
                        onClick: isDisabled ? void 0 : handleClick,
                        onFocus: isDisabled ? void 0 : handleFocus,
                        onBlur: isDisabled ? void 0 : handleBlur
                    };
                    let slot = (0, import_react37.useMemo)(
                        () => ({ checked, disabled: isDisabled, active: hasFlag(
                                2
                                /* Active */
                            ) }),
                        [checked, isDisabled, hasFlag]
                    );
                    return /* @__PURE__ */ import_react37.default.createElement(DescriptionProvider, { name: "RadioGroup.Description" }, /* @__PURE__ */ import_react37.default.createElement(LabelProvider, { name: "RadioGroup.Label" }, render({
                        ourProps,
                        theirProps,
                        slot,
                        defaultTag: DEFAULT_OPTION_TAG3,
                        name: "RadioGroup.Option"
                    })));
                }
                var RadioGroupRoot = forwardRefWithAs(RadioGroupFn);
                var Option3 = forwardRefWithAs(OptionFn3);
                var RadioGroup = Object.assign(RadioGroupRoot, {
                    Option: Option3,
                    Label: Label3,
                    Description
                });
                var import_react38 = __toESM2(require_react(), 1);
                var GroupContext = (0, import_react38.createContext)(null);
                GroupContext.displayName = "GroupContext";
                var DEFAULT_GROUP_TAG3 = import_react38.Fragment;
                function GroupFn3(props) {
                    var _a3;
                    let [switchElement, setSwitchElement] = (0, import_react38.useState)(null);
                    let [labelledby, LabelProvider] = useLabels();
                    let [describedby, DescriptionProvider] = useDescriptions();
                    let context = (0, import_react38.useMemo)(
                        () => ({ switch: switchElement, setSwitch: setSwitchElement, labelledby, describedby }),
                        [switchElement, setSwitchElement, labelledby, describedby]
                    );
                    let ourProps = {};
                    let theirProps = props;
                    return /* @__PURE__ */ import_react38.default.createElement(DescriptionProvider, { name: "Switch.Description" }, /* @__PURE__ */ import_react38.default.createElement(
                        LabelProvider,
                        {
                            name: "Switch.Label",
                            props: {
                                htmlFor: (_a3 = context.switch) == null ? void 0 : _a3.id,
                                onClick(event) {
                                    if (!switchElement)
                                        return;
                                    if (event.currentTarget.tagName === "LABEL") {
                                        event.preventDefault();
                                    }
                                    switchElement.click();
                                    switchElement.focus({ preventScroll: true });
                                }
                            }
                        },
                        /* @__PURE__ */ import_react38.default.createElement(GroupContext.Provider, { value: context }, render({
                            ourProps,
                            theirProps,
                            defaultTag: DEFAULT_GROUP_TAG3,
                            name: "Switch.Group"
                        }))
                    ));
                }
                var DEFAULT_SWITCH_TAG = "button";
                function SwitchFn(props, ref) {
                    let internalId = useId();
                    let {
                        id = `headlessui-switch-${internalId}`,
                        checked: controlledChecked,
                        defaultChecked = false,
                        onChange: controlledOnChange,
                        name,
                        value,
                        form,
                        ...theirProps
                    } = props;
                    let groupContext = (0, import_react38.useContext)(GroupContext);
                    let internalSwitchRef = (0, import_react38.useRef)(null);
                    let switchRef = useSyncRefs(
                        internalSwitchRef,
                        ref,
                        groupContext === null ? null : groupContext.setSwitch
                    );
                    let [checked, onChange] = useControllable(controlledChecked, controlledOnChange, defaultChecked);
                    let toggle = useEvent(() => onChange == null ? void 0 : onChange(!checked));
                    let handleClick = useEvent((event) => {
                        if (isDisabledReactIssue7711(event.currentTarget))
                            return event.preventDefault();
                        event.preventDefault();
                        toggle();
                    });
                    let handleKeyUp = useEvent((event) => {
                        if (event.key === " ") {
                            event.preventDefault();
                            toggle();
                        } else if (event.key === "Enter") {
                            attemptSubmit(event.currentTarget);
                        }
                    });
                    let handleKeyPress = useEvent((event) => event.preventDefault());
                    let slot = (0, import_react38.useMemo)(() => ({ checked }), [checked]);
                    let ourProps = {
                        id,
                        ref: switchRef,
                        role: "switch",
                        type: useResolveButtonType(props, internalSwitchRef),
                        tabIndex: 0,
                        "aria-checked": checked,
                        "aria-labelledby": groupContext == null ? void 0 : groupContext.labelledby,
                        "aria-describedby": groupContext == null ? void 0 : groupContext.describedby,
                        onClick: handleClick,
                        onKeyUp: handleKeyUp,
                        onKeyPress: handleKeyPress
                    };
                    let d = useDisposables();
                    (0, import_react38.useEffect)(() => {
                        var _a3;
                        let form2 = (_a3 = internalSwitchRef.current) == null ? void 0 : _a3.closest("form");
                        if (!form2)
                            return;
                        if (defaultChecked === void 0)
                            return;
                        d.addEventListener(form2, "reset", () => {
                            onChange(defaultChecked);
                        });
                    }, [
                        internalSwitchRef,
                        onChange
                        /* Explicitly ignoring `defaultValue` */
                    ]);
                    return /* @__PURE__ */ import_react38.default.createElement(import_react38.default.Fragment, null, name != null && checked && /* @__PURE__ */ import_react38.default.createElement(
                        Hidden,
                        {
                            features: 4,
                            ...compact({
                                as: "input",
                                type: "checkbox",
                                hidden: true,
                                readOnly: true,
                                form,
                                checked,
                                name,
                                value
                            })
                        }
                    ), render({ ourProps, theirProps, slot, defaultTag: DEFAULT_SWITCH_TAG, name: "Switch" }));
                }
                var SwitchRoot = forwardRefWithAs(SwitchFn);
                var Group3 = GroupFn3;
                var Switch = Object.assign(SwitchRoot, {
                    Group: Group3,
                    Label: Label3,
                    Description
                });
                var import_react40 = __toESM2(require_react(), 1);
                var import_react39 = __toESM2(require_react(), 1);
                function FocusSentinel({ onFocus }) {
                    let [enabled, setEnabled] = (0, import_react39.useState)(true);
                    if (!enabled)
                        return null;
                    return /* @__PURE__ */ import_react39.default.createElement(
                        Hidden,
                        {
                            as: "button",
                            type: "button",
                            features: 2,
                            onFocus: (event) => {
                                event.preventDefault();
                                let frame;
                                let tries = 50;
                                function forwardFocus() {
                                    if (tries-- <= 0) {
                                        if (frame)
                                            cancelAnimationFrame(frame);
                                        return;
                                    }
                                    if (onFocus()) {
                                        setEnabled(false);
                                        cancelAnimationFrame(frame);
                                        return;
                                    }
                                    frame = requestAnimationFrame(forwardFocus);
                                }
                                frame = requestAnimationFrame(forwardFocus);
                            }
                        }
                    );
                }
                var React22 = __toESM2(require_react(), 1);
                var StableCollectionContext = React22.createContext(null);
                function createCollection() {
                    return {
                        /** @type {Map<string, Map<string, number>>} */
                        groups: /* @__PURE__ */ new Map(),
                        get(group, key) {
                            var _a3;
                            let list = this.groups.get(group);
                            if (!list) {
                                list = /* @__PURE__ */ new Map();
                                this.groups.set(group, list);
                            }
                            let renders = (_a3 = list.get(key)) != null ? _a3 : 0;
                            list.set(key, renders + 1);
                            let index = Array.from(list.keys()).indexOf(key);
                            function release() {
                                let renders2 = list.get(key);
                                if (renders2 > 1) {
                                    list.set(key, renders2 - 1);
                                } else {
                                    list.delete(key);
                                }
                            }
                            return [index, release];
                        }
                    };
                }
                function StableCollection({ children }) {
                    let collection = React22.useRef(createCollection());
                    return /* @__PURE__ */ React22.createElement(StableCollectionContext.Provider, { value: collection }, children);
                }
                function useStableCollectionIndex(group) {
                    let collection = React22.useContext(StableCollectionContext);
                    if (!collection)
                        throw new Error("You must wrap your component in a <StableCollection>");
                    let key = useStableCollectionKey();
                    let [idx, cleanupIdx] = collection.current.get(group, key);
                    React22.useEffect(() => cleanupIdx, []);
                    return idx;
                }
                function useStableCollectionKey() {
                    var _a3, _b, _c;
                    let owner = (
                        // @ts-ignore
                        (_c = (_b = (_a3 = React22.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED) == null ? void 0 : _a3.ReactCurrentOwner) == null ? void 0 : _b.current) != null ? _c : null
                    );
                    if (!owner)
                        return Symbol();
                    let indexes = [];
                    let fiber = owner;
                    while (fiber) {
                        indexes.push(fiber.index);
                        fiber = fiber.return;
                    }
                    return "$." + indexes.join(".");
                }
                var reducers8 = {
                    [
                        0
                        /* SetSelectedIndex */
                        ](state, action) {
                        var _a3;
                        let tabs = sortByDomNode(state.tabs, (tab) => tab.current);
                        let panels = sortByDomNode(state.panels, (panel) => panel.current);
                        let focusableTabs = tabs.filter((tab) => {
                            var _a4;
                            return !((_a4 = tab.current) == null ? void 0 : _a4.hasAttribute("disabled"));
                        });
                        let nextState = { ...state, tabs, panels };
                        if (
                            // Underflow
                            action.index < 0 || // Overflow
                            action.index > tabs.length - 1
                        ) {
                            let direction = match(Math.sign(action.index - state.selectedIndex), {
                                [
                                    -1
                                    /* Less */
                                    ]: () => 1,
                                [
                                    0
                                    /* Equal */
                                    ]: () => {
                                    return match(Math.sign(action.index), {
                                        [
                                            -1
                                            /* Less */
                                            ]: () => 0,
                                        [
                                            0
                                            /* Equal */
                                            ]: () => 0,
                                        [
                                            1
                                            /* Greater */
                                            ]: () => 1
                                        /* Backwards */
                                    });
                                },
                                [
                                    1
                                    /* Greater */
                                    ]: () => 0
                                /* Forwards */
                            });
                            if (focusableTabs.length === 0) {
                                return nextState;
                            }
                            return {
                                ...nextState,
                                selectedIndex: match(direction, {
                                    [
                                        0
                                        /* Forwards */
                                        ]: () => tabs.indexOf(focusableTabs[0]),
                                    [
                                        1
                                        /* Backwards */
                                        ]: () => tabs.indexOf(focusableTabs[focusableTabs.length - 1])
                                })
                            };
                        }
                        let before = tabs.slice(0, action.index);
                        let after = tabs.slice(action.index);
                        let next = [...after, ...before].find((tab) => focusableTabs.includes(tab));
                        if (!next)
                            return nextState;
                        let selectedIndex = (_a3 = tabs.indexOf(next)) != null ? _a3 : state.selectedIndex;
                        if (selectedIndex === -1)
                            selectedIndex = state.selectedIndex;
                        return { ...nextState, selectedIndex };
                    },
                    [
                        1
                        /* RegisterTab */
                        ](state, action) {
                        var _a3;
                        if (state.tabs.includes(action.tab))
                            return state;
                        let activeTab = state.tabs[state.selectedIndex];
                        let adjustedTabs = sortByDomNode([...state.tabs, action.tab], (tab) => tab.current);
                        let selectedIndex = (_a3 = adjustedTabs.indexOf(activeTab)) != null ? _a3 : state.selectedIndex;
                        if (selectedIndex === -1)
                            selectedIndex = state.selectedIndex;
                        return { ...state, tabs: adjustedTabs, selectedIndex };
                    },
                    [
                        2
                        /* UnregisterTab */
                        ](state, action) {
                        return { ...state, tabs: state.tabs.filter((tab) => tab !== action.tab) };
                    },
                    [
                        3
                        /* RegisterPanel */
                        ](state, action) {
                        if (state.panels.includes(action.panel))
                            return state;
                        return {
                            ...state,
                            panels: sortByDomNode([...state.panels, action.panel], (panel) => panel.current)
                        };
                    },
                    [
                        4
                        /* UnregisterPanel */
                        ](state, action) {
                        return { ...state, panels: state.panels.filter((panel) => panel !== action.panel) };
                    }
                };
                var TabsDataContext = (0, import_react40.createContext)(null);
                TabsDataContext.displayName = "TabsDataContext";
                function useData4(component) {
                    let context = (0, import_react40.useContext)(TabsDataContext);
                    if (context === null) {
                        let err = new Error(`<${component} /> is missing a parent <Tab.Group /> component.`);
                        if (Error.captureStackTrace)
                            Error.captureStackTrace(err, useData4);
                        throw err;
                    }
                    return context;
                }
                var TabsActionsContext = (0, import_react40.createContext)(null);
                TabsActionsContext.displayName = "TabsActionsContext";
                function useActions4(component) {
                    let context = (0, import_react40.useContext)(TabsActionsContext);
                    if (context === null) {
                        let err = new Error(`<${component} /> is missing a parent <Tab.Group /> component.`);
                        if (Error.captureStackTrace)
                            Error.captureStackTrace(err, useActions4);
                        throw err;
                    }
                    return context;
                }
                function stateReducer8(state, action) {
                    return match(action.type, reducers8, state, action);
                }
                var DEFAULT_TABS_TAG = import_react40.Fragment;
                function GroupFn4(props, ref) {
                    let {
                        defaultIndex = 0,
                        vertical = false,
                        manual = false,
                        onChange,
                        selectedIndex = null,
                        ...theirProps
                    } = props;
                    const orientation = vertical ? "vertical" : "horizontal";
                    const activation = manual ? "manual" : "auto";
                    let isControlled = selectedIndex !== null;
                    let tabsRef = useSyncRefs(ref);
                    let [state, dispatch] = (0, import_react40.useReducer)(stateReducer8, {
                        selectedIndex: selectedIndex != null ? selectedIndex : defaultIndex,
                        tabs: [],
                        panels: []
                    });
                    let slot = (0, import_react40.useMemo)(() => ({ selectedIndex: state.selectedIndex }), [state.selectedIndex]);
                    let onChangeRef = useLatestValue(onChange || (() => {
                    }));
                    let stableTabsRef = useLatestValue(state.tabs);
                    let tabsData = (0, import_react40.useMemo)(
                        () => ({ orientation, activation, ...state }),
                        [orientation, activation, state]
                    );
                    let registerTab = useEvent((tab) => {
                        dispatch({ type: 1, tab });
                        return () => dispatch({ type: 2, tab });
                    });
                    let registerPanel = useEvent((panel) => {
                        dispatch({ type: 3, panel });
                        return () => dispatch({ type: 4, panel });
                    });
                    let change = useEvent((index) => {
                        if (realSelectedIndex.current !== index) {
                            onChangeRef.current(index);
                        }
                        if (!isControlled) {
                            dispatch({ type: 0, index });
                        }
                    });
                    let realSelectedIndex = useLatestValue(isControlled ? props.selectedIndex : state.selectedIndex);
                    let tabsActions = (0, import_react40.useMemo)(() => ({ registerTab, registerPanel, change }), []);
                    useIsoMorphicEffect(() => {
                        dispatch({ type: 0, index: selectedIndex != null ? selectedIndex : defaultIndex });
                    }, [
                        selectedIndex
                        /* Deliberately skipping defaultIndex */
                    ]);
                    useIsoMorphicEffect(() => {
                        if (realSelectedIndex.current === void 0)
                            return;
                        if (state.tabs.length <= 0)
                            return;
                        let sorted = sortByDomNode(state.tabs, (tab) => tab.current);
                        let didOrderChange = sorted.some((tab, i) => state.tabs[i] !== tab);
                        if (didOrderChange) {
                            change(sorted.indexOf(state.tabs[realSelectedIndex.current]));
                        }
                    });
                    let ourProps = { ref: tabsRef };
                    return /* @__PURE__ */ import_react40.default.createElement(StableCollection, null, /* @__PURE__ */ import_react40.default.createElement(TabsActionsContext.Provider, { value: tabsActions }, /* @__PURE__ */ import_react40.default.createElement(TabsDataContext.Provider, { value: tabsData }, tabsData.tabs.length <= 0 && /* @__PURE__ */ import_react40.default.createElement(
                        FocusSentinel,
                        {
                            onFocus: () => {
                                var _a3, _b;
                                for (let tab of stableTabsRef.current) {
                                    if (((_a3 = tab.current) == null ? void 0 : _a3.tabIndex) === 0) {
                                        (_b = tab.current) == null ? void 0 : _b.focus();
                                        return true;
                                    }
                                }
                                return false;
                            }
                        }
                    ), render({
                        ourProps,
                        theirProps,
                        slot,
                        defaultTag: DEFAULT_TABS_TAG,
                        name: "Tabs"
                    }))));
                }
                var DEFAULT_LIST_TAG = "div";
                function ListFn(props, ref) {
                    let { orientation, selectedIndex } = useData4("Tab.List");
                    let listRef = useSyncRefs(ref);
                    let slot = { selectedIndex };
                    let theirProps = props;
                    let ourProps = {
                        ref: listRef,
                        role: "tablist",
                        "aria-orientation": orientation
                    };
                    return render({
                        ourProps,
                        theirProps,
                        slot,
                        defaultTag: DEFAULT_LIST_TAG,
                        name: "Tabs.List"
                    });
                }
                var DEFAULT_TAB_TAG = "button";
                function TabFn(props, ref) {
                    var _a3, _b;
                    let internalId = useId();
                    let { id = `headlessui-tabs-tab-${internalId}`, ...theirProps } = props;
                    let { orientation, activation, selectedIndex, tabs, panels } = useData4("Tab");
                    let actions = useActions4("Tab");
                    let data = useData4("Tab");
                    let internalTabRef = (0, import_react40.useRef)(null);
                    let tabRef = useSyncRefs(internalTabRef, ref);
                    useIsoMorphicEffect(() => actions.registerTab(internalTabRef), [actions, internalTabRef]);
                    let mySSRIndex = useStableCollectionIndex("tabs");
                    let myIndex = tabs.indexOf(internalTabRef);
                    if (myIndex === -1)
                        myIndex = mySSRIndex;
                    let selected = myIndex === selectedIndex;
                    let activateUsing = useEvent((cb) => {
                        var _a4;
                        let result = cb();
                        if (result === 2 && activation === "auto") {
                            let newTab = (_a4 = getOwnerDocument(internalTabRef)) == null ? void 0 : _a4.activeElement;
                            let idx = data.tabs.findIndex((tab) => tab.current === newTab);
                            if (idx !== -1)
                                actions.change(idx);
                        }
                        return result;
                    });
                    let handleKeyDown = useEvent((event) => {
                        let list = tabs.map((tab) => tab.current).filter(Boolean);
                        if (event.key === " " || event.key === "Enter") {
                            event.preventDefault();
                            event.stopPropagation();
                            actions.change(myIndex);
                            return;
                        }
                        switch (event.key) {
                            case "Home":
                            case "PageUp":
                                event.preventDefault();
                                event.stopPropagation();
                                return activateUsing(() => focusIn(
                                    list,
                                    1
                                    /* First */
                                ));
                            case "End":
                            case "PageDown":
                                event.preventDefault();
                                event.stopPropagation();
                                return activateUsing(() => focusIn(
                                    list,
                                    8
                                    /* Last */
                                ));
                        }
                        let result = activateUsing(() => {
                            return match(orientation, {
                                vertical() {
                                    if (event.key === "ArrowUp")
                                        return focusIn(
                                            list,
                                            2 | 16
                                            /* WrapAround */
                                        );
                                    if (event.key === "ArrowDown")
                                        return focusIn(
                                            list,
                                            4 | 16
                                            /* WrapAround */
                                        );
                                    return 0;
                                },
                                horizontal() {
                                    if (event.key === "ArrowLeft")
                                        return focusIn(
                                            list,
                                            2 | 16
                                            /* WrapAround */
                                        );
                                    if (event.key === "ArrowRight")
                                        return focusIn(
                                            list,
                                            4 | 16
                                            /* WrapAround */
                                        );
                                    return 0;
                                }
                            });
                        });
                        if (result === 2) {
                            return event.preventDefault();
                        }
                    });
                    let ready = (0, import_react40.useRef)(false);
                    let handleSelection = useEvent(() => {
                        var _a4;
                        if (ready.current)
                            return;
                        ready.current = true;
                        (_a4 = internalTabRef.current) == null ? void 0 : _a4.focus();
                        actions.change(myIndex);
                        microTask(() => {
                            ready.current = false;
                        });
                    });
                    let handleMouseDown = useEvent((event) => {
                        event.preventDefault();
                    });
                    let slot = (0, import_react40.useMemo)(() => ({ selected }), [selected]);
                    let ourProps = {
                        ref: tabRef,
                        onKeyDown: handleKeyDown,
                        onMouseDown: handleMouseDown,
                        onClick: handleSelection,
                        id,
                        role: "tab",
                        type: useResolveButtonType(props, internalTabRef),
                        "aria-controls": (_b = (_a3 = panels[myIndex]) == null ? void 0 : _a3.current) == null ? void 0 : _b.id,
                        "aria-selected": selected,
                        tabIndex: selected ? 0 : -1
                    };
                    return render({
                        ourProps,
                        theirProps,
                        slot,
                        defaultTag: DEFAULT_TAB_TAG,
                        name: "Tabs.Tab"
                    });
                }
                var DEFAULT_PANELS_TAG = "div";
                function PanelsFn(props, ref) {
                    let { selectedIndex } = useData4("Tab.Panels");
                    let panelsRef = useSyncRefs(ref);
                    let slot = (0, import_react40.useMemo)(() => ({ selectedIndex }), [selectedIndex]);
                    let theirProps = props;
                    let ourProps = { ref: panelsRef };
                    return render({
                        ourProps,
                        theirProps,
                        slot,
                        defaultTag: DEFAULT_PANELS_TAG,
                        name: "Tabs.Panels"
                    });
                }
                var DEFAULT_PANEL_TAG4 = "div";
                var PanelRenderFeatures3 = 1 | 2;
                function PanelFn4(props, ref) {
                    var _a3, _b, _c, _d;
                    let internalId = useId();
                    let { id = `headlessui-tabs-panel-${internalId}`, tabIndex = 0, ...theirProps } = props;
                    let { selectedIndex, tabs, panels } = useData4("Tab.Panel");
                    let actions = useActions4("Tab.Panel");
                    let internalPanelRef = (0, import_react40.useRef)(null);
                    let panelRef = useSyncRefs(internalPanelRef, ref);
                    useIsoMorphicEffect(() => actions.registerPanel(internalPanelRef), [actions, internalPanelRef]);
                    let mySSRIndex = useStableCollectionIndex("panels");
                    let myIndex = panels.indexOf(internalPanelRef);
                    if (myIndex === -1)
                        myIndex = mySSRIndex;
                    let selected = myIndex === selectedIndex;
                    let slot = (0, import_react40.useMemo)(() => ({ selected }), [selected]);
                    let ourProps = {
                        ref: panelRef,
                        id,
                        role: "tabpanel",
                        "aria-labelledby": (_b = (_a3 = tabs[myIndex]) == null ? void 0 : _a3.current) == null ? void 0 : _b.id,
                        tabIndex: selected ? tabIndex : -1
                    };
                    if (!selected && ((_c = theirProps.unmount) != null ? _c : true) && !((_d = theirProps.static) != null ? _d : false)) {
                        return /* @__PURE__ */ import_react40.default.createElement(Hidden, { as: "span", ...ourProps });
                    }
                    return render({
                        ourProps,
                        theirProps,
                        slot,
                        defaultTag: DEFAULT_PANEL_TAG4,
                        features: PanelRenderFeatures3,
                        visible: selected,
                        name: "Tabs.Panel"
                    });
                }
                var TabRoot = forwardRefWithAs(TabFn);
                var Group4 = forwardRefWithAs(GroupFn4);
                var List = forwardRefWithAs(ListFn);
                var Panels = forwardRefWithAs(PanelsFn);
                var Panel4 = forwardRefWithAs(PanelFn4);
                var Tab = Object.assign(TabRoot, { Group: Group4, List, Panels, Panel: Panel4 });
                var import_react41 = __toESM2(require_react(), 1);
                function once(cb) {
                    let state = { called: false };
                    return (...args) => {
                        if (state.called)
                            return;
                        state.called = true;
                        return cb(...args);
                    };
                }
                function addClasses(node, ...classes) {
                    node && classes.length > 0 && node.classList.add(...classes);
                }
                function removeClasses(node, ...classes) {
                    node && classes.length > 0 && node.classList.remove(...classes);
                }
                function waitForTransition(node, done) {
                    let d = disposables();
                    if (!node)
                        return d.dispose;
                    let { transitionDuration, transitionDelay } = getComputedStyle(node);
                    let [durationMs, delayMs] = [transitionDuration, transitionDelay].map((value) => {
                        let [resolvedValue = 0] = value.split(",").filter(Boolean).map((v) => v.includes("ms") ? parseFloat(v) : parseFloat(v) * 1e3).sort((a, z) => z - a);
                        return resolvedValue;
                    });
                    let totalDuration = durationMs + delayMs;
                    if (totalDuration !== 0) {
                        if (false) {
                            let dispose = d.setTimeout(() => {
                                done();
                                dispose();
                            }, totalDuration);
                        } else {
                            d.group((d2) => {
                                d2.setTimeout(() => {
                                    done();
                                    d2.dispose();
                                }, totalDuration);
                                d2.addEventListener(node, "transitionrun", (event) => {
                                    if (event.target !== event.currentTarget)
                                        return;
                                    d2.dispose();
                                });
                            });
                            let dispose = d.addEventListener(node, "transitionend", (event) => {
                                if (event.target !== event.currentTarget)
                                    return;
                                done();
                                dispose();
                            });
                        }
                    } else {
                        done();
                    }
                    d.add(() => done());
                    return d.dispose;
                }
                function transition(node, classes, show, done) {
                    let direction = show ? "enter" : "leave";
                    let d = disposables();
                    let _done = done !== void 0 ? once(done) : () => {
                    };
                    if (direction === "enter") {
                        node.removeAttribute("hidden");
                        node.style.display = "";
                    }
                    let base = match(direction, {
                        enter: () => classes.enter,
                        leave: () => classes.leave
                    });
                    let to = match(direction, {
                        enter: () => classes.enterTo,
                        leave: () => classes.leaveTo
                    });
                    let from = match(direction, {
                        enter: () => classes.enterFrom,
                        leave: () => classes.leaveFrom
                    });
                    removeClasses(
                        node,
                        ...classes.enter,
                        ...classes.enterTo,
                        ...classes.enterFrom,
                        ...classes.leave,
                        ...classes.leaveFrom,
                        ...classes.leaveTo,
                        ...classes.entered
                    );
                    addClasses(node, ...base, ...from);
                    d.nextFrame(() => {
                        removeClasses(node, ...from);
                        addClasses(node, ...to);
                        waitForTransition(node, () => {
                            removeClasses(node, ...base);
                            addClasses(node, ...classes.entered);
                            return _done();
                        });
                    });
                    return d.dispose;
                }
                function useTransition({ container, direction, classes, onStart, onStop }) {
                    let mounted = useIsMounted();
                    let d = useDisposables();
                    let latestDirection = useLatestValue(direction);
                    useIsoMorphicEffect(() => {
                        let dd = disposables();
                        d.add(dd.dispose);
                        let node = container.current;
                        if (!node)
                            return;
                        if (latestDirection.current === "idle")
                            return;
                        if (!mounted.current)
                            return;
                        dd.dispose();
                        onStart.current(latestDirection.current);
                        dd.add(
                            transition(node, classes.current, latestDirection.current === "enter", () => {
                                dd.dispose();
                                onStop.current(latestDirection.current);
                            })
                        );
                        return dd.dispose;
                    }, [direction]);
                }
                function splitClasses(classes = "") {
                    return classes.split(" ").filter((className) => className.trim().length > 1);
                }
                var TransitionContext = (0, import_react41.createContext)(null);
                TransitionContext.displayName = "TransitionContext";
                function useTransitionContext() {
                    let context = (0, import_react41.useContext)(TransitionContext);
                    if (context === null) {
                        throw new Error(
                            "A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />."
                        );
                    }
                    return context;
                }
                function useParentNesting() {
                    let context = (0, import_react41.useContext)(NestingContext);
                    if (context === null) {
                        throw new Error(
                            "A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />."
                        );
                    }
                    return context;
                }
                var NestingContext = (0, import_react41.createContext)(null);
                NestingContext.displayName = "NestingContext";
                function hasChildren(bag) {
                    if ("children" in bag)
                        return hasChildren(bag.children);
                    return bag.current.filter(({ el }) => el.current !== null).filter(
                        ({ state }) => state === "visible"
                        /* Visible */
                    ).length > 0;
                }
                function useNesting(done, parent) {
                    let doneRef = useLatestValue(done);
                    let transitionableChildren = (0, import_react41.useRef)([]);
                    let mounted = useIsMounted();
                    let d = useDisposables();
                    let unregister = useEvent((container, strategy = 1) => {
                        let idx = transitionableChildren.current.findIndex(({ el }) => el === container);
                        if (idx === -1)
                            return;
                        match(strategy, {
                            [
                                0
                                /* Unmount */
                                ]() {
                                transitionableChildren.current.splice(idx, 1);
                            },
                            [
                                1
                                /* Hidden */
                                ]() {
                                transitionableChildren.current[idx].state = "hidden";
                            }
                        });
                        d.microTask(() => {
                            var _a3;
                            if (!hasChildren(transitionableChildren) && mounted.current) {
                                (_a3 = doneRef.current) == null ? void 0 : _a3.call(doneRef);
                            }
                        });
                    });
                    let register = useEvent((container) => {
                        let child = transitionableChildren.current.find(({ el }) => el === container);
                        if (!child) {
                            transitionableChildren.current.push({
                                el: container,
                                state: "visible"
                                /* Visible */
                            });
                        } else if (child.state !== "visible") {
                            child.state = "visible";
                        }
                        return () => unregister(
                            container,
                            0
                            /* Unmount */
                        );
                    });
                    let todos = (0, import_react41.useRef)([]);
                    let wait = (0, import_react41.useRef)(Promise.resolve());
                    let chains = (0, import_react41.useRef)({
                        enter: [],
                        leave: [],
                        idle: []
                    });
                    let onStart = useEvent(
                        (container, direction, cb) => {
                            todos.current.splice(0);
                            if (parent) {
                                parent.chains.current[direction] = parent.chains.current[direction].filter(
                                    ([containerInParent]) => containerInParent !== container
                                );
                            }
                            parent == null ? void 0 : parent.chains.current[direction].push([
                                container,
                                new Promise((resolve) => {
                                    todos.current.push(resolve);
                                })
                            ]);
                            parent == null ? void 0 : parent.chains.current[direction].push([
                                container,
                                new Promise((resolve) => {
                                    Promise.all(chains.current[direction].map(([_container, promise]) => promise)).then(
                                        () => resolve()
                                    );
                                })
                            ]);
                            if (direction === "enter") {
                                wait.current = wait.current.then(() => parent == null ? void 0 : parent.wait.current).then(() => cb(direction));
                            } else {
                                cb(direction);
                            }
                        }
                    );
                    let onStop = useEvent(
                        (_container, direction, cb) => {
                            Promise.all(chains.current[direction].splice(0).map(([_container2, promise]) => promise)).then(() => {
                                var _a3;
                                (_a3 = todos.current.shift()) == null ? void 0 : _a3();
                            }).then(() => cb(direction));
                        }
                    );
                    return (0, import_react41.useMemo)(
                        () => ({
                            children: transitionableChildren,
                            register,
                            unregister,
                            onStart,
                            onStop,
                            wait,
                            chains
                        }),
                        [register, unregister, transitionableChildren, onStart, onStop, chains, wait]
                    );
                }
                function noop() {
                }
                var eventNames = ["beforeEnter", "afterEnter", "beforeLeave", "afterLeave"];
                function ensureEventHooksExist(events) {
                    var _a3;
                    let result = {};
                    for (let name of eventNames) {
                        result[name] = (_a3 = events[name]) != null ? _a3 : noop;
                    }
                    return result;
                }
                function useEvents(events) {
                    let eventsRef = (0, import_react41.useRef)(ensureEventHooksExist(events));
                    (0, import_react41.useEffect)(() => {
                        eventsRef.current = ensureEventHooksExist(events);
                    }, [events]);
                    return eventsRef;
                }
                var DEFAULT_TRANSITION_CHILD_TAG = "div";
                var TransitionChildRenderFeatures = 1;
                function TransitionChildFn(props, ref) {
                    let {
                        // Event "handlers"
                        beforeEnter,
                        afterEnter,
                        beforeLeave,
                        afterLeave,
                        // Class names
                        enter,
                        enterFrom,
                        enterTo,
                        entered,
                        leave,
                        leaveFrom,
                        leaveTo,
                        // @ts-expect-error
                        ...rest
                    } = props;
                    let container = (0, import_react41.useRef)(null);
                    let transitionRef = useSyncRefs(container, ref);
                    let strategy = rest.unmount ? 0 : 1;
                    let { show, appear, initial } = useTransitionContext();
                    let [state, setState] = (0, import_react41.useState)(
                        show ? "visible" : "hidden"
                        /* Hidden */
                    );
                    let parentNesting = useParentNesting();
                    let { register, unregister } = parentNesting;
                    let prevShow = (0, import_react41.useRef)(null);
                    (0, import_react41.useEffect)(() => register(container), [register, container]);
                    (0, import_react41.useEffect)(() => {
                        if (strategy !== 1)
                            return;
                        if (!container.current)
                            return;
                        if (show && state !== "visible") {
                            setState(
                                "visible"
                                /* Visible */
                            );
                            return;
                        }
                        return match(state, {
                            [
                                "hidden"
                                /* Hidden */
                                ]: () => unregister(container),
                            [
                                "visible"
                                /* Visible */
                                ]: () => register(container)
                        });
                    }, [state, container, register, unregister, show, strategy]);
                    let classes = useLatestValue({
                        enter: splitClasses(enter),
                        enterFrom: splitClasses(enterFrom),
                        enterTo: splitClasses(enterTo),
                        entered: splitClasses(entered),
                        leave: splitClasses(leave),
                        leaveFrom: splitClasses(leaveFrom),
                        leaveTo: splitClasses(leaveTo)
                    });
                    let events = useEvents({
                        beforeEnter,
                        afterEnter,
                        beforeLeave,
                        afterLeave
                    });
                    let ready = useServerHandoffComplete();
                    (0, import_react41.useEffect)(() => {
                        if (ready && state === "visible" && container.current === null) {
                            throw new Error("Did you forget to passthrough the `ref` to the actual DOM node?");
                        }
                    }, [container, state, ready]);
                    let skip = initial && !appear;
                    let transitionDirection = (() => {
                        if (!ready)
                            return "idle";
                        if (skip)
                            return "idle";
                        if (prevShow.current === show)
                            return "idle";
                        return show ? "enter" : "leave";
                    })();
                    let transitionStateFlags = useFlags(0);
                    let beforeEvent = useEvent((direction) => {
                        return match(direction, {
                            enter: () => {
                                transitionStateFlags.addFlag(
                                    8
                                    /* Opening */
                                );
                                events.current.beforeEnter();
                            },
                            leave: () => {
                                transitionStateFlags.addFlag(
                                    4
                                    /* Closing */
                                );
                                events.current.beforeLeave();
                            },
                            idle: () => {
                            }
                        });
                    });
                    let afterEvent = useEvent((direction) => {
                        return match(direction, {
                            enter: () => {
                                transitionStateFlags.removeFlag(
                                    8
                                    /* Opening */
                                );
                                events.current.afterEnter();
                            },
                            leave: () => {
                                transitionStateFlags.removeFlag(
                                    4
                                    /* Closing */
                                );
                                events.current.afterLeave();
                            },
                            idle: () => {
                            }
                        });
                    });
                    let nesting = useNesting(() => {
                        setState(
                            "hidden"
                            /* Hidden */
                        );
                        unregister(container);
                    }, parentNesting);
                    useTransition({
                        container,
                        classes,
                        direction: transitionDirection,
                        onStart: useLatestValue((direction) => {
                            nesting.onStart(container, direction, beforeEvent);
                        }),
                        onStop: useLatestValue((direction) => {
                            nesting.onStop(container, direction, afterEvent);
                            if (direction === "leave" && !hasChildren(nesting)) {
                                setState(
                                    "hidden"
                                    /* Hidden */
                                );
                                unregister(container);
                            }
                        })
                    });
                    (0, import_react41.useEffect)(() => {
                        if (!skip)
                            return;
                        if (strategy === 1) {
                            prevShow.current = null;
                        } else {
                            prevShow.current = show;
                        }
                    }, [show, skip, state]);
                    let theirProps = rest;
                    let ourProps = { ref: transitionRef };
                    if (appear && show) {
                        theirProps = {
                            ...theirProps,
                            // Already apply the `enter` and `enterFrom` on the server if required
                            className: classNames(rest.className, ...classes.current.enter, ...classes.current.enterFrom)
                        };
                    }
                    return /* @__PURE__ */ import_react41.default.createElement(NestingContext.Provider, { value: nesting }, /* @__PURE__ */ import_react41.default.createElement(
                        OpenClosedProvider,
                        {
                            value: match(state, {
                                [
                                    "visible"
                                    /* Visible */
                                    ]: 1,
                                [
                                    "hidden"
                                    /* Hidden */
                                    ]: 2
                                /* Closed */
                            }) | transitionStateFlags.flags
                        },
                        render({
                            ourProps,
                            theirProps,
                            defaultTag: DEFAULT_TRANSITION_CHILD_TAG,
                            features: TransitionChildRenderFeatures,
                            visible: state === "visible",
                            name: "Transition.Child"
                        })
                    ));
                }
                function TransitionRootFn(props, ref) {
                    let { show, appear = false, unmount, ...theirProps } = props;
                    let internalTransitionRef = (0, import_react41.useRef)(null);
                    let transitionRef = useSyncRefs(internalTransitionRef, ref);
                    useServerHandoffComplete();
                    let usesOpenClosedState = useOpenClosed();
                    if (show === void 0 && usesOpenClosedState !== null) {
                        show = (usesOpenClosedState & 1) === 1;
                    }
                    if (![true, false].includes(show)) {
                        throw new Error("A <Transition /> is used but it is missing a `show={true | false}` prop.");
                    }
                    let [state, setState] = (0, import_react41.useState)(
                        show ? "visible" : "hidden"
                        /* Hidden */
                    );
                    let nestingBag = useNesting(() => {
                        setState(
                            "hidden"
                            /* Hidden */
                        );
                    });
                    let [initial, setInitial] = (0, import_react41.useState)(true);
                    let changes = (0, import_react41.useRef)([show]);
                    useIsoMorphicEffect(() => {
                        if (initial === false) {
                            return;
                        }
                        if (changes.current[changes.current.length - 1] !== show) {
                            changes.current.push(show);
                            setInitial(false);
                        }
                    }, [changes, show]);
                    let transitionBag = (0, import_react41.useMemo)(
                        () => ({ show, appear, initial }),
                        [show, appear, initial]
                    );
                    (0, import_react41.useEffect)(() => {
                        if (show) {
                            setState(
                                "visible"
                                /* Visible */
                            );
                        } else if (!hasChildren(nestingBag)) {
                            setState(
                                "hidden"
                                /* Hidden */
                            );
                        } else if (true) {
                            let node = internalTransitionRef.current;
                            if (!node)
                                return;
                            let rect = node.getBoundingClientRect();
                            if (rect.x === 0 && rect.y === 0 && rect.width === 0 && rect.height === 0) {
                                setState(
                                    "hidden"
                                    /* Hidden */
                                );
                            }
                        }
                    }, [show, nestingBag]);
                    let sharedProps = { unmount };
                    return /* @__PURE__ */ import_react41.default.createElement(NestingContext.Provider, { value: nestingBag }, /* @__PURE__ */ import_react41.default.createElement(TransitionContext.Provider, { value: transitionBag }, render({
                        ourProps: {
                            ...sharedProps,
                            as: import_react41.Fragment,
                            children: /* @__PURE__ */ import_react41.default.createElement(TransitionChild, { ref: transitionRef, ...sharedProps, ...theirProps })
                        },
                        theirProps: {},
                        defaultTag: import_react41.Fragment,
                        features: TransitionChildRenderFeatures,
                        visible: state === "visible",
                        name: "Transition"
                    })));
                }
                function ChildFn(props, ref) {
                    let hasTransitionContext = (0, import_react41.useContext)(TransitionContext) !== null;
                    let hasOpenClosedContext = useOpenClosed() !== null;
                    return /* @__PURE__ */ import_react41.default.createElement(import_react41.default.Fragment, null, !hasTransitionContext && hasOpenClosedContext ? (
                        // @ts-expect-error This is an object
                        /* @__PURE__ */ import_react41.default.createElement(TransitionRoot, { ref, ...props })
                    ) : (
                        // @ts-expect-error This is an object
                        /* @__PURE__ */ import_react41.default.createElement(TransitionChild, { ref, ...props })
                    ));
                }
                var TransitionRoot = forwardRefWithAs(TransitionRootFn);
                var TransitionChild = forwardRefWithAs(TransitionChildFn);
                var Child = forwardRefWithAs(ChildFn);
                var Transition = Object.assign(TransitionRoot, { Child, Root: TransitionRoot });
            }
        });

        // node_modules/@headlessui/react/dist/index.cjs
        var require_dist = __commonJS({
            "node_modules/@headlessui/react/dist/index.cjs"(exports, module) {
                "use strict";
                if (false) {
                    module.exports = null;
                } else {
                    module.exports = require_headlessui_dev();
                }
            }
        });

        // node_modules/react-cmdk/dist/components/CommandPalette.js
        var require_CommandPalette = __commonJS({
            "node_modules/react-cmdk/dist/components/CommandPalette.js"(exports) {
                "use strict";
                function _typeof(obj) {
                    "@babel/helpers - typeof";
                    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
                        return typeof obj2;
                    } : function(obj2) {
                        return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
                    }, _typeof(obj);
                }
                Object.defineProperty(exports, "__esModule", {
                    value: true
                });
                exports["default"] = void 0;
                var _FreeSearchAction = _interopRequireDefault(require_FreeSearchAction());
                var _Icon = _interopRequireDefault(require_Icon());
                var _List = _interopRequireDefault(require_List());
                var _ListItem = _interopRequireDefault(require_ListItem());
                var _Page = _interopRequireDefault(require_Page());
                var _react = _interopRequireWildcard(require_react());
                var _Search = _interopRequireDefault(require_Search());
                var _context = require_context();
                var _react2 = require_dist();
                function _getRequireWildcardCache(nodeInterop) {
                    if (typeof WeakMap !== "function")
                        return null;
                    var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
                    var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
                    return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
                        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
                    })(nodeInterop);
                }
                function _interopRequireWildcard(obj, nodeInterop) {
                    if (!nodeInterop && obj && obj.__esModule) {
                        return obj;
                    }
                    if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
                        return { "default": obj };
                    }
                    var cache = _getRequireWildcardCache(nodeInterop);
                    if (cache && cache.has(obj)) {
                        return cache.get(obj);
                    }
                    var newObj = {};
                    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for (var key in obj) {
                        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
                            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
                            if (desc && (desc.get || desc.set)) {
                                Object.defineProperty(newObj, key, desc);
                            } else {
                                newObj[key] = obj[key];
                            }
                        }
                    }
                    newObj["default"] = obj;
                    if (cache) {
                        cache.set(obj, newObj);
                    }
                    return newObj;
                }
                function _interopRequireDefault(obj) {
                    return obj && obj.__esModule ? obj : { "default": obj };
                }
                function _slicedToArray(arr, i) {
                    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
                }
                function _nonIterableRest() {
                    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                }
                function _unsupportedIterableToArray(o, minLen) {
                    if (!o)
                        return;
                    if (typeof o === "string")
                        return _arrayLikeToArray(o, minLen);
                    var n = Object.prototype.toString.call(o).slice(8, -1);
                    if (n === "Object" && o.constructor)
                        n = o.constructor.name;
                    if (n === "Map" || n === "Set")
                        return Array.from(o);
                    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
                        return _arrayLikeToArray(o, minLen);
                }
                function _arrayLikeToArray(arr, len) {
                    if (len == null || len > arr.length)
                        len = arr.length;
                    for (var i = 0, arr2 = new Array(len); i < len; i++) {
                        arr2[i] = arr[i];
                    }
                    return arr2;
                }
                function _iterableToArrayLimit(arr, i) {
                    var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"];
                    if (_i == null)
                        return;
                    var _arr = [];
                    var _n = true;
                    var _d = false;
                    var _s, _e;
                    try {
                        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
                            _arr.push(_s.value);
                            if (i && _arr.length === i)
                                break;
                        }
                    } catch (err) {
                        _d = true;
                        _e = err;
                    } finally {
                        try {
                            if (!_n && _i["return"] != null)
                                _i["return"]();
                        } finally {
                            if (_d)
                                throw _e;
                        }
                    }
                    return _arr;
                }
                function _arrayWithHoles(arr) {
                    if (Array.isArray(arr))
                        return arr;
                }
                function CommandPalette2(_ref) {
                    var selectedParent = _ref.selected, _ref$placeholder = _ref.placeholder, placeholder = _ref$placeholder === void 0 ? "Search" : _ref$placeholder, onChangeSelected = _ref.onChangeSelected, onChangeSearch = _ref.onChangeSearch, onChangeOpen = _ref.onChangeOpen, renderLink = _ref.renderLink, children = _ref.children, isOpen = _ref.isOpen, footer = _ref.footer, search = _ref.search, page = _ref.page;
                    var inputRef = (0, _react.useRef)(null);
                    var _ref2 = typeof selectedParent === "number" && onChangeSelected ? [selectedParent, onChangeSelected] : (0, _react.useState)(0), _ref3 = _slicedToArray(_ref2, 2), selected = _ref3[0], setSelected = _ref3[1];
                    var _useState = (0, _react.useState)(), _useState2 = _slicedToArray(_useState, 2), searchPrefix = _useState2[0], setSearchPrefix = _useState2[1];
                    function handleChangeSelected(direction) {
                        var items = document.querySelectorAll(".command-palette-list-item");
                        var index = 0;
                        var newIndex = 0;
                        var newItem;
                        if (direction === "down") {
                            items.forEach(function(_, i) {
                                if (i === selected) {
                                    index = i;
                                }
                            });
                            newIndex = index === items.length - 1 ? 0 : index + 1;
                        } else if (direction === "up") {
                            items.forEach(function(_, i) {
                                if (i === selected) {
                                    index = i;
                                }
                            });
                            newIndex = !index ? items.length - 1 : index - 1;
                        } else {
                            setSelected(0);
                        }
                        newItem = items[newIndex];
                        if (newItem && typeof newIndex === "number") {
                            setSelected(newIndex);
                            newItem.scrollIntoView({
                                behavior: "smooth",
                                block: newIndex ? "center" : "end"
                            });
                        }
                    }
                    function handleSelect() {
                        var items = document.querySelectorAll(".command-palette-list-item");
                        var index = 0;
                        var item;
                        items.forEach(function(_, i) {
                            if (i === selected) {
                                index = i;
                            }
                        });
                        item = items[index];
                        if (item) {
                            var _item$attributes$getN;
                            item.click();
                            if (((_item$attributes$getN = item.attributes.getNamedItem("data-close-on-select")) === null || _item$attributes$getN === void 0 ? void 0 : _item$attributes$getN.value) === "true") {
                                onChangeOpen(false);
                            }
                        }
                    }
                    (0, _react.useEffect)(function() {
                        handleChangeSelected();
                    }, [search]);
                    (0, _react.useEffect)(function() {
                        setSelected(0);
                    }, [page]);
                    return /* @__PURE__ */ _react["default"].createElement("div", {
                        onKeyDown: function onKeyDown(e) {
                            if (e.key === "ArrowDown" || e.ctrlKey && e.key === "n" || e.ctrlKey && e.key === "j") {
                                e.preventDefault();
                                e.stopPropagation();
                                handleChangeSelected("down");
                            } else if (e.key === "ArrowUp" || e.ctrlKey && e.key === "p" || e.ctrlKey && e.key === "k") {
                                e.preventDefault();
                                e.stopPropagation();
                                handleChangeSelected("up");
                            } else if (e.key === "Enter") {
                                e.preventDefault();
                                e.stopPropagation();
                                handleSelect();
                            }
                        }
                    }, /* @__PURE__ */ _react["default"].createElement(_react2.Transition, {
                        appear: true,
                        show: isOpen,
                        as: _react.Fragment
                    }, /* @__PURE__ */ _react["default"].createElement(_react2.Dialog, {
                        initialFocus: inputRef,
                        as: "div",
                        className: "command-palette",
                        onClose: function onClose() {
                            onChangeOpen(false);
                        }
                    }, /* @__PURE__ */ _react["default"].createElement("div", {
                        className: "command-palette-content antialiased"
                    }, /* @__PURE__ */ _react["default"].createElement(_react2.Transition.Child, {
                        as: _react.Fragment,
                        enter: "ease-out duration-300",
                        enterFrom: "opacity-0",
                        enterTo: "opacity-100",
                        leave: "ease-in duration-200",
                        leaveFrom: "opacity-100",
                        leaveTo: "opacity-0"
                    }, /* @__PURE__ */ _react["default"].createElement("div", {
                        className: "fixed inset-0 bg-gray-900 bg-opacity-80"
                    })), /* @__PURE__ */ _react["default"].createElement("div", {
                        className: "fixed inset-0 overflow-y-auto flex items-center justify-center"
                    }, /* @__PURE__ */ _react["default"].createElement("div", {
                        className: "flex w-full h-[450px] items-start justify-center p-4"
                    }, /* @__PURE__ */ _react["default"].createElement(_react2.Transition.Child, {
                        as: _react.Fragment,
                        enter: "ease-out duration-300",
                        enterFrom: "opacity-0 scale-95",
                        enterTo: "opacity-100 scale-100",
                        leave: "ease-in duration-200",
                        leaveFrom: "opacity-100 scale-100",
                        leaveTo: "opacity-0 scale-95"
                    }, /* @__PURE__ */ _react["default"].createElement(_react2.Dialog.Panel, {
                        className: "w-full max-h-full bg-white dark:bg-gray-900 shadow-lg rounded-lg max-w-xl flex flex-col overflow-hidden divide-y dark:divide-gray-800"
                    }, /* @__PURE__ */ _react["default"].createElement(_context.PageContext.Provider, {
                        value: {
                            setSearchPrefix,
                            searchPrefix,
                            page
                        }
                    }, /* @__PURE__ */ _react["default"].createElement(_Search["default"], {
                        onChange: onChangeSearch,
                        placeholder,
                        prefix: searchPrefix,
                        value: search,
                        ref: inputRef
                    })), /* @__PURE__ */ _react["default"].createElement("div", {
                        className: "flex-1 overflow-y-auto focus:outline-none p-2 space-y-4",
                        tabIndex: -1
                    }, /* @__PURE__ */ _react["default"].createElement(_context.OpenContext.Provider, {
                        value: {
                            isOpen,
                            onChangeOpen
                        }
                    }, /* @__PURE__ */ _react["default"].createElement(_context.PageContext.Provider, {
                        value: {
                            page,
                            searchPrefix,
                            setSearchPrefix
                        }
                    }, /* @__PURE__ */ _react["default"].createElement(_context.SearchContext.Provider, {
                        value: {
                            search
                        }
                    }, /* @__PURE__ */ _react["default"].createElement(_context.SelectContext.Provider, {
                        value: {
                            selected
                        }
                    }, /* @__PURE__ */ _react["default"].createElement(_context.RenderLinkContext.Provider, {
                        value: {
                            renderLink
                        }
                    }, children)))))), footer))))))));
                }
                CommandPalette2.Page = _Page["default"];
                CommandPalette2.List = _List["default"];
                CommandPalette2.ListItem = _ListItem["default"];
                CommandPalette2.Icon = _Icon["default"];
                CommandPalette2.FreeSearchAction = _FreeSearchAction["default"];
                var _default = CommandPalette2;
                exports["default"] = _default;
            }
        });

        // node_modules/react-cmdk/dist/types.js
        var require_types = __commonJS({
            "node_modules/react-cmdk/dist/types.js"(exports) {
                "use strict";
                Object.defineProperty(exports, "__esModule", {
                    value: true
                });
            }
        });

        // node_modules/react-cmdk/dist/index.js
        var require_dist2 = __commonJS({
            "node_modules/react-cmdk/dist/index.js"(exports) {
                "use strict";
                function _typeof(obj) {
                    "@babel/helpers - typeof";
                    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
                        return typeof obj2;
                    } : function(obj2) {
                        return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
                    }, _typeof(obj);
                }
                Object.defineProperty(exports, "__esModule", {
                    value: true
                });
                var _exportNames = {};
                exports["default"] = void 0;
                var _CommandPalette = _interopRequireWildcard(require_CommandPalette());
                Object.keys(_CommandPalette).forEach(function(key) {
                    if (key === "default" || key === "__esModule")
                        return;
                    if (Object.prototype.hasOwnProperty.call(_exportNames, key))
                        return;
                    if (key in exports && exports[key] === _CommandPalette[key])
                        return;
                    Object.defineProperty(exports, key, {
                        enumerable: true,
                        get: function get() {
                            return _CommandPalette[key];
                        }
                    });
                });
                var _utils = require_utils();
                Object.keys(_utils).forEach(function(key) {
                    if (key === "default" || key === "__esModule")
                        return;
                    if (Object.prototype.hasOwnProperty.call(_exportNames, key))
                        return;
                    if (key in exports && exports[key] === _utils[key])
                        return;
                    Object.defineProperty(exports, key, {
                        enumerable: true,
                        get: function get() {
                            return _utils[key];
                        }
                    });
                });
                var _types = require_types();
                Object.keys(_types).forEach(function(key) {
                    if (key === "default" || key === "__esModule")
                        return;
                    if (Object.prototype.hasOwnProperty.call(_exportNames, key))
                        return;
                    if (key in exports && exports[key] === _types[key])
                        return;
                    Object.defineProperty(exports, key, {
                        enumerable: true,
                        get: function get() {
                            return _types[key];
                        }
                    });
                });
                function _getRequireWildcardCache(nodeInterop) {
                    if (typeof WeakMap !== "function")
                        return null;
                    var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
                    var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
                    return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
                        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
                    })(nodeInterop);
                }
                function _interopRequireWildcard(obj, nodeInterop) {
                    if (!nodeInterop && obj && obj.__esModule) {
                        return obj;
                    }
                    if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
                        return { "default": obj };
                    }
                    var cache = _getRequireWildcardCache(nodeInterop);
                    if (cache && cache.has(obj)) {
                        return cache.get(obj);
                    }
                    var newObj = {};
                    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
                    for (var key in obj) {
                        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
                            var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
                            if (desc && (desc.get || desc.set)) {
                                Object.defineProperty(newObj, key, desc);
                            } else {
                                newObj[key] = obj[key];
                            }
                        }
                    }
                    newObj["default"] = obj;
                    if (cache) {
                        cache.set(obj, newObj);
                    }
                    return newObj;
                }
                var _default = _CommandPalette["default"];
                exports["default"] = _default;
            }
        });

        // update.js
        var import_react = __toESM(require_react(), 1);
        var import_client = __toESM(require_client(), 1);
        var HeroIcons20Solid = __toESM(require_solid(), 1);
        var HeroIcons24Solid = __toESM(require_solid2(), 1);
        var HeroIcons24Outline = __toESM(require_outline(), 1);
        var import_react_cmdk = __toESM(require_dist2(), 1);
        var CommandPaletteDefault = import_react_cmdk.default.default;
        var target = instance.canvas.get(0);
        var initialOpenState = false;
        instance.data.isOpen = initialOpenState;
        var iconNames = [
            ...Object.keys(HeroIcons20Solid),
            ...Object.keys(HeroIcons24Solid),
            ...Object.keys(HeroIcons24Outline)
        ];
        var validIconComponents = iconNames.filter(
            (component) => component.endsWith("Icon")
        );
        var CommandPalettePlugin = (props) => {
            const [open, setOpen] = (0, import_react.useState)(initialOpenState);
            const raw_pages2 = props.raw_pages;
            const fireCommand2 = props.fireCommand;
            const freeSearchLabel2 = props.freeSearchLabel;
            const searchPlaceholder2 = props.searchPlaceholder;
            const [search, setSearch] = (0, import_react.useState)("");
            const initialPageState = raw_pages2[0].id;
            const [pageState, setPageState] = (0, import_react.useState)(initialPageState);
            const [selectedItem, setSelectedItem] = (0, import_react.useState)(0);
            const setPageStateWrapper = (page_id) => {
                setSearch("");
                setPageState(page_id);
                const input = document.getElementById("command-palette-search-input");
                if (input) {
                    input.focus();
                }
            };
            function closeCommandPalette() {
                setOpen(false);
                closeBubbleStuffWrapper();
                setSearch("");
                setPageState(initialPageState);
                setSelectedItem(0);
            }
            raw_pages2.forEach((page) => {
                page.lists.forEach((list) => {
                    list.items.forEach(
                        (item) => item.onClick = () => {
                            if (item.closeOnSelect) {
                                fireCommand2(item.children, item.type, null);
                                closeCommandPalette();
                            } else if (item.pageOnSelect) {
                                setPageStateWrapper(item.pageOnSelect);
                            } else {
                                const input = document.getElementById(
                                    "command-palette-search-input"
                                );
                                if (input) {
                                    input.focus();
                                }
                                setSearch(item.children + " \u2192 ");
                            }
                        }
                    );
                });
            });
            let raw_lists = [];
            raw_pages2.forEach(
                (page) => raw_lists = raw_lists.concat(
                    page.lists.map((list) => ({
                        ...list,
                        page_id: turnNameIntoId(page.name)
                    }))
                )
            );
            const filteredItems = (0, import_react_cmdk.filterItems)(raw_lists, search);
            const currentPageFilteredItems = filteredItems.filter(
                (list) => list.page_id === pageState
            );
            let result = null;
            raw_pages2.some((page) => {
                return page.lists.some((list) => {
                    return list.items.some((item) => {
                        if (search.includes(item.children + " \u2192")) {
                            result = item;
                            return true;
                        }
                    });
                });
            });
            (0, import_react.useEffect)(() => {
                function handleKeyDown(e) {
                    if ((e.metaKey || e.altKey) && e.key === "k" || e.key === "\xA7") {
                        e.preventDefault();
                        e.stopPropagation();
                        setOpen(true);
                        openBubbleStuffWrapper();
                    } else if (e.key === "Escape") {
                        e.preventDefault();
                        e.stopPropagation();
                        closeCommandPalette();
                    }
                }
                document.addEventListener("keydown", handleKeyDown);
                return () => {
                    document.removeEventListener("keydown", handleKeyDown);
                };
            }, []);
            return /* @__PURE__ */ import_react.default.createElement(
                CommandPaletteDefault,
                {
                    selected: selectedItem,
                    onChangeSelected: setSelectedItem,
                    onChangeSearch: setSearch,
                    onChangeOpen: setOpen,
                    search,
                    placeholder: searchPlaceholder2,
                    isOpen: open,
                    page: pageState
                },
                raw_pages2.map((page) => {
                    let page_index = -1;
                    return /* @__PURE__ */ import_react.default.createElement(
                        CommandPaletteDefault.Page,
                        {
                            id: page.id,
                            key: page.id,
                            searchPrefix: page.prefix ? [page.prefix] : null,
                            onEscape: () => {
                                setPageState(initialPageState);
                            }
                        },
                        result && /* @__PURE__ */ import_react.default.createElement(CommandPaletteDefault.List, { heading: "" }, /* @__PURE__ */ import_react.default.createElement(
                            CommandPaletteDefault.ListItem,
                            {
                                id: result.id,
                                children: result.children,
                                icon: result.icon,
                                closeOnSelect: true,
                                onClick: () => {
                                    fireCommand2(
                                        search.split("\u2192")[0],
                                        result.type,
                                        search.split("\u2192")[1]
                                    );
                                    closeCommandPalette();
                                }
                            }
                        )),
                        !!(filteredItems.length && currentPageFilteredItems.length && !result) && currentPageFilteredItems.map((list) => /* @__PURE__ */ import_react.default.createElement(
                            CommandPaletteDefault.List,
                            {
                                id: list.id,
                                heading: list.heading,
                                key: list.id
                            },
                            list.items.map((item) => {
                                page_index += 1;
                                return /* @__PURE__ */ import_react.default.createElement(
                                    CommandPaletteDefault.ListItem,
                                    {
                                        key: item.id,
                                        id: item.id,
                                        icon: item.icon,
                                        type: item.type,
                                        onClick: item.onClick,
                                        closeOnSelect: item.closeOnSelect,
                                        index: page_index
                                    },
                                    item.children,
                                    item.type && /* @__PURE__ */ import_react.default.createElement(
                                        "div",
                                        {
                                            className: "text-gray-500 text-sm",
                                            style: { marginLeft: "auto" }
                                        },
                                        item.type
                                    )
                                );
                            })
                        )),
                        !filteredItems.length && !result && /* @__PURE__ */ import_react.default.createElement(
                            CommandPaletteDefault.FreeSearchAction,
                            {
                                label: freeSearchLabel2,
                                onClick: () => {
                                    publish_state();
                                    fireCommand2(null, null, search);
                                    closeCommandPalette();
                                }
                            }
                        )
                    );
                })
            );
        };
        function fireCommand(name, type, args) {
            publish_state("executed_command_name", name);
            publish_state("executed_command_type", type);
            publish_state("executed_command_args", args);
            trigger_event("executed_command");
        }
        function closeBubbleStuffWrapper() {
            if (instance.data.isOpen) {
                publish_state("is_open", false);
                trigger_event("closed");
                instance.data.isOpen = false;
            }
        }
        function openBubbleStuffWrapper() {
            if (!instance.data.isOpen) {
                publish_state("is_open", true);
                trigger_event("opened");
                instance.data.isOpen = true;
            }
        }
        function publish_state(name, value) {
            instance.publishState(name, value);
        }
        function trigger_event(name) {
            instance.triggerEvent(name);
        }
        var turnNameIntoId = (str) => {
            if (str)
                return str.toLowerCase().split(" ").join("-");
            return null;
        };
        function hyphenToPascalCase(str) {
            return str.split("-").map((word) => {
                if (/^\d/.test(word)) {
                    return word.toUpperCase();
                } else {
                    return word.charAt(0).toUpperCase() + word.slice(1);
                }
            }).join("");
        }
        function checkIconName(validIconComponentNames, iconName) {
            if (validIconComponentNames.includes(iconName)) {
                return iconName;
            } else if (validIconComponentNames.includes(iconName + "Icon")) {
                return iconName + "Icon";
            } else if (validIconComponentNames.includes(hyphenToPascalCase(iconName) + "Icon")) {
                return hyphenToPascalCase(iconName) + "Icon";
            } else {
                return "";
            }
        }
        var freeSearchLabel = properties.free_search_label;
        var searchPlaceholder = properties.search_placeholder;
        var raw_pages;
        var json_error_flag = false;
        try {
            const raw_elements = JSON.parse(properties.json_data);
            raw_pages = raw_elements.pages.map((page, page_index) => ({
                id: turnNameIntoId(page.name),
                name: page.name,
                prefix: page.prefix,
                lists: page.lists.map((list, list_index) => ({
                    id: turnNameIntoId(list.name),
                    heading: list.name,
                    items: list.items.map((item, item_index) => {
                        return {
                            id: turnNameIntoId(item.name) || `\xECtem-${page_index}-${list_index}-${item_index}`,
                            children: item.name,
                            icon: checkIconName(validIconComponents, item.icon),
                            closeOnSelect: item.closeOnSelect !== false,
                            pageOnSelect: item.pageOnSelect,
                            type: item.type,
                            onClick: null,
                            list: list.name,
                            page: page.name
                        };
                    })
                }))
            }));
        } catch (error) {
            console.error("Error parsing JSON data: ", error.message);
            json_error_flag = true;
        }
        if (!json_error_flag) {
            instance.publishState("current_json_config", properties.json_data);
            let commandPaletteStylesheet = document.createElement("style");
            commandPaletteStylesheet.innerHTML = `.command-palette {
    font-family: ${properties.bubble.font_face().split(":::")[0]};
    font-weight: ${properties.bubble.font_face().split(":::")[1]};
    color: ${properties.bubble.font_color()}; 
    font-size: ${properties.bubble.font_size()}px;
    --cmdk-secondary-color: ${properties.secondary_text_color};
    --cmdk-bg-color: ${properties.background_color};
    --cmdk-highlighted-color: ${properties.highlighted_item_color};
    --cmdk-border-color: ${properties.border_color};
  }
  
  .command-palette div[id^='headlessui-dialog-panel'] {
    background-color: var(--cmdk-bg-color);
  }
  .command-palette-content > div:first-child {
    background-color: ${properties.overlay_color};
    opacity: ${properties.overlay_transparency > 1 ? 1 : properties.overlay_transparency < 0 ? 0 : properties.overlay_transparency};
  }`;
            if (!instance.data.initiated || instance.data.json_data !== properties.json_data) {
                instance.data.json_data = properties.json_data;
                if (instance.data.initiated) {
                    instance.data.root.unmount();
                }
                instance.data.root = (0, import_client.createRoot)(target);
                document.getElementsByTagName("head")[0].appendChild(commandPaletteStylesheet);
                instance.data.root.render(
                    import_react.default.createElement(CommandPalettePlugin, {
                        raw_pages,
                        fireCommand,
                        searchPlaceholder,
                        freeSearchLabel
                    })
                );
                instance.data.initiated = true;
            }
        }
    })();
    /*! Bundled license information:

react/cjs/react.development.js:
  (**
   * @license React
   * react.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

scheduler/cjs/scheduler.development.js:
  (**
   * @license React
   * scheduler.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)

react-dom/cjs/react-dom.development.js:
  (**
   * @license React
   * react-dom.development.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *)
  (**
   * Checks if an event is supported in the current execution environment.
   *
   * NOTE: This will not work correctly for non-generic events such as `change`,
   * `reset`, `load`, `error`, and `select`.
   *
   * Borrows from Modernizr.
   *
   * @param {string} eventNameSuffix Event name, e.g. "click".
   * @return {boolean} True if the event is supported.
   * @internal
   * @license Modernizr 3.0.0pre (Custom Build) | MIT
   *)
*/
}
